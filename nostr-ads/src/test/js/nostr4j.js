"use strict";
let $rt_seed = 2463534242,
$rt_nextId = () => {
    let x = $rt_seed;
    x ^= x << 13;
    x ^= x >>> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
},
$rt_wrapFunction0 = f => function() {
    return f(this);
},
$rt_wrapFunction1 = f => function(p1) {
    return f(this, p1);
},
$rt_wrapFunction2 = f => function(p1, p2) {
    return f(this, p1, p2);
},
$rt_wrapFunction3 = f => function(p1, p2, p3) {
    return f(this, p1, p2, p3, p3);
},
$rt_wrapFunction4 = f => function(p1, p2, p3, p4) {
    return f(this, p1, p2, p3, p4);
},
$rt_eraseClinit = target => target.$clinit = () => {
},
$dbg_class = obj => {
    let cls = obj.constructor;
    let arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    let clsName = "";
    if (cls.$meta.primitive) {
        clsName = cls.$meta.name;
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
},
$rt_classWithoutFields = superclass => {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
},
$rt_cls = cls => jl_Class_getClass(cls),
$rt_objcls = () => jl_Object,
$rt_getThread = () => {
    {
        return jl_Thread_currentThread();
    }
},
$rt_setThread = t => {
    {
        return jl_Thread_setCurrentThread(t);
    }
},
$rt_skip = (array, count) => count === 0 ? array : Array.prototype.slice.call(array, count),
$rt_callWithReceiver = f => function() {
    return f.apply(null, [this].concat(Array.prototype.slice.call(arguments)));
},
$rt_createcls = () => {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
},
$rt_createPrimitiveCls = (name, binaryName) => {
    let cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
},
$rt_booleancls = $rt_createPrimitiveCls("boolean", "Z"),
$rt_charcls = $rt_createPrimitiveCls("char", "C"),
$rt_bytecls = $rt_createPrimitiveCls("byte", "B"),
$rt_shortcls = $rt_createPrimitiveCls("short", "S"),
$rt_intcls = $rt_createPrimitiveCls("int", "I"),
$rt_longcls = $rt_createPrimitiveCls("long", "J"),
$rt_floatcls = $rt_createPrimitiveCls("float", "F"),
$rt_doublecls = $rt_createPrimitiveCls("double", "D"),
$rt_voidcls = $rt_createPrimitiveCls("void", "V"),
$rt_numberConversionBuffer = new ArrayBuffer(16),
$rt_numberConversionFloatArray = new Float32Array($rt_numberConversionBuffer),
$rt_numberConversionDoubleArray = new Float64Array($rt_numberConversionBuffer),
$rt_numberConversionIntArray = new Int32Array($rt_numberConversionBuffer),
$rt_numberConversionLongArray = new BigInt64Array($rt_numberConversionBuffer),
$rt_doubleToRawLongBits = n => {
    $rt_numberConversionDoubleArray[0] = n;
    return $rt_numberConversionLongArray[0];
},
$rt_floatToRawIntBits = n => {
    $rt_numberConversionFloatArray[0] = n;
    return $rt_numberConversionIntArray[0];
},
$rt_compare = (a, b) => a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1,
$rt_imul = Math.imul || function(a, b) {
    let ah = a >>> 16 & 0xFFFF;
    let al = a & 0xFFFF;
    let bh = b >>> 16 & 0xFFFF;
    let bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
},
$rt_udiv = (a, b) => (a >>> 0) / (b >>> 0) >>> 0,
$rt_umod = (a, b) => (a >>> 0) % (b >>> 0) >>> 0,
$rt_ucmp = (a, b) => {
    a >>>= 0;
    b >>>= 0;
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_ZERO = BigInt(0),
Long_create = (lo, hi) => BigInt.asIntN(64, BigInt.asUintN(64, BigInt(lo)) | BigInt.asUintN(64, BigInt(hi) << BigInt(32))),
Long_fromInt = val => BigInt.asIntN(64, BigInt(val | 0)),
Long_fromNumber = val => BigInt.asIntN(64, BigInt(val >= 0 ? Math.floor(val) : Math.ceil(val))),
Long_toNumber = val => Number(val),
Long_hi = val => Number(BigInt.asIntN(64, val >> BigInt(32))) | 0,
Long_lo = val => Number(BigInt.asIntN(32, val)) | 0,
Long_eq = (a, b) => a === b,
Long_ne = (a, b) => a !== b,
Long_gt = (a, b) => a > b,
Long_ge = (a, b) => a >= b;
let Long_lt = (a, b) => a < b,
Long_le = (a, b) => a <= b,
Long_add = (a, b) => BigInt.asIntN(64, a + b),
Long_neg = a => BigInt.asIntN(64,  -a),
Long_sub = (a, b) => BigInt.asIntN(64, a - b),
Long_compare = (a, b) => a < b ?  -1 : a > b ? 1 : 0,
Long_ucompare = (a, b) => {
    a = BigInt.asUintN(64, a);
    b = BigInt.asUintN(64, b);
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_mul = (a, b) => BigInt.asIntN(64, a * b),
Long_div = (a, b) => BigInt.asIntN(64, a / b),
Long_udiv = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) / BigInt.asUintN(64, b)),
Long_rem = (a, b) => BigInt.asIntN(64, a % b),
Long_urem = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) % BigInt.asUintN(64, b)),
Long_and = (a, b) => BigInt.asIntN(64, a & b),
Long_or = (a, b) => BigInt.asIntN(64, a | b),
Long_xor = (a, b) => BigInt.asIntN(64, a ^ b),
Long_shl = (a, b) => BigInt.asIntN(64, a << BigInt(b & 63)),
Long_shr = (a, b) => BigInt.asIntN(64, a >> BigInt(b & 63)),
Long_shru = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) >> BigInt(b & 63)),
$rt_createArray = (cls, sz) => {
    let data = new Array(sz);
    data.fill(null);
    return new ($rt_arraycls(cls))(data);
},
$rt_wrapArray = (cls, data) => new ($rt_arraycls(cls))(data),
$rt_createLongArray = sz => new $rt_longArrayCls(new BigInt64Array(sz)),
$rt_createLongArrayFromData = data => {
    let buffer = new BigInt64Array(data.length);
    buffer.set(data);
    return new $rt_longArrayCls(buffer);
},
$rt_createCharArray = sz => new $rt_charArrayCls(new Uint16Array(sz)),
$rt_createCharArrayFromData = data => {
    let buffer = new Uint16Array(data.length);
    buffer.set(data);
    return new $rt_charArrayCls(buffer);
},
$rt_createByteArray = sz => new $rt_byteArrayCls(new Int8Array(sz)),
$rt_createByteArrayFromData = data => {
    let buffer = new Int8Array(data.length);
    buffer.set(data);
    return new $rt_byteArrayCls(buffer);
},
$rt_createShortArray = sz => new $rt_shortArrayCls(new Int16Array(sz)),
$rt_createShortArrayFromData = data => {
    let buffer = new Int16Array(data.length);
    buffer.set(data);
    return new $rt_shortArrayCls(buffer);
},
$rt_createIntArray = sz => new $rt_intArrayCls(new Int32Array(sz)),
$rt_createIntArrayFromData = data => {
    let buffer = new Int32Array(data.length);
    buffer.set(data);
    return new $rt_intArrayCls(buffer);
},
$rt_createBooleanArray = sz => new $rt_booleanArrayCls(new Int8Array(sz)),
$rt_arraycls = cls => {
    let result = cls.$array;
    if (result === null) {
        function JavaArray(data) {
            ($rt_objcls()).call(this);
            this.data = data;
        }
        JavaArray.prototype = Object.create(($rt_objcls()).prototype);
        JavaArray.prototype.type = cls;
        JavaArray.prototype.constructor = JavaArray;
        JavaArray.prototype.toString = function() {
            let str = "[";
            for (let i = 0;i < this.data.length;++i) {
                if (i > 0) {
                    str += ", ";
                }
                str += this.data[i].toString();
            }
            str += "]";
            return str;
        };
        JavaArray.prototype.$clone0 = function() {
            let dataCopy;
            if ('slice' in this.data) {
                dataCopy = this.data.slice();
            } else {
                dataCopy = new this.data.constructor(this.data.length);
                for (let i = 0;i < dataCopy.length;++i) {
                    dataCopy[i] = this.data[i];
                }
            }
            return new ($rt_arraycls(this.type))(dataCopy);
        };
        let name = "[" + cls.$meta.binaryName;
        JavaArray.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        JavaArray.classObject = null;
        JavaArray.$array = null;
        result = JavaArray;
        cls.$array = JavaArray;
    }
    return result;
},
$rt_stringPool_instance,
$rt_stringPool = strings => {
    $rt_stringClassInit();
    $rt_stringPool_instance = new Array(strings.length);
    for (let i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
},
$rt_s = index => $rt_stringPool_instance[index],
$rt_charArrayToString = (array, offset, count) => {
    let result = "";
    let limit = offset + count;
    for (let i = offset;i < limit;i = i + 1024 | 0) {
        let next = Math.min(limit, i + 1024 | 0);
        result += String.fromCharCode.apply(null, array.subarray(i, next));
    }
    return result;
},
$rt_fullArrayToString = array => $rt_charArrayToString(array, 0, array.length),
$rt_fastStringToCharArray = string => {
    let array = new Uint16Array(string.length);
    for (let i = 0;i < array.length;++i) {
        array[i] = string.charCodeAt(i);
    }
    return new $rt_charArrayCls(array);
},
$rt_str = str => str === null ? null : jl_String__init_1(str),
$rt_ustr = str => str === null ? null : str.$nativeString,
$rt_stringClassInit = () => jl_String_$callClinit(),
$rt_intern;
{
    $rt_intern = str => str;
}
let $rt_isInstance = (obj, cls) => obj instanceof $rt_objcls() && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls),
$rt_isAssignable = (from, to) => {
    if (from === to) {
        return true;
    }
    let map = from.$meta.assignableCache;
    if (typeof map === 'undefined') {
        map = new Map();
        from.$meta.assignableCache = map;
    }
    let cachedResult = map.get(to);
    if (typeof cachedResult !== 'undefined') {
        return cachedResult;
    }
    if (to.$meta.item !== null) {
        let result = from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
        map.set(to, result);
        return result;
    }
    let supertypes = from.$meta.supertypes;
    for (let i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            map.set(to, true);
            return true;
        }
    }
    map.set(to, false);
    return false;
},
$rt_throw = ex => {
    throw $rt_exception(ex);
},
$rt_javaExceptionProp = Symbol("javaException"),
$rt_exception = ex => {
    if (!ex.$jsException) {
        $rt_fillNativeException(ex);
    }
    return ex.$jsException;
},
$rt_fillNativeException = ex => {
    let javaCause = $rt_throwableCause(ex);
    let jsCause = javaCause !== null ? javaCause.$jsException : void 0;
    let cause = typeof jsCause === "object" ? { cause : jsCause } : void 0;
    let err = new JavaError("Java exception thrown", cause);
    if (typeof Error.captureStackTrace === "function") {
        Error.captureStackTrace(err);
    }
    err[$rt_javaExceptionProp] = ex;
    ex.$jsException = err;
    $rt_fillStack(err, ex);
},
$rt_fillStack = (err, ex) => {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        let stack = $rt_decodeStack(err.stack);
        let javaStack = $rt_createArray($rt_stecls(), stack.length);
        let elem;
        let noStack = false;
        for (let i = 0;i < stack.length;++i) {
            let element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
},
JavaError;
if (typeof Reflect === 'object') {
    let defaultMessage = Symbol("defaultMessage");
    JavaError = function JavaError(message, cause) {
        let self = Reflect.construct(Error, [void 0, cause], JavaError);
        Object.setPrototypeOf(self, JavaError.prototype);
        self[defaultMessage] = message;
        return self;
    }
    ;
    JavaError.prototype = Object.create(Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get() {
        try {
            let javaException = this[$rt_javaExceptionProp];
            if (typeof javaException === 'object') {
                let javaMessage = $rt_throwableMessage(javaException);
                if (typeof javaMessage === "object") {
                    return javaMessage !== null ? javaMessage.toString() : null;
                }
            }
            return this[defaultMessage];
        } catch (e){
            return "Exception occurred trying to extract Java exception message: " + e;
        }
    } } });
} else {
    JavaError = Error;
}
let $rt_wrapException = err => {
    let ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
},
$rt_createException = message => jl_RuntimeException__init_5(message),
$rt_throwableMessage = t => jl_Throwable_getMessage(t),
$rt_throwableCause = t => jl_Throwable_getCause(t),
$rt_stecls = () => jl_StackTraceElement,
$rt_createStackElement = (className, methodName, fileName, lineNumber) => {
    {
        return null;
    }
},
$rt_setStack = (e, stack) => {
},
$rt_createOutputFunction = outputFunction => {
    let buffer = "";
    return msg => {
        let index = 0;
        while (true) {
            let next = msg.indexOf('\n', index);
            if (next < 0) {
                break;
            }
            outputFunction(buffer + msg.substring(index, next));
            buffer = "";
            index = next + 1;
        }
        buffer += msg.substring(index);
    };
},
$rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.error(msg)) : () => {
},
$rt_packageData = null,
$rt_packages = data => {
    let i = 0;
    let packages = new Array(data.length);
    for (let j = 0;j < data.length;++j) {
        let prefixIndex = data[i++];
        let prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
},
$rt_metadata = data => {
    let packages = $rt_packageData;
    let i = 0;
    while (i < data.length) {
        let cls = data[i++];
        cls.$meta = {  };
        let m = cls.$meta;
        let className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            let packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        let superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        let flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        let innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            let enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            let declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            let simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        let clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        let virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (let j = 0;j < virtualMethods.length;j += 2) {
                let name = virtualMethods[j];
                let func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (let k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
};
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
let $rt_suspending = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
},
$rt_resuming = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
},
$rt_requireNativeThread = () => {
    let nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context " + "(perhaps, from native JS method). See https://teavm.org/docs/runtime/coroutines.html " + "('Interaction with JavaScript' section)");
    }
    return nativeThread;
},
$rt_currentNativeThread = null,
$rt_nativeThread = () => $rt_currentNativeThread,
$rt_invalidPointer = () => {
    throw new Error("Invalid recorded state");
};
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
let jl_Object_monitorEnterSync = $o => {
    let var$2;
    if (jl_Thread_currentThread() === null)
        return;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread();
    else if ($o.$monitor.$owner !== jl_Thread_currentThread())
        $rt_throw(jl_IllegalStateException__init_($rt_s(0)));
    var$2 = $o.$monitor;
    var$2.$count0 = var$2.$count0 + 1 | 0;
},
jl_Object_monitorExitSync = $o => {
    let var$2, var$3;
    if (jl_Thread_currentThread() === null)
        return;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        var$2 = $o.$monitor;
        var$3 = var$2.$count0 - 1 | 0;
        var$2.$count0 = var$3;
        if (!var$3)
            $o.$monitor.$owner = null;
        jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
},
jl_Object_monitorEnter0 = $o => {
    let var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = 1;
        $ptr = 1;
    case 1:
        jl_Object_monitorEnter($o, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, var$2, $ptr);
},
jl_Object_monitorEnter = ($o, $count) => {
    let var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        if ($o.$monitor.$owner === null)
            $o.$monitor.$owner = jl_Thread_currentThread();
        if ($o.$monitor.$owner === jl_Thread_currentThread()) {
            var$3 = $o.$monitor;
            var$3.$count0 = var$3.$count0 + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, $ptr);
},
jl_Object_createMonitor = $o => {
    $o.$monitor = jl_Object$Monitor__init_0();
},
jl_Object_monitorEnterWait = (var$1, var$2) => {
    let $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();var$1 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait$_asyncCall_$(var$1, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$1, var$2, $ptr);
},
jl_Object_monitorEnterWait0 = ($o, $count, $callback) => {
    let $thread_0, var$5, $monitor;
    $thread_0 = jl_Thread_currentThread();
    if ($o.$monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count0 = var$5.$count0 + $count | 0;
        $callback.$complete(null);
        return;
    }
    if ($o.$monitor.$owner === null) {
        $o.$monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count0 = var$5.$count0 + $count | 0;
        $callback.$complete(null);
        return;
    }
    $monitor = $o.$monitor;
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueue();
    otp_PlatformQueue_add$static($monitor.$enteringThreads, jl_Object$monitorEnterWait$lambda$_6_0__init_0($thread_0, $o, $count, $callback));
},
jl_Object_monitorExit0 = $o => {
    jl_Object_monitorExit($o, 1);
},
jl_Object_monitorExit = ($o, $count) => {
    let $monitor;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        $monitor = $o.$monitor;
        $monitor.$count0 = $monitor.$count0 - $count | 0;
        if ($monitor.$count0 > 0)
            return;
        $monitor.$owner = null;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads))
            otp_Platform_postpone(jl_Object$monitorExit$lambda$_8_0__init_0($o));
        else
            jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
},
jl_Object_waitForOtherThreads = $o => {
    let $monitor, $enteringThreads, $r;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === null) {
        $monitor = $o.$monitor;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads)) {
            $enteringThreads = $monitor.$enteringThreads;
            $r = otp_PlatformQueue_remove$static($enteringThreads);
            $monitor.$enteringThreads = null;
            $r.$run();
        }
        return;
    }
},
jl_Object_isEmptyMonitor = $this => {
    let $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        b: {
            if ($monitor.$owner === null) {
                if ($monitor.$enteringThreads !== null) {
                    var$2 = $monitor.$enteringThreads;
                    if (!otp_PlatformQueue_isEmpty$static(var$2))
                        break b;
                }
                if ($monitor.$notifyListeners === null)
                    break a;
                var$2 = $monitor.$notifyListeners;
                if (otp_PlatformQueue_isEmpty$static(var$2))
                    break a;
            }
        }
        return 0;
    }
    jl_Object_deleteMonitor($this);
    return 1;
},
jl_Object_deleteMonitor = $this => {
    $this.$monitor = null;
},
jl_Object__init_ = $this => {
    return;
},
jl_Object__init_0 = () => {
    let var_0 = new jl_Object();
    jl_Object__init_(var_0);
    return var_0;
},
jl_Object_getClass = $this => {
    return jl_Class_getClass($this.constructor);
},
jl_Object_hashCode = $this => {
    return jl_Object_identity($this);
},
jl_Object_equals = ($this, $other) => {
    return $this !== $other ? 0 : 1;
},
jl_Object_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_Class_getName(jl_Object_getClass($this));
    var$2 = jl_Integer_toHexString(jl_Object_identity($this));
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, var$1), 64), var$2);
    return jl_StringBuilder_toString(var$3);
},
jl_Object_identity = $this => {
    let $platformThis;
    $platformThis = $this;
    if (!$platformThis.$id$)
        $platformThis.$id$ = $rt_nextId();
    return $this.$id$;
},
jl_Object_clone = $this => {
    let var$1, $result, var$3;
    if (!$rt_isInstance($this, jl_Cloneable)) {
        var$1 = $this;
        if (var$1.constructor.$meta.item === null)
            $rt_throw(jl_CloneNotSupportedException__init_());
    }
    $result = otp_Platform_clone($this);
    var$1 = $result;
    var$3 = $rt_nextId();
    var$1.$id$ = var$3;
    return $result;
},
jl_Object_lambda$monitorExit$2 = $o => {
    jl_Object_waitForOtherThreads($o);
},
jl_Object_lambda$monitorEnterWait$0 = ($thread_0, $o, $count, $callback) => {
    let var$5;
    jl_Thread_setCurrentThread($thread_0);
    $o.$monitor.$owner = $thread_0;
    var$5 = $o.$monitor;
    var$5.$count0 = var$5.$count0 + $count | 0;
    $callback.$complete(null);
},
jl_Object_monitorEnterWait$_asyncCall_$ = (var$1, var$2) => {
    let thread = $rt_requireNativeThread();
    let javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        let result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    let callback = function() {
    };
    callback.$complete = val => {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = e => {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    thread.suspend(() => {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
            ;
        } catch ($e){
            callback.$error($e);
        }
    });
    return null;
};
function jur_AbstractCharClass$LazyCharClass() {
    let a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
let jur_AbstractCharClass$LazyCharClass__init_ = $this => {
    jl_Object__init_($this);
},
jur_AbstractCharClass$LazyCharClass_getValue = ($this, $negative) => {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = ($this.$computeValue()).$setNegative(1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
},
jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyBlank__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyBlank__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyBlank_computeValue = $this => {
    return ((jur_CharClass__init_()).$add(32)).$add(9);
},
jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyCntrl__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyCntrl__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyCntrl_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(0, 31)).$add(127);
},
ju_Iterator = $rt_classWithoutFields(0);
function ju_AbstractMap$Values$1() {
    let a = this; jl_Object.call(a);
    a.$val$it0 = null;
    a.$this$1 = null;
}
let ju_AbstractMap$Values$1__init_ = ($this, $this$1, var$2) => {
    $this.$this$1 = $this$1;
    $this.$val$it0 = var$2;
    jl_Object__init_($this);
},
ju_AbstractMap$Values$1__init_0 = (var_0, var_1) => {
    let var_2 = new ju_AbstractMap$Values$1();
    ju_AbstractMap$Values$1__init_(var_2, var_0, var_1);
    return var_2;
},
ju_AbstractMap$Values$1_hasNext = $this => {
    return $this.$val$it0.$hasNext();
},
ju_AbstractMap$Values$1_next = $this => {
    return ($this.$val$it0.$next()).$getValue();
},
ju_AbstractMap$Values$1_remove = $this => {
    $this.$val$it0.$remove();
},
jl_AutoCloseable = $rt_classWithoutFields(0),
ji_Closeable = $rt_classWithoutFields(0),
ji_InputStream = $rt_classWithoutFields(),
ji_InputStream__init_ = $this => {
    jl_Object__init_($this);
},
ji_InputStream_read = ($this, $b) => {
    return $this.$read($b, 0, $b.data.length);
},
ji_InputStream_readAllBytes = $this => {
    return $this.$readNBytes(2147483647);
},
ji_InputStream_readNBytes = ($this, $len) => {
    let $buffers, $buffer, $positionInBuffer, $totalBytesRead, var$6, $bytesToRead, $bytesRead, $result, $ptr_0, var$11, $part, var$13, var$14;
    if ($len < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if (!$len)
        return $rt_createByteArray(0);
    $buffers = null;
    $buffer = $rt_createByteArray(2048);
    $positionInBuffer = 0;
    $totalBytesRead = 0;
    a: {
        while (true) {
            var$6 = $buffer.data.length;
            $bytesToRead = jl_Math_min(var$6 - $positionInBuffer | 0, $len - $totalBytesRead | 0);
            $bytesRead = $this.$read($buffer, $positionInBuffer, $bytesToRead);
            if ($bytesRead < 0)
                break;
            $positionInBuffer = $positionInBuffer + $bytesRead | 0;
            $totalBytesRead = $totalBytesRead + $bytesRead | 0;
            if ($totalBytesRead == $len)
                break a;
            if (($positionInBuffer * 2 | 0) > var$6) {
                if ($buffers === null)
                    $buffers = ju_ArrayList__init_();
                $buffers.$add1(ju_Arrays_copyOf($buffer, $positionInBuffer));
                $positionInBuffer = 0;
            }
        }
    }
    if ($buffers === null) {
        if ($positionInBuffer != var$6)
            $buffer = ju_Arrays_copyOf($buffer, $positionInBuffer);
        return $buffer;
    }
    $result = $rt_createByteArray($totalBytesRead);
    $ptr_0 = 0;
    var$11 = $buffers.$iterator();
    while (var$11.$hasNext()) {
        $part = var$11.$next();
        var$13 = $part.data;
        var$14 = var$13.length;
        jl_System_fastArraycopy($part, 0, $result, $ptr_0, var$14);
        $ptr_0 = $ptr_0 + var$14 | 0;
    }
    if ($positionInBuffer > 0)
        jl_System_fastArraycopy($buffer, 0, $result, $ptr_0, $positionInBuffer);
    return $result;
};
function ji_FilterInputStream() {
    ji_InputStream.call(this);
    this.$in = null;
}
let ji_FilterInputStream__init_ = ($this, $in) => {
    ji_InputStream__init_($this);
    $this.$in = $in;
},
ji_FilterInputStream__init_0 = var_0 => {
    let var_1 = new ji_FilterInputStream();
    ji_FilterInputStream__init_(var_1, var_0);
    return var_1;
};
function ji_BufferedInputStream() {
    let a = this; ji_FilterInputStream.call(a);
    a.$buf0 = null;
    a.$count1 = 0;
    a.$marklimit = 0;
    a.$markpos = 0;
    a.$pos = 0;
}
let ji_BufferedInputStream__init_ = ($this, $in) => {
    ji_FilterInputStream__init_($this, $in);
    $this.$markpos = (-1);
    $this.$buf0 = $rt_createByteArray(8192);
},
ji_BufferedInputStream__init_0 = var_0 => {
    let var_1 = new ji_BufferedInputStream();
    ji_BufferedInputStream__init_(var_1, var_0);
    return var_1;
},
ji_BufferedInputStream_close = $this => {
    let $localIn;
    $this.$buf0 = null;
    $localIn = $this.$in;
    $this.$in = null;
    if ($localIn !== null)
        $localIn.$close();
},
ji_BufferedInputStream_fillbuf = ($this, $localIn, $localBuf) => {
    let var$3, var$4, var$5, $newLength, $newbuf, $bytesread, $result;
    if ($this.$markpos != (-1) && ($this.$pos - $this.$markpos | 0) < $this.$marklimit) {
        a: {
            if (!$this.$markpos) {
                var$3 = $localBuf.data;
                var$4 = $this.$marklimit;
                var$5 = var$3.length;
                if (var$4 > var$5) {
                    $newLength = var$5 * 2 | 0;
                    if ($newLength > $this.$marklimit)
                        $newLength = $this.$marklimit;
                    $newbuf = $rt_createByteArray($newLength);
                    jl_System_fastArraycopy($localBuf, 0, $newbuf, 0, var$5);
                    $this.$buf0 = $newbuf;
                    $localBuf = $this.$buf0;
                    break a;
                }
            }
            if ($this.$markpos > 0) {
                var$3 = $localBuf.data;
                jl_System_fastArraycopy($localBuf, $this.$markpos, $localBuf, 0, var$3.length - $this.$markpos | 0);
            }
        }
        var$3 = $localBuf.data;
        $this.$pos = $this.$pos - $this.$markpos | 0;
        $this.$count1 = 0;
        $this.$markpos = 0;
        $bytesread = $localIn.$read($localBuf, $this.$pos, var$3.length - $this.$pos | 0);
        $this.$count1 = $bytesread <= 0 ? $this.$pos : $this.$pos + $bytesread | 0;
        return $bytesread;
    }
    $result = $localIn.$read0($localBuf);
    if ($result > 0) {
        $this.$markpos = (-1);
        $this.$pos = 0;
        $this.$count1 = $result;
    }
    return $result;
},
ji_BufferedInputStream_read = ($this, $buffer, $offset, $length) => {
    let $localBuf, $localIn, $required, $copylength, $read;
    jl_Object_monitorEnterSync($this);
    try {
        $localBuf = $this.$buf0;
        if ($localBuf === null)
            $rt_throw(ji_IOException__init_1($rt_s(1)));
        if ($offset <= ($buffer.data.length - $length | 0) && $offset >= 0 && $length >= 0) {
            if (!$length)
                return 0;
            $localIn = $this.$in;
            if ($localIn === null)
                $rt_throw(ji_IOException__init_1($rt_s(1)));
            if ($this.$pos >= $this.$count1)
                $required = $length;
            else {
                $copylength = ($this.$count1 - $this.$pos | 0) >= $length ? $length : $this.$count1 - $this.$pos | 0;
                jl_System_fastArraycopy($localBuf, $this.$pos, $buffer, $offset, $copylength);
                $this.$pos = $this.$pos + $copylength | 0;
                if ($copylength != $length && $localIn.$available()) {
                    $offset = $offset + $copylength | 0;
                    $required = $length - $copylength | 0;
                } else
                    return $copylength;
            }
            while (true) {
                if ($this.$markpos == (-1) && $required >= $localBuf.data.length) {
                    $read = $localIn.$read($buffer, $offset, $required);
                    if ($read == (-1))
                        return $required != $length ? $length - $required | 0 : (-1);
                } else {
                    if (ji_BufferedInputStream_fillbuf($this, $localIn, $localBuf) == (-1))
                        return $required != $length ? $length - $required | 0 : (-1);
                    if ($localBuf !== $this.$buf0) {
                        $localBuf = $this.$buf0;
                        if ($localBuf === null)
                            $rt_throw(ji_IOException__init_1($rt_s(1)));
                    }
                    $read = jl_Math_min($this.$count1 - $this.$pos | 0, $required);
                    jl_System_fastArraycopy($localBuf, $this.$pos, $buffer, $offset, $read);
                    $this.$pos = $this.$pos + $read | 0;
                }
                $required = $required - $read | 0;
                if (!$required)
                    break;
                if (!$localIn.$available())
                    return $length - $required | 0;
                $offset = $offset + $read | 0;
            }
            return $length;
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    } finally {
        jl_Object_monitorExitSync($this);
    }
};
function cjj_Inflate() {
    let a = this; jl_Object.call(a);
    a.$mode0 = 0;
    a.$method0 = 0;
    a.$was = Long_ZERO;
    a.$need = Long_ZERO;
    a.$marker = 0;
    a.$wrap9 = 0;
    a.$wbits = 0;
    a.$blocks = null;
    a.$z0 = null;
    a.$flags = 0;
    a.$need_bytes = 0;
    a.$crcbuf = null;
    a.$gheader = null;
    a.$tmp_string = null;
}
let cjj_Inflate_mark = null,
cjj_Inflate_$callClinit = () => {
    cjj_Inflate_$callClinit = $rt_eraseClinit(cjj_Inflate);
    cjj_Inflate__clinit_();
},
cjj_Inflate_inflateReset = $this => {
    let var$1;
    if ($this.$z0 === null)
        return (-2);
    var$1 = $this.$z0;
    $this.$z0.$total_out = Long_ZERO;
    var$1.$total_in = Long_ZERO;
    $this.$z0.$msg = null;
    $this.$mode0 = 14;
    $this.$need_bytes = (-1);
    cjj_InfBlocks_reset($this.$blocks);
    return 0;
},
cjj_Inflate_inflateEnd = $this => {
    if ($this.$blocks !== null)
        cjj_InfBlocks_free($this.$blocks);
    return 0;
},
cjj_Inflate__init_ = ($this, $z) => {
    cjj_Inflate_$callClinit();
    jl_Object__init_($this);
    $this.$was = Long_fromInt(-1);
    $this.$need_bytes = (-1);
    $this.$crcbuf = $rt_createByteArray(4);
    $this.$gheader = null;
    $this.$tmp_string = null;
    $this.$z0 = $z;
},
cjj_Inflate__init_0 = var_0 => {
    let var_1 = new cjj_Inflate();
    cjj_Inflate__init_(var_1, var_0);
    return var_1;
},
cjj_Inflate_inflateInit = ($this, $w) => {
    $this.$z0.$msg = null;
    $this.$blocks = null;
    $this.$wrap9 = 0;
    if ($w < 0)
        $w =  -$w | 0;
    else if ($w & 1073741824) {
        $this.$wrap9 = 4;
        $w = $w & (-1073741825);
        if ($w < 48)
            $w = $w & 15;
    } else if ($w & (-32)) {
        $this.$wrap9 = 4;
        $w = $w & 15;
    } else {
        $this.$wrap9 = ($w >> 4) + 1 | 0;
        if ($w < 48)
            $w = $w & 15;
    }
    if ($w >= 8 && $w <= 15) {
        if ($this.$blocks !== null && $this.$wbits != $w) {
            cjj_InfBlocks_free($this.$blocks);
            $this.$blocks = null;
        }
        $this.$wbits = $w;
        $this.$blocks = cjj_InfBlocks__init_0($this.$z0, 1 << $w);
        cjj_Inflate_inflateReset($this);
        return 0;
    }
    cjj_Inflate_inflateEnd($this);
    return (-2);
},
cjj_Inflate_inflate = ($this, $f) => {
    let var$2, $r, $e, var$5, var$6, var$7, var$8, $b, $foo, var$11, $$je;
    if ($this.$z0 !== null && $this.$z0.$next_in !== null) {
        var$2 = $f != 4 ? 0 : (-5);
        $r = (-5);
        a: {
            b: {
                c: {
                    d: {
                        e: {
                            f: {
                                g: {
                                    h: {
                                        i: while (true) {
                                            j: {
                                                k: {
                                                    l: {
                                                        m: {
                                                            n: {
                                                                o: {
                                                                    p: {
                                                                        q: {
                                                                            r: {
                                                                                s: {
                                                                                    t: {
                                                                                        u: {
                                                                                            v: {
                                                                                                w: {
                                                                                                    switch ($this.$mode0) {
                                                                                                        case 6:
                                                                                                            $this.$mode0 = 13;
                                                                                                            $this.$z0.$msg = $rt_s(2);
                                                                                                            $this.$marker = 0;
                                                                                                            return (-2);
                                                                                                        case 7:
                                                                                                            $r = cjj_InfBlocks_proc($this.$blocks, $r);
                                                                                                            if ($r == (-3)) {
                                                                                                                $this.$mode0 = 13;
                                                                                                                $this.$marker = 0;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if (!$r)
                                                                                                                $r = var$2;
                                                                                                            if ($r != 1)
                                                                                                                break i;
                                                                                                            $this.$was = $this.$z0.$adler.$getValue0();
                                                                                                            cjj_InfBlocks_reset($this.$blocks);
                                                                                                            if (!$this.$wrap9) {
                                                                                                                $this.$mode0 = 12;
                                                                                                                $r = var$2;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            $this.$mode0 = 8;
                                                                                                            $r = var$2;
                                                                                                            break w;
                                                                                                        case 12:
                                                                                                            break e;
                                                                                                        case 13:
                                                                                                            return (-3);
                                                                                                        case 14:
                                                                                                            break r;
                                                                                                        case 23:
                                                                                                            try {
                                                                                                                $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                                                            } catch ($$e) {
                                                                                                                $$je = $rt_wrapException($$e);
                                                                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                                                                    $e = $$je;
                                                                                                                    return $e.$r0;
                                                                                                                } else {
                                                                                                                    throw $$e;
                                                                                                                }
                                                                                                            }
                                                                                                            $this.$flags = Long_lo($this.$need) & 65535;
                                                                                                            if (($this.$flags & 255) != 8) {
                                                                                                                $this.$z0.$msg = $rt_s(3);
                                                                                                                $this.$mode0 = 13;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if ($this.$flags & 57344) {
                                                                                                                $this.$z0.$msg = $rt_s(4);
                                                                                                                $this.$mode0 = 13;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if ($this.$flags & 512)
                                                                                                                cjj_Inflate_checksum($this, 2, $this.$need);
                                                                                                            $this.$mode0 = 16;
                                                                                                            break p;
                                                                                                        case 2:
                                                                                                            break d;
                                                                                                        case 3:
                                                                                                            break c;
                                                                                                        case 4:
                                                                                                            break b;
                                                                                                        case 5:
                                                                                                            var$2 = $r;
                                                                                                            break a;
                                                                                                        case 8:
                                                                                                            break w;
                                                                                                        case 9:
                                                                                                            break v;
                                                                                                        case 10:
                                                                                                            break u;
                                                                                                        case 11:
                                                                                                            break t;
                                                                                                        case 15:
                                                                                                            break s;
                                                                                                        case 16:
                                                                                                            break p;
                                                                                                        case 17:
                                                                                                            break o;
                                                                                                        case 18:
                                                                                                            break n;
                                                                                                        case 19:
                                                                                                            break q;
                                                                                                        case 20:
                                                                                                            break l;
                                                                                                        case 21:
                                                                                                            break k;
                                                                                                        case 22:
                                                                                                            break;
                                                                                                        default:
                                                                                                            return (-2);
                                                                                                    }
                                                                                                    break j;
                                                                                                }
                                                                                                if (!$this.$z0.$avail_in)
                                                                                                    return $r;
                                                                                                var$5 = $this.$z0;
                                                                                                var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                                var$5 = $this.$z0;
                                                                                                var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                                var$6 = $this.$z0.$next_in.data;
                                                                                                var$5 = $this.$z0;
                                                                                                var$7 = var$5.$next_in_index;
                                                                                                var$5.$next_in_index = var$7 + 1 | 0;
                                                                                                $this.$need = Long_and(Long_fromInt((var$6[var$7] & 255) << 24), Long_create(4278190080, 0));
                                                                                                $this.$mode0 = 9;
                                                                                                $r = var$2;
                                                                                            }
                                                                                            if (!$this.$z0.$avail_in)
                                                                                                return $r;
                                                                                            var$5 = $this.$z0;
                                                                                            var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                            var$5 = $this.$z0;
                                                                                            var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                            var$8 = $this.$need;
                                                                                            var$6 = $this.$z0.$next_in.data;
                                                                                            var$5 = $this.$z0;
                                                                                            var$7 = var$5.$next_in_index;
                                                                                            var$5.$next_in_index = var$7 + 1 | 0;
                                                                                            $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$7] & 255) << 16), Long_fromInt(16711680)));
                                                                                            $this.$mode0 = 10;
                                                                                            $r = var$2;
                                                                                        }
                                                                                        if (!$this.$z0.$avail_in)
                                                                                            return $r;
                                                                                        var$5 = $this.$z0;
                                                                                        var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                        var$5 = $this.$z0;
                                                                                        var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                        var$8 = $this.$need;
                                                                                        var$6 = $this.$z0.$next_in.data;
                                                                                        var$5 = $this.$z0;
                                                                                        var$7 = var$5.$next_in_index;
                                                                                        var$5.$next_in_index = var$7 + 1 | 0;
                                                                                        $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$7] & 255) << 8), Long_fromInt(65280)));
                                                                                        $this.$mode0 = 11;
                                                                                        $r = var$2;
                                                                                    }
                                                                                    if (!$this.$z0.$avail_in)
                                                                                        return $r;
                                                                                    var$5 = $this.$z0;
                                                                                    var$5.$avail_in = var$5.$avail_in - 1 | 0;
                                                                                    var$5 = $this.$z0;
                                                                                    var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                                                                                    var$8 = $this.$need;
                                                                                    var$6 = $this.$z0.$next_in.data;
                                                                                    var$5 = $this.$z0;
                                                                                    var$7 = var$5.$next_in_index;
                                                                                    var$5.$next_in_index = var$7 + 1 | 0;
                                                                                    $this.$need = Long_add(var$8, Long_and(Long_fromInt(var$6[var$7]), Long_fromInt(255)));
                                                                                    if ($this.$flags)
                                                                                        $this.$need = Long_and(Long_or(Long_or(Long_or(Long_shr(Long_and($this.$need, Long_fromInt(-16777216)), 24), Long_shr(Long_and($this.$need, Long_fromInt(16711680)), 8)), Long_shl(Long_and($this.$need, Long_fromInt(65280)), 8)), Long_shl(Long_and($this.$need, Long_fromInt(65535)), 24)), Long_create(4294967295, 0));
                                                                                    if (Long_lo($this.$was) != Long_lo($this.$need))
                                                                                        $this.$z0.$msg = $rt_s(5);
                                                                                    else if ($this.$flags && $this.$gheader !== null)
                                                                                        $this.$gheader.$crc = $this.$need;
                                                                                    $this.$mode0 = 15;
                                                                                    $r = var$2;
                                                                                }
                                                                                if (!($this.$wrap9 && $this.$flags)) {
                                                                                    if ($this.$z0.$msg === null)
                                                                                        break f;
                                                                                    if (!$this.$z0.$msg.$equals($rt_s(5)))
                                                                                        break f;
                                                                                    $this.$mode0 = 13;
                                                                                    $this.$marker = 5;
                                                                                    continue i;
                                                                                }
                                                                                try {
                                                                                    $r = cjj_Inflate_readBytes($this, 4, $r, var$2);
                                                                                } catch ($$e) {
                                                                                    $$je = $rt_wrapException($$e);
                                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                                        $e = $$je;
                                                                                        return $e.$r0;
                                                                                    } else {
                                                                                        throw $$e;
                                                                                    }
                                                                                }
                                                                                if ($this.$z0.$msg !== null && $this.$z0.$msg.$equals($rt_s(5))) {
                                                                                    $this.$mode0 = 13;
                                                                                    $this.$marker = 5;
                                                                                    continue i;
                                                                                }
                                                                                if (Long_eq($this.$need, Long_and($this.$z0.$total_out, Long_create(4294967295, 0)))) {
                                                                                    $this.$z0.$msg = null;
                                                                                    break f;
                                                                                }
                                                                                $this.$z0.$msg = $rt_s(6);
                                                                                $this.$mode0 = 13;
                                                                                continue i;
                                                                            }
                                                                            if (!$this.$wrap9) {
                                                                                $this.$mode0 = 7;
                                                                                continue i;
                                                                            }
                                                                            try {
                                                                                $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                            } catch ($$e) {
                                                                                $$je = $rt_wrapException($$e);
                                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                                    $e = $$je;
                                                                                    return $e.$r0;
                                                                                } else {
                                                                                    throw $$e;
                                                                                }
                                                                            }
                                                                            if (!($this.$wrap9 != 4 && !($this.$wrap9 & 2)) && Long_eq($this.$need, Long_fromInt(35615))) {
                                                                                if ($this.$wrap9 == 4)
                                                                                    $this.$wrap9 = 2;
                                                                                $this.$z0.$adler = cjj_CRC32__init_();
                                                                                cjj_Inflate_checksum($this, 2, $this.$need);
                                                                                if ($this.$gheader === null)
                                                                                    $this.$gheader = cjj_GZIPHeader__init_();
                                                                                $this.$mode0 = 23;
                                                                                continue i;
                                                                            }
                                                                            if ($this.$wrap9 & 2) {
                                                                                $this.$mode0 = 13;
                                                                                $this.$z0.$msg = $rt_s(7);
                                                                                continue i;
                                                                            }
                                                                            $this.$flags = 0;
                                                                            $this.$method0 = Long_lo($this.$need) & 255;
                                                                            $b = Long_lo(Long_shr($this.$need, 8)) & 255;
                                                                            if (!($this.$wrap9 & 1 && !((($this.$method0 << 8) + $b | 0) % 31 | 0)) && ($this.$method0 & 15) != 8) {
                                                                                if ($this.$wrap9 != 4) {
                                                                                    $this.$mode0 = 13;
                                                                                    $this.$z0.$msg = $rt_s(7);
                                                                                    continue i;
                                                                                }
                                                                                var$5 = $this.$z0;
                                                                                var$5.$next_in_index = var$5.$next_in_index - 2 | 0;
                                                                                var$5 = $this.$z0;
                                                                                var$5.$avail_in = var$5.$avail_in + 2 | 0;
                                                                                var$5 = $this.$z0;
                                                                                var$5.$total_in = Long_sub(var$5.$total_in, Long_fromInt(2));
                                                                                $this.$wrap9 = 0;
                                                                                $this.$mode0 = 7;
                                                                                continue i;
                                                                            }
                                                                            if (($this.$method0 & 15) != 8) {
                                                                                $this.$mode0 = 13;
                                                                                $this.$z0.$msg = $rt_s(3);
                                                                                continue i;
                                                                            }
                                                                            if ($this.$wrap9 == 4)
                                                                                $this.$wrap9 = 1;
                                                                            if ((($this.$method0 >> 4) + 8 | 0) > $this.$wbits) {
                                                                                $this.$mode0 = 13;
                                                                                $this.$z0.$msg = $rt_s(8);
                                                                                continue i;
                                                                            }
                                                                            $this.$z0.$adler = cjj_Adler32__init_0();
                                                                            if ($b & 32) {
                                                                                $this.$mode0 = 2;
                                                                                break d;
                                                                            }
                                                                            $this.$mode0 = 7;
                                                                            continue i;
                                                                        }
                                                                        break m;
                                                                    }
                                                                    try {
                                                                        $r = cjj_Inflate_readBytes($this, 4, $r, var$2);
                                                                    } catch ($$e) {
                                                                        $$je = $rt_wrapException($$e);
                                                                        if ($$je instanceof cjj_Inflate$Return) {
                                                                            $e = $$je;
                                                                            return $e.$r0;
                                                                        } else {
                                                                            throw $$e;
                                                                        }
                                                                    }
                                                                    if ($this.$gheader !== null)
                                                                        $this.$gheader.$time3 = $this.$need;
                                                                    if ($this.$flags & 512)
                                                                        cjj_Inflate_checksum($this, 4, $this.$need);
                                                                    $this.$mode0 = 17;
                                                                }
                                                                try {
                                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r0;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                                if ($this.$gheader !== null) {
                                                                    $this.$gheader.$xflags = Long_lo($this.$need) & 255;
                                                                    $this.$gheader.$os = Long_lo($this.$need) >> 8 & 255;
                                                                }
                                                                if ($this.$flags & 512)
                                                                    cjj_Inflate_checksum($this, 2, $this.$need);
                                                                $this.$mode0 = 18;
                                                            }
                                                            if ($this.$flags & 1024) {
                                                                try {
                                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r0;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                                if ($this.$gheader !== null)
                                                                    $this.$gheader.$extra = $rt_createByteArray(Long_lo($this.$need) & 65535);
                                                                if ($this.$flags & 512)
                                                                    cjj_Inflate_checksum($this, 2, $this.$need);
                                                            } else if ($this.$gheader !== null)
                                                                $this.$gheader.$extra = null;
                                                            $this.$mode0 = 19;
                                                        }
                                                        if ($this.$flags & 1024)
                                                            x: {
                                                                try {
                                                                    $r = cjj_Inflate_readBytes0($this, $r, var$2);
                                                                    if ($this.$gheader === null)
                                                                        break x;
                                                                    $foo = $this.$tmp_string.$toByteArray();
                                                                    var$6 = $foo.data;
                                                                    $this.$tmp_string = null;
                                                                    var$7 = var$6.length;
                                                                    if (var$7 != $this.$gheader.$extra.data.length) {
                                                                        $this.$z0.$msg = $rt_s(9);
                                                                        $this.$mode0 = 13;
                                                                        continue i;
                                                                    }
                                                                    jl_System_fastArraycopy($foo, 0, $this.$gheader.$extra, 0, var$7);
                                                                    break x;
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r0;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                            }
                                                        else if ($this.$gheader !== null)
                                                            $this.$gheader.$extra = null;
                                                        $this.$mode0 = 20;
                                                    }
                                                    y: {
                                                        if ($this.$flags & 2048) {
                                                            z: {
                                                                try {
                                                                    $r = cjj_Inflate_readString($this, $r, var$2);
                                                                    if ($this.$gheader === null)
                                                                        break z;
                                                                    $this.$gheader.$name1 = $this.$tmp_string.$toByteArray();
                                                                    break z;
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        break h;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                            }
                                                            try {
                                                                $this.$tmp_string = null;
                                                                break y;
                                                            } catch ($$e) {
                                                                $$je = $rt_wrapException($$e);
                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                    $e = $$je;
                                                                    break h;
                                                                } else {
                                                                    throw $$e;
                                                                }
                                                            }
                                                        } else if ($this.$gheader !== null)
                                                            $this.$gheader.$name1 = null;
                                                    }
                                                    $this.$mode0 = 21;
                                                }
                                                ba: {
                                                    if ($this.$flags & 4096) {
                                                        bb: {
                                                            try {
                                                                $r = cjj_Inflate_readString($this, $r, var$2);
                                                                if ($this.$gheader === null)
                                                                    break bb;
                                                                $this.$gheader.$comment = $this.$tmp_string.$toByteArray();
                                                                break bb;
                                                            } catch ($$e) {
                                                                $$je = $rt_wrapException($$e);
                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                    $e = $$je;
                                                                    break g;
                                                                } else {
                                                                    throw $$e;
                                                                }
                                                            }
                                                        }
                                                        try {
                                                            $this.$tmp_string = null;
                                                            break ba;
                                                        } catch ($$e) {
                                                            $$je = $rt_wrapException($$e);
                                                            if ($$je instanceof cjj_Inflate$Return) {
                                                                $e = $$je;
                                                                break g;
                                                            } else {
                                                                throw $$e;
                                                            }
                                                        }
                                                    } else if ($this.$gheader !== null)
                                                        $this.$gheader.$comment = null;
                                                }
                                                $this.$mode0 = 22;
                                            }
                                            if ($this.$flags & 512) {
                                                try {
                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                } catch ($$e) {
                                                    $$je = $rt_wrapException($$e);
                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                        $e = $$je;
                                                        return $e.$r0;
                                                    } else {
                                                        throw $$e;
                                                    }
                                                }
                                                if ($this.$gheader !== null)
                                                    $this.$gheader.$hcrc = Long_lo(Long_and($this.$need, Long_fromInt(65535)));
                                                if (Long_ne($this.$need, Long_and($this.$z0.$adler.$getValue0(), Long_fromInt(65535)))) {
                                                    $this.$mode0 = 13;
                                                    $this.$z0.$msg = $rt_s(10);
                                                    $this.$marker = 5;
                                                    continue;
                                                }
                                            }
                                            $this.$z0.$adler = cjj_CRC32__init_();
                                            $this.$mode0 = 7;
                                        }
                                        return $r;
                                    }
                                    return $e.$r0;
                                }
                                return $e.$r0;
                            }
                            $this.$mode0 = 12;
                        }
                        return 1;
                    }
                    if (!$this.$z0.$avail_in)
                        return $r;
                    var$5 = $this.$z0;
                    var$5.$avail_in = var$5.$avail_in - 1 | 0;
                    var$5 = $this.$z0;
                    var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                    var$6 = $this.$z0.$next_in.data;
                    var$5 = $this.$z0;
                    var$11 = var$5.$next_in_index;
                    var$5.$next_in_index = var$11 + 1 | 0;
                    $this.$need = Long_and(Long_fromInt((var$6[var$11] & 255) << 24), Long_create(4278190080, 0));
                    $this.$mode0 = 3;
                    $r = var$2;
                }
                if (!$this.$z0.$avail_in)
                    return $r;
                var$5 = $this.$z0;
                var$5.$avail_in = var$5.$avail_in - 1 | 0;
                var$5 = $this.$z0;
                var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
                var$8 = $this.$need;
                var$6 = $this.$z0.$next_in.data;
                var$5 = $this.$z0;
                var$11 = var$5.$next_in_index;
                var$5.$next_in_index = var$11 + 1 | 0;
                $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$11] & 255) << 16), Long_fromInt(16711680)));
                $this.$mode0 = 4;
                $r = var$2;
            }
            if (!$this.$z0.$avail_in)
                return $r;
            var$5 = $this.$z0;
            var$5.$avail_in = var$5.$avail_in - 1 | 0;
            var$5 = $this.$z0;
            var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
            var$8 = $this.$need;
            var$6 = $this.$z0.$next_in.data;
            var$5 = $this.$z0;
            var$7 = var$5.$next_in_index;
            var$5.$next_in_index = var$7 + 1 | 0;
            $this.$need = Long_add(var$8, Long_and(Long_fromInt((var$6[var$7] & 255) << 8), Long_fromInt(65280)));
            $this.$mode0 = 5;
        }
        if (!$this.$z0.$avail_in)
            return var$2;
        var$5 = $this.$z0;
        var$5.$avail_in = var$5.$avail_in - 1 | 0;
        var$5 = $this.$z0;
        var$5.$total_in = Long_add(var$5.$total_in, Long_fromInt(1));
        var$8 = $this.$need;
        var$6 = $this.$z0.$next_in.data;
        var$5 = $this.$z0;
        var$7 = var$5.$next_in_index;
        var$5.$next_in_index = var$7 + 1 | 0;
        $this.$need = Long_add(var$8, Long_and(Long_fromInt(var$6[var$7]), Long_fromInt(255)));
        $this.$z0.$adler.$reset0($this.$need);
        $this.$mode0 = 6;
        return 2;
    }
    if ($f == 4 && $this.$mode0 == 14)
        return 0;
    return (-2);
},
cjj_Inflate_readBytes = ($this, $n, $r, $f) => {
    let var$4, var$5, var$6, var$7;
    if ($this.$need_bytes == (-1)) {
        $this.$need_bytes = $n;
        $this.$need = Long_ZERO;
    }
    while (true) {
        if ($this.$need_bytes <= 0) {
            if ($n == 2)
                $this.$need = Long_and($this.$need, Long_fromInt(65535));
            else if ($n == 4)
                $this.$need = Long_and($this.$need, Long_create(4294967295, 0));
            $this.$need_bytes = (-1);
            return $r;
        }
        if (!$this.$z0.$avail_in)
            break;
        var$4 = $this.$z0;
        var$4.$avail_in = var$4.$avail_in - 1 | 0;
        var$4 = $this.$z0;
        var$4.$total_in = Long_add(var$4.$total_in, Long_fromInt(1));
        var$5 = $this.$need;
        var$6 = $this.$z0.$next_in.data;
        var$4 = $this.$z0;
        var$7 = var$4.$next_in_index;
        var$4.$next_in_index = var$7 + 1 | 0;
        $this.$need = Long_or(var$5, Long_fromInt((var$6[var$7] & 255) << (($n - $this.$need_bytes | 0) * 8 | 0)));
        $this.$need_bytes = $this.$need_bytes - 1 | 0;
        $r = $f;
    }
    $rt_throw(cjj_Inflate$Return__init_($this, $r));
},
cjj_Inflate_readString = ($this, $r, $f) => {
    let var$3, var$4;
    if ($this.$tmp_string === null)
        $this.$tmp_string = ji_ByteArrayOutputStream__init_0();
    while (true) {
        if (!$this.$z0.$avail_in)
            $rt_throw(cjj_Inflate$Return__init_($this, $r));
        var$3 = $this.$z0;
        var$3.$avail_in = var$3.$avail_in - 1 | 0;
        var$3 = $this.$z0;
        var$3.$total_in = Long_add(var$3.$total_in, Long_fromInt(1));
        var$4 = $this.$z0.$next_in.data[$this.$z0.$next_in_index];
        if (var$4)
            $this.$tmp_string.$write($this.$z0.$next_in, $this.$z0.$next_in_index, 1);
        $this.$z0.$adler.$update($this.$z0.$next_in, $this.$z0.$next_in_index, 1);
        var$3 = $this.$z0;
        var$3.$next_in_index = var$3.$next_in_index + 1 | 0;
        if (!var$4)
            break;
        $r = $f;
    }
    return $f;
},
cjj_Inflate_readBytes0 = ($this, $r, $f) => {
    let var$3;
    if ($this.$tmp_string === null)
        $this.$tmp_string = ji_ByteArrayOutputStream__init_0();
    while (Long_gt($this.$need, Long_ZERO)) {
        if (!$this.$z0.$avail_in)
            $rt_throw(cjj_Inflate$Return__init_($this, $r));
        var$3 = $this.$z0;
        var$3.$avail_in = var$3.$avail_in - 1 | 0;
        var$3 = $this.$z0;
        var$3.$total_in = Long_add(var$3.$total_in, Long_fromInt(1));
        $this.$tmp_string.$write($this.$z0.$next_in, $this.$z0.$next_in_index, 1);
        $this.$z0.$adler.$update($this.$z0.$next_in, $this.$z0.$next_in_index, 1);
        var$3 = $this.$z0;
        var$3.$next_in_index = var$3.$next_in_index + 1 | 0;
        $this.$need = Long_sub($this.$need, Long_fromInt(1));
        $r = $f;
    }
    return $r;
},
cjj_Inflate_checksum = ($this, $n, $v) => {
    let $i;
    $i = 0;
    while ($i < $n) {
        $this.$crcbuf.data[$i] = Long_lo(Long_and($v, Long_fromInt(255))) << 24 >> 24;
        $v = Long_shr($v, 8);
        $i = $i + 1 | 0;
    }
    $this.$z0.$adler.$update($this.$crcbuf, 0, $n);
},
cjj_Inflate__clinit_ = () => {
    cjj_Inflate_mark = $rt_createByteArrayFromData([0, 0, (-1), (-1)]);
},
jl_Iterable = $rt_classWithoutFields(0),
ju_Collection = $rt_classWithoutFields(0),
ju_Collection_spliterator = $this => {
    return jusi_SpliteratorOverCollection__init_0($this);
},
ju_Collection_stream = $this => {
    return jusi_StreamOverSpliterator__init_0($this.$spliterator());
},
ju_AbstractCollection = $rt_classWithoutFields(),
ju_AbstractCollection__init_ = $this => {
    jl_Object__init_($this);
},
ju_AbstractCollection_isEmpty = $this => {
    return $this.$size() ? 0 : 1;
},
ju_AbstractCollection_contains = ($this, $o) => {
    let $iter, $e;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        $e = $iter.$next();
        if (ju_Objects_equals($e, $o))
            return 1;
    }
    return 0;
},
ju_AbstractCollection_toArray = $this => {
    let $arr, $i, $iter, var$4, var$5;
    $arr = $rt_createArray(jl_Object, $this.$size());
    $i = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        var$4 = $arr.data;
        var$5 = $i + 1 | 0;
        var$4[$i] = $iter.$next();
        $i = var$5;
    }
    return $arr;
},
ju_AbstractCollection_toArray0 = ($this, $a) => {
    let var$2, $i, var$4, $iter;
    var$2 = $a.data;
    $i = $this.$size();
    var$4 = var$2.length;
    if (var$4 < $i)
        $a = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($a)), $i);
    else
        while ($i < var$4) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    $i = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        var$2 = $a.data;
        var$4 = $i + 1 | 0;
        var$2[$i] = $iter.$next();
        $i = var$4;
    }
    return $a;
},
ju_AbstractCollection_remove = ($this, $o) => {
    let $iter, $e;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        $e = $iter.$next();
        if (ju_Objects_equals($e, $o)) {
            $iter.$remove();
            return 1;
        }
    }
    return 0;
},
ju_AbstractCollection_addAll = ($this, $c) => {
    let $changed, $iter;
    $changed = 0;
    $iter = $c.$iterator();
    while ($iter.$hasNext()) {
        if (!$this.$add1($iter.$next()))
            continue;
        $changed = 1;
    }
    return $changed;
},
ju_AbstractCollection_retainAll = ($this, $c) => {
    let $changed, $iter, $e;
    ju_Objects_requireNonNull0($c);
    $changed = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        $e = $iter.$next();
        if (!$c.$contains($e)) {
            $iter.$remove();
            $changed = 1;
        }
    }
    return $changed;
},
ju_AbstractCollection_toString = $this => {
    let $sb, $iter, $e, var$4;
    $sb = jl_StringBuilder__init_();
    $sb.$append0(91);
    $iter = $this.$iterator();
    if ($iter.$hasNext()) {
        $e = $iter.$next();
        if ($e === $this)
            $e = $rt_s(11);
        $sb.$append($e);
    }
    while ($iter.$hasNext()) {
        $e = $iter.$next();
        var$4 = $sb.$append1($rt_s(12));
        if ($e === $this)
            $e = $rt_s(11);
        var$4.$append($e);
    }
    $sb.$append0(93);
    return $sb.$toString();
},
ju_Set = $rt_classWithoutFields(0),
ju_AbstractSet = $rt_classWithoutFields(ju_AbstractCollection),
ju_AbstractSet__init_ = $this => {
    ju_AbstractCollection__init_($this);
},
ju_AbstractSet_equals = ($this, $obj) => {
    let $other, $iter;
    if ($this === $obj)
        return 1;
    if (!$rt_isInstance($obj, ju_Set))
        return 0;
    $other = $obj;
    if ($this.$size() != $other.$size())
        return 0;
    $iter = $other.$iterator();
    while ($iter.$hasNext()) {
        if ($this.$contains($iter.$next()))
            continue;
        else
            return 0;
    }
    return 1;
},
ju_AbstractSet_hashCode = $this => {
    let $result, $iter, $e;
    $result = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        $e = $iter.$next();
        if ($e !== null)
            $result = $result + $e.$hashCode() | 0;
    }
    return $result;
};
function juc_ConcurrentHashMap$HashMapEntrySet() {
    ju_AbstractSet.call(this);
    this.$associatedMap2 = null;
}
let juc_ConcurrentHashMap$HashMapEntrySet__init_ = ($this, $hm) => {
    ju_AbstractSet__init_($this);
    $this.$associatedMap2 = $hm;
},
juc_ConcurrentHashMap$HashMapEntrySet__init_0 = var_0 => {
    let var_1 = new juc_ConcurrentHashMap$HashMapEntrySet();
    juc_ConcurrentHashMap$HashMapEntrySet__init_(var_1, var_0);
    return var_1;
},
juc_ConcurrentHashMap$HashMapEntrySet_iterator = $this => {
    return juc_ConcurrentHashMap$EntryIterator__init_0($this.$associatedMap2);
};
function jnci_BufferedEncoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out = null;
    a.$inPosition = 0;
    a.$outPosition0 = 0;
}
let jnci_BufferedEncoder$Controller__init_ = ($this, $in, $out) => {
    jl_Object__init_($this);
    $this.$in0 = $in;
    $this.$out = $out;
},
jnci_BufferedEncoder$Controller__init_0 = (var_0, var_1) => {
    let var_2 = new jnci_BufferedEncoder$Controller();
    jnci_BufferedEncoder$Controller__init_(var_2, var_0, var_1);
    return var_2;
},
jnci_BufferedEncoder$Controller_hasMoreInput = $this => {
    return jn_Buffer_hasRemaining($this.$in0);
},
jnci_BufferedEncoder$Controller_hasMoreInput0 = ($this, $sz) => {
    return jn_Buffer_remaining($this.$in0) < $sz ? 0 : 1;
},
jnci_BufferedEncoder$Controller_hasMoreOutput = $this => {
    return jn_Buffer_hasRemaining($this.$out);
},
jnci_BufferedEncoder$Controller_hasMoreOutput0 = ($this, $sz) => {
    return jn_Buffer_remaining($this.$out) < $sz ? 0 : 1;
},
jnci_BufferedEncoder$Controller_setInPosition = ($this, $inPosition) => {
    $this.$inPosition = $inPosition;
},
jnci_BufferedEncoder$Controller_setOutPosition = ($this, $outPosition) => {
    $this.$outPosition0 = $outPosition;
},
ji_Serializable = $rt_classWithoutFields(0),
jl_Number = $rt_classWithoutFields(),
jl_Number__init_ = $this => {
    jl_Object__init_($this);
},
jl_Comparable = $rt_classWithoutFields(0);
function jl_Integer() {
    jl_Number.call(this);
    this.$value2 = 0;
}
let jl_Integer_TYPE = null,
jl_Integer_integerCache = null,
jl_Integer_$callClinit = () => {
    jl_Integer_$callClinit = $rt_eraseClinit(jl_Integer);
    jl_Integer__clinit_();
},
jl_Integer__init_ = ($this, $value) => {
    jl_Integer_$callClinit();
    jl_Number__init_($this);
    $this.$value2 = $value;
},
jl_Integer__init_0 = var_0 => {
    let var_1 = new jl_Integer();
    jl_Integer__init_(var_1, var_0);
    return var_1;
},
jl_Integer_toString1 = ($i, $radix) => {
    jl_Integer_$callClinit();
    if (!($radix >= 2 && $radix <= 36))
        $radix = 10;
    return ((jl_AbstractStringBuilder__init_3(20)).$append2($i, $radix)).$toString();
},
jl_Integer_hashCode0 = $value => {
    jl_Integer_$callClinit();
    return $value;
},
jl_Integer_toHexString = $i => {
    jl_Integer_$callClinit();
    return otci_IntegerUtil_toUnsignedLogRadixString($i, 4);
},
jl_Integer_toString = $i => {
    jl_Integer_$callClinit();
    return jl_Integer_toString1($i, 10);
},
jl_Integer_parseInt0 = ($s, $radix) => {
    jl_Integer_$callClinit();
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$length(), $radix);
    $rt_throw(jl_NumberFormatException__init_0($rt_s(13)));
},
jl_Integer_parseIntImpl = ($s, $beginIndex, $endIndex, $radix) => {
    let $negative, var$6, $value, $maxValue, var$9, $digit, var$11, var$12, var$13, var$14;
    jl_Integer_$callClinit();
    if ($beginIndex == $endIndex)
        $rt_throw(jl_NumberFormatException__init_0($rt_s(14)));
    if ($radix >= 2 && $radix <= 36) {
        a: {
            $negative = 0;
            switch ($s.$charAt($beginIndex)) {
                case 43:
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                case 45:
                    $negative = 1;
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                default:
            }
            var$6 = $beginIndex;
        }
        $value = 0;
        $maxValue = 1 + (2147483647 / $radix | 0) | 0;
        if (var$6 == $endIndex)
            $rt_throw(jl_NumberFormatException__init_2());
        while (true) {
            if (var$6 >= $endIndex) {
                if ($negative)
                    $value =  -$value | 0;
                return $value;
            }
            var$9 = var$6 + 1 | 0;
            $digit = jl_Integer_decodeDigit($s.$charAt(var$6));
            if ($digit < 0) {
                var$11 = new jl_NumberFormatException;
                var$12 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$13 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$13, $rt_s(15)), var$12);
                jl_NumberFormatException__init_(var$11, jl_StringBuilder_toString(var$13));
                $rt_throw(var$11);
            }
            if ($digit >= $radix) {
                var$12 = new jl_NumberFormatException;
                var$13 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$14 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$14, $rt_s(16)), $radix), $rt_s(17)), var$13);
                jl_NumberFormatException__init_(var$12, jl_StringBuilder_toString(var$14));
                $rt_throw(var$12);
            }
            if ($value > $maxValue)
                break;
            $value = $rt_imul($radix, $value) + $digit | 0;
            if ($value < 0) {
                if (var$9 == $endIndex && $value == (-2147483648) && $negative)
                    return (-2147483648);
                var$11 = new jl_NumberFormatException;
                var$12 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$13 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$13, $rt_s(18)), var$12);
                jl_NumberFormatException__init_(var$11, jl_StringBuilder_toString(var$13));
                $rt_throw(var$11);
            }
            var$6 = var$9;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(19)));
    }
    var$11 = new jl_NumberFormatException;
    var$12 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$12, $rt_s(20)), $radix);
    jl_NumberFormatException__init_(var$11, jl_StringBuilder_toString(var$12));
    $rt_throw(var$11);
},
jl_Integer_parseInt = $s => {
    jl_Integer_$callClinit();
    return jl_Integer_parseInt0($s, 10);
},
jl_Integer_valueOf = $i => {
    jl_Integer_$callClinit();
    if ($i >= (-128) && $i <= 127) {
        jl_Integer_ensureIntegerCache();
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_0($i);
},
jl_Integer_ensureIntegerCache = () => {
    let $j;
    jl_Integer_$callClinit();
    a: {
        if (jl_Integer_integerCache === null) {
            jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
            $j = 0;
            while (true) {
                if ($j >= jl_Integer_integerCache.data.length)
                    break a;
                jl_Integer_integerCache.data[$j] = jl_Integer__init_0($j - 128 | 0);
                $j = $j + 1 | 0;
            }
        }
    }
},
jl_Integer_intValue = $this => {
    return $this.$value2;
},
jl_Integer_longValue = $this => {
    return Long_fromInt($this.$value2);
},
jl_Integer_toString0 = $this => {
    return jl_Integer_toString($this.$value2);
},
jl_Integer_hashCode = $this => {
    return jl_Integer_hashCode0($this.$value2);
},
jl_Integer_equals = ($this, $other) => {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value2 == $this.$value2 ? 1 : 0;
},
jl_Integer_decodeDigit = $c => {
    jl_Integer_$callClinit();
    if ($c >= 48 && $c <= 57)
        return $c - 48 | 0;
    if ($c >= 97 && $c <= 122)
        return ($c - 97 | 0) + 10 | 0;
    if ($c >= 65 && $c <= 90)
        return ($c - 65 | 0) + 10 | 0;
    return (-1);
},
jl_Integer_compareTo = ($this, $other) => {
    return jl_Integer_compare($this.$value2, $other.$value2);
},
jl_Integer_compare = (var$1, var$2) => {
    jl_Integer_$callClinit();
    return $rt_compare(var$1, var$2);
},
jl_Integer_numberOfLeadingZeros = $i => {
    let $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16 | 0;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 >>> 8 | 0;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 >>> 4 | 0;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 >>> 2 | 0;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 >>> 1 | 0)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_numberOfTrailingZeros = $i => {
    let $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 << 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 << 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 << 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_rotateLeft = ($i, $distance) => {
    let var$3;
    jl_Integer_$callClinit();
    var$3 = $distance & 31;
    return $i << var$3 | ($i >>> (32 - var$3 | 0) | 0);
},
jl_Integer_signum = $i => {
    jl_Integer_$callClinit();
    return $i >> 31 | (( -$i | 0) >>> 31 | 0);
},
jl_Integer_compareTo0 = ($this, var$1) => {
    return $this.$compareTo(var$1);
},
jl_Integer__clinit_ = () => {
    jl_Integer_TYPE = $rt_cls($rt_intcls);
},
onnp_NostrMessageFragment = $rt_classWithoutFields(),
onnp_NostrMessageFragment__init_ = $this => {
    jl_Object__init_($this);
},
onnp_NostrMessageFragment_toString = $this => {
    let $platform, $map, var$3, var$4, var$5, $$je;
    a: {
        try {
            $platform = onp_NGEUtils_getPlatform();
            $map = $this.$toMap();
            var$3 = $platform.$toJSON($map);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    var$3 = jl_Class_getName(jl_Object_getClass($this));
    var$4 = jl_Integer_toHexString($this.$hashCode());
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, var$3), 64), var$4);
    return jl_StringBuilder_toString(var$5);
};
function onnp_NostrMessage() {
    onnp_NostrMessageFragment.call(this);
    this.$jsonCache = null;
}
let onnp_NostrMessage__init_ = $this => {
    onnp_NostrMessageFragment__init_($this);
    $this.$jsonCache = null;
},
onnp_NostrMessage_toMap = $this => {
    $rt_throw(jl_UnsupportedOperationException__init_0($rt_s(21)));
},
onnp_NostrMessage_toSerial = $this => {
    let $fragments, $serial, var$3, $fragment;
    $fragments = $this.$getFragments();
    $serial = ju_ArrayList__init_1($fragments.$size() + 1 | 0);
    $serial.$add1($this.$getPrefix());
    var$3 = $fragments.$iterator();
    while (var$3.$hasNext()) {
        $fragment = var$3.$next();
        if (!($fragment instanceof onnp_NostrMessageFragment))
            $serial.$add1($fragment);
        else
            $serial.$add1($fragment.$toMap());
    }
    return $serial;
},
onnp_NostrMessage_toJSON0 = $this => {
    let $platform, $serial;
    if ($this.$jsonCache === null) {
        $platform = onp_NGEUtils_getPlatform();
        $serial = $this.$toSerial();
        $this.$jsonCache = $platform.$toJSON($serial);
    }
    return $this.$jsonCache;
},
onnp_NostrMessage_toString = $this => {
    let var$1, var$2, var$3, $$je;
    a: {
        try {
            var$1 = $this.$toJSON0();
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    var$1 = jl_Class_getName(jl_Object_getClass($this));
    var$2 = jl_Integer_toHexString($this.$hashCode());
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, var$1), 64), var$2);
    return jl_StringBuilder_toString(var$3);
},
onnp_NostrMessage_toJSON = $message => {
    return $message.$toJSON0();
},
onnp_NostrMessage_toSerial0 = $message => {
    return $message.$toSerial();
},
onnp_NostrMessage_equals = ($this, $obj) => {
    let $that;
    if ($this === $obj)
        return 1;
    if ($obj !== null && jl_Object_getClass($this) === jl_Object_getClass($obj)) {
        $that = $obj;
        return ($this.$toSerial()).$equals($that.$toSerial());
    }
    return 0;
},
onnp_NostrMessage_hashCode = $this => {
    return ($this.$toSerial()).$hashCode();
},
onnp_NostrMessage_ack = ($relay, $id, $sentAt, $successCallback, $failureCallback) => {
    return onnp_NostrMessageAck__init_($relay, $id, $sentAt, $successCallback, $failureCallback);
},
onnp_NostrMessage_toJSON$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnp_NostrMessage_toJSON(var$1));
},
onnp_NostrMessage_toSerial$exported$1 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnp_NostrMessage_toSerial0(var$1);
},
onnp_NostrMessage_ack$exported$2 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_Nostr4jsModule_$callClinit();
    return onnp_NostrMessage_ack(var$1, $rt_str(var$2), var$3, var$4, var$5);
};
function onnpi_NostrOKMessage() {
    let a = this; onnp_NostrMessage.call(a);
    a.$eventId = null;
    a.$success = 0;
    a.$message1 = null;
}
let onnpi_NostrOKMessage__init_0 = ($this, $eventId, $success, $message) => {
    onnp_NostrMessage__init_($this);
    $this.$eventId = $eventId;
    $this.$success = $success;
    $this.$message1 = $message;
},
onnpi_NostrOKMessage__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onnpi_NostrOKMessage();
    onnpi_NostrOKMessage__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onnpi_NostrOKMessage_getEventId = $this => {
    return $this.$eventId;
},
onnpi_NostrOKMessage_isSuccess = $this => {
    return $this.$success;
},
onnpi_NostrOKMessage_getMessage = $this => {
    return $this.$message1;
},
onnpi_NostrOKMessage_throwException = $this => {
    if ($this.$success)
        return;
    $rt_throw(jl_Exception__init_0($this.$message1));
},
onnpi_NostrOKMessage_getPrefix = $this => {
    return $rt_s(22);
},
onnpi_NostrOKMessage_getFragments = $this => {
    return ju_List_of1($this.$message1);
},
onnpi_NostrOKMessage_parse = $data => {
    let $prefix, $eventId, $success, $message;
    $prefix = onp_NGEUtils_safeString($data.$get(0));
    if ($data.$size() >= 3 && $prefix.$equals($rt_s(22))) {
        $eventId = onp_NGEUtils_safeString($data.$get(1));
        $success = onp_NGEUtils_safeBool($data.$get(2));
        $message = $data.$size() <= 3 ? $rt_s(23) : onp_NGEUtils_safeString($data.$get(3));
        return onnpi_NostrOKMessage__init_($eventId, $success, $message);
    }
    return null;
},
onnpi_NostrOKMessage_isSuccess$exported$0 = var$1 => {
    return !!var$1.$isSuccess();
},
onnpi_NostrOKMessage_getMessage$exported$1 = var$1 => {
    return $rt_ustr(var$1.$getMessage());
},
onnpi_NostrOKMessage__init_$exported$2 = (var$1, var$2, var$3) => {
    return onnpi_NostrOKMessage__init_($rt_str(var$1), var$2 ? 1 : 0, $rt_str(var$3));
},
onnpi_NostrOKMessage_getEventId$exported$3 = var$1 => {
    return $rt_ustr(var$1.$getEventId());
},
onnpi_NostrOKMessage_throwException$exported$4 = var$1 => {
    var$1.$throwException();
},
onnpi_NostrOKMessage_parse$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnpi_NostrOKMessage_parse(var$1);
};
function jnc_CharsetEncoder() {
    let a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$replacement0 = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$status1 = 0;
}
let jnc_CharsetEncoder__init_0 = ($this, $cs, $averageBytesPerChar, $maxBytesPerChar, $replacement) => {
    jl_Object__init_($this);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction0 = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction0 = jnc_CodingErrorAction_REPORT;
    jnc_CharsetEncoder_checkReplacement($this, $replacement);
    $this.$charset0 = $cs;
    $this.$replacement0 = $replacement.$clone0();
    $this.$averageBytesPerChar = $averageBytesPerChar;
    $this.$maxBytesPerChar = $maxBytesPerChar;
},
jnc_CharsetEncoder__init_ = ($this, $cs, $averageBytesPerChar, $maxBytesPerChar) => {
    let var$4;
    var$4 = $rt_createByteArray(1);
    var$4.data[0] = 63;
    jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar, var$4);
},
jnc_CharsetEncoder_checkReplacement = ($this, $replacement) => {
    let var$2;
    if ($replacement !== null) {
        var$2 = $replacement.data.length;
        if (var$2 && var$2 >= $this.$maxBytesPerChar)
            return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(24)));
},
jnc_CharsetEncoder_onMalformedInput = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(25)));
},
jnc_CharsetEncoder_implOnMalformedInput = ($this, $newAction) => {
    return;
},
jnc_CharsetEncoder_onUnmappableCharacter = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(25)));
},
jnc_CharsetEncoder_implOnUnmappableCharacter = ($this, $newAction) => {
    return;
},
jnc_CharsetEncoder_encode = ($this, $in, $out, $endOfInput) => {
    let $result, $e, $remaining, $action, $$je;
    a: {
        if ($this.$status1 != 3) {
            if ($endOfInput)
                break a;
            if ($this.$status1 != 2)
                break a;
        }
        $rt_throw(jl_IllegalStateException__init_0());
    }
    $this.$status1 = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = $this.$encodeLoop($in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_0($e));
            } else {
                throw $$e;
            }
        }
        if ($result.$isUnderflow()) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if ($result.$isOverflow())
            break;
        $action = !$result.$isUnmappable() ? $this.$malformedAction0 : $this.$unmappableAction0;
        b: {
            jnc_CodingErrorAction_$callClinit();
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            if (jn_Buffer_remaining($out) < $this.$replacement0.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, $this.$replacement0);
        }
        $in.$position(jn_Buffer_position($in) + $result.$length() | 0);
    }
    return $result;
},
jnc_CharsetEncoder_encode0 = ($this, $in) => {
    let $output, $result, var$4;
    if (!jn_Buffer_remaining($in))
        return jn_ByteBuffer_allocate(0);
    jnc_CharsetEncoder_reset($this);
    $output = jn_ByteBuffer_allocate(jn_Buffer_remaining($in) * $this.$averageBytesPerChar | 0);
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        jnc_CoderResult_$callClinit();
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetEncoder_encode($this, $in, $output, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetEncoder_flush($this, $output);
        if (var$4.$isUnderflow())
            break;
        if (!var$4.$isOverflow())
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_ByteBuffer_flip($output);
    return $output;
},
jnc_CharsetEncoder_allocateMore = ($this, $buffer) => {
    let $array, var$3, $result;
    $array = jn_ByteBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf($array, var$3.length * 2 | 0);
    $result = jn_ByteBuffer_wrap0(var$3);
    $result.$position1(jn_Buffer_position($buffer));
    return $result;
},
jnc_CharsetEncoder_flush = ($this, $out) => {
    let $result;
    if ($this.$status1 != 2 && $this.$status1 != 4)
        $rt_throw(jl_IllegalStateException__init_0());
    $result = $this.$implFlush($out);
    jnc_CoderResult_$callClinit();
    if ($result === jnc_CoderResult_UNDERFLOW)
        $this.$status1 = 3;
    return $result;
},
jnc_CharsetEncoder_implFlush = ($this, $out) => {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
},
jnc_CharsetEncoder_reset = $this => {
    $this.$status1 = 0;
    $this.$implReset();
    return $this;
},
jnc_CharsetEncoder_implReset = $this => {
    return;
};
function jnci_BufferedEncoder() {
    let a = this; jnc_CharsetEncoder.call(a);
    a.$inArray0 = null;
    a.$outArray = null;
}
let jnci_BufferedEncoder__init_ = ($this, $cs, $averageBytesPerChar, $maxBytesPerChar) => {
    jnc_CharsetEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar);
    $this.$inArray0 = $rt_createCharArray(512);
    $this.$outArray = $rt_createByteArray(512);
},
jnci_BufferedEncoder_encodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, $result, $outPos, $outSize, $controller;
    $inArray = $this.$inArray0;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get0($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outPos = 0;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedEncoder$Controller__init_0($in, $out);
            $result = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
            $inPos = $controller.$inPosition;
            var$9 = $controller.$outPosition0;
            if ($result === null) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else if (!jn_Buffer_hasRemaining($out) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
            }
            $out.$put0($outArray, 0, var$9);
            if ($result !== null)
                break;
        }
    }
    $in.$position(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return $result;
};
function jnci_UTF16Encoder() {
    let a = this; jnci_BufferedEncoder.call(a);
    a.$bom = 0;
    a.$littleEndian0 = 0;
}
let jnci_UTF16Encoder__init_ = ($this, $cs, $bom, $littleEndian) => {
    jnci_BufferedEncoder__init_($this, $cs, 2.0, 4.0);
    $this.$bom = $bom;
    $this.$littleEndian0 = $littleEndian;
},
jnci_UTF16Encoder__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jnci_UTF16Encoder();
    jnci_UTF16Encoder__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jnci_UTF16Encoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let var$8, var$9, var$10;
    if ($this.$bom) {
        if (($outPos + 2 | 0) > $outSize) {
            if ($controller.$hasMoreOutput())
                var$8 = null;
            else {
                jnc_CoderResult_$callClinit();
                var$8 = jnc_CoderResult_OVERFLOW;
            }
            return var$8;
        }
        $this.$bom = 0;
        if (!$this.$littleEndian0) {
            var$9 = $outArray.data;
            var$10 = $outPos + 1 | 0;
            var$9[$outPos] = (-2);
            $outPos = var$10 + 1 | 0;
            var$9[var$10] = (-1);
        } else {
            var$9 = $outArray.data;
            var$10 = $outPos + 1 | 0;
            var$9[$outPos] = (-1);
            $outPos = var$10 + 1 | 0;
            var$9[var$10] = (-2);
        }
    }
    return !$this.$littleEndian0 ? jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
},
jnci_UTF16Encoder_arrayEncodeLE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $c, var$12, $next, var$14;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = var$10 + (-1) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = $c >> 8 << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreInput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                var$14 = var$12 + 1 | 0;
                var$9[var$12] = $c >> 8 << 24 >> 24;
                var$12 = var$14 + 1 | 0;
                var$9[var$14] = ($next & 255) << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = $next >> 8 << 24 >> 24;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
jnci_UTF16Encoder_arrayEncodeBE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $c, var$12, $next, var$14;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = var$10 + (-1) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = ($c & 255) << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreInput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                var$14 = var$12 + 1 | 0;
                var$9[var$12] = ($c & 255) << 24 >> 24;
                var$12 = var$14 + 1 | 0;
                var$9[var$14] = $next >> 8 << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = ($next & 255) << 24 >> 24;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
jm_BigDecimal$1 = $rt_classWithoutFields(),
jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode = null,
jm_BigDecimal$1_$callClinit = () => {
    jm_BigDecimal$1_$callClinit = $rt_eraseClinit(jm_BigDecimal$1);
    jm_BigDecimal$1__clinit_();
},
jm_BigDecimal$1__clinit_ = () => {
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode = $rt_createIntArray((jm_RoundingMode_values()).data.length);
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_UNNECESSARY)] = 1;
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_UP)] = 2;
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_DOWN)] = 3;
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_CEILING)] = 4;
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_FLOOR)] = 5;
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_HALF_UP)] = 6;
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_HALF_DOWN)] = 7;
    jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal(jm_RoundingMode_HALF_EVEN)] = 8;
},
juf_BiConsumer = $rt_classWithoutFields(0);
function onpt_TeaVMPlatform$1$compose$lambda$_7_0() {
    let a = this; jl_Object.call(a);
    a.$_025 = null;
    a.$_114 = null;
}
let onpt_TeaVMPlatform$1$compose$lambda$_7_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_025 = var$1;
    var$0.$_114 = var$2;
},
onpt_TeaVMPlatform$1$compose$lambda$_7_0__init_0 = (var_0, var_1) => {
    let var_2 = new onpt_TeaVMPlatform$1$compose$lambda$_7_0();
    onpt_TeaVMPlatform$1$compose$lambda$_7_0__init_(var_2, var_0, var_1);
    return var_2;
},
onpt_TeaVMPlatform$1$compose$lambda$_7_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$1$compose$lambda$_7_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$1$compose$lambda$_7_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$1_lambda$compose$5(var$0.$_025, var$0.$_114, var$1, var$2);
},
jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyAlpha__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyAlpha__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlpha_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90);
},
onnet_EventTracker = $rt_classWithoutFields(0);
function onnet_FailOnDoubleTracker() {
    jl_Object.call(this);
    this.$seenEvents1 = null;
}
let onnet_FailOnDoubleTracker__init_ = $this => {
    jl_Object__init_($this);
    $this.$seenEvents1 = ju_HashMap__init_();
},
onnet_FailOnDoubleTracker__init_0 = () => {
    let var_0 = new onnet_FailOnDoubleTracker();
    onnet_FailOnDoubleTracker__init_(var_0);
    return var_0;
},
onnet_FailOnDoubleTracker_seen = ($this, $event) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, $$je;
    var$2 = $this.$seenEvents1;
    jl_Object_monitorEnterSync(var$2);
    a: {
        b: {
            try {
                if ($this.$seenEvents1.$putIfAbsent(($event.$getIdentifier()).$id2, (jl_Exception__init_4()).$getStackTrace()) !== null)
                    break b;
                jl_Object_monitorExitSync(var$2);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$3 = $$je;
                break a;

            }
            return 0;
        }
        try {
            var$3 = new jl_RuntimeException;
            var$4 = ($event.$getIdentifier()).$id2;
            var$5 = $this.$seenEvents1;
            var$5 = onnet_FailOnDoubleTracker_stackTraceToString($this, var$5.$get1(($event.$getIdentifier()).$id2));
            var$6 = onnp_NostrMessage_toString($event);
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(26)), var$4), $rt_s(27)), var$5), $rt_s(28)), var$6);
            jl_RuntimeException__init_0(var$3, jl_StringBuilder_toString(var$7));
            $rt_throw(var$3);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$3 = $$je;

        }
    }
    jl_Object_monitorExitSync(var$2);
    $rt_throw(var$3);
},
onnet_FailOnDoubleTracker_stackTraceToString = ($this, $trace) => {
    let var$2, $sb, var$4, var$5, $traceElement, var$7, var$8;
    var$2 = $trace.data;
    $sb = jl_StringBuilder__init_();
    var$4 = var$2.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $traceElement = var$2[var$5];
        var$7 = jl_String_valueOf($traceElement);
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(29)), var$7);
        $sb.$append1(jl_StringBuilder_toString(var$8));
        var$5 = var$5 + 1 | 0;
    }
    return $sb.$toString();
},
onnet_FailOnDoubleTracker_clear = $this => {
    $this.$seenEvents1.$clear();
},
onnet_FailOnDoubleTracker_tuneFor = ($this, $sub) => {
    return;
},
onnet_FailOnDoubleTracker__init_$exported$0 = () => {
    return onnet_FailOnDoubleTracker__init_0();
},
onnet_FailOnDoubleTracker_seen$exported$1 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$seen(var$2);
},
onnet_FailOnDoubleTracker_stackTraceToString$exported$2 = (var$1, var$2) => {
    let var$3;
    var$3 = otji_JS_unwrapArray($rt_cls(jl_StackTraceElement), var$2);
    return $rt_ustr(onnet_FailOnDoubleTracker_stackTraceToString(var$1, var$3));
},
onnet_FailOnDoubleTracker_tuneFor$exported$3 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$tuneFor(var$2);
},
onnet_FailOnDoubleTracker_clear$exported$4 = var$1 => {
    var$1.$clear();
},
jus_BaseStream = $rt_classWithoutFields(0),
jus_IntStream = $rt_classWithoutFields(0),
jusi_SimpleIntStreamImpl = $rt_classWithoutFields(),
jusi_SimpleIntStreamImpl__init_ = $this => {
    jl_Object__init_($this);
},
jusi_SimpleIntStreamImpl_toArray = $this => {
    let $estimatedSize, $array, $consumer, var$4, $list, $i;
    $estimatedSize = $this.$estimateSize();
    if ($estimatedSize >= 0) {
        $array = $rt_createIntArray($estimatedSize);
        $consumer = jusi_SimpleIntStreamImpl$ArrayFillingConsumer__init_0($array);
        while ($this.$next0($consumer)) {
        }
        var$4 = $array.data;
        if ($consumer.$index5 < var$4.length)
            $array = ju_Arrays_copyOf2($array, $consumer.$index5);
        return $array;
    }
    $list = ju_ArrayList__init_();
    while (true) {
        ju_Objects_requireNonNull0($list);
        if (!$this.$next0(jusi_SimpleIntStreamImpl$toArray$lambda$_16_0__init_0($list)))
            break;
    }
    $array = $rt_createIntArray($list.$size());
    $i = 0;
    while (true) {
        var$4 = $array.data;
        if ($i >= var$4.length)
            break;
        var$4[$i] = ($list.$get($i)).$intValue();
        $i = $i + 1 | 0;
    }
    return $array;
},
onnrt_NostrTURN$Listener = $rt_classWithoutFields(0);
function cjj_Tree() {
    let a = this; jl_Object.call(a);
    a.$dyn_tree = null;
    a.$max_code = 0;
    a.$stat_desc = null;
}
let cjj_Tree_extra_lbits = null,
cjj_Tree_extra_dbits = null,
cjj_Tree_extra_blbits = null,
cjj_Tree_bl_order = null,
cjj_Tree__dist_code = null,
cjj_Tree__length_code = null,
cjj_Tree_base_length = null,
cjj_Tree_base_dist = null,
cjj_Tree_$callClinit = () => {
    cjj_Tree_$callClinit = $rt_eraseClinit(cjj_Tree);
    cjj_Tree__clinit_();
},
cjj_Tree__init_0 = $this => {
    cjj_Tree_$callClinit();
    jl_Object__init_($this);
},
cjj_Tree__init_ = () => {
    let var_0 = new cjj_Tree();
    cjj_Tree__init_0(var_0);
    return var_0;
},
cjj_Tree_d_code = $dist => {
    cjj_Tree_$callClinit();
    return $dist < 256 ? cjj_Tree__dist_code.data[$dist] : cjj_Tree__dist_code.data[256 + ($dist >>> 7 | 0) | 0];
},
cjj_Tree_gen_bitlen = ($this, $s) => {
    let $tree, $stree, $extra, $base, $max_length, $overflow, $bits, var$9, $h, $n, var$12, var$13, var$14, var$15, $xbits, $f, $m;
    $tree = $this.$dyn_tree;
    $stree = $this.$stat_desc.$static_tree;
    $extra = $this.$stat_desc.$extra_bits;
    $base = $this.$stat_desc.$extra_base;
    $max_length = $this.$stat_desc.$max_length;
    $overflow = 0;
    $bits = 0;
    while ($bits <= 15) {
        $s.$bl_count.data[$bits] = 0;
        $bits = $bits + 1 | 0;
    }
    var$9 = $tree.data;
    var$9[($s.$heap.data[$s.$heap_max] * 2 | 0) + 1 | 0] = 0;
    $h = $s.$heap_max + 1 | 0;
    while ($h < 573) {
        $n = $s.$heap.data[$h];
        var$12 = $n * 2 | 0;
        var$13 = var$12 + 1 | 0;
        var$14 = var$9[(var$9[var$13] * 2 | 0) + 1 | 0] + 1 | 0;
        if (var$14 > $max_length) {
            $overflow = $overflow + 1 | 0;
            var$14 = $max_length;
        }
        var$9[var$13] = var$14 << 16 >> 16;
        if ($n <= $this.$max_code) {
            var$15 = $s.$bl_count.data;
            var$15[var$14] = (var$15[var$14] + 1 | 0) << 16 >> 16;
            $xbits = 0;
            if ($n >= $base)
                $xbits = $extra.data[$n - $base | 0];
            $f = var$9[var$12];
            $s.$opt_len = $s.$opt_len + $rt_imul($f, var$14 + $xbits | 0) | 0;
            if ($stree !== null) {
                var$15 = $stree.data;
                $s.$static_len = $s.$static_len + $rt_imul($f, var$15[var$13] + $xbits | 0) | 0;
            }
        }
        $h = $h + 1 | 0;
    }
    if (!$overflow)
        return;
    while (true) {
        var$13 = $max_length - 1 | 0;
        while (!$s.$bl_count.data[var$13]) {
            var$13 = var$13 + (-1) | 0;
        }
        var$15 = $s.$bl_count.data;
        var$15[var$13] = (var$15[var$13] - 1 | 0) << 16 >> 16;
        var$15 = $s.$bl_count.data;
        var$13 = var$13 + 1 | 0;
        var$15[var$13] = (var$15[var$13] + 2 | 0) << 16 >> 16;
        var$15 = $s.$bl_count.data;
        var$15[$max_length] = (var$15[$max_length] - 1 | 0) << 16 >> 16;
        $overflow = $overflow + (-2) | 0;
        if ($overflow <= 0)
            break;
    }
    while ($max_length) {
        $n = $s.$bl_count.data[$max_length];
        while ($n) {
            var$15 = $s.$heap.data;
            $h = $h + (-1) | 0;
            $m = var$15[$h];
            if ($m > $this.$max_code)
                continue;
            var$13 = $m * 2 | 0;
            var$14 = var$13 + 1 | 0;
            if (var$9[var$14] != $max_length) {
                $s.$opt_len = Long_lo(Long_add(Long_fromInt($s.$opt_len), Long_mul(Long_sub(Long_fromInt($max_length), Long_fromInt(var$9[var$14])), Long_fromInt(var$9[var$13]))));
                var$9[var$14] = $max_length << 16 >> 16;
            }
            $n = $n + (-1) | 0;
        }
        $max_length = $max_length + (-1) | 0;
    }
},
cjj_Tree_build_tree = ($this, $s) => {
    let $tree, $stree, $node, $max_code, $n, var$7, var$8, var$9, var$10, var$11, var$12, $m, var$14, var$15, $node_0;
    $tree = $this.$dyn_tree;
    $stree = $this.$stat_desc.$static_tree;
    $node = $this.$stat_desc.$elems;
    $max_code = (-1);
    $s.$heap_len = 0;
    $s.$heap_max = 573;
    $n = 0;
    while ($n < $node) {
        var$7 = $tree.data;
        var$8 = $n * 2 | 0;
        if (!var$7[var$8])
            var$7[var$8 + 1 | 0] = 0;
        else {
            var$7 = $s.$heap.data;
            var$8 = $s.$heap_len + 1 | 0;
            $s.$heap_len = var$8;
            var$7[var$8] = $n;
            $s.$depth.data[$n] = 0;
            $max_code = $n;
        }
        $n = $n + 1 | 0;
    }
    while ($s.$heap_len < 2) {
        var$7 = $s.$heap;
        var$8 = $s.$heap_len + 1 | 0;
        $s.$heap_len = var$8;
        if ($max_code >= 2)
            var$9 = 0;
        else {
            $max_code = $max_code + 1 | 0;
            var$9 = $max_code;
        }
        var$10 = $tree.data;
        var$7.data[var$8] = var$9;
        var$8 = var$9 * 2 | 0;
        var$10[var$8] = 1;
        $s.$depth.data[var$9] = 0;
        $s.$opt_len = $s.$opt_len - 1 | 0;
        if ($stree === null)
            continue;
        var$7 = $stree.data;
        $s.$static_len = $s.$static_len - var$7[var$8 + 1 | 0] | 0;
    }
    $this.$max_code = $max_code;
    var$9 = $s.$heap_len / 2 | 0;
    while (var$9 >= 1) {
        cjj_Deflate_pqdownheap($s, $tree, var$9);
        var$9 = var$9 + (-1) | 0;
    }
    while (true) {
        var$11 = $tree.data;
        var$12 = $s.$heap.data[1];
        var$10 = $s.$heap.data;
        var$7 = $s.$heap.data;
        var$9 = $s.$heap_len;
        $s.$heap_len = var$9 - 1 | 0;
        var$10[1] = var$7[var$9];
        cjj_Deflate_pqdownheap($s, $tree, 1);
        $m = $s.$heap.data[1];
        var$7 = $s.$heap.data;
        var$8 = $s.$heap_max - 1 | 0;
        $s.$heap_max = var$8;
        var$7[var$8] = var$12;
        var$7 = $s.$heap.data;
        var$8 = $s.$heap_max - 1 | 0;
        $s.$heap_max = var$8;
        var$7[var$8] = $m;
        var$8 = $node * 2 | 0;
        var$9 = var$12 * 2 | 0;
        var$14 = var$11[var$9];
        var$15 = $m * 2 | 0;
        var$11[var$8] = (var$14 + var$11[var$15] | 0) << 16 >> 16;
        $s.$depth.data[$node] = (jl_Math_max($s.$depth.data[var$12], $s.$depth.data[$m]) + 1 | 0) << 24 >> 24;
        var$8 = var$9 + 1 | 0;
        var$9 = var$15 + 1 | 0;
        var$12 = $node << 16 >> 16;
        var$11[var$9] = var$12;
        var$11[var$8] = var$12;
        var$7 = $s.$heap.data;
        $node_0 = $node + 1 | 0;
        var$7[1] = $node;
        cjj_Deflate_pqdownheap($s, $tree, 1);
        if ($s.$heap_len < 2)
            break;
        $node = $node_0;
    }
    var$10 = $s.$heap.data;
    var$8 = $s.$heap_max - 1 | 0;
    $s.$heap_max = var$8;
    var$10[var$8] = $s.$heap.data[1];
    cjj_Tree_gen_bitlen($this, $s);
    cjj_Tree_gen_codes($tree, $max_code, $s.$bl_count, $s.$next_code);
},
cjj_Tree_gen_codes = ($tree, $max_code, $bl_count, $next_code) => {
    let var$5, $code, $bits, $n, var$9, var$10, $len, var$12;
    cjj_Tree_$callClinit();
    var$5 = $next_code.data;
    $code = 0;
    var$5[0] = 0;
    $bits = 1;
    while ($bits <= 15) {
        $code = ($code + $bl_count.data[$bits - 1 | 0] | 0) << 1 << 16 >> 16;
        var$5[$bits] = $code;
        $bits = $bits + 1 | 0;
    }
    $n = 0;
    while ($n <= $max_code) {
        var$9 = $tree.data;
        var$10 = $n * 2 | 0;
        $len = var$9[var$10 + 1 | 0];
        if ($len) {
            var$12 = var$5[$len];
            var$5[$len] = (var$12 + 1 | 0) << 16 >> 16;
            var$9[var$10] = cjj_Tree_bi_reverse(var$12, $len) << 16 >> 16;
        }
        $n = $n + 1 | 0;
    }
},
cjj_Tree_bi_reverse = ($code, $len) => {
    let $res, var$4;
    cjj_Tree_$callClinit();
    $res = 0;
    while (true) {
        var$4 = $res | $code & 1;
        $code = $code >>> 1 | 0;
        $res = var$4 << 1;
        $len = $len + (-1) | 0;
        if ($len <= 0)
            break;
    }
    return $res >>> 1 | 0;
},
cjj_Tree__clinit_ = () => {
    cjj_Tree_extra_lbits = $rt_createIntArrayFromData([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]);
    cjj_Tree_extra_dbits = $rt_createIntArrayFromData([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]);
    cjj_Tree_extra_blbits = $rt_createIntArrayFromData([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]);
    cjj_Tree_bl_order = $rt_createByteArrayFromData([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
    cjj_Tree__dist_code = $rt_createByteArrayFromData([0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
    13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
    27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
    29, 29, 29, 29, 29]);
    cjj_Tree__length_code = $rt_createByteArrayFromData([0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23,
    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
    27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28]);
    cjj_Tree_base_length = $rt_createIntArrayFromData([0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0]);
    cjj_Tree_base_dist = $rt_createIntArrayFromData([0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384, 24576]);
},
jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyWord__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyWord__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyWord_computeValue = $this => {
    return ((((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90)).$add0(48, 57)).$add(95);
},
jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord),
jur_AbstractCharClass$LazyNonWord__init_ = $this => {
    jur_AbstractCharClass$LazyWord__init_($this);
},
jur_AbstractCharClass$LazyNonWord__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonWord_computeValue = $this => {
    let $chCl;
    $chCl = (jur_AbstractCharClass$LazyWord_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function jur_AbstractSet() {
    let a = this; jl_Object.call(a);
    a.$next5 = null;
    a.$isSecondPassVisited = 0;
    a.$index6 = null;
    a.$type2 = 0;
}
let jur_AbstractSet_counter = 0,
jur_AbstractSet_$callClinit = () => {
    jur_AbstractSet_$callClinit = $rt_eraseClinit(jur_AbstractSet);
    jur_AbstractSet__clinit_();
},
jur_AbstractSet__init_ = $this => {
    let var$1;
    jur_AbstractSet_$callClinit();
    jl_Object__init_($this);
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    $this.$index6 = jl_Integer_toString(var$1);
},
jur_AbstractSet__init_0 = ($this, $n) => {
    let var$2;
    jur_AbstractSet_$callClinit();
    jl_Object__init_($this);
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    $this.$index6 = jl_Integer_toString(var$2);
    $this.$next5 = $n;
},
jur_AbstractSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $length;
    $length = $matchResult.$getRightBound();
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_AbstractSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_AbstractSet_setType = ($this, $type) => {
    $this.$type2 = $type;
},
jur_AbstractSet_getType = $this => {
    return $this.$type2;
},
jur_AbstractSet_getQualifiedName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$index6;
    var$2 = $this.$getName();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(var$3, 60), var$1), 58), var$2), 62);
    return jl_StringBuilder_toString(var$3);
},
jur_AbstractSet_toString = $this => {
    return $this.$getQualifiedName();
},
jur_AbstractSet_getNext = $this => {
    return $this.$next5;
},
jur_AbstractSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_AbstractSet_first = ($this, $set) => {
    return 1;
},
jur_AbstractSet_processBackRefReplacement = $this => {
    return null;
},
jur_AbstractSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next5 !== null) {
        if (!$this.$next5.$isSecondPassVisited) {
            $set = $this.$next5.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next5.$isSecondPassVisited = 1;
                $this.$next5 = $set;
            }
            $this.$next5.$processSecondPass();
        } else if ($this.$next5 instanceof jur_SingleSet && $this.$next5.$fSet.$isBackReferenced)
            $this.$next5 = $this.$next5.$next5;
    }
},
jur_AbstractSet__clinit_ = () => {
    jur_AbstractSet_counter = 1;
};
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount0 = 0;
}
let jur_LeafSet__init_0 = ($this, $next) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$charCount0 = 1;
    $this.$setType(1);
},
jur_LeafSet__init_ = $this => {
    jur_AbstractSet__init_($this);
    $this.$charCount0 = 1;
},
jur_LeafSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    if (($stringIndex + $this.$charCount() | 0) > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next5.$matches($stringIndex + $shift | 0, $testString, $matchResult);
},
jur_LeafSet_charCount = $this => {
    return $this.$charCount0;
},
jur_LeafSet_hasConsumed = ($this, $mr) => {
    return 1;
};
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string2 = null;
}
let jur_CISequenceSet__init_ = ($this, $substring) => {
    jur_LeafSet__init_($this);
    $this.$string2 = $substring.$toString();
    $this.$charCount0 = $substring.$length();
},
jur_CISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_CISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= $this.$string2.$length())
            return $this.$string2.$length();
        var$4 = $this.$string2.$charAt($i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != $testString.$charAt(var$5)) {
            var$6 = $this.$string2;
            if (jur_Pattern_getSupplement(var$6.$charAt($i)) != $testString.$charAt(var$5))
                break;
        }
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string2;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(30)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jl_CharSequence = $rt_classWithoutFields(0),
ju_Map = $rt_classWithoutFields(0),
ju_Map_getOrDefault = ($this, $key, $defaultValue) => {
    if ($this.$containsKey($key))
        $defaultValue = $this.$get1($key);
    return $defaultValue;
},
ju_Map_putIfAbsent = ($this, $key, $value) => {
    let $v;
    $v = $this.$get1($key);
    if ($v === null)
        $v = $this.$put1($key, $value);
    return $v;
},
ju_Map_computeIfAbsent = ($this, $key, $mappingFunction) => {
    let $v, $newValue;
    ju_Objects_requireNonNull0($mappingFunction);
    $v = $this.$get1($key);
    if ($v !== null)
        return $v;
    $newValue = $mappingFunction.$apply($key);
    if ($newValue !== null)
        $this.$put1($key, $newValue);
    return $newValue;
},
ju_Map_of = () => {
    return ju_Collections_emptyMap();
},
ju_SequencedMap = $rt_classWithoutFields(0),
jtt_TemporalField = $rt_classWithoutFields(0);
function jur_AbstractCharClass$LazyCategory() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category1 = 0;
    a.$mayContainSupplCodepoints2 = 0;
    a.$containsAllSurrogates0 = 0;
}
let jur_AbstractCharClass$LazyCategory__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints2 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategory__init_1 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints2 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategory_computeValue = $this => {
    let $chCl;
    $chCl = jur_UnicodeCategory__init_0($this.$category1);
    if ($this.$containsAllSurrogates0)
        $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints2;
    return $chCl;
},
otji_JSWrapper$Helper = $rt_classWithoutFields(),
otji_JSWrapper$Helper_hashCodes = null,
otji_JSWrapper$Helper_wrappers = null,
otji_JSWrapper$Helper_stringWrappers = null,
otji_JSWrapper$Helper_numberWrappers = null,
otji_JSWrapper$Helper_undefinedWrapper = null,
otji_JSWrapper$Helper_stringFinalizationRegistry = null,
otji_JSWrapper$Helper_numberFinalizationRegistry = null,
otji_JSWrapper$Helper_hashCodeGen = 0,
otji_JSWrapper$Helper_$callClinit = () => {
    otji_JSWrapper$Helper_$callClinit = $rt_eraseClinit(otji_JSWrapper$Helper);
    otji_JSWrapper$Helper__clinit_();
},
otji_JSWrapper$Helper_lambda$static$1 = $token => {
    let var$2, var$3;
    otji_JSWrapper$Helper_$callClinit();
    var$2 = otji_JSWrapper$Helper_numberWrappers;
    var$3 = otji_JSWrapper_unwrap($token);
    var$2.delete(var$3);
},
otji_JSWrapper$Helper_lambda$static$0 = $token => {
    let var$2, var$3;
    otji_JSWrapper$Helper_$callClinit();
    var$2 = otji_JSWrapper$Helper_stringWrappers;
    var$3 = otji_JSWrapper_unwrap($token);
    var$2.delete(var$3);
},
otji_JSWrapper$Helper__clinit_ = () => {
    let var$1;
    otji_JSWrapper$Helper_hashCodes = new WeakMap();
    var$1 = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new WeakMap();
    otji_JSWrapper$Helper_wrappers = var$1;
    var$1 = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    otji_JSWrapper$Helper_stringWrappers = var$1;
    var$1 = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    otji_JSWrapper$Helper_numberWrappers = var$1;
    if (otji_JSWrapper$Helper_stringWrappers === null)
        var$1 = null;
    else {
        var$1 = otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_0();
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_stringFinalizationRegistry = var$1;
    if (otji_JSWrapper$Helper_numberWrappers === null)
        var$1 = null;
    else {
        var$1 = otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_0();
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_numberFinalizationRegistry = var$1;
},
juc_Callable = $rt_classWithoutFields(0);
function onnrt_NostrTURN$loop$lambda$_9_0() {
    jl_Object.call(this);
    this.$_08 = null;
}
let onnrt_NostrTURN$loop$lambda$_9_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_08 = var$1;
},
onnrt_NostrTURN$loop$lambda$_9_0__init_0 = var_0 => {
    let var_1 = new onnrt_NostrTURN$loop$lambda$_9_0();
    onnrt_NostrTURN$loop$lambda$_9_0__init_(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$loop$lambda$_9_0_call = var$0 => {
    return onnrt_NostrTURN_lambda$loop$7(var$0.$_08);
};
function jur_FSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex0 = 0;
}
let jur_FSet_posFSet = null,
jur_FSet_$callClinit = () => {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
},
jur_FSet__init_ = ($this, $groupIndex) => {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_($this);
    $this.$groupIndex0 = $groupIndex;
},
jur_FSet__init_0 = var_0 => {
    let var_1 = new jur_FSet();
    jur_FSet__init_(var_1, var_0);
    return var_1;
},
jur_FSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $end, $shift;
    $end = $matchResult.$getEnd($this.$groupIndex0);
    $matchResult.$setEnd($this.$groupIndex0, $stringIndex);
    $shift = $this.$next5.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $matchResult.$setEnd($this.$groupIndex0, $end);
    return $shift;
},
jur_FSet_getGroupIndex = $this => {
    return $this.$groupIndex0;
},
jur_FSet_getName = $this => {
    return $rt_s(31);
},
jur_FSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FSet__clinit_ = () => {
    jur_FSet_posFSet = jur_FSet$PossessiveFSet__init_0();
},
jur_BehindFSet = $rt_classWithoutFields(jur_FSet),
jur_BehindFSet__init_ = ($this, $groupIndex) => {
    jur_FSet__init_($this, $groupIndex);
},
jur_BehindFSet__init_0 = var_0 => {
    let var_1 = new jur_BehindFSet();
    jur_BehindFSet__init_(var_1, var_0);
    return var_1;
},
jur_BehindFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr, $rightBound;
    $gr = $this.$getGroupIndex();
    $rightBound = $matchResult.$getConsumed($gr);
    if ($rightBound != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
},
jur_BehindFSet_getName = $this => {
    return $rt_s(32);
};
function jtf_DateTimeFormatterBuilder() {
    let a = this; jl_Object.call(a);
    a.$active = null;
    a.$parent0 = null;
    a.$printerParsers = null;
    a.$optional0 = 0;
    a.$padNextWidth = 0;
    a.$padNextChar = 0;
    a.$valueParserIndex = 0;
}
let jtf_DateTimeFormatterBuilder_QUERY_REGION_ONLY = null,
jtf_DateTimeFormatterBuilder_FIELD_MAP = null,
jtf_DateTimeFormatterBuilder_LENGTH_SORT = null,
jtf_DateTimeFormatterBuilder_$callClinit = () => {
    jtf_DateTimeFormatterBuilder_$callClinit = $rt_eraseClinit(jtf_DateTimeFormatterBuilder);
    jtf_DateTimeFormatterBuilder__clinit_();
},
jtf_DateTimeFormatterBuilder__init_0 = $this => {
    jtf_DateTimeFormatterBuilder_$callClinit();
    jl_Object__init_($this);
    $this.$active = $this;
    $this.$printerParsers = ju_ArrayList__init_();
    $this.$valueParserIndex = (-1);
    $this.$parent0 = null;
    $this.$optional0 = 0;
},
jtf_DateTimeFormatterBuilder__init_ = () => {
    let var_0 = new jtf_DateTimeFormatterBuilder();
    jtf_DateTimeFormatterBuilder__init_0(var_0);
    return var_0;
},
jtf_DateTimeFormatterBuilder__init_2 = ($this, $parent, $optional) => {
    jtf_DateTimeFormatterBuilder_$callClinit();
    jl_Object__init_($this);
    $this.$active = $this;
    $this.$printerParsers = ju_ArrayList__init_();
    $this.$valueParserIndex = (-1);
    $this.$parent0 = $parent;
    $this.$optional0 = $optional;
},
jtf_DateTimeFormatterBuilder__init_1 = (var_0, var_1) => {
    let var_2 = new jtf_DateTimeFormatterBuilder();
    jtf_DateTimeFormatterBuilder__init_2(var_2, var_0, var_1);
    return var_2;
},
jtf_DateTimeFormatterBuilder_parseCaseSensitive = $this => {
    jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit();
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$SettingsParser_SENSITIVE);
    return $this;
},
jtf_DateTimeFormatterBuilder_parseCaseInsensitive = $this => {
    jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit();
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$SettingsParser_INSENSITIVE);
    return $this;
},
jtf_DateTimeFormatterBuilder_parseLenient = $this => {
    jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit();
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$SettingsParser_LENIENT);
    return $this;
},
jtf_DateTimeFormatterBuilder_appendValue = ($this, $field, $width) => {
    let $pp, var$4, var$5;
    ju_Objects_requireNonNull($field, $rt_s(33));
    if ($width >= 1 && $width <= 19) {
        $pp = new jtf_DateTimeFormatterBuilder$NumberPrinterParser;
        jtf_SignStyle_$callClinit();
        jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_($pp, $field, $width, $width, jtf_SignStyle_NOT_NEGATIVE);
        jtf_DateTimeFormatterBuilder_appendValue1($this, $pp);
        return $this;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(34)), $width);
    jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
    $rt_throw(var$4);
},
jtf_DateTimeFormatterBuilder_appendValue0 = ($this, $field, $minWidth, $maxWidth, $signStyle) => {
    let $pp, var$6, var$7, var$8;
    if ($minWidth == $maxWidth) {
        jtf_SignStyle_$callClinit();
        if ($signStyle === jtf_SignStyle_NOT_NEGATIVE)
            return jtf_DateTimeFormatterBuilder_appendValue($this, $field, $maxWidth);
    }
    ju_Objects_requireNonNull($field, $rt_s(33));
    ju_Objects_requireNonNull($signStyle, $rt_s(35));
    if ($minWidth >= 1 && $minWidth <= 19) {
        if ($maxWidth >= 1 && $maxWidth <= 19) {
            if ($maxWidth >= $minWidth) {
                $pp = jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_2($field, $minWidth, $maxWidth, $signStyle);
                jtf_DateTimeFormatterBuilder_appendValue1($this, $pp);
                return $this;
            }
            var$6 = new jl_IllegalArgumentException;
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(36)), $maxWidth), $rt_s(37)), $minWidth);
            jl_IllegalArgumentException__init_1(var$6, jl_StringBuilder_toString(var$7));
            $rt_throw(var$6);
        }
        var$6 = new jl_IllegalArgumentException;
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(38)), $maxWidth);
        jl_IllegalArgumentException__init_1(var$6, jl_StringBuilder_toString(var$7));
        $rt_throw(var$6);
    }
    var$7 = new jl_IllegalArgumentException;
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(39)), $minWidth);
    jl_IllegalArgumentException__init_1(var$7, jl_StringBuilder_toString(var$8));
    $rt_throw(var$7);
},
jtf_DateTimeFormatterBuilder_appendValue1 = ($this, $pp) => {
    let var$2, var$3, $activeValueParser, $basePP;
    a: {
        if ($this.$active.$valueParserIndex >= 0) {
            var$2 = $this.$active.$printerParsers;
            var$3 = $this.$active.$valueParserIndex;
            if (var$2.$get(var$3) instanceof jtf_DateTimeFormatterBuilder$NumberPrinterParser) {
                b: {
                    $activeValueParser = $this.$active.$valueParserIndex;
                    $basePP = $this.$active.$printerParsers.$get($activeValueParser);
                    if ($pp.$minWidth == $pp.$maxWidth) {
                        var$2 = $pp.$signStyle;
                        jtf_SignStyle_$callClinit();
                        if (var$2 === jtf_SignStyle_NOT_NEGATIVE) {
                            var$2 = $basePP.$withSubsequentWidth($pp.$maxWidth);
                            jtf_DateTimeFormatterBuilder_appendInternal($this, $pp.$withFixedWidth());
                            $this.$active.$valueParserIndex = $activeValueParser;
                            break b;
                        }
                    }
                    var$2 = $basePP.$withFixedWidth();
                    $this.$active.$valueParserIndex = jtf_DateTimeFormatterBuilder_appendInternal($this, $pp);
                }
                $this.$active.$printerParsers.$set0($activeValueParser, var$2);
                break a;
            }
        }
        $this.$active.$valueParserIndex = jtf_DateTimeFormatterBuilder_appendInternal($this, $pp);
    }
    return $this;
},
jtf_DateTimeFormatterBuilder_appendFraction = ($this, $field, $minWidth, $maxWidth, $decimalPoint) => {
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$FractionPrinterParser__init_0($field, $minWidth, $maxWidth, $decimalPoint));
    return $this;
},
jtf_DateTimeFormatterBuilder_appendText = ($this, $field, $textLookup) => {
    let $copy, $map, $store, $provider;
    ju_Objects_requireNonNull($field, $rt_s(33));
    ju_Objects_requireNonNull($textLookup, $rt_s(40));
    $copy = ju_LinkedHashMap__init_0($textLookup);
    jtf_TextStyle_$callClinit();
    $map = ju_Collections_singletonMap(jtf_TextStyle_FULL, $copy);
    $store = jtf_SimpleDateTimeTextProvider$LocaleStore__init_0($map);
    $provider = jtf_DateTimeFormatterBuilder$1__init_0($this, $store);
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$TextPrinterParser__init_0($field, jtf_TextStyle_FULL, $provider));
    return $this;
},
jtf_DateTimeFormatterBuilder_appendInstant = $this => {
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$InstantPrinterParser__init_0((-2)));
    return $this;
},
jtf_DateTimeFormatterBuilder_appendOffsetId = $this => {
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit();
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_INSTANCE_ID);
    return $this;
},
jtf_DateTimeFormatterBuilder_appendOffset = ($this, $pattern, $noOffsetText) => {
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__init_0($noOffsetText, $pattern));
    return $this;
},
jtf_DateTimeFormatterBuilder_appendZoneRegionId = $this => {
    let var$1;
    var$1 = new jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser;
    jtf_DateTimeFormatterBuilder_$callClinit();
    jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser__init_(var$1, jtf_DateTimeFormatterBuilder_QUERY_REGION_ONLY, $rt_s(41));
    jtf_DateTimeFormatterBuilder_appendInternal($this, var$1);
    return $this;
},
jtf_DateTimeFormatterBuilder_appendLiteral = ($this, $literal) => {
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser__init_($literal));
    return $this;
},
jtf_DateTimeFormatterBuilder_appendLiteral0 = ($this, $literal) => {
    ju_Objects_requireNonNull($literal, $rt_s(42));
    if ($literal.$length() > 0) {
        if ($literal.$length() != 1)
            jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser__init_0($literal));
        else
            jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser__init_($literal.$charAt(0)));
    }
    return $this;
},
jtf_DateTimeFormatterBuilder_append = ($this, $formatter) => {
    ju_Objects_requireNonNull($formatter, $rt_s(43));
    jtf_DateTimeFormatterBuilder_appendInternal($this, jtf_DateTimeFormatter_toPrinterParser($formatter, 0));
    return $this;
},
jtf_DateTimeFormatterBuilder_optionalStart = $this => {
    $this.$active.$valueParserIndex = (-1);
    $this.$active = jtf_DateTimeFormatterBuilder__init_1($this.$active, 1);
    return $this;
},
jtf_DateTimeFormatterBuilder_optionalEnd = $this => {
    let $cpp;
    if ($this.$active.$parent0 === null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(44)));
    if ($this.$active.$printerParsers.$size() <= 0)
        $this.$active = $this.$active.$parent0;
    else {
        $cpp = jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_1($this.$active.$printerParsers, $this.$active.$optional0);
        $this.$active = $this.$active.$parent0;
        jtf_DateTimeFormatterBuilder_appendInternal($this, $cpp);
    }
    return $this;
},
jtf_DateTimeFormatterBuilder_appendInternal = ($this, $pp) => {
    let var$2;
    ju_Objects_requireNonNull($pp, $rt_s(45));
    if ($this.$active.$padNextWidth <= 0)
        var$2 = $pp;
    else {
        var$2 = $pp === null ? $pp : jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator__init_0($pp, $this.$active.$padNextWidth, $this.$active.$padNextChar);
        $this.$active.$padNextWidth = 0;
        $this.$active.$padNextChar = 0;
    }
    $this.$active.$printerParsers.$add1(var$2);
    $this.$active.$valueParserIndex = (-1);
    return $this.$active.$printerParsers.$size() - 1 | 0;
},
jtf_DateTimeFormatterBuilder_toFormatter0 = $this => {
    return jtf_DateTimeFormatterBuilder_toFormatter1($this, ju_Locale_getDefault());
},
jtf_DateTimeFormatterBuilder_toFormatter1 = ($this, $locale) => {
    let $pp, var$3, var$4;
    ju_Objects_requireNonNull($locale, $rt_s(46));
    while ($this.$active.$parent0 !== null) {
        jtf_DateTimeFormatterBuilder_optionalEnd($this);
    }
    $pp = jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_1($this.$printerParsers, 0);
    var$3 = new jtf_DateTimeFormatter;
    jtf_DecimalStyle_$callClinit();
    var$4 = jtf_DecimalStyle_STANDARD;
    jtf_ResolverStyle_$callClinit();
    jtf_DateTimeFormatter__init_(var$3, $pp, $locale, var$4, jtf_ResolverStyle_SMART, null, null, null);
    return var$3;
},
jtf_DateTimeFormatterBuilder_toFormatter = ($this, $style) => {
    return jtf_DateTimeFormatter_withResolverStyle(jtf_DateTimeFormatterBuilder_toFormatter0($this), $style);
},
jtf_DateTimeFormatterBuilder_lambda$static$1 = ($str1, $str2) => {
    jtf_DateTimeFormatterBuilder_$callClinit();
    return $str1.$length() == $str2.$length() ? $str1.$compareTo0($str2) : $str1.$length() - $str2.$length() | 0;
},
jtf_DateTimeFormatterBuilder__clinit_ = () => {
    let var$1, var$2, var$3;
    jtf_DateTimeFormatterBuilder_QUERY_REGION_ONLY = jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0__init_0();
    jtf_DateTimeFormatterBuilder_FIELD_MAP = ju_HashMap__init_();
    var$1 = jtf_DateTimeFormatterBuilder_FIELD_MAP;
    var$2 = jl_Character_valueOf(71);
    jtt_ChronoField_$callClinit();
    var$1.$put1(var$2, jtt_ChronoField_ERA);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(121), jtt_ChronoField_YEAR_OF_ERA);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(117), jtt_ChronoField_YEAR);
    var$3 = jtf_DateTimeFormatterBuilder_FIELD_MAP;
    var$1 = jl_Character_valueOf(81);
    jtt_IsoFields_$callClinit();
    var$3.$put1(var$1, jtt_IsoFields_QUARTER_OF_YEAR);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(113), jtt_IsoFields_QUARTER_OF_YEAR);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(77), jtt_ChronoField_MONTH_OF_YEAR);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(76), jtt_ChronoField_MONTH_OF_YEAR);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(68), jtt_ChronoField_DAY_OF_YEAR);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(100), jtt_ChronoField_DAY_OF_MONTH);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(70), jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(69), jtt_ChronoField_DAY_OF_WEEK);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(99), jtt_ChronoField_DAY_OF_WEEK);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(101), jtt_ChronoField_DAY_OF_WEEK);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(97), jtt_ChronoField_AMPM_OF_DAY);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(72), jtt_ChronoField_HOUR_OF_DAY);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(107), jtt_ChronoField_CLOCK_HOUR_OF_DAY);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(75), jtt_ChronoField_HOUR_OF_AMPM);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(104), jtt_ChronoField_CLOCK_HOUR_OF_AMPM);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(109), jtt_ChronoField_MINUTE_OF_HOUR);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(115), jtt_ChronoField_SECOND_OF_MINUTE);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(83), jtt_ChronoField_NANO_OF_SECOND);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(65), jtt_ChronoField_MILLI_OF_DAY);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(110), jtt_ChronoField_NANO_OF_SECOND);
    jtf_DateTimeFormatterBuilder_FIELD_MAP.$put1(jl_Character_valueOf(78), jtt_ChronoField_NANO_OF_DAY);
    jtf_DateTimeFormatterBuilder_LENGTH_SORT = jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1__init_0();
},
ji_Flushable = $rt_classWithoutFields(0),
ji_OutputStream = $rt_classWithoutFields(),
ji_OutputStream__init_ = $this => {
    jl_Object__init_($this);
};
function ji_ByteArrayOutputStream() {
    let a = this; ji_OutputStream.call(a);
    a.$buf = null;
    a.$count2 = 0;
}
let ji_ByteArrayOutputStream__init_1 = $this => {
    ji_ByteArrayOutputStream__init_($this, 32);
},
ji_ByteArrayOutputStream__init_0 = () => {
    let var_0 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_1(var_0);
    return var_0;
},
ji_ByteArrayOutputStream__init_ = ($this, $size) => {
    ji_OutputStream__init_($this);
    $this.$buf = $rt_createByteArray($size);
},
ji_ByteArrayOutputStream__init_2 = var_0 => {
    let var_1 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_(var_1, var_0);
    return var_1;
},
ji_ByteArrayOutputStream_write = ($this, $b, $off, $len) => {
    let $i, var$5, var$6, var$7, var$8;
    ji_ByteArrayOutputStream_ensureCapacity($this, $this.$count2 + $len | 0);
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $this.$buf.data;
        var$7 = $this.$count2;
        $this.$count2 = var$7 + 1 | 0;
        var$8 = $off + 1 | 0;
        var$6[var$7] = var$5[$off];
        $i = $i + 1 | 0;
        $off = var$8;
    }
},
ji_ByteArrayOutputStream_ensureCapacity = ($this, $capacity) => {
    let var$2;
    if ($this.$buf.data.length < $capacity) {
        var$2 = jl_Math_max($capacity, ($this.$buf.data.length * 3 | 0) / 2 | 0);
        $this.$buf = ju_Arrays_copyOf($this.$buf, var$2);
    }
},
ji_ByteArrayOutputStream_toByteArray = $this => {
    return ju_Arrays_copyOf($this.$buf, $this.$count2);
};
function jur_JointSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$children0 = null;
    a.$fSet = null;
    a.$groupIndex = 0;
}
let jur_JointSet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_JointSet__init_2 = () => {
    let var_0 = new jur_JointSet();
    jur_JointSet__init_(var_0);
    return var_0;
},
jur_JointSet__init_0 = ($this, $children, $fSet) => {
    jur_AbstractSet__init_($this);
    $this.$children0 = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$getGroupIndex();
},
jur_JointSet__init_1 = (var_0, var_1) => {
    let var_2 = new jur_JointSet();
    jur_JointSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_JointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $e, $shift;
    if ($this.$children0 === null)
        return (-1);
    $start = $matchResult.$getStart($this.$groupIndex);
    $matchResult.$setStart($this.$groupIndex, $stringIndex);
    $size = $this.$children0.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setStart($this.$groupIndex, $start);
            return (-1);
        }
        $e = $this.$children0.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_JointSet_setNext = ($this, $next) => {
    $this.$fSet.$setNext($next);
},
jur_JointSet_getName = $this => {
    return $rt_s(47);
},
jur_JointSet_first = ($this, $set) => {
    let $i;
    a: {
        if ($this.$children0 !== null) {
            $i = $this.$children0.$iterator();
            while (true) {
                if (!$i.$hasNext())
                    break a;
                if (!($i.$next()).$first($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
},
jur_JointSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3;
    a: {
        if ($matchResult.$getEnd($this.$groupIndex) >= 0) {
            var$2 = $matchResult.$getStart($this.$groupIndex);
            var$3 = $this.$groupIndex;
            if (var$2 == $matchResult.$getEnd(var$3)) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
},
jur_JointSet_processSecondPass = $this => {
    let $childrenSize, $i, $child, $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    a: {
        if ($this.$children0 !== null) {
            $childrenSize = $this.$children0.$size();
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = $this.$children0.$get($i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    $this.$children0.$remove0($i);
                    $this.$children0.$add2($i, $set);
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$next5 !== null)
        jur_AbstractSet_processSecondPass($this);
};
function jur_LowHighSurrogateRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt3 = 0;
}
let jur_LowHighSurrogateRangeSet__init_ = ($this, $surrChars) => {
    jur_JointSet__init_($this);
    $this.$surrChars = $surrChars.$getInstance();
    $this.$alt3 = $surrChars.$alt;
},
jur_LowHighSurrogateRangeSet__init_0 = var_0 => {
    let var_1 = new jur_LowHighSurrogateRangeSet();
    jur_LowHighSurrogateRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_LowHighSurrogateRangeSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_LowHighSurrogateRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    var$6 = $stringIndex + 1 | 0;
    var$7 = $rt_compare(var$6, $strLength);
    if (var$7 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $ch = $testString.$charAt($stringIndex);
    if (!$this.$surrChars.$contains0($ch))
        return (-1);
    if (jl_Character_isHighSurrogate($ch)) {
        if (var$7 < 0) {
            $low = $testString.$charAt(var$6);
            if (jl_Character_isLowSurrogate($low))
                return (-1);
        }
    } else if (jl_Character_isLowSurrogate($ch) && $stringIndex > $startStr) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    return $this.$next5.$matches(var$6, $testString, $matchResult);
},
jur_LowHighSurrogateRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt3 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$surrChars.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(50)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
juf_Function = $rt_classWithoutFields(0);
function onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0() {
    let a = this; jl_Object.call(a);
    a.$_068 = null;
    a.$_137 = null;
    a.$_217 = null;
    a.$_37 = null;
}
let onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_068 = var$1;
    var$0.$_137 = var$2;
    var$0.$_217 = var$3;
    var$0.$_37 = var$4;
},
onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0();
    onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$sendAnswer$13(var$0.$_068, var$0.$_137, var$0.$_217, var$0.$_37, var$1);
},
jtt_TemporalAccessor = $rt_classWithoutFields(0),
jtt_TemporalAccessor_range = ($this, $field) => {
    let var$2, var$3, var$4;
    if (!($field instanceof jtt_ChronoField))
        return $field.$rangeRefinedBy($this);
    if ($this.$isSupported($field))
        return $field.$range();
    var$2 = new jtt_UnsupportedTemporalTypeException;
    var$3 = jl_String_valueOf($field);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(51)), var$3);
    jtt_UnsupportedTemporalTypeException__init_(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jtt_TemporalAccessor_get = ($this, $field) => {
    return jtt_ValueRange_checkValidIntValue($this.$range0($field), $this.$getLong($field), $field);
},
jtt_TemporalAccessor_query = ($this, $query) => {
    if ($query !== jtt_TemporalQueries_zoneId() && $query !== jtt_TemporalQueries_chronology() && $query !== jtt_TemporalQueries_precision())
        return $query.$queryFrom($this);
    return null;
},
jtt_Temporal = $rt_classWithoutFields(0),
jtt_TemporalAdjuster = $rt_classWithoutFields(0),
jtc_ChronoLocalDateTime = $rt_classWithoutFields(),
jtc_ChronoLocalDateTime_DATE_TIME_COMPARATOR = null,
jtc_ChronoLocalDateTime_$callClinit = () => {
    jtc_ChronoLocalDateTime_$callClinit = $rt_eraseClinit(jtc_ChronoLocalDateTime);
    jtc_ChronoLocalDateTime__clinit_();
},
jtc_ChronoLocalDateTime__init_ = $this => {
    jtc_ChronoLocalDateTime_$callClinit();
    jl_Object__init_($this);
},
jtc_ChronoLocalDateTime_getChronology = $this => {
    return ($this.$toLocalDate()).$getChronology();
},
jtc_ChronoLocalDateTime_query = ($this, $query) => {
    if ($query === jtt_TemporalQueries_chronology())
        return $this.$getChronology();
    if ($query === jtt_TemporalQueries_precision()) {
        jtt_ChronoUnit_$callClinit();
        return jtt_ChronoUnit_NANOS;
    }
    if ($query === jtt_TemporalQueries_localDate())
        return jt_LocalDate_ofEpochDay(($this.$toLocalDate()).$toEpochDay());
    if ($query === jtt_TemporalQueries_localTime())
        return $this.$toLocalTime();
    if ($query !== jtt_TemporalQueries_zone() && $query !== jtt_TemporalQueries_zoneId() && $query !== jtt_TemporalQueries_offset())
        return jtt_TemporalAccessor_query($this, $query);
    return null;
},
jtc_ChronoLocalDateTime_toInstant = ($this, $offset) => {
    return jt_Instant_ofEpochSecond0($this.$toEpochSecond($offset), Long_fromInt(jt_LocalTime_getNano($this.$toLocalTime())));
},
jtc_ChronoLocalDateTime_toEpochSecond = ($this, $offset) => {
    let $epochDay, $secs, var$4;
    ju_Objects_requireNonNull($offset, $rt_s(52));
    $epochDay = ($this.$toLocalDate()).$toEpochDay();
    $secs = Long_add(Long_mul($epochDay, Long_fromInt(86400)), Long_fromInt(jt_LocalTime_toSecondOfDay($this.$toLocalTime())));
    var$4 = Long_sub($secs, Long_fromInt(jt_ZoneOffset_getTotalSeconds($offset)));
    return var$4;
},
jtc_ChronoLocalDateTime_compareTo = ($this, $other) => {
    let $cmp;
    $cmp = ($this.$toLocalDate()).$compareTo1($other.$toLocalDate());
    if (!$cmp) {
        $cmp = jt_LocalTime_compareTo($this.$toLocalTime(), $other.$toLocalTime());
        if (!$cmp)
            $cmp = ($this.$getChronology()).$compareTo3($other.$getChronology());
    }
    return $cmp;
},
jtc_ChronoLocalDateTime_isAfter = ($this, $other) => {
    let $thisEpDay, $otherEpDay, var$4;
    a: {
        b: {
            $thisEpDay = ($this.$toLocalDate()).$toEpochDay();
            $otherEpDay = ($other.$toLocalDate()).$toEpochDay();
            var$4 = Long_compare($thisEpDay, $otherEpDay);
            if (var$4 <= 0) {
                if (var$4)
                    break b;
                if (Long_le(jt_LocalTime_toNanoOfDay($this.$toLocalTime()), jt_LocalTime_toNanoOfDay($other.$toLocalTime())))
                    break b;
            }
            var$4 = 1;
            break a;
        }
        var$4 = 0;
    }
    return var$4;
},
jtc_ChronoLocalDateTime_isBefore = ($this, $other) => {
    let $thisEpDay, $otherEpDay, var$4;
    a: {
        b: {
            $thisEpDay = ($this.$toLocalDate()).$toEpochDay();
            $otherEpDay = ($other.$toLocalDate()).$toEpochDay();
            var$4 = Long_compare($thisEpDay, $otherEpDay);
            if (var$4 >= 0) {
                if (var$4)
                    break b;
                if (Long_ge(jt_LocalTime_toNanoOfDay($this.$toLocalTime()), jt_LocalTime_toNanoOfDay($other.$toLocalTime())))
                    break b;
            }
            var$4 = 1;
            break a;
        }
        var$4 = 0;
    }
    return var$4;
},
jtc_ChronoLocalDateTime__clinit_ = () => {
    let var$1, var$2;
    var$1 = jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0__init_0();
    var$1 = ju_Comparator_comparingLong(var$1);
    var$2 = jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1__init_0();
    jtc_ChronoLocalDateTime_DATE_TIME_COMPARATOR = var$1.$thenComparingLong(var$2);
};
function jt_LocalDateTime() {
    let a = this; jtc_ChronoLocalDateTime.call(a);
    a.$date0 = null;
    a.$time0 = null;
}
let jt_LocalDateTime_MIN = null,
jt_LocalDateTime_MAX = null,
jt_LocalDateTime_$callClinit = () => {
    jt_LocalDateTime_$callClinit = $rt_eraseClinit(jt_LocalDateTime);
    jt_LocalDateTime__clinit_();
},
jt_LocalDateTime_of0 = ($year, $month, $dayOfMonth, $hour, $minute, $second, $nanoOfSecond) => {
    let $date, $time;
    jt_LocalDateTime_$callClinit();
    $date = jt_LocalDate_of($year, $month, $dayOfMonth);
    $time = jt_LocalTime_of0($hour, $minute, $second, $nanoOfSecond);
    return jt_LocalDateTime__init_($date, $time);
},
jt_LocalDateTime_of = ($date, $time) => {
    jt_LocalDateTime_$callClinit();
    ju_Objects_requireNonNull($date, $rt_s(53));
    ju_Objects_requireNonNull($time, $rt_s(54));
    return jt_LocalDateTime__init_($date, $time);
},
jt_LocalDateTime_ofEpochSecond = ($epochSecond, $nanoOfSecond, $offset) => {
    let $localSecond, $localEpochDay, $secsOfDay, $date, $time;
    jt_LocalDateTime_$callClinit();
    ju_Objects_requireNonNull($offset, $rt_s(52));
    $localSecond = Long_add($epochSecond, Long_fromInt(jt_ZoneOffset_getTotalSeconds($offset)));
    $localEpochDay = jl_Math_floorDiv($localSecond, 86400);
    $secsOfDay = jl_Math_floorMod($localSecond, 86400);
    $date = jt_LocalDate_ofEpochDay($localEpochDay);
    $time = jt_LocalTime_ofSecondOfDay0(Long_fromInt($secsOfDay), $nanoOfSecond);
    return jt_LocalDateTime__init_($date, $time);
},
jt_LocalDateTime__init_0 = ($this, $date, $time) => {
    jt_LocalDateTime_$callClinit();
    jtc_ChronoLocalDateTime__init_($this);
    $this.$date0 = $date;
    $this.$time0 = $time;
},
jt_LocalDateTime__init_ = (var_0, var_1) => {
    let var_2 = new jt_LocalDateTime();
    jt_LocalDateTime__init_0(var_2, var_0, var_1);
    return var_2;
},
jt_LocalDateTime_with = ($this, $newDate, $newTime) => {
    if ($this.$date0 === $newDate && $this.$time0 === $newTime)
        return $this;
    return jt_LocalDateTime__init_($newDate, $newTime);
},
jt_LocalDateTime_isSupported = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return $field !== null && $field.$isSupportedBy($this) ? 1 : 0;
    return !$field.$isDateBased() && !$field.$isTimeBased() ? 0 : 1;
},
jt_LocalDateTime_range = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return $field.$rangeRefinedBy($this);
    return !$field.$isTimeBased() ? jt_LocalDate_range($this.$date0, $field) : jt_LocalTime_range($this.$time0, $field);
},
jt_LocalDateTime_get = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return jtt_TemporalAccessor_get($this, $field);
    return !$field.$isTimeBased() ? jt_LocalDate_get($this.$date0, $field) : jt_LocalTime_get($this.$time0, $field);
},
jt_LocalDateTime_getLong = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return $field.$getFrom($this);
    return !$field.$isTimeBased() ? jt_LocalDate_getLong($this.$date0, $field) : jt_LocalTime_getLong($this.$time0, $field);
},
jt_LocalDateTime_getYear = $this => {
    return jt_LocalDate_getYear($this.$date0);
},
jt_LocalDateTime_getSecond = $this => {
    return jt_LocalTime_getSecond($this.$time0);
},
jt_LocalDateTime_getNano = $this => {
    return jt_LocalTime_getNano($this.$time0);
},
jt_LocalDateTime_plusDays = ($this, $days) => {
    let $newDate;
    $newDate = jt_LocalDate_plusDays($this.$date0, $days);
    return jt_LocalDateTime_with($this, $newDate, $this.$time0);
},
jt_LocalDateTime_plusSeconds = ($this, $seconds) => {
    return jt_LocalDateTime_plusWithOverflow($this, $this.$date0, Long_ZERO, Long_ZERO, $seconds, Long_ZERO, 1);
},
jt_LocalDateTime_plusWithOverflow = ($this, $newDate, $hours, $minutes, $seconds, $nanos, $sign) => {
    let $totDays, var$8, var$9, $totNanos, $curNoD, $newNoD, $newTime;
    if (Long_eq(Long_or(Long_or(Long_or($hours, $minutes), $seconds), $nanos), Long_ZERO))
        return jt_LocalDateTime_with($this, $newDate, $this.$time0);
    $totDays = Long_add(Long_add(Long_add(Long_div($nanos, Long_create(2437873664, 20116)), Long_div($seconds, Long_fromInt(86400))), Long_div($minutes, Long_fromInt(1440))), Long_div($hours, Long_fromInt(24)));
    var$8 = Long_fromInt($sign);
    var$9 = Long_mul($totDays, var$8);
    $totNanos = Long_add(Long_add(Long_add(Long_rem($nanos, Long_create(2437873664, 20116)), Long_mul(Long_rem($seconds, Long_fromInt(86400)), Long_fromInt(1000000000))), Long_mul(Long_rem($minutes, Long_fromInt(1440)), Long_create(4165425152, 13))), Long_mul(Long_rem($hours, Long_fromInt(24)), Long_create(817405952, 838)));
    $curNoD = jt_LocalTime_toNanoOfDay($this.$time0);
    var$8 = Long_add(Long_mul($totNanos, var$8), $curNoD);
    var$9 = Long_add(var$9, jl_Math_floorDiv0(var$8, Long_create(2437873664, 20116)));
    $newNoD = jl_Math_floorMod0(var$8, Long_create(2437873664, 20116));
    $newTime = Long_ne($newNoD, $curNoD) ? jt_LocalTime_ofNanoOfDay($newNoD) : $this.$time0;
    return jt_LocalDateTime_with($this, jt_LocalDate_plusDays($newDate, var$9), $newTime);
},
jt_LocalDateTime_query = ($this, $query) => {
    if ($query !== jtt_TemporalQueries_localDate())
        return jtc_ChronoLocalDateTime_query($this, $query);
    return jt_LocalDateTime_toLocalDate($this);
},
jt_LocalDateTime_atZone = ($this, $zone) => {
    return jt_ZonedDateTime_of($this, $zone);
},
jt_LocalDateTime_toLocalDate = $this => {
    return $this.$date0;
},
jt_LocalDateTime_toLocalTime = $this => {
    return $this.$time0;
},
jt_LocalDateTime_compareTo = ($this, $other) => {
    if (!($other instanceof jt_LocalDateTime))
        return jtc_ChronoLocalDateTime_compareTo($this, $other);
    return jt_LocalDateTime_compareTo0($this, $other);
},
jt_LocalDateTime_compareTo0 = ($this, $other) => {
    let $cmp;
    $cmp = jt_LocalDate_compareTo0($this.$date0, jt_LocalDateTime_toLocalDate($other));
    if (!$cmp)
        $cmp = jt_LocalTime_compareTo($this.$time0, jt_LocalDateTime_toLocalTime($other));
    return $cmp;
},
jt_LocalDateTime_isAfter = ($this, $other) => {
    if (!($other instanceof jt_LocalDateTime))
        return jtc_ChronoLocalDateTime_isAfter($this, $other);
    return jt_LocalDateTime_compareTo0($this, $other) <= 0 ? 0 : 1;
},
jt_LocalDateTime_isBefore = ($this, $other) => {
    if (!($other instanceof jt_LocalDateTime))
        return jtc_ChronoLocalDateTime_isBefore($this, $other);
    return jt_LocalDateTime_compareTo0($this, $other) >= 0 ? 0 : 1;
},
jt_LocalDateTime_equals = ($this, $obj) => {
    let $other;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jt_LocalDateTime))
        return 0;
    $other = $obj;
    return jt_LocalDate_equals($this.$date0, $other.$date0) && jt_LocalTime_equals($this.$time0, $other.$time0) ? 1 : 0;
},
jt_LocalDateTime_hashCode = $this => {
    return jt_LocalDate_hashCode($this.$date0) ^ jt_LocalTime_hashCode($this.$time0);
},
jt_LocalDateTime_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jt_LocalDate_toString($this.$date0);
    var$2 = jt_LocalTime_toString($this.$time0);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, var$1), 84), var$2);
    return jl_StringBuilder_toString(var$3);
},
jt_LocalDateTime_atZone0 = ($this, var$1) => {
    return jt_LocalDateTime_atZone($this, var$1);
},
jt_LocalDateTime_toLocalDate0 = $this => {
    return jt_LocalDateTime_toLocalDate($this);
},
jt_LocalDateTime_compareTo1 = ($this, var$1) => {
    return jt_LocalDateTime_compareTo($this, var$1);
},
jt_LocalDateTime__clinit_ = () => {
    let var$1;
    jt_LocalDate_$callClinit();
    var$1 = jt_LocalDate_MIN;
    jt_LocalTime_$callClinit();
    jt_LocalDateTime_MIN = jt_LocalDateTime_of(var$1, jt_LocalTime_MIN);
    jt_LocalDateTime_MAX = jt_LocalDateTime_of(jt_LocalDate_MAX, jt_LocalTime_MAX);
};
function jl_Throwable() {
    let a = this; jl_Object.call(a);
    a.$message2 = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
let jl_Throwable__init_ = $this => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
},
jl_Throwable__init_6 = () => {
    let var_0 = new jl_Throwable();
    jl_Throwable__init_(var_0);
    return var_0;
},
jl_Throwable__init_2 = ($this, $message) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message2 = $message;
},
jl_Throwable__init_3 = var_0 => {
    let var_1 = new jl_Throwable();
    jl_Throwable__init_2(var_1, var_0);
    return var_1;
},
jl_Throwable__init_0 = ($this, $message, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message2 = $message;
    $this.$cause = $cause;
},
jl_Throwable__init_5 = (var_0, var_1) => {
    let var_2 = new jl_Throwable();
    jl_Throwable__init_0(var_2, var_0, var_1);
    return var_2;
},
jl_Throwable__init_1 = ($this, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$cause = $cause;
},
jl_Throwable__init_4 = var_0 => {
    let var_1 = new jl_Throwable();
    jl_Throwable__init_1(var_1, var_0);
    return var_1;
},
jl_Throwable_fillInStackTrace = $this => {
    return $this;
},
jl_Throwable_initNativeException = $this => {
    $rt_fillNativeException($this);
},
jl_Throwable_ensureStackTrace = $this => {
    return;
},
jl_Throwable_getMessage = $this => {
    return $this.$message2;
},
jl_Throwable_getLocalizedMessage = $this => {
    return $this.$getMessage();
},
jl_Throwable_getCause = $this => {
    return $this.$cause === $this ? null : $this.$cause;
},
jl_Throwable_toString = $this => {
    let $message, var$2, var$3, var$4;
    $message = $this.$getLocalizedMessage();
    var$2 = jl_Class_getName(jl_Object_getClass($this));
    if ($message === null)
        var$3 = $rt_s(23);
    else {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(17)), $message);
        var$3 = jl_StringBuilder_toString(var$3);
    }
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$2), var$3);
    return jl_StringBuilder_toString(var$4);
},
jl_Throwable_initCause = ($this, $cause) => {
    if ($this.$cause !== $this && $this.$cause !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(55)));
    if ($cause !== $this) {
        $this.$cause = $cause;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(56)));
},
jl_Throwable_printStackTrace0 = $this => {
    $this.$printStackTrace(jl_System_err());
},
jl_Throwable_printStackTrace = ($this, $stream) => {
    let $message, var$3, var$4, var$5, var$6, $element;
    $stream.$print(jl_Class_getName(jl_Object_getClass($this)));
    $message = $this.$getLocalizedMessage();
    if ($message !== null) {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(17)), $message);
        $stream.$print(jl_StringBuilder_toString(var$3));
    }
    a: {
        $stream.$println();
        jl_Throwable_ensureStackTrace($this);
        if ($this.$stackTrace !== null) {
            var$4 = $this.$stackTrace.data;
            var$5 = var$4.length;
            var$6 = 0;
            while (true) {
                if (var$6 >= var$5)
                    break a;
                $element = var$4[var$6];
                $stream.$print($rt_s(57));
                $stream.$println0($element);
                var$6 = var$6 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        $stream.$print($rt_s(58));
        $this.$cause.$printStackTrace($stream);
    }
},
jl_Throwable_getStackTrace = $this => {
    jl_Throwable_ensureStackTrace($this);
    return $this.$stackTrace === null ? $rt_createArray(jl_StackTraceElement, 0) : $this.$stackTrace.$clone0();
},
jl_Exception = $rt_classWithoutFields(jl_Throwable),
jl_Exception__init_1 = $this => {
    jl_Throwable__init_($this);
},
jl_Exception__init_4 = () => {
    let var_0 = new jl_Exception();
    jl_Exception__init_1(var_0);
    return var_0;
},
jl_Exception__init_3 = ($this, $message, $cause) => {
    jl_Throwable__init_0($this, $message, $cause);
},
jl_Exception__init_5 = (var_0, var_1) => {
    let var_2 = new jl_Exception();
    jl_Exception__init_3(var_2, var_0, var_1);
    return var_2;
},
jl_Exception__init_ = ($this, $message) => {
    jl_Throwable__init_2($this, $message);
},
jl_Exception__init_0 = var_0 => {
    let var_1 = new jl_Exception();
    jl_Exception__init_(var_1, var_0);
    return var_1;
},
jl_Exception__init_2 = ($this, $cause) => {
    jl_Throwable__init_1($this, $cause);
},
jl_Exception__init_6 = var_0 => {
    let var_1 = new jl_Exception();
    jl_Exception__init_2(var_1, var_0);
    return var_1;
},
onnu_Bech32$Bech32Exception = $rt_classWithoutFields(jl_Exception),
onnu_Bech32$Bech32Exception__init_ = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
onnu_Bech32$Bech32Exception__init_0 = var_0 => {
    let var_1 = new onnu_Bech32$Bech32Exception();
    onnu_Bech32$Bech32Exception__init_(var_1, var_0);
    return var_1;
},
onnu_Bech32$Bech32Exception__init_$exported$0 = var$1 => {
    return onnu_Bech32$Bech32Exception__init_0($rt_str(var$1));
},
onnu_Bech32$Bech32EncodingException = $rt_classWithoutFields(onnu_Bech32$Bech32Exception),
onnu_Bech32$Bech32EncodingException__init_ = ($this, $message) => {
    onnu_Bech32$Bech32Exception__init_($this, $message);
},
onnu_Bech32$Bech32EncodingException__init_0 = var_0 => {
    let var_1 = new onnu_Bech32$Bech32EncodingException();
    onnu_Bech32$Bech32EncodingException__init_(var_1, var_0);
    return var_1;
},
jnci_AsciiEncoder = $rt_classWithoutFields(jnci_BufferedEncoder),
jnci_AsciiEncoder__init_ = ($this, $cs) => {
    jnci_BufferedEncoder__init_($this, $cs, 1.0, 1.0);
},
jnci_AsciiEncoder__init_0 = var_0 => {
    let var_1 = new jnci_AsciiEncoder();
    jnci_AsciiEncoder__init_(var_1, var_0);
    return var_1;
},
jnci_AsciiEncoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            if (jl_Character_isHighSurrogate($c)) {
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput(2)) {
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $next = var$10[var$9];
                if (!jl_Character_isLowSurrogate($next)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(2);
                break a;
            }
            if (jl_Character_isLowSurrogate($c))
                $result = jnc_CoderResult_malformedForLength(1);
            if ($c >= 128) {
                $result = jnc_CoderResult_unmappableForLength(1);
                var$9 = var$9 + (-1) | 0;
                break a;
            }
            var$10 = $outArray.data;
            var$13 = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = var$13;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
},
jl_Record = $rt_classWithoutFields(),
jl_Record__init_ = $this => {
    jl_Object__init_($this);
};
function onns_SdanTaxonomy$TreeNode() {
    let a = this; jl_Record.call(a);
    a.$taxonomy0 = null;
    a.$children1 = null;
}
let onns_SdanTaxonomy$TreeNode__init_0 = ($this, $taxonomy, $children) => {
    jl_Record__init_($this);
    $this.$taxonomy0 = $taxonomy;
    $this.$children1 = $children;
},
onns_SdanTaxonomy$TreeNode__init_ = (var_0, var_1) => {
    let var_2 = new onns_SdanTaxonomy$TreeNode();
    onns_SdanTaxonomy$TreeNode__init_0(var_2, var_0, var_1);
    return var_2;
},
onns_SdanTaxonomy$TreeNode_toString = $this => {
    return ((((((jl_StringBuilder__init_1($rt_s(59))).$append1($rt_s(60))).$append($this.$taxonomy0)).$append1($rt_s(61))).$append($this.$children1)).$append1($rt_s(62))).$toString();
},
onns_SdanTaxonomy$TreeNode_hashCode = $this => {
    return ((31 + ju_Objects_hashCode($this.$taxonomy0) | 0) * 31 | 0) + ju_Objects_hashCode($this.$children1) | 0;
},
onns_SdanTaxonomy$TreeNode_equals = ($this, $o) => {
    let var$2, var$3;
    if ($this === $o)
        var$2 = 1;
    else if ($o !== null && jl_Object_getClass($o) === $rt_cls(onns_SdanTaxonomy$TreeNode)) {
        var$3 = $o;
        var$2 = !ju_Objects_equals($this.$taxonomy0, var$3.$taxonomy0) ? 0 : ju_Objects_equals($this.$children1, var$3.$children1) ? 1 : 0;
    } else
        var$2 = 0;
    return var$2;
},
onns_SdanTaxonomy$TreeNode_taxonomy = $this => {
    return $this.$taxonomy0;
},
onns_SdanTaxonomy$TreeNode_children = $this => {
    return $this.$children1;
},
onns_SdanTaxonomy$TreeNode_children$exported$0 = var$1 => {
    return onns_SdanTaxonomy$TreeNode_children(var$1);
},
onns_SdanTaxonomy$TreeNode_toString$exported$1 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$TreeNode_toString(var$1));
},
onns_SdanTaxonomy$TreeNode_equals$exported$2 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onns_SdanTaxonomy$TreeNode_equals(var$1, var$2);
},
onns_SdanTaxonomy$TreeNode_taxonomy$exported$3 = var$1 => {
    return onns_SdanTaxonomy$TreeNode_taxonomy(var$1);
},
onns_SdanTaxonomy$TreeNode_hashCode$exported$4 = var$1 => {
    return onns_SdanTaxonomy$TreeNode_hashCode(var$1);
},
onns_SdanTaxonomy$TreeNode__init_$exported$5 = (var$1, var$2) => {
    return onns_SdanTaxonomy$TreeNode__init_(var$1, var$2);
},
jl_RuntimeException = $rt_classWithoutFields(jl_Exception),
jl_RuntimeException__init_ = $this => {
    jl_Exception__init_1($this);
},
jl_RuntimeException__init_6 = () => {
    let var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_(var_0);
    return var_0;
},
jl_RuntimeException__init_2 = ($this, $message, $cause) => {
    jl_Exception__init_3($this, $message, $cause);
},
jl_RuntimeException__init_1 = (var_0, var_1) => {
    let var_2 = new jl_RuntimeException();
    jl_RuntimeException__init_2(var_2, var_0, var_1);
    return var_2;
},
jl_RuntimeException__init_0 = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
jl_RuntimeException__init_5 = var_0 => {
    let var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_0(var_1, var_0);
    return var_1;
},
jl_RuntimeException__init_4 = ($this, $cause) => {
    jl_Exception__init_2($this, $cause);
},
jl_RuntimeException__init_3 = var_0 => {
    let var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_4(var_1, var_0);
    return var_1;
},
jl_ClassCastException = $rt_classWithoutFields(jl_RuntimeException),
jl_ClassCastException__init_1 = $this => {
    jl_RuntimeException__init_($this);
},
jl_ClassCastException__init_0 = () => {
    let var_0 = new jl_ClassCastException();
    jl_ClassCastException__init_1(var_0);
    return var_0;
},
jl_ClassCastException__init_ = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_ClassCastException__init_2 = var_0 => {
    let var_1 = new jl_ClassCastException();
    jl_ClassCastException__init_(var_1, var_0);
    return var_1;
},
juf_Supplier = $rt_classWithoutFields(0),
jtt_TemporalQuery = $rt_classWithoutFields(0),
jt_ZoneId$1 = $rt_classWithoutFields(),
jt_ZoneId$1__init_ = $this => {
    jl_Object__init_($this);
},
jt_ZoneId$1__init_0 = () => {
    let var_0 = new jt_ZoneId$1();
    jt_ZoneId$1__init_(var_0);
    return var_0;
},
jlr_AnnotatedElement = $rt_classWithoutFields(0),
jlr_AccessibleObject = $rt_classWithoutFields(),
jlr_AccessibleObject__init_ = $this => {
    jl_Object__init_($this);
},
jlr_AccessibleObject__init_0 = () => {
    let var_0 = new jlr_AccessibleObject();
    jlr_AccessibleObject__init_(var_0);
    return var_0;
},
jlr_Member = $rt_classWithoutFields(0);
function jlr_Constructor() {
    let a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name15 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$caller = null;
}
let jlr_Constructor__init_ = ($this, $declaringClass, $name, $modifiers, $accessLevel, $parameterTypes, $caller) => {
    jlr_AccessibleObject__init_($this);
    $this.$declaringClass = $declaringClass;
    $this.$name15 = $name;
    $this.$modifiers = $modifiers;
    $this.$accessLevel = $accessLevel;
    $this.$parameterTypes = $parameterTypes;
    $this.$caller = $caller;
},
jlr_Constructor__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new jlr_Constructor();
    jlr_Constructor__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
jlr_Constructor_getModifiers = $this => {
    return otcir_Flags_getModifiers($this.$modifiers, $this.$accessLevel);
},
jlr_Constructor_getParameterTypes = $this => {
    return $this.$parameterTypes.$clone0();
},
jlr_Constructor_toString = $this => {
    let $sb, $parameterTypes, $i, var$4;
    $sb = jl_StringBuilder__init_();
    $sb.$append1(jlr_Modifier_toString0($this.$getModifiers0()));
    if ($sb.$length() > 0)
        $sb.$append0(32);
    ($sb.$append1((jl_Class_getName($this.$declaringClass)).$toString())).$append0(40);
    $parameterTypes = $this.$getParameterTypes();
    $i = 0;
    while (true) {
        var$4 = $parameterTypes.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append0(44);
        $sb.$append1(jl_Class_getName(var$4[$i]));
        $i = $i + 1 | 0;
    }
    return ($sb.$append0(41)).$toString();
},
jlr_Constructor_newInstance = ($this, $initargs) => {
    let var$2, var$3, $i, $instance, var$6, var$7;
    if ($this.$modifiers & 1)
        $rt_throw(jl_InstantiationException__init_0());
    if ($this.$caller === null)
        $rt_throw(jl_IllegalAccessException__init_0());
    var$2 = $initargs.data;
    var$3 = var$2.length;
    if (var$3 != $this.$parameterTypes.data.length)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $i = 0;
    while (true) {
        if ($i >= var$3) {
            $instance = new ($this.$declaringClass.$platformClass);
            $this.$caller.$call($instance, $initargs);
            return $instance;
        }
        if (!jl_Class_isPrimitive($this.$parameterTypes.data[$i]) && var$2[$i] !== null) {
            var$6 = $this.$parameterTypes.data[$i];
            var$7 = var$2[$i];
            if (!jl_Class_isInstance(var$6, var$7))
                $rt_throw(jl_IllegalArgumentException__init_0());
        }
        if (jl_Class_isPrimitive($this.$parameterTypes.data[$i]) && var$2[$i] === null)
            break;
        $i = $i + 1 | 0;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
jl_Cloneable = $rt_classWithoutFields(0),
onns_NostrSigner = $rt_classWithoutFields(0);
function onns_NostrKeyPairSigner() {
    jl_Object.call(this);
    this.$keyPair = null;
}
let onns_NostrKeyPairSigner__init_0 = ($this, $keyPair) => {
    jl_Object__init_($this);
    $this.$keyPair = $keyPair;
},
onns_NostrKeyPairSigner__init_ = var_0 => {
    let var_1 = new onns_NostrKeyPairSigner();
    onns_NostrKeyPairSigner__init_0(var_1, var_0);
    return var_1;
},
onns_NostrKeyPairSigner_generate = () => {
    return onns_NostrKeyPairSigner__init_(onnk_NostrKeyPair__init_0());
},
onns_NostrKeyPairSigner_sign = ($this, $event) => {
    let $id, var$3, var$4;
    $id = onne_NostrEvent_computeEventId(onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey($this.$keyPair)), $event);
    var$3 = onp_NGEUtils_getPlatform();
    var$4 = $this.$keyPair;
    var$3 = var$3.$signAsync($id, onnk_NostrPrivateKey__array(onnk_NostrKeyPair_getPrivateKey(var$4)));
    var$4 = onns_NostrKeyPairSigner$sign$lambda$_2_0__init_0($this, $id, $event);
    var$3 = var$3.$then(var$4);
    return var$3;
},
onns_NostrKeyPairSigner_encrypt = ($this, $message, $publicKey) => {
    let var$3, var$4;
    var$3 = $this.$keyPair;
    var$3 = onnn_Nip44_getConversationKey(onnk_NostrKeyPair_getPrivateKey(var$3), $publicKey);
    var$4 = onns_NostrKeyPairSigner$encrypt$lambda$_3_0__init_0($message);
    var$3 = var$3.$compose(var$4);
    var$4 = onns_NostrKeyPairSigner$encrypt$lambda$_3_1__init_0();
    var$3 = var$3.$then(var$4);
    return var$3;
},
onns_NostrKeyPairSigner_decrypt = ($this, $message, $publicKey) => {
    let var$3, var$4;
    onp_NGEUtils_getPlatform();
    var$3 = $this.$keyPair;
    var$3 = onnn_Nip44_getConversationKey(onnk_NostrKeyPair_getPrivateKey(var$3), $publicKey);
    var$4 = onns_NostrKeyPairSigner$decrypt$lambda$_4_0__init_0($message);
    var$3 = var$3.$compose(var$4);
    return var$3;
},
onns_NostrKeyPairSigner_getPublicKey = $this => {
    let $platform;
    $platform = onp_NGEUtils_getPlatform();
    return $platform.$wrapPromise(onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0__init_0($this));
},
onns_NostrKeyPairSigner_clone0 = $this => {
    let var$1, $$je;
    a: {
        try {
            var$1 = onns_NostrKeyPairSigner__init_(onnk_NostrKeyPair_clone($this.$keyPair));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(jl_CloneNotSupportedException__init_());
},
onns_NostrKeyPairSigner_toString = $this => {
    let var$1, var$2;
    var$1 = jl_String_valueOf($this.$keyPair);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(63)), var$1), 125);
    return jl_StringBuilder_toString(var$2);
},
onns_NostrKeyPairSigner_equals = ($this, $obj) => {
    let $other;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    a: {
        $other = $obj;
        if ($this.$keyPair !== $other.$keyPair) {
            if ($this.$keyPair === null)
                break a;
            if (!onnk_NostrKeyPair_equals($this.$keyPair, $other.$keyPair))
                break a;
        }
        return 1;
    }
    return 0;
},
onns_NostrKeyPairSigner_hashCode = $this => {
    let var$1;
    var$1 = 623 + ($this.$keyPair === null ? 0 : onnk_NostrKeyPair_hashCode($this.$keyPair)) | 0;
    return var$1;
},
onns_NostrKeyPairSigner_getKeyPair = $this => {
    return $this.$keyPair;
},
onns_NostrKeyPairSigner_close = $this => {
    let var$1, var$2;
    var$1 = onp_NGEUtils_getPlatform();
    var$2 = onns_NostrKeyPairSigner$close$lambda$_11_0__init_0($this);
    var$1 = var$1.$wrapPromise(var$2);
    return var$1;
},
onns_NostrKeyPairSigner_clone = $this => {
    return $this.$clone2();
},
onns_NostrKeyPairSigner_lambda$close$5 = ($this, $res, $rej) => {
    $res.$accept0($this);
},
onns_NostrKeyPairSigner_lambda$getPublicKey$4 = ($this, $res, $rej) => {
    let $e, $$je;
    a: {
        try {
            $res.$accept0(onnk_NostrKeyPair_getPublicKey($this.$keyPair));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onns_NostrKeyPairSigner_lambda$decrypt$3 = ($message, $sharedKey) => {
    return onnn_Nip44_decrypt($message, $sharedKey);
},
onns_NostrKeyPairSigner_lambda$encrypt$2 = $encrypt => {
    return $encrypt;
},
onns_NostrKeyPairSigner_lambda$encrypt$1 = ($message, $sharedKey) => {
    return onnn_Nip44_encrypt($message, $sharedKey);
},
onns_NostrKeyPairSigner_lambda$sign$0 = ($this, $id, $event, $sig) => {
    let var$4, var$5, var$6, var$7, var$8;
    var$4 = new onne_SignedNostrEvent;
    var$5 = $this.$keyPair;
    var$6 = onnk_NostrKeyPair_getPublicKey(var$5);
    var$7 = $event.$getKind();
    var$8 = $event.$getContent();
    var$5 = $event.$getCreatedAt();
    onne_SignedNostrEvent__init_(var$4, $id, var$6, var$7, var$8, var$5, $sig, $event.$getTagRows());
    return var$4;
},
onns_NostrKeyPairSigner_sign$exported$0 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$sign(var$2);
},
onns_NostrKeyPairSigner_lambda$close$5$exported$1 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    onns_NostrKeyPairSigner_lambda$close$5(var$1, var$2, var$3);
},
onns_NostrKeyPairSigner_toString$exported$2 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onns_NostrKeyPairSigner_equals$exported$3 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!var$1.$equals(var$2);
},
onns_NostrKeyPairSigner_lambda$getPublicKey$4$exported$4 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    onns_NostrKeyPairSigner_lambda$getPublicKey$4(var$1, var$2, var$3);
},
onns_NostrKeyPairSigner_clone$exported$5 = var$1 => {
    return var$1.$clone2();
},
onns_NostrKeyPairSigner_hashCode$exported$6 = var$1 => {
    return var$1.$hashCode();
},
onns_NostrKeyPairSigner_encrypt$exported$7 = (var$1, var$2, var$3) => {
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return var$1.$encrypt0(var$2, var$3);
},
onns_NostrKeyPairSigner_decrypt$exported$8 = (var$1, var$2, var$3) => {
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return var$1.$decrypt0(var$2, var$3);
},
onns_NostrKeyPairSigner_lambda$sign$0$exported$9 = (var$1, var$2, var$3, var$4) => {
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    var$4 = $rt_str(var$4);
    return onns_NostrKeyPairSigner_lambda$sign$0(var$1, var$2, var$3, var$4);
},
onns_NostrKeyPairSigner_getKeyPair$exported$10 = var$1 => {
    return var$1.$getKeyPair();
},
onns_NostrKeyPairSigner_close$exported$11 = var$1 => {
    return var$1.$close0();
},
onns_NostrKeyPairSigner__init_$exported$12 = var$1 => {
    return onns_NostrKeyPairSigner__init_(var$1);
},
onns_NostrKeyPairSigner_getPublicKey$exported$13 = var$1 => {
    return var$1.$getPublicKey0();
},
onns_NostrKeyPairSigner_clone$exported$14 = var$1 => {
    return otji_JSWrapper_javaToJs(var$1.$clone0());
},
onns_NostrKeyPairSigner_generate$exported$0 = () => {
    onn_Nostr4jsModule_$callClinit();
    return onns_NostrKeyPairSigner_generate();
},
onns_NostrKeyPairSigner_lambda$decrypt$3$exported$1 = (var$1, var$2) => {
    onn_Nostr4jsModule_$callClinit();
    return onns_NostrKeyPairSigner_lambda$decrypt$3($rt_str(var$1), otji_JS_unwrapByteArray(var$2));
},
onns_NostrKeyPairSigner_lambda$encrypt$2$exported$2 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onns_NostrKeyPairSigner_lambda$encrypt$2($rt_str(var$1)));
},
onns_NostrKeyPairSigner_lambda$encrypt$1$exported$3 = (var$1, var$2) => {
    onn_Nostr4jsModule_$callClinit();
    return onns_NostrKeyPairSigner_lambda$encrypt$1($rt_str(var$1), otji_JS_unwrapByteArray(var$2));
};
function ju_AbstractMap() {
    let a = this; jl_Object.call(a);
    a.$cachedKeySet = null;
    a.$cachedValues = null;
}
let ju_AbstractMap__init_ = $this => {
    jl_Object__init_($this);
},
ju_AbstractMap_size = $this => {
    return ($this.$entrySet()).$size();
},
ju_AbstractMap_isEmpty = $this => {
    return $this.$size() ? 0 : 1;
},
ju_AbstractMap_containsKey = ($this, $key) => {
    let $iter, $knownKey;
    $iter = ($this.$entrySet()).$iterator();
    while ($iter.$hasNext()) {
        $knownKey = ($iter.$next()).$getKey();
        if (ju_Objects_equals($key, $knownKey))
            return 1;
    }
    return 0;
},
ju_AbstractMap_get = ($this, $key) => {
    let $iter, $entry;
    $iter = ($this.$entrySet()).$iterator();
    while ($iter.$hasNext()) {
        $entry = $iter.$next();
        if (ju_Objects_equals($key, $entry.$getKey()))
            return $entry.$getValue();
    }
    return null;
},
ju_AbstractMap_put = ($this, $key, $value) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_AbstractMap_keySet = $this => {
    if ($this.$cachedKeySet === null)
        $this.$cachedKeySet = ju_AbstractMap$KeySet__init_($this);
    return $this.$cachedKeySet;
},
ju_AbstractMap_values = $this => {
    if ($this.$cachedValues === null)
        $this.$cachedValues = ju_AbstractMap$Values__init_($this);
    return $this.$cachedValues;
},
ju_AbstractMap_equals = ($this, $obj) => {
    let $other, $it, $entry, $$je;
    if ($this === $obj)
        return 1;
    if (!$rt_isInstance($obj, ju_Map))
        return 0;
    $other = $obj;
    if ($this.$size() != $other.$size())
        return 0;
    a: {
        try {
            $it = ($this.$entrySet()).$iterator();
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_ClassCastException) {
                break a;
            } else if ($$je instanceof jl_NullPointerException) {
                break a;
            } else {
                throw $$e;
            }
        }
        b: {
            c: {
                try {
                    while ($it.$hasNext()) {
                        $entry = $it.$next();
                        if (!$other.$containsKey($entry.$getKey()))
                            break b;
                        if (!ju_Objects_equals($entry.$getValue(), $other.$get1($entry.$getKey())))
                            break c;
                    }
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_ClassCastException) {
                        break a;
                    } else if ($$je instanceof jl_NullPointerException) {
                        break a;
                    } else {
                        throw $$e;
                    }
                }
                return 1;
            }
            try {
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ClassCastException) {
                    break a;
                } else if ($$je instanceof jl_NullPointerException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_ClassCastException) {
                break a;
            } else if ($$je instanceof jl_NullPointerException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return 0;
    }
    return 0;
},
ju_AbstractMap_hashCode = $this => {
    let $result, $iter, $entry;
    $result = 0;
    $iter = ($this.$entrySet()).$iterator();
    while ($iter.$hasNext()) {
        $entry = $iter.$next();
        $result = $result + $entry.$hashCode() | 0;
    }
    return $result;
},
ju_AbstractMap_toString = $this => {
    let $sb, $iter, $e;
    $sb = jl_StringBuilder__init_();
    $sb.$append0(123);
    $iter = ($this.$entrySet()).$iterator();
    if ($iter.$hasNext()) {
        $e = $iter.$next();
        $sb.$append($e.$getKey() !== $this ? $e.$getKey() : $rt_s(64));
        $sb.$append0(61);
        $sb.$append($e.$getValue() !== $this ? $e.$getValue() : $rt_s(64));
    }
    while ($iter.$hasNext()) {
        $sb.$append1($rt_s(12));
        $e = $iter.$next();
        $sb.$append($e.$getKey() !== $this ? $e.$getKey() : $rt_s(64));
        $sb.$append0(61);
        $sb.$append($e.$getValue() !== $this ? $e.$getValue() : $rt_s(64));
    }
    $sb.$append0(125);
    return $sb.$toString();
};
function ju_HashMap() {
    let a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount0 = 0;
    a.$loadFactor0 = 0.0;
    a.$threshold = 0;
}
let ju_HashMap_newElementArray = ($this, $s) => {
    return $rt_createArray(ju_HashMap$HashEntry, $s);
},
ju_HashMap__init_1 = $this => {
    ju_HashMap__init_0($this, 16);
},
ju_HashMap__init_ = () => {
    let var_0 = new ju_HashMap();
    ju_HashMap__init_1(var_0);
    return var_0;
},
ju_HashMap__init_0 = ($this, $capacity) => {
    ju_HashMap__init_2($this, $capacity, 0.75);
},
ju_HashMap__init_4 = var_0 => {
    let var_1 = new ju_HashMap();
    ju_HashMap__init_0(var_1, var_0);
    return var_1;
},
ju_HashMap_calculateCapacity = $x => {
    let var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
},
ju_HashMap__init_2 = ($this, $capacity, $loadFactor) => {
    let var$3;
    ju_AbstractMap__init_($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = ju_HashMap_calculateCapacity($capacity);
        $this.$elementCount = 0;
        $this.$elementData = $this.$newElementArray(var$3);
        $this.$loadFactor0 = $loadFactor;
        ju_HashMap_computeThreshold($this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
ju_HashMap__init_6 = (var_0, var_1) => {
    let var_2 = new ju_HashMap();
    ju_HashMap__init_2(var_2, var_0, var_1);
    return var_2;
},
ju_HashMap__init_3 = ($this, $map) => {
    ju_HashMap__init_0($this, ju_HashMap_calculateCapacity($map.$size()));
    $this.$putAllImpl($map);
},
ju_HashMap__init_5 = var_0 => {
    let var_1 = new ju_HashMap();
    ju_HashMap__init_3(var_1, var_0);
    return var_1;
},
ju_HashMap_clear = $this => {
    if ($this.$elementCount > 0) {
        $this.$elementCount = 0;
        ju_Arrays_fill4($this.$elementData, null);
        $this.$modCount0 = $this.$modCount0 + 1 | 0;
    }
},
ju_HashMap_computeThreshold = $this => {
    $this.$threshold = $this.$elementData.data.length * $this.$loadFactor0 | 0;
},
ju_HashMap_containsKey = ($this, $key) => {
    let $m;
    $m = ju_HashMap_entryByKey($this, $key);
    return $m === null ? 0 : 1;
},
ju_HashMap_entrySet = $this => {
    return ju_HashMap$HashMapEntrySet__init_0($this);
},
ju_HashMap_get = ($this, $key) => {
    let $m;
    $m = ju_HashMap_entryByKey($this, $key);
    if ($m === null)
        return null;
    return $m.$value;
},
ju_HashMap_entryByKey = ($this, $key) => {
    let $m, $hash, $index;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = $key.$hashCode();
        $index = $hash & ($this.$elementData.data.length - 1 | 0);
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    return $m;
},
ju_HashMap_findNonNullKeyEntry = ($this, $key, $index, $keyHash) => {
    let $m;
    $m = $this.$elementData.data[$index];
    while ($m !== null && !($m.$origKeyHash == $keyHash && ju_HashMap_areEqualKeys($key, $m.$key))) {
        $m = $m.$next6;
    }
    return $m;
},
ju_HashMap_findNullKeyEntry = $this => {
    let $m;
    $m = $this.$elementData.data[0];
    while ($m !== null && $m.$key !== null) {
        $m = $m.$next6;
    }
    return $m;
},
ju_HashMap_isEmpty = $this => {
    return $this.$elementCount ? 0 : 1;
},
ju_HashMap_keySet = $this => {
    if ($this.$cachedKeySet === null)
        $this.$cachedKeySet = ju_HashMap$1__init_0($this);
    return $this.$cachedKeySet;
},
ju_HashMap_put = ($this, $key, $value) => {
    return ju_HashMap_putImpl($this, $key, $value);
},
ju_HashMap_putImpl = ($this, $key, $value) => {
    let $entry, var$4, $hash, $index, $result;
    if ($key === null) {
        $entry = ju_HashMap_findNullKeyEntry($this);
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $entry = ju_HashMap_createHashedEntry($this, null, 0, 0);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold)
                $this.$rehash();
        }
    } else {
        $hash = $key.$hashCode();
        $index = $hash & ($this.$elementData.data.length - 1 | 0);
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $entry = ju_HashMap_createHashedEntry($this, $key, $index, $hash);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold)
                $this.$rehash();
        }
    }
    $result = $entry.$value;
    $entry.$value = $value;
    return $result;
},
ju_HashMap_createHashedEntry = ($this, $key, $index, $hash) => {
    let $entry;
    $entry = ju_HashMap$HashEntry__init_0($key, $hash);
    $entry.$next6 = $this.$elementData.data[$index];
    $this.$elementData.data[$index] = $entry;
    return $entry;
},
ju_HashMap_putAll = ($this, $map) => {
    if (!$map.$isEmpty())
        $this.$putAllImpl($map);
},
ju_HashMap_putAllImpl = ($this, $map) => {
    let $capacity, $it, $entry;
    $capacity = $this.$elementCount + $map.$size() | 0;
    if ($capacity > $this.$threshold)
        $this.$rehash0($capacity);
    $it = ($map.$entrySet()).$iterator();
    while ($it.$hasNext()) {
        $entry = $it.$next();
        ju_HashMap_putImpl($this, $entry.$getKey(), $entry.$getValue());
    }
},
ju_HashMap_rehash = ($this, $capacity) => {
    let $length, $newData, $i, $entry, var$6, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $this.$newElementArray($length);
    $i = 0;
    while ($i < $this.$elementData.data.length) {
        $entry = $this.$elementData.data[$i];
        $this.$elementData.data[$i] = null;
        while ($entry !== null) {
            var$6 = $newData.data;
            $index = $entry.$origKeyHash & ($length - 1 | 0);
            $next = $entry.$next6;
            $entry.$next6 = var$6[$index];
            var$6[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData = $newData;
    ju_HashMap_computeThreshold($this);
},
ju_HashMap_rehash0 = $this => {
    $this.$rehash0($this.$elementData.data.length);
},
ju_HashMap_remove = ($this, $key) => {
    let $entry;
    $entry = ju_HashMap_removeByKey($this, $key);
    if ($entry === null)
        return null;
    return $entry.$value;
},
ju_HashMap_removeEntry = ($this, $entry) => {
    let $index, $m;
    $index = $entry.$origKeyHash & ($this.$elementData.data.length - 1 | 0);
    $m = $this.$elementData.data[$index];
    if ($m === $entry)
        $this.$elementData.data[$index] = $entry.$next6;
    else {
        while ($m.$next6 !== $entry) {
            $m = $m.$next6;
        }
        $m.$next6 = $entry.$next6;
    }
    $this.$modCount0 = $this.$modCount0 + 1 | 0;
    $this.$elementCount = $this.$elementCount - 1 | 0;
},
ju_HashMap_removeByKey = ($this, $key) => {
    let $index, $last, $entry, $entry_0, $hash;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData.data[0];
            while ($entry !== null) {
                if ($entry.$key === null)
                    break a;
                $entry_0 = $entry.$next6;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            $hash = $key.$hashCode();
            $index = $hash & ($this.$elementData.data.length - 1 | 0);
            $entry = $this.$elementData.data[$index];
            while ($entry !== null && !($entry.$origKeyHash == $hash && ju_HashMap_areEqualKeys($key, $entry.$key))) {
                $entry_0 = $entry.$next6;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next6 = $entry.$next6;
    else
        $this.$elementData.data[$index] = $entry.$next6;
    $this.$modCount0 = $this.$modCount0 + 1 | 0;
    $this.$elementCount = $this.$elementCount - 1 | 0;
    return $entry;
},
ju_HashMap_size = $this => {
    return $this.$elementCount;
},
ju_HashMap_values = $this => {
    if ($this.$cachedValues === null)
        $this.$cachedValues = ju_HashMap$2__init_0($this);
    return $this.$cachedValues;
},
ju_HashMap_areEqualKeys = ($key1, $key2) => {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
};
function ju_LinkedHashMap() {
    let a = this; ju_HashMap.call(a);
    a.$accessOrder = 0;
    a.$head0 = null;
    a.$tail = null;
}
let ju_LinkedHashMap__init_2 = $this => {
    ju_HashMap__init_1($this);
    $this.$accessOrder = 0;
    $this.$head0 = null;
},
ju_LinkedHashMap__init_ = () => {
    let var_0 = new ju_LinkedHashMap();
    ju_LinkedHashMap__init_2(var_0);
    return var_0;
},
ju_LinkedHashMap__init_1 = ($this, $m) => {
    ju_HashMap__init_1($this);
    $this.$accessOrder = 0;
    $this.$head0 = null;
    $this.$tail = null;
    $this.$putAll($m);
},
ju_LinkedHashMap__init_0 = var_0 => {
    let var_1 = new ju_LinkedHashMap();
    ju_LinkedHashMap__init_1(var_1, var_0);
    return var_1;
},
ju_LinkedHashMap_putAllImpl = ($this, $map) => {
    let $capacity, $it, $entry;
    $capacity = $this.$elementCount + $map.$size() | 0;
    if ($capacity > $this.$threshold)
        $this.$rehash0($capacity);
    $it = ($map.$entrySet()).$iterator();
    while ($it.$hasNext()) {
        $entry = $it.$next();
        $this.$putImpl0($entry.$getKey(), $entry.$getValue(), 0, $this.$accessOrder);
    }
},
ju_LinkedHashMap_newElementArray = ($this, $s) => {
    return $rt_createArray(ju_LinkedHashMap$LinkedHashMapEntry, $s);
},
ju_LinkedHashMap_getOrDefault = ($this, $key, $defaultValue) => {
    let $entry, $hash, $index;
    if ($key === null)
        $entry = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = $key.$hashCode();
        $index = ($hash & 2147483647) % $this.$elementData.data.length | 0;
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    if ($entry === null)
        return $defaultValue;
    if ($this.$accessOrder)
        ju_LinkedHashMap_linkEntry($this, $entry, 0);
    return $entry.$value;
},
ju_LinkedHashMap_get = ($this, $key) => {
    return $this.$getOrDefault($key, null);
},
ju_LinkedHashMap_createHashedEntry = ($this, $key, $index, $hash, $first) => {
    let $entry;
    $entry = ju_LinkedHashMap$LinkedHashMapEntry__init_0($key, $hash);
    $entry.$next6 = $this.$elementData.data[$index];
    $this.$elementData.data[$index] = $entry;
    if (!$first) {
        if ($this.$tail === null)
            $this.$head0 = $entry;
        else
            $this.$tail.$chainForward = $entry;
        $entry.$chainBackward = $this.$tail;
        $this.$tail = $entry;
    } else {
        if ($this.$head0 === null)
            $this.$tail = $entry;
        else
            $this.$head0.$chainBackward = $entry;
        $entry.$chainForward = $this.$head0;
        $this.$head0 = $entry;
    }
    return $entry;
},
ju_LinkedHashMap_put = ($this, $key, $value) => {
    let $oldSize, $existing;
    $oldSize = $this.$size();
    $existing = $this.$putImpl0($key, $value, 0, $this.$accessOrder);
    if ($this.$size() != $oldSize && $this.$removeEldestEntry($this.$head0))
        $this.$removeLinkedEntry($this.$head0);
    return $existing;
},
ju_LinkedHashMap_putImpl = ($this, $key, $value, $first, $forceMotion) => {
    let $hash, var$6, $index, $entry, var$9, $existing;
    if (!$this.$elementCount) {
        $this.$head0 = null;
        $this.$tail = null;
    }
    $hash = ju_Objects_hashCode($key);
    var$6 = $hash & 2147483647;
    $index = var$6 % $this.$elementData.data.length | 0;
    $entry = $key === null ? ju_HashMap_findNullKeyEntry($this) : ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    if ($entry === null) {
        $this.$modCount0 = $this.$modCount0 + 1 | 0;
        var$9 = $this.$elementCount + 1 | 0;
        $this.$elementCount = var$9;
        if (var$9 > $this.$threshold) {
            $this.$rehash();
            $index = var$6 % $this.$elementData.data.length | 0;
        }
        $entry = ju_LinkedHashMap_createHashedEntry($this, $key, $index, $hash, $first);
    } else if ($forceMotion)
        ju_LinkedHashMap_linkEntry($this, $entry, $first);
    $existing = $entry.$value;
    $entry.$value = $value;
    return $existing;
},
ju_LinkedHashMap_linkEntry = ($this, $entry, $first) => {
    let $n, $p;
    if (!$first) {
        $n = $entry.$chainForward;
        if ($n === null)
            return;
        $p = $entry.$chainBackward;
        if ($p === null)
            $this.$head0 = $n;
        else
            $p.$chainForward = $n;
        $n.$chainBackward = $p;
        if ($this.$tail !== null)
            $this.$tail.$chainForward = $entry;
        $entry.$chainBackward = $this.$tail;
        $entry.$chainForward = null;
        $this.$tail = $entry;
    } else {
        $p = $entry.$chainBackward;
        if ($p === null)
            return;
        $n = $entry.$chainForward;
        if ($n === null)
            $this.$tail = $p;
        else
            $n.$chainBackward = $p;
        $p.$chainForward = $n;
        if ($this.$head0 !== null)
            $this.$head0.$chainBackward = $entry;
        $entry.$chainForward = $this.$head0;
        $entry.$chainBackward = null;
        $this.$head0 = $entry;
    }
},
ju_LinkedHashMap_entrySet = $this => {
    return ju_LinkedHashMapEntrySet__init_0($this, 0);
},
ju_LinkedHashMap_keySet = $this => {
    return $this.$sequencedKeySet();
},
ju_LinkedHashMap_sequencedKeySet = $this => {
    if ($this.$cachedKeySet === null)
        $this.$cachedKeySet = ju_LinkedHashMapKeySet__init_0($this, 0);
    return $this.$cachedKeySet;
},
ju_LinkedHashMap_remove = ($this, $key) => {
    let $m;
    $m = ju_HashMap_removeByKey($this, $key);
    if ($m === null)
        return null;
    ju_LinkedHashMap_unlinkEntry($this, $m);
    return $m.$value;
},
ju_LinkedHashMap_removeLinkedEntry = ($this, $entry) => {
    ju_HashMap_removeEntry($this, $entry);
    ju_LinkedHashMap_unlinkEntry($this, $entry);
},
ju_LinkedHashMap_unlinkEntry = ($this, $entry) => {
    let $p, $n;
    $p = $entry.$chainBackward;
    $n = $entry.$chainForward;
    if ($p !== null) {
        $p.$chainForward = $n;
        if ($n === null)
            $this.$tail = $p;
        else
            $n.$chainBackward = $p;
    } else {
        $this.$head0 = $n;
        if ($n === null)
            $this.$tail = null;
        else
            $n.$chainBackward = null;
    }
},
ju_LinkedHashMap_removeEldestEntry = ($this, $eldest) => {
    return 0;
};
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
let jur_QuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$innerSet = $innerSet;
    $this.$setType($type);
},
jur_QuantifierSet_getInnerSet = $this => {
    return $this.$innerSet;
},
jur_QuantifierSet_first = ($this, $set) => {
    return !$this.$innerSet.$first($set) && !$this.$next5.$first($set) ? 0 : 1;
},
jur_QuantifierSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_QuantifierSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next5 !== null && !$this.$next5.$isSecondPassVisited) {
        $set = $this.$next5.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next5.$isSecondPassVisited = 1;
            $this.$next5 = $set;
        }
        $this.$next5.$processSecondPass();
    }
    if ($this.$innerSet !== null) {
        if (!$this.$innerSet.$isSecondPassVisited) {
            $set = $this.$innerSet.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($this.$innerSet instanceof jur_SingleSet && $this.$innerSet.$fSet.$isBackReferenced)
            $this.$innerSet = $this.$innerSet.$next5;
    }
},
jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_GroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_GroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_GroupQuantifierSet();
    jur_GroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_GroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_GroupQuantifierSet_getName = $this => {
    return $rt_s(65);
},
jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PosPlusGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PosPlusGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PosPlusGroupQuantifierSet();
    jur_PosPlusGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PosPlusGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex, var$5;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            var$5 = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if (var$5 <= $nextIndex)
                break;
            $nextIndex = var$5;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
};
function ju_Calendar() {
    let a = this; jl_Object.call(a);
    a.$areFieldsSet = 0;
    a.$fields = null;
    a.$isSet = null;
    a.$isTimeSet = 0;
    a.$time = Long_ZERO;
    a.$lastTimeFieldSet = 0;
    a.$lastDateFieldSet = 0;
    a.$lenient = 0;
    a.$firstDayOfWeek = 0;
    a.$minimalDaysInFirstWeek = 0;
    a.$zone4 = null;
}
let ju_Calendar_fieldNames = null,
ju_Calendar_firstDayOfWeekCache = 0,
ju_Calendar_minimalDaysInFirstWeekCache = 0,
ju_Calendar_cacheFor = null,
ju_Calendar_$callClinit = () => {
    ju_Calendar_$callClinit = $rt_eraseClinit(ju_Calendar);
    ju_Calendar__clinit_();
},
ju_Calendar__init_0 = ($this, $timezone) => {
    ju_Calendar_$callClinit();
    jl_Object__init_($this);
    $this.$fields = $rt_createIntArray(17);
    $this.$isSet = $rt_createBooleanArray(17);
    $this.$areFieldsSet = 0;
    $this.$isTimeSet = 0;
    $this.$setLenient(1);
    $this.$setTimeZone($timezone);
},
ju_Calendar__init_ = ($this, $timezone, $locale) => {
    ju_Calendar_$callClinit();
    ju_Calendar__init_0($this, $timezone);
    $this.$fields = $rt_createIntArray(17);
    $this.$isSet = $rt_createBooleanArray(17);
    $this.$areFieldsSet = 0;
    $this.$isTimeSet = 0;
    $this.$setLenient(1);
    $this.$setFirstDayOfWeek(ju_Calendar_resolveFirstDayOfWeek($locale));
    $this.$setMinimalDaysInFirstWeek(ju_Calendar_resolveMinimalDaysInFirstWeek($locale));
    ju_Calendar_cacheFor = $locale;
},
ju_Calendar_resolveFirstDayOfWeek = $locale => {
    let $country, $dayMap;
    ju_Calendar_$callClinit();
    if ($locale === ju_Calendar_cacheFor && ju_Calendar_firstDayOfWeekCache >= 0)
        return ju_Calendar_firstDayOfWeekCache;
    $country = otciu_CLDRHelper_resolveCountry(ju_Locale_getLanguage($locale), ju_Locale_getCountry($locale));
    $dayMap = otciu_CLDRHelper_getFirstDayOfWeek();
    ju_Calendar_firstDayOfWeekCache = $dayMap.hasOwnProperty($rt_ustr($country)) ? $dayMap[$rt_ustr($country)].value : $dayMap[$rt_ustr($rt_s(66))].value;
    return ju_Calendar_firstDayOfWeekCache;
},
ju_Calendar_resolveMinimalDaysInFirstWeek = $locale => {
    let $country, $dayMap, var$4;
    ju_Calendar_$callClinit();
    if ($locale === ju_Calendar_cacheFor && ju_Calendar_minimalDaysInFirstWeekCache >= 0)
        return ju_Calendar_minimalDaysInFirstWeekCache;
    $country = otciu_CLDRHelper_resolveCountry(ju_Locale_getLanguage($locale), ju_Locale_getCountry($locale));
    $dayMap = otciu_CLDRHelper_getMinimalDaysInFirstWeek();
    var$4 = $dayMap.hasOwnProperty($rt_ustr($country)) ? $dayMap[$rt_ustr($country)].value : $dayMap[$rt_ustr($rt_s(66))].value;
    ju_Calendar_minimalDaysInFirstWeekCache = var$4;
    return ju_Calendar_minimalDaysInFirstWeekCache;
},
ju_Calendar_complete = $this => {
    if (!$this.$isTimeSet) {
        $this.$computeTime();
        $this.$isTimeSet = 1;
    }
    if (!$this.$areFieldsSet) {
        $this.$computeFields();
        $this.$areFieldsSet = 1;
    }
},
ju_Calendar_get = ($this, $field) => {
    $this.$complete0();
    return $this.$fields.data[$field];
},
ju_Calendar_getFirstDayOfWeek = $this => {
    return $this.$firstDayOfWeek;
},
ju_Calendar_getInstance = () => {
    ju_Calendar_$callClinit();
    return ju_GregorianCalendar__init_4();
},
ju_Calendar_getInstance0 = $timezone => {
    ju_Calendar_$callClinit();
    return ju_GregorianCalendar__init_0($timezone);
},
ju_Calendar_getMinimalDaysInFirstWeek = $this => {
    return $this.$minimalDaysInFirstWeek;
},
ju_Calendar_getTime = $this => {
    return ju_Date__init_0($this.$getTimeInMillis());
},
ju_Calendar_getTimeInMillis = $this => {
    if (!$this.$isTimeSet) {
        $this.$computeTime();
        $this.$isTimeSet = 1;
    }
    return $this.$time;
},
ju_Calendar_getTimeZone = $this => {
    return $this.$zone4;
},
ju_Calendar_setTimeZone = ($this, $timezone) => {
    $this.$zone4 = $timezone;
    $this.$areFieldsSet = 0;
},
ju_Calendar_isLenient = $this => {
    return $this.$lenient;
},
ju_Calendar_set = ($this, $field, $value) => {
    $this.$fields.data[$field] = $value;
    $this.$isSet.data[$field] = 1;
    $this.$areFieldsSet = 0;
    $this.$isTimeSet = 0;
    if ($field > 2 && $field < 9)
        $this.$lastDateFieldSet = $field;
    if (!($field != 10 && $field != 11))
        $this.$lastTimeFieldSet = $field;
    if ($field == 9)
        $this.$lastTimeFieldSet = 10;
},
ju_Calendar_setFirstDayOfWeek = ($this, $value) => {
    $this.$firstDayOfWeek = $value;
},
ju_Calendar_setLenient = ($this, $value) => {
    $this.$lenient = $value;
},
ju_Calendar_setMinimalDaysInFirstWeek = ($this, $value) => {
    $this.$minimalDaysInFirstWeek = $value;
},
ju_Calendar_setTime = ($this, $date) => {
    $this.$setTimeInMillis($date.$getTime());
},
ju_Calendar_setTimeInMillis = ($this, $milliseconds) => {
    if (!($this.$isTimeSet && $this.$areFieldsSet && Long_eq($this.$time, $milliseconds))) {
        $this.$time = $milliseconds;
        $this.$isTimeSet = 1;
        $this.$areFieldsSet = 0;
        $this.$complete0();
    }
},
ju_Calendar__clinit_ = () => {
    ju_Calendar_fieldNames = $rt_wrapArray(jl_String, [$rt_s(67), $rt_s(68), $rt_s(69), $rt_s(70), $rt_s(71), $rt_s(72), $rt_s(73), $rt_s(74), $rt_s(75), $rt_s(76), $rt_s(77), $rt_s(78), $rt_s(79), $rt_s(80), $rt_s(81), $rt_s(82), $rt_s(83)]);
    ju_Calendar_firstDayOfWeekCache = (-1);
    ju_Calendar_minimalDaysInFirstWeekCache = (-1);
},
onnn_Nip01 = $rt_classWithoutFields(),
onnn_Nip01__init_ = $this => {
    jl_Object__init_($this);
},
onnn_Nip01__init_0 = () => {
    let var_0 = new onnn_Nip01();
    onnn_Nip01__init_(var_0);
    return var_0;
},
onnn_Nip01_from = $event => {
    return onnn_Nip01UserMetadata__init_0($event);
},
onnn_Nip01_fetch0 = ($pool, $pubkey) => {
    let $filter;
    $filter = onnn_Nip01UserMetadataFilter__init_($pubkey);
    return onnn_Nip01_fetch($pool, $filter);
},
onnn_Nip01_fetch = ($pool, $filter) => {
    let var$3, var$4;
    var$3 = $pool.$fetch0($filter);
    var$4 = onnn_Nip01$fetch$lambda$_3_0__init_0();
    var$3 = var$3.$then(var$4);
    return var$3;
},
onnn_Nip01_update = ($pool, $signer, $newMetadata) => {
    let $event, $signedP;
    $event = $newMetadata.$toUpdateEvent();
    $signedP = $signer.$sign($event);
    return $signedP.$compose(onnn_Nip01$update$lambda$_4_0__init_0($pool));
},
onnn_Nip01_lambda$update$1 = ($pool, $signed) => {
    return $pool.$publish($signed);
},
onnn_Nip01_lambda$fetch$0 = $evs => {
    let $event, var$3, $e, $$je;
    $event = $evs.$get(0);
    a: {
        try {
            var$3 = onnn_Nip01UserMetadata__init_0($event);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
},
onnn_Nip01__init_$exported$0 = () => {
    return onnn_Nip01__init_0();
},
onnn_Nip01_from$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip01_from(var$1);
},
onnn_Nip01_fetch$exported$1 = (var$1, var$2) => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip01_fetch0(var$1, var$2);
},
onnn_Nip01_fetch$exported$2 = (var$1, var$2) => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip01_fetch(var$1, var$2);
},
onnn_Nip01_update$exported$3 = (var$1, var$2, var$3) => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip01_update(var$1, var$2, var$3);
},
onnn_Nip01_lambda$update$1$exported$4 = (var$1, var$2) => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip01_lambda$update$1(var$1, var$2);
},
onnn_Nip01_lambda$fetch$0$exported$5 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip01_lambda$fetch$0(var$1);
};
function onns_SdanTaxonomy() {
    let a = this; jl_Object.call(a);
    a.$taxonomyFlat = null;
    a.$taxonomyTree = null;
}
let onns_SdanTaxonomy__init_0 = ($this, $csvIn) => {
    jl_Object__init_($this);
    $this.$taxonomyFlat = ju_HashMap__init_();
    $this.$taxonomyTree = onns_SdanTaxonomy$TreeNode__init_(null, ju_HashMap__init_());
    onns_SdanTaxonomy_loadCSV($this, $csvIn);
},
onns_SdanTaxonomy__init_1 = var_0 => {
    let var_1 = new onns_SdanTaxonomy();
    onns_SdanTaxonomy__init_0(var_1, var_0);
    return var_1;
},
onns_SdanTaxonomy__init_ = $this => {
    let $is, $bis;
    jl_Object__init_($this);
    $this.$taxonomyFlat = ju_HashMap__init_();
    $this.$taxonomyTree = onns_SdanTaxonomy$TreeNode__init_(null, ju_HashMap__init_());
    $is = jl_Class_getResourceAsStream(jl_Object_getClass($this), $rt_s(84));
    $bis = ji_BufferedInputStream__init_0($is);
    onns_SdanTaxonomy_loadCSV($this, $bis);
    $bis.$close();
},
onns_SdanTaxonomy__init_2 = () => {
    let var_0 = new onns_SdanTaxonomy();
    onns_SdanTaxonomy__init_(var_0);
    return var_0;
},
onns_SdanTaxonomy_loadCSV = ($this, $csvIn) => {
    let $bdata, $data, $tokenizer, $line, $parts, var$7, var$8, var$9, var$10, $id, $parent, $name, $tier1, $tier2, $tier3, $tier4, $extension, $taxonomy, $parentNode, $node;
    $bdata = $csvIn.$readAllBytes();
    $data = new jl_String;
    jnc_StandardCharsets_$callClinit();
    jl_String__init_0($data, $bdata, jnc_StandardCharsets_UTF_8);
    $tokenizer = ju_StringTokenizer__init_($data, $rt_s(85));
    if ($tokenizer.$hasMoreTokens())
        $tokenizer.$nextToken();
    while ($tokenizer.$hasMoreTokens()) {
        $line = ($tokenizer.$nextToken()).$trim();
        if ($line.$isEmpty())
            continue;
        if ($line.$startsWith($rt_s(86)))
            continue;
        $parts = $line.$split($rt_s(87), (-1));
        var$7 = $parts.data;
        var$8 = var$7.length;
        if (var$8 < 8) {
            var$9 = new jl_IllegalArgumentException;
            var$10 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(88)), $line), 32), var$8), $rt_s(89));
            jl_IllegalArgumentException__init_1(var$9, jl_StringBuilder_toString(var$10));
            $rt_throw(var$9);
        }
        $id = var$7[0].$trim();
        $parent = var$7[1].$trim();
        $name = var$7[2].$trim();
        $tier1 = var$7[3].$trim();
        $tier2 = var$7[4].$trim();
        $tier3 = var$7[5].$trim();
        $tier4 = var$7[6].$trim();
        $extension = var$7[7].$trim();
        $taxonomy = onns_SdanTaxonomy$SdanTaxonomyTerm__init_($id, $parent, $name, $tier1, $tier2, $tier3, $tier4, $extension);
        $parentNode = $parent.$isEmpty() ? null : $this.$taxonomyFlat.$get1($parent);
        if ($parentNode === null)
            $parentNode = $this.$taxonomyTree;
        $node = onns_SdanTaxonomy$TreeNode__init_($taxonomy, ju_HashMap__init_());
        $this.$taxonomyFlat.$put1($id, $node);
        $parentNode.$children1.$put1($id, $node);
    }
},
onns_SdanTaxonomy_getTree = $this => {
    return $this.$taxonomyTree.$children1;
},
onns_SdanTaxonomy_getByTerm = ($this, $term) => {
    let var$2, $node;
    var$2 = ($this.$taxonomyFlat.$values0()).$iterator();
    while (var$2.$hasNext()) {
        $node = var$2.$next();
        if ((onns_SdanTaxonomy$SdanTaxonomyTerm_term($node.$taxonomy0)).$equalsIgnoreCase($term))
            return $node.$taxonomy0;
    }
    return null;
},
onns_SdanTaxonomy_getById = ($this, $id) => {
    let $node;
    $node = $this.$taxonomyFlat.$get1($id);
    if ($node === null)
        return null;
    return $node.$taxonomy0;
},
onns_SdanTaxonomy_equals = ($this, $o) => {
    let $that;
    if ($this === $o)
        return 1;
    if (!($o instanceof onns_SdanTaxonomy))
        return 0;
    $that = $o;
    return $this.$taxonomyFlat.$equals($that.$taxonomyFlat);
},
onns_SdanTaxonomy_hashCode = $this => {
    return $this.$taxonomyFlat.$hashCode();
},
onns_SdanTaxonomy_toString = ($this, $node, $indent) => {
    let $sb, var$4, $child, var$6;
    $sb = jl_StringBuilder__init_();
    (((($sb.$append1($indent)).$append1($node.$taxonomy0.$name0)).$append1($rt_s(90))).$append1($node.$taxonomy0.$id4)).$append1($rt_s(91));
    var$4 = ($node.$children1.$values0()).$iterator();
    while (var$4.$hasNext()) {
        $child = var$4.$next();
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $indent), $rt_s(92));
        $sb.$append1(onns_SdanTaxonomy_toString($this, $child, jl_StringBuilder_toString(var$6)));
    }
    return $sb.$toString();
},
onns_SdanTaxonomy_toString0 = $this => {
    let $sb, var$2, $child;
    $sb = jl_StringBuilder__init_1($rt_s(93));
    var$2 = ($this.$taxonomyTree.$children1.$values0()).$iterator();
    while (var$2.$hasNext()) {
        $child = var$2.$next();
        $sb.$append1(onns_SdanTaxonomy_toString($this, $child, $rt_s(92)));
    }
    return $sb.$toString();
},
onns_SdanTaxonomy__init_$exported$0 = () => {
    return onns_SdanTaxonomy__init_2();
},
onns_SdanTaxonomy__init_$exported$1 = var$1 => {
    return onns_SdanTaxonomy__init_1(var$1);
},
onns_SdanTaxonomy_getByTerm$exported$2 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return onns_SdanTaxonomy_getByTerm(var$1, var$2);
},
onns_SdanTaxonomy_loadCSV$exported$3 = (var$1, var$2) => {
    var$2 = var$2;
    onns_SdanTaxonomy_loadCSV(var$1, var$2);
},
onns_SdanTaxonomy_toString$exported$4 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return $rt_ustr(onns_SdanTaxonomy_toString(var$1, var$2, var$3));
},
onns_SdanTaxonomy_getTree$exported$5 = var$1 => {
    return onns_SdanTaxonomy_getTree(var$1);
},
onns_SdanTaxonomy_equals$exported$6 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onns_SdanTaxonomy_equals(var$1, var$2);
},
onns_SdanTaxonomy_toString$exported$7 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy_toString0(var$1));
},
onns_SdanTaxonomy_hashCode$exported$8 = var$1 => {
    return onns_SdanTaxonomy_hashCode(var$1);
},
onns_SdanTaxonomy_getById$exported$9 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return onns_SdanTaxonomy_getById(var$1, var$2);
};
function jl_AbstractStringBuilder() {
    let a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length1 = 0;
}
let jl_AbstractStringBuilder__init_0 = $this => {
    jl_AbstractStringBuilder__init_($this, 16);
},
jl_AbstractStringBuilder__init_6 = () => {
    let var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_0(var_0);
    return var_0;
},
jl_AbstractStringBuilder__init_ = ($this, $capacity) => {
    jl_Object__init_($this);
    $this.$buffer = $rt_createCharArray($capacity);
},
jl_AbstractStringBuilder__init_3 = var_0 => {
    let var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_(var_1, var_0);
    return var_1;
},
jl_AbstractStringBuilder__init_1 = ($this, $value) => {
    jl_AbstractStringBuilder__init_2($this, $value);
},
jl_AbstractStringBuilder__init_5 = var_0 => {
    let var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_1(var_1, var_0);
    return var_1;
},
jl_AbstractStringBuilder__init_2 = ($this, $value) => {
    let $i;
    jl_Object__init_($this);
    $this.$buffer = $rt_createCharArray($value.$length());
    $i = 0;
    while ($i < $this.$buffer.data.length) {
        $this.$buffer.data[$i] = $value.$charAt($i);
        $i = $i + 1 | 0;
    }
    $this.$length1 = $value.$length();
},
jl_AbstractStringBuilder__init_4 = var_0 => {
    let var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_2(var_1, var_0);
    return var_1;
},
jl_AbstractStringBuilder_append8 = ($this, $obj) => {
    return $this.$insert($this.$length1, $obj);
},
jl_AbstractStringBuilder_append5 = ($this, $string) => {
    return $this.$insert0($this.$length1, $string);
},
jl_AbstractStringBuilder_insert8 = ($this, $index, $string) => {
    let $i, var$4, var$5;
    if ($index >= 0 && $index <= $this.$length1) {
        if ($string === null)
            $string = $rt_s(94);
        else if ($string.$isEmpty())
            return $this;
        $this.$ensureCapacity($this.$length1 + $string.$length() | 0);
        $i = $this.$length1 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$length() | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length1 = $this.$length1 + $string.$length() | 0;
        $i = 0;
        while ($i < $string.$length()) {
            var$4 = $this.$buffer.data;
            var$5 = $index + 1 | 0;
            var$4[$index] = $string.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$5;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_append2 = ($this, $value) => {
    return $this.$append2($value, 10);
},
jl_AbstractStringBuilder_append11 = ($this, $value, $radix) => {
    return $this.$insert1($this.$length1, $value, $radix);
},
jl_AbstractStringBuilder_insert10 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, $pos, $sz, $posLimit, var$10, var$11;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($rt_ucmp($value, $radix) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = $rt_udiv((-1), $radix);
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if ($rt_ucmp(var$10, $value) > 0) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if ($rt_ucmp(var$10, $posLimit) > 0)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$11 = $target;
            else {
                var$5 = $this.$buffer.data;
                var$11 = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (!var$10)
                    break a;
                var$5 = $this.$buffer.data;
                var$6 = var$11 + 1 | 0;
                var$5[var$11] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                $value = $rt_umod($value, var$10);
                var$10 = $rt_udiv(var$10, $radix);
                var$11 = var$6;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_append9 = ($this, $value) => {
    return $this.$insert2($this.$length1, $value);
},
jl_AbstractStringBuilder_insert3 = ($this, $target, $value) => {
    return $this.$insert3($target, $value, 10);
},
jl_AbstractStringBuilder_insert9 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, var$7, $sz, $pos, $posLimit, var$11, var$12;
    $positive = 1;
    if (Long_lt($value, Long_ZERO)) {
        $positive = 0;
        $value = Long_neg($value);
    }
    a: {
        var$5 = Long_fromInt($radix);
        if (jl_Long_compareUnsigned($value, var$5) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$6 = $this.$buffer.data;
                var$7 = $target + 1 | 0;
                var$6[$target] = 45;
                $target = var$7;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit(Long_lo($value), $radix);
        } else {
            $sz = 1;
            $pos = Long_fromInt(1);
            $posLimit = jl_Long_divideUnsigned(Long_fromInt(-1), var$5);
            b: {
                while (true) {
                    var$11 = Long_mul($pos, var$5);
                    if (jl_Long_compareUnsigned(var$11, $value) > 0) {
                        var$11 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (jl_Long_compareUnsigned(var$11, $posLimit) > 0)
                        break;
                    $pos = var$11;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$12 = $target;
            else {
                var$6 = $this.$buffer.data;
                var$12 = $target + 1 | 0;
                var$6[$target] = 45;
            }
            while (true) {
                if (Long_eq(var$11, Long_ZERO))
                    break a;
                var$6 = $this.$buffer.data;
                var$7 = var$12 + 1 | 0;
                var$6[var$12] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned($value, var$11))), $radix);
                $value = jl_Long_remainderUnsigned($value, var$11);
                var$11 = jl_Long_divideUnsigned(var$11, var$5);
                var$12 = var$7;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_append7 = ($this, $value) => {
    return $this.$insert4($this.$length1, $value);
},
jl_AbstractStringBuilder_insert6 = ($this, $target, $value) => {
    let var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, var$16, $pos, $i, $intDigit, var$20;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        if (1.0 / $value === Infinity) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 48;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 46;
            $this.$buffer.data[var$5] = 48;
            return $this;
        }
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent0;
    $negative = $number.$sign3;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros0($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    $leadingZeros = 0;
    $leadingZero = 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $intPart = 0;
            $leadingZeros = ( -$exp | 0) - 1 | 0;
            $leadingZero = 1;
            $sz = $sz + 1 | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + ($digits + $leadingZeros | 0) | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$16 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$16 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    if ($leadingZero) {
        var$4 = $this.$buffer.data;
        var$3 = var$16 + 1 | 0;
        var$4[var$16] = 48;
        var$4 = $this.$buffer.data;
        var$16 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        while (true) {
            var$3 = $leadingZeros + (-1) | 0;
            if ($leadingZeros <= 0)
                break;
            var$4 = $this.$buffer.data;
            var$5 = var$16 + 1 | 0;
            var$4[var$16] = 48;
            $leadingZeros = var$3;
            var$16 = var$5;
        }
    }
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$16 + 1 | 0;
        var$4[var$16] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$16 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$16 = var$5 + 1 | 0;
            var$4[var$5] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$3 = var$16 + 1 | 0;
        var$4[var$16] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp | 0;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp < 10)
            var$20 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$20 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$20] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
},
jl_AbstractStringBuilder_append4 = ($this, $value) => {
    return $this.$insert5($this.$length1, $value);
},
jl_AbstractStringBuilder_insert4 = ($this, $target, $value) => {
    let var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, var$16, $pos, $i, $intDigit, var$20;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        if (1.0 / $value === Infinity) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 48;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 46;
            $this.$buffer.data[var$5] = 48;
            return $this;
        }
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_doubleAnalysisResult;
    otcit_DoubleAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa0;
    $exp = $number.$exponent;
    $negative = $number.$sign2;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 18;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    $leadingZeros = 0;
    $leadingZero = 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $intPart = 0;
            $leadingZeros = ( -$exp | 0) - 1 | 0;
            $leadingZero = 1;
            $sz = $sz + 1 | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if (!($exp > (-100) && $exp < 100))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + ($digits + $leadingZeros | 0) | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$16 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$16 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = Long_create(1569325056, 23283064);
    if ($leadingZero) {
        var$4 = $this.$buffer.data;
        var$3 = var$16 + 1 | 0;
        var$4[var$16] = 48;
        var$4 = $this.$buffer.data;
        var$16 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        while (true) {
            var$3 = $leadingZeros + (-1) | 0;
            if ($leadingZeros <= 0)
                break;
            var$4 = $this.$buffer.data;
            var$5 = var$16 + 1 | 0;
            var$4[var$16] = 48;
            $leadingZeros = var$3;
            var$16 = var$5;
        }
    }
    $i = 0;
    while ($i < $digits) {
        if (Long_le($pos, Long_ZERO))
            $intDigit = 0;
        else {
            $intDigit = Long_lo(Long_div($mantissa, $pos));
            $mantissa = Long_rem($mantissa, $pos);
        }
        var$4 = $this.$buffer.data;
        var$3 = var$16 + 1 | 0;
        var$4[var$16] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$16 = var$3;
        else {
            var$4 = $this.$buffer.data;
            var$16 = var$3 + 1 | 0;
            var$4[var$3] = 46;
        }
        $pos = Long_div($pos, Long_fromInt(10));
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$5 = var$16 + 1 | 0;
        var$4[var$16] = 69;
        if ($exp >= 0)
            var$20 = var$5;
        else {
            $exp =  -$exp | 0;
            var$4 = $this.$buffer.data;
            var$20 = var$5 + 1 | 0;
            var$4[var$5] = 45;
        }
        if ($exp >= 100) {
            var$4 = $this.$buffer.data;
            var$3 = var$20 + 1 | 0;
            var$4[var$20] = (48 + ($exp / 100 | 0) | 0) & 65535;
            $exp = $exp % 100 | 0;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = (48 + ($exp / 10 | 0) | 0) & 65535;
        } else if ($exp < 10)
            var$5 = var$20;
        else {
            var$4 = $this.$buffer.data;
            var$5 = var$20 + 1 | 0;
            var$4[var$20] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$5] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
},
jl_AbstractStringBuilder_trailingDecimalZeros0 = $n => {
    let $result, $zeros, var$4, var$5;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    var$5 = var$4 * 100 | 0;
    if ($n % var$5 | 0)
        var$5 = var$4;
    else
        $result = $result | 2;
    if (!($n % (var$5 * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
},
jl_AbstractStringBuilder_trailingDecimalZeros = $n => {
    let $zeros, $result, $bit, $i;
    $zeros = Long_fromInt(1);
    $result = 0;
    $bit = 16;
    jl_AbstractStringBuilder$Constants_$callClinit();
    $i = jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data.length - 1 | 0;
    while ($i >= 0) {
        if (Long_eq(Long_rem($n, Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i])), Long_ZERO)) {
            $result = $result | $bit;
            $zeros = Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i]);
        }
        $bit = $bit >>> 1 | 0;
        $i = $i + (-1) | 0;
    }
    return $result;
},
jl_AbstractStringBuilder_append = ($this, $c) => {
    return $this.$insert6($this.$length1, $c);
},
jl_AbstractStringBuilder_insert0 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
},
jl_AbstractStringBuilder_insert2 = ($this, $index, $obj) => {
    return $this.$insert0($index, $obj === null ? $rt_s(94) : $obj.$toString());
},
jl_AbstractStringBuilder_append6 = ($this, $b) => {
    return $this.$insert7($this.$length1, $b);
},
jl_AbstractStringBuilder_insert1 = ($this, $index, $b) => {
    return $this.$insert0($index, !$b ? $rt_s(95) : $rt_s(96));
},
jl_AbstractStringBuilder_ensureCapacity = ($this, $capacity) => {
    let $newLength;
    if ($this.$buffer.data.length >= $capacity)
        return;
    $newLength = $this.$buffer.data.length >= 1073741823 ? 2147483647 : jl_Math_max($capacity, jl_Math_max($this.$buffer.data.length * 2 | 0, 5));
    $this.$buffer = ju_Arrays_copyOf1($this.$buffer, $newLength);
},
jl_AbstractStringBuilder_toString = $this => {
    return jl_String__init_2($this.$buffer, 0, $this.$length1);
},
jl_AbstractStringBuilder_length = $this => {
    return $this.$length1;
},
jl_AbstractStringBuilder_charAt = ($this, $index) => {
    if ($index >= 0 && $index < $this.$length1)
        return $this.$buffer.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_append3 = ($this, $s, $start, $end) => {
    return $this.$insert8($this.$length1, $s, $start, $end);
},
jl_AbstractStringBuilder_insert5 = ($this, $index, $s, $i, $end) => {
    let var$5, var$6;
    if ($i <= $end && $end <= $s.$length() && $i >= 0) {
        jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
        while ($i < $end) {
            var$5 = $this.$buffer.data;
            var$6 = $index + 1 | 0;
            var$5[$index] = $s.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$6;
        }
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_append10 = ($this, $s) => {
    return $this.$append4($s, 0, $s.$length());
},
jl_AbstractStringBuilder_insert7 = ($this, $index, $s) => {
    return $this.$insert8($index, $s, 0, $s.$length());
},
jl_AbstractStringBuilder_append1 = ($this, $chars, $offset, $len) => {
    return $this.$insert9($this.$length1, $chars, $offset, $len);
},
jl_AbstractStringBuilder_insert = ($this, $index, $chars, $offset, $len) => {
    let var$5, var$6, var$7, var$8, var$9;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        var$8 = $index + 1 | 0;
        var$9 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = var$8;
        $offset = var$9;
    }
    return $this;
},
jl_AbstractStringBuilder_append0 = ($this, $chars) => {
    return $this.$append5($chars, 0, $chars.data.length);
},
jl_AbstractStringBuilder_setLength = ($this, $newLength) => {
    $this.$length1 = $newLength;
},
jl_AbstractStringBuilder_deleteCharAt = ($this, $i) => {
    let var$2, var$3, $i_0;
    if ($i >= 0 && $i < $this.$length1) {
        $this.$length1 = $this.$length1 - 1 | 0;
        while ($i < $this.$length1) {
            var$2 = $this.$buffer.data;
            var$3 = $this.$buffer.data;
            $i_0 = $i + 1 | 0;
            var$2[$i] = var$3[$i_0];
            $i = $i_0;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_delete = ($this, $start, $end) => {
    let var$3, $sz, $i, var$6, var$7, var$8;
    if ($start >= 0) {
        var$3 = $rt_compare($start, $end);
        if (var$3 <= 0 && $start <= $this.$length1) {
            if (!var$3)
                return $this;
            if ($end > $this.$length1)
                $end = $this.$length1;
            $sz = $this.$length1 - $end | 0;
            $this.$length1 = $this.$length1 - ($end - $start | 0) | 0;
            $i = 0;
            while ($i < $sz) {
                var$6 = $this.$buffer.data;
                var$3 = $start + 1 | 0;
                var$7 = $this.$buffer.data;
                var$8 = $end + 1 | 0;
                var$6[$start] = var$7[$end];
                $i = $i + 1 | 0;
                $start = var$3;
                $end = var$8;
            }
            return $this;
        }
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_replace = ($this, $start, $end, $str) => {
    let $oldSize, $i, var$6, var$7;
    if ($start >= 0 && $start <= $end && $start <= $this.$length1) {
        if ($end > $this.$length1)
            $end = $this.$length1;
        $oldSize = $end - $start | 0;
        if ($str.$length() > $oldSize)
            jl_AbstractStringBuilder_insertSpace($this, $end, $start + $str.$length() | 0);
        else if ($str.$length() < $oldSize)
            $this.$delete($start + $str.$length() | 0, $end);
        $i = 0;
        while ($i < $str.$length()) {
            var$6 = $this.$buffer.data;
            var$7 = $start + 1 | 0;
            var$6[$start] = $str.$charAt($i);
            $i = $i + 1 | 0;
            $start = var$7;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_insertSpace = ($this, $start, $end) => {
    let $sz, $i;
    $sz = $this.$length1 - $start | 0;
    $this.$ensureCapacity(($this.$length1 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        $this.$buffer.data[$end + $i | 0] = $this.$buffer.data[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length1 = $this.$length1 + ($end - $start | 0) | 0;
},
jl_AbstractStringBuilder_setCharAt = ($this, $index, $ch) => {
    if ($index > $this.$length1)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $this.$buffer.data[$index] = $ch;
},
jl_Appendable = $rt_classWithoutFields(0),
jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuffer__init_ = ($this, $capacity) => {
    jl_AbstractStringBuilder__init_($this, $capacity);
},
jl_StringBuffer__init_2 = var_0 => {
    let var_1 = new jl_StringBuffer();
    jl_StringBuffer__init_(var_1, var_0);
    return var_1;
},
jl_StringBuffer__init_0 = $this => {
    jl_AbstractStringBuilder__init_0($this);
};
let jl_StringBuffer__init_1 = () => {
    let var_0 = new jl_StringBuffer();
    jl_StringBuffer__init_0(var_0);
    return var_0;
},
jl_StringBuffer_append0 = ($this, $c) => {
    jl_AbstractStringBuilder_append($this, $c);
    return $this;
},
jl_StringBuffer_append1 = ($this, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_append1($this, $chars, $offset, $len);
    return $this;
},
jl_StringBuffer_append = ($this, $chars) => {
    jl_AbstractStringBuilder_append0($this, $chars);
    return $this;
},
jl_StringBuffer_insert0 = ($this, $index, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_insert($this, $index, $chars, $offset, $len);
    return $this;
},
jl_StringBuffer_insert2 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insert0($this, $index, $c);
    return $this;
},
jl_StringBuffer_insert = ($this, var$1, var$2, var$3, var$4) => {
    return $this.$insert10(var$1, var$2, var$3, var$4);
},
jl_StringBuffer_append2 = ($this, var$1, var$2, var$3) => {
    return $this.$append8(var$1, var$2, var$3);
},
jl_StringBuffer_charAt = ($this, var$1) => {
    return jl_AbstractStringBuilder_charAt($this, var$1);
},
jl_StringBuffer_length = $this => {
    return jl_AbstractStringBuilder_length($this);
},
jl_StringBuffer_toString = $this => {
    return jl_AbstractStringBuilder_toString($this);
},
jl_StringBuffer_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuffer_insert1 = ($this, var$1, var$2) => {
    return $this.$insert11(var$1, var$2);
};
function onne_NostrEvent$Coordinates() {
    let a = this; jl_Record.call(a);
    a.$type0 = null;
    a.$kind0 = null;
    a.$coords0 = null;
}
let onne_NostrEvent$Coordinates__init_0 = ($this, $type, $kind, $coords) => {
    jl_Record__init_($this);
    $this.$type0 = $type;
    $this.$kind0 = $kind;
    $this.$coords0 = $coords;
},
onne_NostrEvent$Coordinates__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onne_NostrEvent$Coordinates();
    onne_NostrEvent$Coordinates__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onne_NostrEvent$Coordinates_toString = $this => {
    return ((((((((jl_StringBuilder__init_1($rt_s(97))).$append1($rt_s(98))).$append($this.$type0)).$append1($rt_s(99))).$append($this.$kind0)).$append1($rt_s(100))).$append($this.$coords0)).$append1($rt_s(62))).$toString();
},
onne_NostrEvent$Coordinates_hashCode = $this => {
    return ((((31 + ju_Objects_hashCode($this.$type0) | 0) * 31 | 0) + ju_Objects_hashCode($this.$kind0) | 0) * 31 | 0) + ju_Objects_hashCode($this.$coords0) | 0;
},
onne_NostrEvent$Coordinates_equals = ($this, $o) => {
    let var$2, var$3;
    if ($this === $o)
        var$2 = 1;
    else if ($o !== null && jl_Object_getClass($o) === $rt_cls(onne_NostrEvent$Coordinates)) {
        var$3 = $o;
        var$2 = !ju_Objects_equals($this.$type0, var$3.$type0) ? 0 : !ju_Objects_equals($this.$kind0, var$3.$kind0) ? 0 : ju_Objects_equals($this.$coords0, var$3.$coords0) ? 1 : 0;
    } else
        var$2 = 0;
    return var$2;
},
onne_NostrEvent$Coordinates_type = $this => {
    return $this.$type0;
},
onne_NostrEvent$Coordinates_kind = $this => {
    return $this.$kind0;
},
onne_NostrEvent$Coordinates_coords = $this => {
    return $this.$coords0;
},
onne_NostrEvent$Coordinates_kind$exported$0 = var$1 => {
    return $rt_ustr(onne_NostrEvent$Coordinates_kind(var$1));
},
onne_NostrEvent$Coordinates__init_$exported$1 = (var$1, var$2, var$3) => {
    return onne_NostrEvent$Coordinates__init_($rt_str(var$1), $rt_str(var$2), $rt_str(var$3));
},
onne_NostrEvent$Coordinates_toString$exported$2 = var$1 => {
    return $rt_ustr(onne_NostrEvent$Coordinates_toString(var$1));
},
onne_NostrEvent$Coordinates_equals$exported$3 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onne_NostrEvent$Coordinates_equals(var$1, var$2);
},
onne_NostrEvent$Coordinates_coords$exported$4 = var$1 => {
    return $rt_ustr(onne_NostrEvent$Coordinates_coords(var$1));
},
onne_NostrEvent$Coordinates_type$exported$5 = var$1 => {
    return $rt_ustr(onne_NostrEvent$Coordinates_type(var$1));
},
onne_NostrEvent$Coordinates_hashCode$exported$6 = var$1 => {
    return onne_NostrEvent$Coordinates_hashCode(var$1);
};
function jn_Buffer() {
    let a = this; jl_Object.call(a);
    a.$position3 = 0;
    a.$limit2 = 0;
    a.$mark = 0;
}
let jn_Buffer__init_ = $this => {
    jl_Object__init_($this);
    $this.$mark = (-1);
},
jn_Buffer_capacity = $this => {
    return $this.$capacityImpl();
},
jn_Buffer_position = $this => {
    return $this.$position3;
},
jn_Buffer_position0 = ($this, $newPosition) => {
    let var$2, var$3, var$4;
    if ($newPosition >= 0 && $newPosition <= $this.$limit2) {
        $this.$position3 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$limit2;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(101)), $newPosition), $rt_s(102)), var$3), 93);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_Buffer_limit = $this => {
    return $this.$limit2;
},
jn_Buffer_flip = $this => {
    $this.$limit2 = $this.$position3;
    $this.$position3 = 0;
    $this.$mark = (-1);
    return $this;
},
jn_Buffer_rewind = $this => {
    $this.$mark = (-1);
    $this.$position3 = 0;
    return $this;
},
jn_Buffer_remaining = $this => {
    return $this.$limit2 - $this.$position3 | 0;
},
jn_Buffer_hasRemaining = $this => {
    return $this.$position3 >= $this.$limit2 ? 0 : 1;
},
jur_SpecialToken = $rt_classWithoutFields(),
jur_SpecialToken__init_ = $this => {
    jl_Object__init_($this);
};
function jur_AbstractCharClass() {
    let a = this; jur_SpecialToken.call(a);
    a.$alt = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints0 = 0;
}
let jur_AbstractCharClass_charClasses = null,
jur_AbstractCharClass_$callClinit = () => {
    jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
    jur_AbstractCharClass__clinit_();
},
jur_AbstractCharClass__init_ = $this => {
    jur_AbstractCharClass_$callClinit();
    jur_SpecialToken__init_($this);
    $this.$lowHighSurrogates = ju_BitSet__init_2(2048);
},
jur_AbstractCharClass_getBits = $this => {
    return null;
},
jur_AbstractCharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_AbstractCharClass_hasLowHighSurrogates = $this => {
    return !$this.$altSurrogates ? ($this.$lowHighSurrogates.$nextSetBit(0) >= 2048 ? 0 : 1) : $this.$lowHighSurrogates.$nextClearBit(0) >= 2048 ? 0 : 1;
},
jur_AbstractCharClass_mayContainSupplCodepoints = $this => {
    return $this.$mayContainSupplCodepoints0;
},
jur_AbstractCharClass_getInstance = $this => {
    return $this;
},
jur_AbstractCharClass_getSurrogates = $this => {
    let $lHS;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithSurrogates = jur_AbstractCharClass$1__init_0($this, $lHS);
        $this.$charClassWithSurrogates.$setNegative($this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
},
jur_AbstractCharClass_getWithoutSurrogates = $this => {
    let $lHS;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithoutSurrogates = jur_AbstractCharClass$2__init_0($this, $lHS, $this);
        $this.$charClassWithoutSurrogates.$setNegative($this.$isNegative());
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints0;
    }
    return $this.$charClassWithoutSurrogates;
},
jur_AbstractCharClass_hasUCI = $this => {
    return 0;
},
jur_AbstractCharClass_setNegative = ($this, $value) => {
    if ($this.$alt ^ $value) {
        $this.$alt = $this.$alt ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    return $this;
},
jur_AbstractCharClass_isNegative = $this => {
    return $this.$alt;
},
jur_AbstractCharClass_intersects0 = ($cc, $ch) => {
    jur_AbstractCharClass_$callClinit();
    return $cc.$contains0($ch);
},
jur_AbstractCharClass_intersects = ($cc1, $cc2) => {
    jur_AbstractCharClass_$callClinit();
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null)
        return ($cc1.$getBits()).$intersects($cc2.$getBits());
    return 1;
},
jur_AbstractCharClass_getPredefinedClass = ($name, $negative) => {
    jur_AbstractCharClass_$callClinit();
    return (jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name)).$getValue1($negative);
},
jur_AbstractCharClass__clinit_ = () => {
    jur_AbstractCharClass_charClasses = jur_AbstractCharClass$PredefinedCharacterClasses__init_0();
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$023 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_ = ($this, $this$0) => {
    $this.$this$023 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains = ($this, $ch) => {
    return jl_Character_isUnicodeIdentifierPart($ch);
},
onnn_Nip44 = $rt_classWithoutFields(),
onnn_Nip44_NIP44_V2_BYTES = null,
onnn_Nip44_executor = null,
onnn_Nip44_$assertionsDisabled = 0,
onnn_Nip44_$callClinit = () => {
    onnn_Nip44_$callClinit = $rt_eraseClinit(onnn_Nip44);
    onnn_Nip44__clinit_();
},
onnn_Nip44__init_ = $this => {
    onnn_Nip44_$callClinit();
    jl_Object__init_($this);
},
onnn_Nip44__init_0 = () => {
    let var_0 = new onnn_Nip44();
    onnn_Nip44__init_(var_0);
    return var_0;
},
onnn_Nip44_getConversationKeySync = ($privateKey, $publicKey) => {
    let $pub, $shared, $sharedX;
    onnn_Nip44_$callClinit();
    $pub = onnn_Nip44_concatBytes(2, (-2147483648), onnk_NostrPublicKey__array($publicKey), null, null, (-1));
    $shared = (onp_NGEUtils_getPlatform()).$secp256k1SharedSecret(onnk_NostrPrivateKey__array($privateKey), $pub);
    $sharedX = ju_Arrays_copyOfRange($shared, 1, 33);
    if (!onnn_Nip44_$assertionsDisabled && $sharedX.data.length != 32)
        $rt_throw(jl_AssertionError__init_());
    return (onp_NGEUtils_getPlatform()).$hkdf_extract(onnn_Nip44_NIP44_V2_BYTES, $sharedX);
},
onnn_Nip44_safeNonce = $nonce => {
    onnn_Nip44_$callClinit();
    a: {
        if ($nonce !== null) {
            if ($nonce.data.length == 32)
                break a;
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(103)));
        }
        $nonce = (onp_NGEUtils_getPlatform()).$randomBytes(32);
        if (!onnn_Nip44_$assertionsDisabled && onp_NGEUtils_allZeroes($nonce))
            $rt_throw(jl_AssertionError__init_());
    }
    return $nonce;
},
onnn_Nip44_getMessageKeys = ($conversationKey, $nonce) => {
    let var$3, $keys, $chachaKey, $chachaNonce, $hmacKey;
    onnn_Nip44_$callClinit();
    if ($conversationKey !== null && $conversationKey.data.length == 32) {
        var$3 = onnn_Nip44_safeNonce($nonce);
        $keys = (onp_NGEUtils_getPlatform()).$hkdf_expand($conversationKey, var$3, 76);
        $chachaKey = ju_Arrays_copyOfRange($keys, 0, 32);
        $chachaNonce = ju_Arrays_copyOfRange($keys, 32, 44);
        $hmacKey = ju_Arrays_copyOfRange($keys, 44, 76);
        return $rt_wrapArray($rt_arraycls($rt_bytecls), [$chachaKey, $chachaNonce, $hmacKey]);
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(104)));
},
onnn_Nip44_calcPaddedLength = $length => {
    let var$2, $nextPower, $chunk;
    onnn_Nip44_$callClinit();
    if ($length < 1)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(105)));
    if ($length <= 32)
        return 32;
    var$2 = $length - 1 | 0;
    $nextPower = 1 << (32 - jl_Integer_numberOfLeadingZeros(var$2) | 0);
    $chunk = $nextPower <= 256 ? 32 : $nextPower / 8 | 0;
    return $rt_imul($chunk, (var$2 / $chunk | 0) + 1 | 0);
},
onnn_Nip44_pad = $plaintext => {
    let $unpadded, var$3, $unpaddedLen, $paddedLen;
    onnn_Nip44_$callClinit();
    jnc_StandardCharsets_$callClinit();
    $unpadded = $plaintext.$getBytes(jnc_StandardCharsets_UTF_8);
    var$3 = $unpadded.data;
    $unpaddedLen = var$3.length;
    $paddedLen = onnn_Nip44_calcPaddedLength($unpaddedLen);
    return onnn_Nip44_concatBytes($unpaddedLen >> 8 & 255, $unpaddedLen & 255, $unpadded, null, null, $paddedLen + 2 | 0);
},
onnn_Nip44_encryptSync = ($plaintext, $conversationKey, $nonce) => {
    let var$4, $keys, var$6, $chachaKey, $chachaNonce, $hmacKey, $padded, $ciphertext, $mac, $out;
    onnn_Nip44_$callClinit();
    if ($conversationKey !== null && $conversationKey.data.length == 32) {
        var$4 = onnn_Nip44_safeNonce($nonce);
        $keys = onnn_Nip44_getMessageKeys($conversationKey, var$4);
        var$6 = $keys.data;
        $chachaKey = var$6[0];
        $chachaNonce = var$6[1];
        $hmacKey = var$6[2];
        $padded = onnn_Nip44_pad($plaintext);
        $ciphertext = (onp_NGEUtils_getPlatform()).$chacha20($chachaKey, $chachaNonce, $padded, 1);
        $mac = (onp_NGEUtils_getPlatform()).$hmac($hmacKey, var$4, $ciphertext);
        $out = onnn_Nip44_concatBytes(2, (-2147483648), var$4, $ciphertext, $mac, (-1));
        return (onp_NGEUtils_getPlatform()).$base64encode($out);
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(104)));
},
onnn_Nip44_encryptSync0 = ($plaintext, $conversationKey) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_encryptSync($plaintext, $conversationKey, null);
},
onnn_Nip44_decodePayload = $payload => {
    let $plen, $data, var$4, $dataLen, var$6, var$7, var$8, $nonce, $ciphertext, $mac;
    onnn_Nip44_$callClinit();
    $plen = $payload.$length();
    if ($plen >= 132 && $plen <= 87472) {
        if ($payload.$charAt(0) == 35)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(106)));
        $data = (onp_NGEUtils_getPlatform()).$base64decode($payload);
        var$4 = $data.data;
        $dataLen = var$4.length;
        if ($dataLen >= 66 && $dataLen <= 65603) {
            if (var$4[0] != 2) {
                var$6 = new jl_IllegalArgumentException;
                var$7 = var$4[0];
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(107)), var$7 << 24 >> 24);
                jl_IllegalArgumentException__init_1(var$6, jl_StringBuilder_toString(var$8));
                $rt_throw(var$6);
            }
            $nonce = ju_Arrays_copyOfRange($data, 1, 33);
            var$7 = $dataLen - 32 | 0;
            $ciphertext = ju_Arrays_copyOfRange($data, 33, var$7);
            $mac = ju_Arrays_copyOfRange($data, var$7, $dataLen);
            return $rt_wrapArray($rt_arraycls($rt_bytecls), [$nonce, $ciphertext, $mac]);
        }
        var$6 = new jl_IllegalArgumentException;
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(108)), $dataLen);
        jl_IllegalArgumentException__init_1(var$6, jl_StringBuilder_toString(var$8));
        $rt_throw(var$6);
    }
    var$6 = new jl_IllegalArgumentException;
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(109)), $plen);
    jl_IllegalArgumentException__init_1(var$6, jl_StringBuilder_toString(var$8));
    $rt_throw(var$6);
},
onnn_Nip44_decryptSync = ($payload, $conversationKey) => {
    let $decodedPayload, var$4, $nonce, $ciphertext, $mac, $keys, $chachaKey, $chachaNonce, $hmacKey, $calculatedMac, $padded, var$14, $unpaddedLen, $unpadded, var$17;
    onnn_Nip44_$callClinit();
    if ($conversationKey !== null && $conversationKey.data.length == 32) {
        $decodedPayload = onnn_Nip44_decodePayload($payload);
        var$4 = $decodedPayload.data;
        $nonce = var$4[0];
        $ciphertext = var$4[1];
        $mac = var$4[2];
        $keys = onnn_Nip44_getMessageKeys($conversationKey, $nonce);
        var$4 = $keys.data;
        $chachaKey = var$4[0];
        $chachaNonce = var$4[1];
        $hmacKey = var$4[2];
        $calculatedMac = (onp_NGEUtils_getPlatform()).$hmac($hmacKey, $nonce, $ciphertext);
        if (!onnn_Nip44_constantTimeEquals($calculatedMac, $mac))
            $rt_throw(jl_SecurityException__init_0($rt_s(110)));
        $padded = (onp_NGEUtils_getPlatform()).$chacha20($chachaKey, $chachaNonce, $ciphertext, 0);
        var$4 = $padded.data;
        var$14 = var$4.length;
        if (var$14 < 3)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(111)));
        $unpaddedLen = (var$4[0] & 255) << 8 | var$4[1] & 255;
        $unpadded = ju_Arrays_copyOfRange($padded, 2, $unpaddedLen + 2 | 0);
        if ($unpaddedLen >= 1 && $unpaddedLen <= 65535 && $unpadded.data.length == $unpaddedLen && var$14 == (2 + onnn_Nip44_calcPaddedLength($unpaddedLen) | 0)) {
            var$17 = new jl_String;
            jnc_StandardCharsets_$callClinit();
            jl_String__init_0(var$17, $unpadded, jnc_StandardCharsets_UTF_8);
            return var$17;
        }
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(111)));
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(104)));
},
onnn_Nip44_constantTimeEquals = ($a, $b) => {
    let var$3, var$4, var$5, $result, $i;
    onnn_Nip44_$callClinit();
    var$3 = $b.data;
    var$4 = $a.data;
    var$5 = var$4.length;
    if (var$5 != var$3.length)
        return 0;
    $result = 0;
    $i = 0;
    while ($i < var$5) {
        $result = $result | var$4[$i] ^ var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result ? 0 : 1;
},
onnn_Nip44_concatBytes = ($bb, $cc, $a, $b, $c, $len) => {
    let $l, var$8, var$9, $out, $i;
    onnn_Nip44_$callClinit();
    $l = 0;
    var$8 = $rt_compare($bb, (-2147483648));
    if (var$8)
        $l = 1;
    var$9 = $rt_compare($cc, (-2147483648));
    if (var$9)
        $l = $l + 1 | 0;
    if ($a !== null)
        $l = $l + $a.data.length | 0;
    if ($b !== null)
        $l = $l + $b.data.length | 0;
    if ($c !== null)
        $l = $l + $c.data.length | 0;
    if ($len < $l)
        $len = $l;
    $out = $rt_createByteArray($len);
    $i = 0;
    if (var$8) {
        $out.data[$i] = $bb << 24 >> 24;
        $i = 1;
    }
    if (var$9) {
        $out.data[$i] = $cc << 24 >> 24;
        $i = $i + 1 | 0;
    }
    if ($a !== null) {
        var$9 = $a.data.length;
        jl_System_fastArraycopy($a, 0, $out, $i, var$9);
        $i = $i + var$9 | 0;
    }
    if ($b !== null) {
        var$9 = $b.data.length;
        jl_System_fastArraycopy($b, 0, $out, $i, var$9);
        $i = $i + var$9 | 0;
    }
    if ($c !== null) {
        var$9 = $c.data.length;
        jl_System_fastArraycopy($c, 0, $out, $i, var$9);
        $i = $i + var$9 | 0;
    }
    if (!onnn_Nip44_$assertionsDisabled && $i != $l)
        $rt_throw(jl_AssertionError__init_());
    return $out;
},
onnn_Nip44_encrypt0 = ($plaintext, $conversationKey, $nonce) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_executor.$run0(onnn_Nip44$encrypt$lambda$_12_0__init_0($plaintext, $conversationKey, $nonce));
},
onnn_Nip44_encrypt = ($plaintext, $conversationKey) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_executor.$run0(onnn_Nip44$encrypt$lambda$_13_0__init_0($plaintext, $conversationKey));
},
onnn_Nip44_decrypt = ($payload, $conversationKey) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_executor.$run0(onnn_Nip44$decrypt$lambda$_14_0__init_0($payload, $conversationKey));
},
onnn_Nip44_getConversationKey = ($privateKey, $publicKey) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_executor.$run0(onnn_Nip44$getConversationKey$lambda$_15_0__init_0($privateKey, $publicKey));
},
onnn_Nip44_lambda$getConversationKey$3 = ($privateKey, $publicKey) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_getConversationKeySync($privateKey, $publicKey);
},
onnn_Nip44_lambda$decrypt$2 = ($payload, $conversationKey) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_decryptSync($payload, $conversationKey);
},
onnn_Nip44_lambda$encrypt$1 = ($plaintext, $conversationKey) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_encryptSync0($plaintext, $conversationKey);
},
onnn_Nip44_lambda$encrypt$0 = ($plaintext, $conversationKey, $nonce) => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44_encryptSync($plaintext, $conversationKey, $nonce);
},
onnn_Nip44__clinit_ = () => {
    onnn_Nip44_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnn_Nip44)) ? 0 : 1;
    jnc_StandardCharsets_$callClinit();
    onnn_Nip44_NIP44_V2_BYTES = $rt_s(112).$getBytes(jnc_StandardCharsets_UTF_8);
    onnn_Nip44_executor = (onp_NGEUtils_getPlatform()).$newAsyncExecutor($rt_cls(onnn_Nip44));
},
onnn_Nip44__init_$exported$0 = () => {
    onnn_Nip44_$callClinit();
    return onnn_Nip44__init_0();
},
onnn_Nip44_getConversationKeySync$exported$0 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap0(onnn_Nip44_getConversationKeySync(var$1, var$2));
},
onnn_Nip44_safeNonce$exported$1 = var$1 => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap0(onnn_Nip44_safeNonce(otji_JS_unwrapByteArray(var$1)));
},
onnn_Nip44_getMessageKeys$exported$2 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_map(onnn_Nip44_getMessageKeys(otji_JS_unwrapByteArray(var$1), otji_JS_unwrapByteArray(var$2)), otji_JS_byteArrayWrapper());
},
onnn_Nip44_calcPaddedLength$exported$3 = var$1 => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip44_calcPaddedLength(var$1);
},
onnn_Nip44_pad$exported$4 = var$1 => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap0(onnn_Nip44_pad($rt_str(var$1)));
},
onnn_Nip44_encryptSync$exported$5 = (var$1, var$2, var$3) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip44_encryptSync($rt_str(var$1), otji_JS_unwrapByteArray(var$2), otji_JS_unwrapByteArray(var$3)));
},
onnn_Nip44_encryptSync$exported$6 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip44_encryptSync0($rt_str(var$1), otji_JS_unwrapByteArray(var$2)));
},
onnn_Nip44_decodePayload$exported$7 = var$1 => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_map(onnn_Nip44_decodePayload($rt_str(var$1)), otji_JS_byteArrayWrapper());
},
onnn_Nip44_decryptSync$exported$8 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip44_decryptSync($rt_str(var$1), otji_JS_unwrapByteArray(var$2)));
},
onnn_Nip44_constantTimeEquals$exported$9 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onnn_Nip44_constantTimeEquals(otji_JS_unwrapByteArray(var$1), otji_JS_unwrapByteArray(var$2));
},
onnn_Nip44_concatBytes$exported$10 = (var$1, var$2, var$3, var$4, var$5, var$6) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap0(onnn_Nip44_concatBytes(var$1, var$2, otji_JS_unwrapByteArray(var$3), otji_JS_unwrapByteArray(var$4), otji_JS_unwrapByteArray(var$5), var$6));
},
onnn_Nip44_encrypt$exported$11 = (var$1, var$2, var$3) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip44_encrypt0($rt_str(var$1), otji_JS_unwrapByteArray(var$2), otji_JS_unwrapByteArray(var$3));
},
onnn_Nip44_encrypt$exported$12 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip44_encrypt($rt_str(var$1), otji_JS_unwrapByteArray(var$2));
},
onnn_Nip44_decrypt$exported$13 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip44_decrypt($rt_str(var$1), otji_JS_unwrapByteArray(var$2));
},
onnn_Nip44_getConversationKey$exported$14 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip44_getConversationKey(var$1, var$2);
},
onnn_Nip44_lambda$getConversationKey$3$exported$15 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap0(onnn_Nip44_lambda$getConversationKey$3(var$1, var$2));
},
onnn_Nip44_lambda$decrypt$2$exported$16 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip44_lambda$decrypt$2($rt_str(var$1), otji_JS_unwrapByteArray(var$2)));
},
onnn_Nip44_lambda$encrypt$1$exported$17 = (var$1, var$2) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip44_lambda$encrypt$1($rt_str(var$1), otji_JS_unwrapByteArray(var$2)));
},
onnn_Nip44_lambda$encrypt$0$exported$18 = (var$1, var$2, var$3) => {
    onnn_Nip44_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip44_lambda$encrypt$0($rt_str(var$1), otji_JS_unwrapByteArray(var$2), otji_JS_unwrapByteArray(var$3)));
};
let jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields(),
jur_AbstractCharClass$PredefinedCharacterClasses_space = null,
jur_AbstractCharClass$PredefinedCharacterClasses_digit = null,
jur_AbstractCharClass$PredefinedCharacterClasses_contents = null,
jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = () => {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
},
jur_AbstractCharClass$PredefinedCharacterClasses__init_ = $this => {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
    jl_Object__init_($this);
},
jur_AbstractCharClass$PredefinedCharacterClasses__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$PredefinedCharacterClasses();
    jur_AbstractCharClass$PredefinedCharacterClasses__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$PredefinedCharacterClasses_getObject = ($this, $name) => {
    let $i, $row, var$4;
    $i = 0;
    while (true) {
        jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
        if ($i >= jur_AbstractCharClass$PredefinedCharacterClasses_contents.data.length)
            $rt_throw(ju_MissingResourceException__init_0($rt_s(23), $rt_s(23), $name));
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data[$i];
        var$4 = $row.data;
        if ($name.$equals(var$4[0]))
            break;
        $i = $i + 1 | 0;
    }
    return var$4[1];
},
jur_AbstractCharClass$PredefinedCharacterClasses__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_0();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_0();
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(113);
    var$4[1] = jur_AbstractCharClass$LazyLower__init_0();
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(114);
    var$4[1] = jur_AbstractCharClass$LazyUpper__init_0();
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(115);
    var$4[1] = jur_AbstractCharClass$LazyASCII__init_0();
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(116);
    var$4[1] = jur_AbstractCharClass$LazyAlpha__init_0();
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(117);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[4] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(118);
    var$4[1] = jur_AbstractCharClass$LazyAlnum__init_0();
    var$2[5] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(119);
    var$4[1] = jur_AbstractCharClass$LazyPunct__init_0();
    var$2[6] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(120);
    var$4[1] = jur_AbstractCharClass$LazyGraph__init_0();
    var$2[7] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(121);
    var$4[1] = jur_AbstractCharClass$LazyPrint__init_0();
    var$2[8] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(122);
    var$4[1] = jur_AbstractCharClass$LazyBlank__init_0();
    var$2[9] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(123);
    var$4[1] = jur_AbstractCharClass$LazyCntrl__init_0();
    var$2[10] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(124);
    var$4[1] = jur_AbstractCharClass$LazyXDigit__init_0();
    var$2[11] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(125);
    var$4[1] = jur_AbstractCharClass$LazyJavaLowerCase__init_0();
    var$2[12] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(126);
    var$4[1] = jur_AbstractCharClass$LazyJavaUpperCase__init_0();
    var$2[13] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(127);
    var$4[1] = jur_AbstractCharClass$LazyJavaWhitespace__init_0();
    var$2[14] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(128);
    var$4[1] = jur_AbstractCharClass$LazyJavaMirrored__init_0();
    var$2[15] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(129);
    var$4[1] = jur_AbstractCharClass$LazyJavaDefined__init_0();
    var$2[16] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(130);
    var$4[1] = jur_AbstractCharClass$LazyJavaDigit__init_0();
    var$2[17] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(131);
    var$4[1] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0();
    var$2[18] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(132);
    var$4[1] = jur_AbstractCharClass$LazyJavaISOControl__init_0();
    var$2[19] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(133);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0();
    var$2[20] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(134);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0();
    var$2[21] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(135);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetter__init_0();
    var$2[22] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(136);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0();
    var$2[23] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(137);
    var$4[1] = jur_AbstractCharClass$LazyJavaSpaceChar__init_0();
    var$2[24] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(138);
    var$4[1] = jur_AbstractCharClass$LazyJavaTitleCase__init_0();
    var$2[25] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(139);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0();
    var$2[26] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(140);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0();
    var$2[27] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(141);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[28] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(142);
    var$4[1] = jur_AbstractCharClass$LazyWord__init_0();
    var$2[29] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(143);
    var$4[1] = jur_AbstractCharClass$LazyNonWord__init_0();
    var$2[30] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(144);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[31] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(145);
    var$4[1] = jur_AbstractCharClass$LazyNonSpace__init_0();
    var$2[32] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(146);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[33] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(147);
    var$4[1] = jur_AbstractCharClass$LazyNonDigit__init_0();
    var$2[34] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(148);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 127);
    var$2[35] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(149);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(128, 255);
    var$2[36] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(150);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(256, 383);
    var$2[37] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(151);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(384, 591);
    var$2[38] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(152);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(592, 687);
    var$2[39] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(153);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(688, 767);
    var$2[40] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(154);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(768, 879);
    var$2[41] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(155);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(880, 1023);
    var$2[42] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(156);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1024, 1279);
    var$2[43] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(157);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1280, 1327);
    var$2[44] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(158);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1328, 1423);
    var$2[45] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(159);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1424, 1535);
    var$2[46] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(160);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1536, 1791);
    var$2[47] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(161);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1792, 1871);
    var$2[48] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(162);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1872, 1919);
    var$2[49] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(163);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1920, 1983);
    var$2[50] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(164);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2304, 2431);
    var$2[51] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(165);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2432, 2559);
    var$2[52] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(166);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2560, 2687);
    var$2[53] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(167);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2688, 2815);
    var$2[54] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(168);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2816, 2943);
    var$2[55] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(169);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2944, 3071);
    var$2[56] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(170);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3072, 3199);
    var$2[57] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(171);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3200, 3327);
    var$2[58] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(172);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3328, 3455);
    var$2[59] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(173);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3456, 3583);
    var$2[60] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(174);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3584, 3711);
    var$2[61] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(175);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3712, 3839);
    var$2[62] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(176);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3840, 4095);
    var$2[63] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(177);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4096, 4255);
    var$2[64] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(178);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4256, 4351);
    var$2[65] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(179);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4352, 4607);
    var$2[66] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(180);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4608, 4991);
    var$2[67] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(181);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4992, 5023);
    var$2[68] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(182);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5024, 5119);
    var$2[69] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(183);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5120, 5759);
    var$2[70] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(184);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5760, 5791);
    var$2[71] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(185);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5792, 5887);
    var$2[72] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(186);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5888, 5919);
    var$2[73] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(187);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5920, 5951);
    var$2[74] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(188);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5952, 5983);
    var$2[75] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(189);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5984, 6015);
    var$2[76] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(190);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6016, 6143);
    var$2[77] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(191);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6144, 6319);
    var$2[78] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(192);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6400, 6479);
    var$2[79] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(193);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6480, 6527);
    var$2[80] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(194);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6528, 6623);
    var$2[81] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(195);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6624, 6655);
    var$2[82] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(196);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6656, 6687);
    var$2[83] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(197);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7424, 7551);
    var$2[84] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(198);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7552, 7615);
    var$2[85] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(199);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7616, 7679);
    var$2[86] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(200);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7680, 7935);
    var$2[87] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(201);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7936, 8191);
    var$2[88] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(202);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8192, 8303);
    var$2[89] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(203);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8304, 8351);
    var$2[90] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(204);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8352, 8399);
    var$2[91] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(205);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8400, 8447);
    var$2[92] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(206);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8448, 8527);
    var$2[93] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(207);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8528, 8591);
    var$2[94] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(208);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8592, 8703);
    var$2[95] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(209);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8704, 8959);
    var$2[96] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(210);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8960, 9215);
    var$2[97] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(211);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9216, 9279);
    var$2[98] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(212);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9280, 9311);
    var$2[99] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(213);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9312, 9471);
    var$2[100] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(214);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9472, 9599);
    var$2[101] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(215);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9600, 9631);
    var$2[102] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(216);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$2[103] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(217);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$2[104] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(218);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$2[105] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(219);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$2[106] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(220);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$2[107] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(221);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$2[108] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(222);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$2[109] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(223);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$2[110] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(224);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$2[111] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(225);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$2[112] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(226);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$2[113] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(227);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$2[114] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(228);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$2[115] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(229);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$2[116] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(230);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$2[117] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(231);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$2[118] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(232);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$2[119] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(233);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$2[120] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(234);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$2[121] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(235);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$2[122] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(236);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$2[123] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(237);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$2[124] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(238);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$2[125] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(239);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$2[126] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(240);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$2[127] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(241);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$2[128] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(242);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$2[129] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(243);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$2[130] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(244);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$2[131] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(245);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$2[132] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(246);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$2[133] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(247);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$2[134] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(248);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$2[135] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(249);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$2[136] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(250);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$2[137] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(251);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$2[138] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(252);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$2[139] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(253);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$2[140] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(254);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$2[141] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(255);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$2[142] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(256);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$2[143] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(257);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$2[144] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(258);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$2[145] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(259);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$2[146] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(260);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$2[147] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(261);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$2[148] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(262);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$2[149] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(263);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$2[150] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(264);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$2[151] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(265);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$2[152] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(266);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$2[153] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(267);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$2[154] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(268);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$2[155] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(269);
    var$4[1] = jur_AbstractCharClass$LazySpecialsBlock__init_0();
    var$2[156] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(270);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$2[157] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(271);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$2[158] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(272);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$2[159] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(273);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$2[160] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(274);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$2[161] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(275);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$2[162] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(276);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$2[163] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(277);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$2[164] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(278);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$2[165] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(279);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$2[166] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(280);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$2[167] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(281);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$2[168] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(282);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$2[169] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(283);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$2[170] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(284);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$2[171] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(285);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$2[172] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(286);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$2[173] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(287);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$2[174] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(288);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$2[175] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(289);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_2(983040, 1, 1);
    var$2[176] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(290);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$2[177] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(291);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$2[178] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(292);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$2[179] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(293);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_2(19, 0, 1);
    var$2[180] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(294);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$2[181] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(295);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$2[182] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(296);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$2[183] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(297);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$2[184] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(298);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$2[185] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(299);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$2[186] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(300);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$2[187] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(301);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$2[188] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(302);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$2[189] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(303);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$2[190] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(304);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$2[191] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(305);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$2[192] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(306);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$2[193] = var$3;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$1;
};
function onnn_BunkerUrl() {
    let a = this; jl_Object.call(a);
    a.$pubkey0 = null;
    a.$secret = null;
    a.$relays1 = null;
}
let onnn_BunkerUrl__init_1 = ($this, $pubkey, $secret, $relays) => {
    jl_Object__init_($this);
    $this.$pubkey0 = $pubkey;
    $this.$secret = $secret;
    $this.$relays1 = $relays;
},
onnn_BunkerUrl__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onnn_BunkerUrl();
    onnn_BunkerUrl__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
onnn_BunkerUrl__init_0 = ($this, $pubkey, $relays) => {
    jl_Object__init_($this);
    $this.$pubkey0 = $pubkey;
    $this.$relays1 = $relays;
    $this.$secret = null;
},
onnn_BunkerUrl__init_2 = (var_0, var_1) => {
    let var_2 = new onnn_BunkerUrl();
    onnn_BunkerUrl__init_0(var_2, var_0, var_1);
    return var_2;
},
onnn_BunkerUrl_clone0 = $this => {
    let var$1, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    return onnn_BunkerUrl__init_($this.$pubkey0, $this.$secret, $this.$relays1);
},
onnn_BunkerUrl_toString = $this => {
    let $sb, $i;
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(307));
    $sb.$append1(onnk_NostrPublicKey_asHex($this.$pubkey0));
    $i = 0;
    while ($i < $this.$relays1.$size()) {
        if ($i)
            $sb.$append1($rt_s(308));
        else
            $sb.$append1($rt_s(309));
        $sb.$append1(onnn_BunkerUrl_urlEncode($this.$relays1.$get($i)));
        $i = $i + 1 | 0;
    }
    if ($this.$secret !== null) {
        $sb.$append1($rt_s(310));
        $sb.$append1(onnn_BunkerUrl_urlEncode($this.$secret));
    }
    return $sb.$toString();
},
onnn_BunkerUrl_parse = $bunkerUrl => {
    let var$2, $relayUrls, $url, $pubkey, $secret, $query, $pairs, var$9, var$10, var$11, $pair, $idx, $key, $value;
    var$2 = $bunkerUrl.$replace($rt_s(307), $rt_s(311));
    $relayUrls = ju_ArrayList__init_();
    $url = jn_URI_toURL(jn_URI__init_(var$2));
    $pubkey = jn_URL_getHost($url);
    $secret = $rt_s(23);
    $query = jn_URL_getQuery($url);
    if ($query !== null && !$query.$isEmpty()) {
        $pairs = $query.$split0($rt_s(312));
        var$9 = $pairs.data;
        var$10 = var$9.length;
        var$11 = 0;
        while (var$11 < var$10) {
            $pair = var$9[var$11];
            $idx = $pair.$indexOf(61);
            if ($idx > 0) {
                $key = $pair.$substring(0, $idx);
                $value = onnn_BunkerUrl_urlDecode($pair.$substring0($idx + 1 | 0));
                if ($key.$equals($rt_s(313)))
                    $secret = $value;
                else if ($key.$equals($rt_s(314)))
                    $relayUrls.$add1($value);
            }
            var$11 = var$11 + 1 | 0;
        }
    }
    return onnn_BunkerUrl__init_(onnk_NostrPublicKey_fromHex($pubkey), $secret, ju_Collections_unmodifiableList($relayUrls));
},
onnn_BunkerUrl_urlEncode = $value => {
    let var$2, $e, $$je;
    a: {
        try {
            jnc_StandardCharsets_$callClinit();
            var$2 = jn_URLEncoder_encode($value, jnc_StandardCharsets_UTF_8.$toString());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_UnsupportedEncodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
},
onnn_BunkerUrl_urlDecode = $value => {
    let var$2, $e, $$je;
    a: {
        try {
            jnc_StandardCharsets_$callClinit();
            var$2 = jn_URLDecoder_decode($value, jnc_StandardCharsets_UTF_8.$toString());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_UnsupportedEncodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
},
onnn_BunkerUrl_clone = $this => {
    return $this.$clone3();
},
onnn_BunkerUrl__init_$exported$0 = (var$1, var$2, var$3) => {
    return onnn_BunkerUrl__init_(var$1, $rt_str(var$2), var$3);
},
onnn_BunkerUrl_clone$exported$1 = var$1 => {
    return var$1.$clone3();
},
onnn_BunkerUrl_toString$exported$2 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnn_BunkerUrl__init_$exported$3 = (var$1, var$2) => {
    return onnn_BunkerUrl__init_2(var$1, var$2);
},
onnn_BunkerUrl_clone$exported$4 = var$1 => {
    return otji_JSWrapper_javaToJs(var$1.$clone0());
},
onnn_BunkerUrl_parse$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_BunkerUrl_parse($rt_str(var$1));
},
onnn_BunkerUrl_urlEncode$exported$1 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_BunkerUrl_urlEncode($rt_str(var$1)));
},
onnn_BunkerUrl_urlDecode$exported$2 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_BunkerUrl_urlDecode($rt_str(var$1)));
};
function onns_NostrNIP46Signer$check$lambda$_8_0() {
    jl_Object.call(this);
    this.$_0135 = null;
}
let onns_NostrNIP46Signer$check$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0135 = var$1;
},
onns_NostrNIP46Signer$check$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$check$lambda$_8_0();
    onns_NostrNIP46Signer$check$lambda$_8_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$check$lambda$_8_0_accept0 = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer$check$lambda$_8_0_accept(var$0, var$1, var$2);
},
onns_NostrNIP46Signer$check$lambda$_8_0_accept = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer_lambda$check$13(var$0.$_0135, var$1, var$2);
},
onnls_NostrSubListener = $rt_classWithoutFields(0),
onnls_NostrSubEventListener = $rt_classWithoutFields(0);
function onnrs_NostrRTCSignaling$1() {
    jl_Object.call(this);
    this.$this$018 = null;
}
let onnrs_NostrRTCSignaling$1__init_0 = ($this, $this$0) => {
    $this.$this$018 = $this$0;
    jl_Object__init_($this);
},
onnrs_NostrRTCSignaling$1__init_ = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$1();
    onnrs_NostrRTCSignaling$1__init_0(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$1_onSubEvent = ($this, $event, $stored) => {
    $this.$this$018.$onSubEvent($event, $stored);
},
onnrs_NostrRTCSignaling$1__init_$exported$0 = var$1 => {
    return onnrs_NostrRTCSignaling$1__init_(var$1);
},
onnrs_NostrRTCSignaling$1_onSubEvent$exported$1 = (var$1, var$2, var$3) => {
    let var$4;
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    var$1.$onSubEvent(var$2, var$4);
},
jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyDigit_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(48, 57);
},
jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetter__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetter__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetter_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetter$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function jl_Enum() {
    let a = this; jl_Object.call(a);
    a.$name6 = null;
    a.$ordinal0 = 0;
}
let jl_Enum__init_ = ($this, $name, $ordinal) => {
    jl_Object__init_($this);
    $this.$name6 = $name;
    $this.$ordinal0 = $ordinal;
},
jl_Enum_name = $this => {
    return $this.$name6;
},
jl_Enum_ordinal = $this => {
    return $this.$ordinal0;
},
jl_Enum_toString = $this => {
    return $this.$name6.$toString();
},
jl_Enum_equals = ($this, $other) => {
    return $this !== $other ? 0 : 1;
},
jl_Enum_hashCode = $this => {
    return jl_Object_hashCode($this);
},
jl_Enum_getDeclaringClass = $this => {
    let $result;
    $result = jl_Object_getClass($this);
    if (!(jl_Class_getSuperclass($result)).$equals($rt_cls(jl_Enum)))
        $result = jl_Class_getSuperclass($result);
    return $result;
},
jl_Enum_compareTo = ($this, $o) => {
    let var$2, var$3, var$4, var$5;
    if (jl_Enum_getDeclaringClass($o) === jl_Enum_getDeclaringClass($this))
        return jl_Integer_compare($this.$ordinal0, jl_Enum_ordinal($o));
    var$2 = new jl_IllegalArgumentException;
    var$3 = jl_String_valueOf(jl_Enum_getDeclaringClass($this));
    var$4 = jl_String_valueOf(jl_Enum_getDeclaringClass($o));
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(315)), var$3), $rt_s(316)), var$4);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$5));
    $rt_throw(var$2);
},
jl_Enum_valueOf = ($enumType, $name) => {
    let $constants, var$4, var$5, var$6, var$7, var$8, var$9, var$10, $constant;
    $constants = jl_Class_getEnumConstants($enumType);
    if ($constants === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(317)));
    var$4 = $constants.data;
    var$5 = var$4.length;
    var$6 = 0;
    while (true) {
        if (var$6 >= var$5) {
            var$7 = new jl_IllegalArgumentException;
            var$8 = jl_String_valueOf($enumType);
            var$9 = jl_String_valueOf($name);
            var$10 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(318)), var$8), $rt_s(319)), var$9), $rt_s(320));
            jl_IllegalArgumentException__init_1(var$7, jl_StringBuilder_toString(var$10));
            $rt_throw(var$7);
        }
        $constant = var$4[var$6];
        if ((jl_Enum_name($constant)).$equals($name))
            break;
        var$6 = var$6 + 1 | 0;
    }
    return $constant;
},
jl_Enum_compareTo0 = ($this, var$1) => {
    return jl_Enum_compareTo($this, var$1);
},
jtf_TextStyle = $rt_classWithoutFields(jl_Enum),
jtf_TextStyle_FULL = null,
jtf_TextStyle_FULL_STANDALONE = null,
jtf_TextStyle_SHORT = null,
jtf_TextStyle_SHORT_STANDALONE = null,
jtf_TextStyle_NARROW = null,
jtf_TextStyle_NARROW_STANDALONE = null,
jtf_TextStyle_$VALUES = null,
jtf_TextStyle_$callClinit = () => {
    jtf_TextStyle_$callClinit = $rt_eraseClinit(jtf_TextStyle);
    jtf_TextStyle__clinit_();
},
jtf_TextStyle_values = () => {
    jtf_TextStyle_$callClinit();
    return jtf_TextStyle_$VALUES.$clone0();
},
jtf_TextStyle__init_0 = ($this, var$1, var$2) => {
    jtf_TextStyle_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jtf_TextStyle__init_ = (var_0, var_1) => {
    let var_2 = new jtf_TextStyle();
    jtf_TextStyle__init_0(var_2, var_0, var_1);
    return var_2;
},
jtf_TextStyle_$values = () => {
    let var$1, var$2;
    jtf_TextStyle_$callClinit();
    var$1 = $rt_createArray(jtf_TextStyle, 6);
    var$2 = var$1.data;
    var$2[0] = jtf_TextStyle_FULL;
    var$2[1] = jtf_TextStyle_FULL_STANDALONE;
    var$2[2] = jtf_TextStyle_SHORT;
    var$2[3] = jtf_TextStyle_SHORT_STANDALONE;
    var$2[4] = jtf_TextStyle_NARROW;
    var$2[5] = jtf_TextStyle_NARROW_STANDALONE;
    return var$1;
},
jtf_TextStyle__clinit_ = () => {
    jtf_TextStyle_FULL = jtf_TextStyle__init_($rt_s(321), 0);
    jtf_TextStyle_FULL_STANDALONE = jtf_TextStyle__init_($rt_s(322), 1);
    jtf_TextStyle_SHORT = jtf_TextStyle__init_($rt_s(323), 2);
    jtf_TextStyle_SHORT_STANDALONE = jtf_TextStyle__init_($rt_s(324), 3);
    jtf_TextStyle_NARROW = jtf_TextStyle__init_($rt_s(325), 4);
    jtf_TextStyle_NARROW_STANDALONE = jtf_TextStyle__init_($rt_s(326), 5);
    jtf_TextStyle_$VALUES = jtf_TextStyle_$values();
},
juf_ToIntFunction = $rt_classWithoutFields(0),
jur_AheadFSet = $rt_classWithoutFields(jur_FSet),
jur_AheadFSet__init_ = $this => {
    jur_FSet__init_($this, (-1));
},
jur_AheadFSet__init_0 = () => {
    let var_0 = new jur_AheadFSet();
    jur_AheadFSet__init_(var_0);
    return var_0;
},
jur_AheadFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_AheadFSet_getName = $this => {
    return $rt_s(327);
},
otj_JSObject = $rt_classWithoutFields(0),
otja_ReadyStateChangeHandler = $rt_classWithoutFields(0);
function onpt_TeaVMPlatform$3() {
    let a = this; jl_Object.call(a);
    a.$val$xhr = null;
    a.$val$res = null;
    a.$val$rej = null;
}
let onpt_TeaVMPlatform$3__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$val$xhr = var$2;
    $this.$val$res = var$3;
    $this.$val$rej = var$4;
    jl_Object__init_($this);
},
onpt_TeaVMPlatform$3__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onpt_TeaVMPlatform$3();
    onpt_TeaVMPlatform$3__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onpt_TeaVMPlatform$3_stateChanged = $this => {
    let $status, var$2, var$3, var$4, var$5;
    if ($this.$val$xhr.readyState == 4) {
        $status = $this.$val$xhr.status;
        if ($status >= 200 && $status < 300)
            $this.$val$res.$accept0($rt_str($this.$val$xhr.responseText));
        else {
            var$2 = $this.$val$rej;
            var$3 = new ji_IOException;
            var$4 = $this.$val$xhr;
            var$5 = $rt_str(var$4.statusText);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(328)), $status), 32), var$5);
            ji_IOException__init_(var$3, jl_StringBuilder_toString(var$4));
            var$2.$accept0(var$3);
        }
    }
},
onpt_TeaVMPlatform$3_stateChanged$exported$0 = var$1 => {
    var$1.$stateChanged();
};
function ju_Base64$Encoder() {
    let a = this; jl_Object.call(a);
    a.$mapping0 = null;
    a.$padding = 0;
}
let ju_Base64$Encoder__init_ = ($this, $mapping, $padding) => {
    jl_Object__init_($this);
    $this.$mapping0 = $mapping;
    $this.$padding = $padding;
},
ju_Base64$Encoder__init_0 = (var_0, var_1) => {
    let var_2 = new ju_Base64$Encoder();
    ju_Base64$Encoder__init_(var_2, var_0, var_1);
    return var_2;
},
ju_Base64$Encoder_encode = ($this, $src) => {
    return otci_Base64Impl_encode1($src, $this.$mapping0, $this.$padding);
},
ju_Base64$Encoder_encodeToString = ($this, $src) => {
    let $bytes, var$3, var$4, $chars, $i;
    $bytes = $this.$encode2($src);
    var$3 = $bytes.data;
    var$4 = var$3.length;
    $chars = $rt_createCharArray(var$4);
    $i = 0;
    while ($i < var$4) {
        $chars.data[$i] = var$3[$i] & 255 & 65535;
        $i = $i + 1 | 0;
    }
    return jl_String__init_($chars);
};
function onnr_NostrRTCRoom$loop$lambda$_8_0() {
    jl_Object.call(this);
    this.$_05 = null;
}
let onnr_NostrRTCRoom$loop$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_05 = var$1;
},
onnr_NostrRTCRoom$loop$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new onnr_NostrRTCRoom$loop$lambda$_8_0();
    onnr_NostrRTCRoom$loop$lambda$_8_0__init_(var_1, var_0);
    return var_1;
},
onnr_NostrRTCRoom$loop$lambda$_8_0_call = var$0 => {
    return onnr_NostrRTCRoom_lambda$loop$1(var$0.$_05);
};
function onnn_Nip01UserMetadata() {
    let a = this; jl_Object.call(a);
    a.$metadata = null;
    a.$sourceEvent = null;
}
let onnn_Nip01UserMetadata__init_ = ($this, $source) => {
    let $platform, $content, $meta;
    jl_Object__init_($this);
    if ($source.$getKind())
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(329)));
    $this.$sourceEvent = $source;
    $platform = onp_NGEUtils_getPlatform();
    $content = $this.$sourceEvent.$getContent();
    $meta = $platform.$fromJSON($content, $rt_cls(ju_Map));
    if ($meta !== null) {
        $this.$metadata = $meta;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(330)));
},
onnn_Nip01UserMetadata__init_0 = var_0 => {
    let var_1 = new onnn_Nip01UserMetadata();
    onnn_Nip01UserMetadata__init_(var_1, var_0);
    return var_1;
},
onnn_Nip01UserMetadata_toUpdateEvent = $this => {
    let $event, var$2, $key, $tags, var$5, $tag;
    $event = onne_UnsignedNostrEvent__init_();
    $event.$withKind(0);
    $event.$createdAt(jt_Instant_now());
    $event.$withContent((onp_NGEUtils_getPlatform()).$toJSON($this.$metadata));
    var$2 = ($this.$sourceEvent.$listTagKeys()).$iterator();
    while (var$2.$hasNext()) {
        $key = var$2.$next();
        $tags = $this.$sourceEvent.$getTag($key);
        var$5 = $tags.$iterator();
        while (var$5.$hasNext()) {
            $tag = var$5.$next();
            $event.$withTag($key, $tag);
        }
    }
    return $event;
},
onnn_Nip01UserMetadata_getSourceEvent = $this => {
    return $this.$sourceEvent;
},
onnn_Nip01UserMetadata_getName = $this => {
    let $v;
    $v = onp_NGEUtils_safeString($this.$metadata.$get1($rt_s(331)));
    if (!$v.$isEmpty())
        return onp_NGEUtils_safeString($v);
    return null;
},
onnn_Nip01UserMetadata_setName = ($this, $name) => {
    $this.$metadata.$put1($rt_s(331), $name);
},
onnn_Nip01UserMetadata_getAbout = $this => {
    let $v;
    $v = $this.$metadata.$get1($rt_s(332));
    if ($v !== null)
        return onp_NGEUtils_safeString($v);
    return null;
},
onnn_Nip01UserMetadata_setAbout = ($this, $about) => {
    $this.$metadata.$put1($rt_s(332), $about);
},
onnn_Nip01UserMetadata_getPicture = $this => {
    let $v;
    $v = $this.$metadata.$get1($rt_s(333));
    if ($v !== null)
        return onp_NGEUtils_safeString($v);
    return null;
},
onnn_Nip01UserMetadata_setPicture = ($this, $picture) => {
    $this.$metadata.$put1($rt_s(333), $picture);
},
onnn_Nip01UserMetadata_equals = ($this, $obj) => {
    let $other;
    if ($obj !== null && $obj instanceof onnn_Nip01UserMetadata) {
        if ($obj === $this)
            return 1;
        $other = $obj;
        return $this.$sourceEvent.$equals($other.$sourceEvent);
    }
    return 0;
},
onnn_Nip01UserMetadata_hashCode = $this => {
    if ($this.$sourceEvent === null)
        return 0;
    return $this.$sourceEvent.$hashCode();
},
onnn_Nip01UserMetadata_toString = $this => {
    return $this.$sourceEvent.$toString();
},
onnn_Nip01UserMetadata_setName$exported$0 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$setName(var$2);
},
onnn_Nip01UserMetadata_setAbout$exported$1 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$setAbout(var$2);
},
onnn_Nip01UserMetadata_getName$exported$2 = var$1 => {
    return $rt_ustr(var$1.$getName());
},
onnn_Nip01UserMetadata_getSourceEvent$exported$3 = var$1 => {
    return var$1.$getSourceEvent();
},
onnn_Nip01UserMetadata_getPicture$exported$4 = var$1 => {
    return $rt_ustr(var$1.$getPicture());
},
onnn_Nip01UserMetadata__init_$exported$5 = var$1 => {
    return onnn_Nip01UserMetadata__init_0(var$1);
},
onnn_Nip01UserMetadata_equals$exported$6 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!var$1.$equals(var$2);
},
onnn_Nip01UserMetadata_toString$exported$7 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnn_Nip01UserMetadata_getAbout$exported$8 = var$1 => {
    return $rt_ustr(var$1.$getAbout());
},
onnn_Nip01UserMetadata_setPicture$exported$9 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$setPicture(var$2);
},
onnn_Nip01UserMetadata_toUpdateEvent$exported$10 = var$1 => {
    return var$1.$toUpdateEvent();
},
onnn_Nip01UserMetadata_hashCode$exported$11 = var$1 => {
    return var$1.$hashCode();
},
onnn_Nip24ExtraMetadata = $rt_classWithoutFields(onnn_Nip01UserMetadata),
onnn_Nip24ExtraMetadata__init_ = ($this, $nip01) => {
    onnn_Nip01UserMetadata__init_($this, $nip01.$getSourceEvent());
},
onnn_Nip24ExtraMetadata__init_1 = var_0 => {
    let var_1 = new onnn_Nip24ExtraMetadata();
    onnn_Nip24ExtraMetadata__init_(var_1, var_0);
    return var_1;
},
onnn_Nip24ExtraMetadata__init_0 = ($this, $source) => {
    onnn_Nip01UserMetadata__init_($this, $source);
},
onnn_Nip24ExtraMetadata__init_2 = var_0 => {
    let var_1 = new onnn_Nip24ExtraMetadata();
    onnn_Nip24ExtraMetadata__init_0(var_1, var_0);
    return var_1;
},
onnn_Nip24ExtraMetadata_getDisplayName = $this => {
    let $v;
    $v = onp_NGEUtils_safeString($this.$metadata.$get1($rt_s(334)));
    if ($v.$isEmpty())
        $v = onp_NGEUtils_safeString($this.$metadata.$get1($rt_s(335)));
    if (!$v.$isEmpty())
        return onp_NGEUtils_safeString($v);
    return null;
},
onnn_Nip24ExtraMetadata_setDisplayName = ($this, $name) => {
    $this.$metadata.$put1($rt_s(334), $name);
},
onnn_Nip24ExtraMetadata_getName = $this => {
    let $v, var$2;
    $v = onnn_Nip01UserMetadata_getName($this);
    if ($v !== null)
        return $v;
    var$2 = onp_NGEUtils_safeString($this.$metadata.$get1($rt_s(336)));
    if (!var$2.$isEmpty())
        return onp_NGEUtils_safeString(var$2);
    return null;
},
onnn_Nip24ExtraMetadata_getWebsite = $this => {
    let $v;
    $v = $this.$metadata.$get1($rt_s(337));
    if ($v !== null)
        return onp_NGEUtils_safeString($v);
    return null;
},
onnn_Nip24ExtraMetadata_setWebsite = ($this, $website) => {
    $this.$metadata.$put1($rt_s(337), $website);
},
onnn_Nip24ExtraMetadata_getBanner = $this => {
    let $v;
    $v = $this.$metadata.$get1($rt_s(338));
    if ($v !== null)
        return onp_NGEUtils_safeString($v);
    return null;
},
onnn_Nip24ExtraMetadata_setBanner = ($this, $banner) => {
    $this.$metadata.$put1($rt_s(338), $banner);
},
onnn_Nip24ExtraMetadata_isBot = $this => {
    let $v;
    $v = $this.$metadata.$get1($rt_s(339));
    if ($v !== null)
        return onp_NGEUtils_safeBool($v);
    return 0;
},
onnn_Nip24ExtraMetadata_setBot = ($this, $bot) => {
    $this.$metadata.$put1($rt_s(339), jl_Boolean_valueOf($bot));
},
onnn_Nip24ExtraMetadata_getUsername = $this => {
    let $v;
    $v = $this.$metadata.$get1($rt_s(336));
    if ($v !== null)
        return onp_NGEUtils_safeString($v);
    return null;
},
onnn_Nip24ExtraMetadata_getBirthday = $this => {
    let $birthday, $year, $month, $day, $cal;
    $birthday = $this.$metadata.$get1($rt_s(340));
    if ($birthday === null)
        return null;
    $year = onp_NGEUtils_safeInt($birthday.$get1($rt_s(341)));
    $month = onp_NGEUtils_safeInt($birthday.$get1($rt_s(342)));
    $day = onp_NGEUtils_safeInt($birthday.$get1($rt_s(343)));
    if ($year && $month && $day) {
        $cal = ju_Calendar_getInstance();
        $cal.$set(1, $year);
        $cal.$set(2, $month - 1 | 0);
        $cal.$set(5, $day);
        return ju_Calendar_getTime($cal);
    }
    return null;
},
onnn_Nip24ExtraMetadata_setBirthday0 = ($this, $birthday) => {
    let $cal, $b;
    if ($birthday === null) {
        $this.$metadata.$remove1($rt_s(340));
        return;
    }
    $cal = ju_Calendar_getInstance();
    ju_Calendar_setTime($cal, $birthday);
    $b = ju_HashMap__init_();
    $b.$put1($rt_s(341), jl_Integer_valueOf($cal.$get3(1)));
    $b.$put1($rt_s(342), jl_Integer_valueOf($cal.$get3(2) + 1 | 0));
    $b.$put1($rt_s(343), jl_Integer_valueOf($cal.$get3(5)));
    $this.$metadata.$put1($rt_s(340), $b);
},
onnn_Nip24ExtraMetadata_setBirthday = ($this, $year, $month, $day) => {
    let $b;
    $b = ju_HashMap__init_();
    $b.$put1($rt_s(341), jl_Integer_valueOf($year));
    $b.$put1($rt_s(342), jl_Integer_valueOf($month));
    $b.$put1($rt_s(343), jl_Integer_valueOf($day));
    $this.$metadata.$put1($rt_s(340), $b);
},
onnn_Nip24ExtraMetadata_isBot$exported$0 = var$1 => {
    return !!var$1.$isBot();
},
onnn_Nip24ExtraMetadata_setDisplayName$exported$1 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$setDisplayName(var$2);
},
onnn_Nip24ExtraMetadata_setBirthday$exported$2 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$setBirthday(var$2);
},
onnn_Nip24ExtraMetadata__init_$exported$3 = var$1 => {
    return onnn_Nip24ExtraMetadata__init_1(var$1);
},
onnn_Nip24ExtraMetadata_getUsername$exported$4 = var$1 => {
    return $rt_ustr(var$1.$getUsername());
},
onnn_Nip24ExtraMetadata_setBirthday$exported$5 = (var$1, var$2, var$3, var$4) => {
    let var$5, var$6, var$7;
    var$5 = var$2;
    var$6 = var$3;
    var$7 = var$4;
    var$1.$setBirthday0(var$5, var$6, var$7);
},
onnn_Nip24ExtraMetadata_setBot$exported$6 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2 ? 1 : 0;
    var$1.$setBot(var$3);
};
let onnn_Nip24ExtraMetadata_getBirthday$exported$7 = var$1 => {
    return var$1.$getBirthday();
},
onnn_Nip24ExtraMetadata_getBanner$exported$8 = var$1 => {
    return $rt_ustr(var$1.$getBanner());
},
onnn_Nip24ExtraMetadata_setWebsite$exported$9 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$setWebsite(var$2);
},
onnn_Nip24ExtraMetadata_getDisplayName$exported$10 = var$1 => {
    return $rt_ustr(var$1.$getDisplayName());
},
onnn_Nip24ExtraMetadata_getWebsite$exported$11 = var$1 => {
    return $rt_ustr(var$1.$getWebsite());
},
onnn_Nip24ExtraMetadata_setBanner$exported$12 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$setBanner(var$2);
},
jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet),
jur_NonCapJointSet__init_ = ($this, $children, $fSet) => {
    jur_JointSet__init_0($this, $children, $fSet);
},
jur_NonCapJointSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_NonCapJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex);
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $size = $this.$children0.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setConsumed($this.$groupIndex, $start);
            return (-1);
        }
        $e = $this.$children0.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_NonCapJointSet_getName = $this => {
    return $rt_s(344);
},
jur_NonCapJointSet_hasConsumed = ($this, $matchResult) => {
    let $cons;
    $cons = $matchResult.$getConsumed($this.$groupIndex);
    return !$cons ? 0 : 1;
},
jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet),
jur_AtomicJointSet__init_ = ($this, $children, $fSet) => {
    jur_NonCapJointSet__init_($this, $children, $fSet);
},
jur_AtomicJointSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_AtomicJointSet();
    jur_AtomicJointSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_AtomicJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex);
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $size = $this.$children0.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children0.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next5.$matches($this.$fSet.$getIndex(), $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    $matchResult.$setConsumed($this.$groupIndex, $start);
    return (-1);
},
jur_AtomicJointSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_AtomicJointSet_getName = $this => {
    return $rt_s(344);
},
jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookAhead__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_PositiveLookAhead__init_0 = (var_0, var_1) => {
    let var_2 = new jur_PositiveLookAhead();
    jur_PositiveLookAhead__init_(var_2, var_0, var_1);
    return var_2;
},
jur_PositiveLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e, $shift;
    $size = $this.$children0.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children0.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next5.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_PositiveLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookAhead_getName = $this => {
    return $rt_s(345);
},
jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookAhead__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_NegativeLookAhead__init_0 = (var_0, var_1) => {
    let var_2 = new jur_NegativeLookAhead();
    jur_NegativeLookAhead__init_(var_2, var_0, var_1);
    return var_2;
},
jur_NegativeLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e;
    $size = $this.$children0.$size();
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next5.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children0.$get($i);
        if ($e.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookAhead_getName = $this => {
    return $rt_s(346);
},
onp_AsyncExecutor = $rt_classWithoutFields(0);
function onpt_TeaVMPlatform$2() {
    jl_Object.call(this);
    this.$this$07 = null;
}
let onpt_TeaVMPlatform$2__init_ = ($this, $this$0) => {
    $this.$this$07 = $this$0;
    jl_Object__init_($this);
},
onpt_TeaVMPlatform$2__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$2();
    onpt_TeaVMPlatform$2__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$2_run = ($this, $r) => {
    return $this.$this$07.$wrapPromise(onpt_TeaVMPlatform$2$run$lambda$_1_0__init_0($r));
},
onpt_TeaVMPlatform$2_runLater = ($this, $r, $delay, $unit) => {
    let $delayMs;
    $delayMs = juc_TimeUnit_toMillis($unit, $delay);
    if (Long_eq($delayMs, Long_ZERO))
        return $this.$run0($r);
    return $this.$this$07.$wrapPromise(onpt_TeaVMPlatform$2$runLater$lambda$_2_0__init_0($r, $delayMs));
},
onpt_TeaVMPlatform$2_close = $this => {
    return;
},
onpt_TeaVMPlatform$2_lambda$runLater$3 = ($r, $delayMs, $res, $rej) => {
    let var$5, var$6, var$7;
    var$5 = window.nostr4j_jsBinds;
    var$6 = onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0__init_0($res, $r, $rej);
    var$7 = Long_lo($delayMs);
    var$5.setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$6), "onTimer"), var$7);
},
onpt_TeaVMPlatform$2_lambda$runLater$2 = ($res, $r, $rej) => {
    let $e, $$je;
    a: {
        try {
            $res.$accept0($r.$call0());
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMPlatform$2_lambda$run$1 = ($r, $res, $rej) => {
    let var$4, var$5;
    var$4 = window.nostr4j_jsBinds;
    var$5 = onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0__init_0($res, $r, $rej);
    var$4.setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$5), "onTimer"), 0);
},
onpt_TeaVMPlatform$2_lambda$run$0 = ($res, $r, $rej) => {
    let $e, $$je;
    a: {
        try {
            $res.$accept0($r.$call0());
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onp_AsyncTask = $rt_classWithoutFields(0);
function onpt_TeaVMPlatform$1() {
    let a = this; jl_Object.call(a);
    a.$val$promise = null;
    a.$val$executor = null;
    a.$this$013 = null;
}
let onpt_TeaVMPlatform$1__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$013 = $this$0;
    $this.$val$promise = var$2;
    $this.$val$executor = var$3;
    jl_Object__init_($this);
},
onpt_TeaVMPlatform$1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$1();
    onpt_TeaVMPlatform$1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$1_await = $this => {
    if (!$this.$val$promise.$completed)
        $rt_throw(jl_UnsupportedOperationException__init_0($rt_s(347)));
    if (!$this.$val$promise.$failed)
        return $this.$val$promise.$result;
    if (!($this.$val$promise.$error0 instanceof jl_Exception))
        $rt_throw(juc_ExecutionException__init_($this.$val$promise.$error0));
    $rt_throw(juc_ExecutionException__init_($this.$val$promise.$error0));
},
onpt_TeaVMPlatform$1_isDone = $this => {
    return $this.$val$promise.$completed;
},
onpt_TeaVMPlatform$1_isFailed = $this => {
    return $this.$val$promise.$failed;
},
onpt_TeaVMPlatform$1_then = ($this, $func2) => {
    return $this.$this$013.$promisify(onpt_TeaVMPlatform$1$then$lambda$_5_0__init_0($this.$val$promise, $func2), $this.$val$executor);
},
onpt_TeaVMPlatform$1_catchException = ($this, $func2) => {
    $this.$val$promise.$catchError($func2);
    return $this;
},
onpt_TeaVMPlatform$1_compose = ($this, $func2) => {
    return $this.$this$013.$promisify(onpt_TeaVMPlatform$1$compose$lambda$_7_0__init_0($this.$val$promise, $func2), $this.$val$executor);
},
onpt_TeaVMPlatform$1_cancel = $this => {
    $rt_throw(jl_UnsupportedOperationException__init_0($rt_s(348)));
},
onpt_TeaVMPlatform$1_lambda$compose$5 = ($promise, $func2, $res, $rej) => {
    let var$5;
    var$5 = onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0__init_0($func2, $rej, $res);
    var$5 = $promise.$then0(var$5);
    ju_Objects_requireNonNull0($rej);
    var$5.$catchError(onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1__init_0($rej));
},
onpt_TeaVMPlatform$1_lambda$compose$4 = ($func2, $rej, $res, $result) => {
    let $task2, $e, $$je;
    a: {
        try {
            b: {
                try {
                    $task2 = $func2.$apply($result);
                    $task2.$catchException(onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0__init_0($rej));
                    $task2.$then(onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1__init_0($res));
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                    } else {
                        throw $$e;
                    }
                }
                $rej.$accept0($e);
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMPlatform$1_lambda$compose$3 = ($res, $r) => {
    $res.$accept0($r);
    return null;
},
onpt_TeaVMPlatform$1_lambda$compose$2 = ($rej, $exc) => {
    $rej.$accept0($exc);
},
onpt_TeaVMPlatform$1_lambda$then$1 = ($promise, $func2, $res, $rej) => {
    let var$5;
    var$5 = onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0__init_0($res, $func2, $rej);
    var$5 = $promise.$then0(var$5);
    ju_Objects_requireNonNull0($rej);
    var$5.$catchError(onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1__init_0($rej));
},
onpt_TeaVMPlatform$1_lambda$then$0 = ($res, $func2, $rej, $result) => {
    let $e, $$je;
    a: {
        try {
            $res.$accept0($func2.$apply($result));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
jl_Readable = $rt_classWithoutFields(0),
jn_CharBuffer = $rt_classWithoutFields(jn_Buffer),
jn_CharBuffer__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position3 = $position;
    $this.$limit2 = $limit;
},
jn_CharBuffer_allocate = $capacity => {
    let $array, var$3, var$4;
    if ($capacity >= 0) {
        $array = $rt_createCharArray($capacity);
        return jn_CharBufferOverTypedArray__init_(0, $capacity, 0, $array.data, $array);
    }
    var$3 = new jl_IllegalArgumentException;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(349)), $capacity);
    jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jn_CharBuffer_wrap0 = ($array, $offset, $length) => {
    let var$4, var$5, var$6, $result;
    if ($length >= 0 && $offset >= 0) {
        var$4 = $array.data;
        var$5 = $length + $offset | 0;
        var$6 = var$4.length;
        if (var$5 <= var$6) {
            $result = jn_CharBufferOverTypedArray__init_(0, var$6, 0, $array.data, $array);
            $result.$position3 = $offset;
            $result.$limit2 = var$5;
            return $result;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_wrap = $array => {
    return jn_CharBuffer_wrap0($array, 0, $array.data.length);
},
jn_CharBuffer_get = ($this, $dst, $offset, $length) => {
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this))
            $rt_throw(jn_BufferUnderflowException__init_());
        $this.$getImpl($this.$position3, $dst, $offset, $length);
        $this.$position3 = $this.$position3 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_get0 = ($this, $dst) => {
    return $this.$get0($dst, 0, $dst.data.length);
},
jn_CharBuffer_put1 = ($this, $src, $offset, $length) => {
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl1($this.$position3, $src, $offset, $length);
        $this.$position3 = $this.$position3 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_put0 = ($this, $src, $start, $end) => {
    let $sz, $pos;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($end >= $start && $start >= 0 && $end <= $src.$length()) {
        $sz = $end - $start | 0;
        if (jn_Buffer_remaining($this) < $sz)
            $rt_throw(jn_BufferOverflowException__init_());
        $pos = $this.$position3;
        $this.$putImpl2($pos, $src, $start, $end);
        $this.$position3 = $this.$position3 + $sz | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_put = ($this, $src) => {
    return $this.$put2($src, 0, $src.$length());
},
jn_CharBuffer_hasArray = $this => {
    return $this.$isArrayPresent();
},
jn_CharBuffer_array = $this => {
    return $this.$getArray();
},
jn_CharBuffer_length = $this => {
    return jn_Buffer_remaining($this);
},
jn_CharBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_CharBuffer_position = ($this, $newPosition) => {
    jn_Buffer_position0($this, $newPosition);
    return $this;
},
jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer),
jn_CharBufferImpl__init_ = ($this, $position, $limit) => {
    jn_CharBuffer__init_($this, $position, $limit);
},
jn_CharBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
},
jn_ArrayBufferViewProvider = $rt_classWithoutFields(0);
function jn_CharBufferOverTypedArray() {
    let a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$data3 = null;
    a.$array7 = null;
}
let jn_CharBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_CharBufferImpl__init_($this, $position, $limit);
    $this.$readOnly1 = $readOnly;
    $this.$data3 = $data;
    $this.$array7 = $array;
},
jn_CharBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_CharBufferOverTypedArray();
    jn_CharBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_CharBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly1;
},
jn_CharBufferOverTypedArray_isArrayPresent = $this => {
    return $this.$array7 === null ? 0 : 1;
},
jn_CharBufferOverTypedArray_getArray = $this => {
    if ($this.$array7 !== null)
        return $this.$array7;
    $rt_throw(jl_UnsupportedOperationException__init_());
},
jn_CharBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data3.length;
},
jn_CharBufferOverTypedArray_getImpl = ($this, $index, $dst, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $this.$data3.buffer;
    var$6 = $this.$data3.byteOffset + ($index * 2 | 0) | 0;
    $slice = new Uint16Array(var$5, var$6, $length);
    $dst.data.set($slice, $offset);
},
jn_CharBufferOverTypedArray_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $src.data.buffer;
    var$6 = $offset * 2 | 0;
    $slice = new Uint16Array(var$5, var$6, $length);
    $this.$data3.set($slice, $index);
},
jn_CharBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let $length_0, var$6, $index_0, $offset_0, var$9;
    while (true) {
        $length_0 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$6 = $this.$data3;
        $index_0 = $index + 1 | 0;
        $offset_0 = $offset + 1 | 0;
        var$9 = $src.$charAt($offset);
        var$6[$index] = var$9;
        $length = $length_0;
        $index = $index_0;
        $offset = $offset_0;
    }
},
onne_NostrEvent$1 = $rt_classWithoutFields(),
onne_NostrEvent$1_$assertionsDisabled = 0,
onne_NostrEvent$1_$callClinit = () => {
    onne_NostrEvent$1_$callClinit = $rt_eraseClinit(onne_NostrEvent$1);
    onne_NostrEvent$1__clinit_();
},
onne_NostrEvent$1__clinit_ = () => {
    onne_NostrEvent$1_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onne_NostrEvent)) ? 0 : 1;
},
otjt_ArrayBufferView = $rt_classWithoutFields(),
otjt_TypedArray = $rt_classWithoutFields(otjt_ArrayBufferView),
jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException),
jl_UnsupportedOperationException__init_1 = $this => {
    jl_RuntimeException__init_($this);
},
jl_UnsupportedOperationException__init_ = () => {
    let var_0 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_1(var_0);
    return var_0;
},
jl_UnsupportedOperationException__init_2 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_UnsupportedOperationException__init_0 = var_0 => {
    let var_1 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_2(var_1, var_0);
    return var_1;
},
jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException),
jn_ReadOnlyBufferException__init_0 = $this => {
    jl_UnsupportedOperationException__init_1($this);
},
jn_ReadOnlyBufferException__init_ = () => {
    let var_0 = new jn_ReadOnlyBufferException();
    jn_ReadOnlyBufferException__init_0(var_0);
    return var_0;
},
jlr_Array = $rt_classWithoutFields(),
jlr_Array_getLength = var$1 => {
    if (var$1 === null || var$1.constructor.$meta.item === 'undefined') {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
},
jlr_Array_newInstance = (var$1, $length) => {
    if (var$1 === null)
        $rt_throw(jl_NullPointerException__init_());
    if (var$1 === $rt_cls($rt_voidcls))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($length < 0)
        $rt_throw(jl_NegativeArraySizeException__init_0());
    return jlr_Array_newInstanceImpl(jl_Class_getPlatformClass(var$1), $length);
},
jlr_Array_newInstanceImpl = (var$1, var$2) => {
    if (var$1.$meta.primitive) {
        switch (var$1) {
        }
        ;
    }
    return $rt_createArray(var$1, var$2);
};
function cjj_InfCodes() {
    let a = this; jl_Object.call(a);
    a.$mode2 = 0;
    a.$len = 0;
    a.$tree = null;
    a.$tree_index = 0;
    a.$need0 = 0;
    a.$lit = 0;
    a.$get24 = 0;
    a.$dist = 0;
    a.$lbits = 0;
    a.$dbits = 0;
    a.$ltree = null;
    a.$ltree_index = 0;
    a.$dtree = null;
    a.$dtree_index = 0;
    a.$z1 = null;
    a.$s = null;
}
let cjj_InfCodes_inflate_mask = null,
cjj_InfCodes_$callClinit = () => {
    cjj_InfCodes_$callClinit = $rt_eraseClinit(cjj_InfCodes);
    cjj_InfCodes__clinit_();
},
cjj_InfCodes__init_ = ($this, var$1, var$2) => {
    cjj_InfCodes_$callClinit();
    jl_Object__init_($this);
    $this.$tree_index = 0;
    $this.$z1 = var$1;
    $this.$s = var$2;
},
cjj_InfCodes__init_0 = (var_0, var_1) => {
    let var_2 = new cjj_InfCodes();
    cjj_InfCodes__init_(var_2, var_0, var_1);
    return var_2;
},
cjj_InfCodes_init = ($this, $bl, $bd, $tl, $tl_index, $td, $td_index) => {
    $this.$mode2 = 0;
    $this.$lbits = $bl << 24 >> 24;
    $this.$dbits = $bd << 24 >> 24;
    $this.$ltree = $tl;
    $this.$ltree_index = $tl_index;
    $this.$dtree = $td;
    $this.$dtree_index = $td_index;
    $this.$tree = null;
},
cjj_InfCodes_proc = ($this, $r) => {
    let var$2, $n, var$4, var$5, $q, $m, var$8, var$9, var$10, var$11, var$12, $j, $tindex, $e, $f, var$17;
    var$2 = $this.$z1.$next_in_index;
    $n = $this.$z1.$avail_in;
    var$4 = $this.$s.$bitb;
    var$5 = $this.$s.$bitk;
    $q = $this.$s.$write1;
    $m = $q >= $this.$s.$read4 ? $this.$s.$end2 - $q | 0 : ($this.$s.$read4 - $q | 0) - 1 | 0;
    a: {
        b: while (true) {
            c: {
                d: {
                    e: {
                        f: {
                            g: {
                                switch ($this.$mode2) {
                                    case 0:
                                        break f;
                                    case 2:
                                        var$8 = $this.$get24;
                                        while (var$5 < var$8) {
                                            if (!$n) {
                                                $this.$s.$bitb = var$4;
                                                $this.$s.$bitk = var$5;
                                                $this.$z1.$avail_in = $n;
                                                var$9 = $this.$z1;
                                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                                                $this.$z1.$next_in_index = var$2;
                                                $this.$s.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$10 = $this.$z1.$next_in.data;
                                            var$11 = var$2 + 1 | 0;
                                            var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                            var$5 = var$5 + 8 | 0;
                                            var$2 = var$11;
                                        }
                                        var$11 = $this.$len;
                                        cjj_InfCodes_$callClinit();
                                        $this.$len = var$11 + (var$4 & cjj_InfCodes_inflate_mask.data[var$8]) | 0;
                                        var$4 = var$4 >> var$8;
                                        var$5 = var$5 - var$8 | 0;
                                        $this.$need0 = $this.$dbits;
                                        $this.$tree = $this.$dtree;
                                        $this.$tree_index = $this.$dtree_index;
                                        $this.$mode2 = 3;
                                        break g;
                                    case 4:
                                        var$8 = $this.$get24;
                                        while (var$5 < var$8) {
                                            if (!$n) {
                                                $this.$s.$bitb = var$4;
                                                $this.$s.$bitk = var$5;
                                                $this.$z1.$avail_in = $n;
                                                var$9 = $this.$z1;
                                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                                                $this.$z1.$next_in_index = var$2;
                                                $this.$s.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$10 = $this.$z1.$next_in.data;
                                            var$11 = var$2 + 1 | 0;
                                            var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                            var$5 = var$5 + 8 | 0;
                                            var$2 = var$11;
                                        }
                                        var$11 = $this.$dist;
                                        cjj_InfCodes_$callClinit();
                                        $this.$dist = var$11 + (var$4 & cjj_InfCodes_inflate_mask.data[var$8]) | 0;
                                        var$4 = var$4 >> var$8;
                                        var$5 = var$5 - var$8 | 0;
                                        $this.$mode2 = 5;
                                        break c;
                                    case 6:
                                        break d;
                                    case 7:
                                        if (var$5 > 7) {
                                            var$5 = var$5 + (-8) | 0;
                                            $n = $n + 1 | 0;
                                            var$2 = var$2 + (-1) | 0;
                                        }
                                        $this.$s.$write1 = $q;
                                        var$8 = cjj_InfBlocks_inflate_flush($this.$s, $r);
                                        $q = $this.$s.$write1;
                                        if ($this.$s.$read4 != $this.$s.$write1) {
                                            $this.$s.$bitb = var$4;
                                            $this.$s.$bitk = var$5;
                                            $this.$z1.$avail_in = $n;
                                            var$9 = $this.$z1;
                                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                                            $this.$z1.$next_in_index = var$2;
                                            $this.$s.$write1 = $q;
                                            return cjj_InfBlocks_inflate_flush($this.$s, var$8);
                                        }
                                        $this.$mode2 = 8;
                                        break a;
                                    case 9:
                                        $this.$s.$bitb = var$4;
                                        $this.$s.$bitk = var$5;
                                        $this.$z1.$avail_in = $n;
                                        var$9 = $this.$z1;
                                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                                        $this.$z1.$next_in_index = var$2;
                                        $this.$s.$write1 = $q;
                                        return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                                    case 1:
                                        break e;
                                    case 3:
                                        break;
                                    case 5:
                                        break c;
                                    case 8:
                                        break a;
                                    default:
                                        $this.$s.$bitb = var$4;
                                        $this.$s.$bitk = var$5;
                                        $this.$z1.$avail_in = $n;
                                        var$9 = $this.$z1;
                                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                                        $this.$z1.$next_in_index = var$2;
                                        $this.$s.$write1 = $q;
                                        return cjj_InfBlocks_inflate_flush($this.$s, (-2));
                                }
                            }
                            var$11 = $this.$need0;
                            while (var$5 < var$11) {
                                if (!$n) {
                                    $this.$s.$bitb = var$4;
                                    $this.$s.$bitk = var$5;
                                    $this.$z1.$avail_in = $n;
                                    var$9 = $this.$z1;
                                    var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                                    $this.$z1.$next_in_index = var$2;
                                    $this.$s.$write1 = $q;
                                    return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                }
                                $r = 0;
                                $n = $n + (-1) | 0;
                                var$10 = $this.$z1.$next_in.data;
                                var$8 = var$2 + 1 | 0;
                                var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                var$5 = var$5 + 8 | 0;
                                var$2 = var$8;
                            }
                            var$8 = $this.$tree_index;
                            cjj_InfCodes_$callClinit();
                            var$12 = (var$8 + (var$4 & cjj_InfCodes_inflate_mask.data[var$11]) | 0) * 3 | 0;
                            var$10 = $this.$tree.data;
                            var$8 = var$12 + 1 | 0;
                            var$4 = var$4 >> var$10[var$8];
                            var$5 = var$5 - $this.$tree.data[var$8] | 0;
                            var$11 = $this.$tree.data[var$12];
                            if (var$11 & 16) {
                                $this.$get24 = var$11 & 15;
                                $this.$dist = $this.$tree.data[var$12 + 2 | 0];
                                $this.$mode2 = 4;
                                continue b;
                            }
                            if (var$11 & 64) {
                                $this.$mode2 = 9;
                                $this.$z1.$msg = $rt_s(350);
                                $this.$s.$bitb = var$4;
                                $this.$s.$bitk = var$5;
                                $this.$z1.$avail_in = $n;
                                var$9 = $this.$z1;
                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                                $this.$z1.$next_in_index = var$2;
                                $this.$s.$write1 = $q;
                                return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                            }
                            $this.$need0 = var$11;
                            $this.$tree_index = (var$12 / 3 | 0) + $this.$tree.data[var$12 + 2 | 0] | 0;
                            continue b;
                        }
                        if ($m >= 258 && $n >= 10) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z1.$avail_in = $n;
                            var$9 = $this.$z1;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                            $this.$z1.$next_in_index = var$2;
                            $this.$s.$write1 = $q;
                            $r = cjj_InfCodes_inflate_fast($this, $this.$lbits, $this.$dbits, $this.$ltree, $this.$ltree_index, $this.$dtree, $this.$dtree_index, $this.$s, $this.$z1);
                            var$2 = $this.$z1.$next_in_index;
                            $n = $this.$z1.$avail_in;
                            var$4 = $this.$s.$bitb;
                            var$5 = $this.$s.$bitk;
                            $q = $this.$s.$write1;
                            $m = $q >= $this.$s.$read4 ? $this.$s.$end2 - $q | 0 : ($this.$s.$read4 - $q | 0) - 1 | 0;
                            if ($r) {
                                $this.$mode2 = $r != 1 ? 9 : 7;
                                continue b;
                            }
                        }
                        $this.$need0 = $this.$lbits;
                        $this.$tree = $this.$ltree;
                        $this.$tree_index = $this.$ltree_index;
                        $this.$mode2 = 1;
                    }
                    $j = $this.$need0;
                    while (var$5 < $j) {
                        if (!$n)
                            break b;
                        $r = 0;
                        $n = $n + (-1) | 0;
                        var$10 = $this.$z1.$next_in.data;
                        var$8 = var$2 + 1 | 0;
                        var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                        var$5 = var$5 + 8 | 0;
                        var$2 = var$8;
                    }
                    var$8 = $this.$tree_index;
                    cjj_InfCodes_$callClinit();
                    $tindex = (var$8 + (var$4 & cjj_InfCodes_inflate_mask.data[$j]) | 0) * 3 | 0;
                    var$10 = $this.$tree.data;
                    var$8 = $tindex + 1 | 0;
                    var$4 = var$4 >>> var$10[var$8] | 0;
                    var$5 = var$5 - $this.$tree.data[var$8] | 0;
                    $e = $this.$tree.data[$tindex];
                    if (!$e) {
                        $this.$lit = $this.$tree.data[$tindex + 2 | 0];
                        $this.$mode2 = 6;
                        continue b;
                    }
                    if ($e & 16) {
                        $this.$get24 = $e & 15;
                        $this.$len = $this.$tree.data[$tindex + 2 | 0];
                        $this.$mode2 = 2;
                        continue b;
                    }
                    if (!($e & 64)) {
                        $this.$need0 = $e;
                        $this.$tree_index = ($tindex / 3 | 0) + $this.$tree.data[$tindex + 2 | 0] | 0;
                        continue b;
                    }
                    if (!($e & 32)) {
                        $this.$mode2 = 9;
                        $this.$z1.$msg = $rt_s(351);
                        $this.$s.$bitb = var$4;
                        $this.$s.$bitk = var$5;
                        $this.$z1.$avail_in = $n;
                        var$9 = $this.$z1;
                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                        $this.$z1.$next_in_index = var$2;
                        $this.$s.$write1 = $q;
                        return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                    }
                    $this.$mode2 = 7;
                    continue b;
                }
                if ($m)
                    var$8 = $q;
                else {
                    if ($q != $this.$s.$end2)
                        var$8 = $q;
                    else if (!$this.$s.$read4)
                        var$8 = $q;
                    else {
                        var$8 = 0;
                        $m = var$8 >= $this.$s.$read4 ? $this.$s.$end2 - var$8 | 0 : ($this.$s.$read4 - var$8 | 0) - 1 | 0;
                    }
                    if (!$m) {
                        $this.$s.$write1 = var$8;
                        var$11 = cjj_InfBlocks_inflate_flush($this.$s, $r);
                        var$8 = $this.$s.$write1;
                        $m = var$8 >= $this.$s.$read4 ? $this.$s.$end2 - var$8 | 0 : ($this.$s.$read4 - var$8 | 0) - 1 | 0;
                        if (var$8 == $this.$s.$end2 && $this.$s.$read4) {
                            var$8 = 0;
                            $m = var$8 >= $this.$s.$read4 ? $this.$s.$end2 - var$8 | 0 : ($this.$s.$read4 - var$8 | 0) - 1 | 0;
                        }
                        if (!$m) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z1.$avail_in = $n;
                            var$9 = $this.$z1;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                            $this.$z1.$next_in_index = var$2;
                            $this.$s.$write1 = var$8;
                            return cjj_InfBlocks_inflate_flush($this.$s, var$11);
                        }
                    }
                }
                $r = 0;
                var$10 = $this.$s.$window0.data;
                $q = var$8 + 1 | 0;
                var$10[var$8] = $this.$lit << 24 >> 24;
                $m = $m + (-1) | 0;
                $this.$mode2 = 0;
                continue b;
            }
            $f = $q - $this.$dist | 0;
            while ($f < 0) {
                $f = $f + $this.$s.$end2 | 0;
            }
            while ($this.$len) {
                if ($m)
                    var$8 = $q;
                else {
                    if ($q != $this.$s.$end2)
                        var$8 = $q;
                    else if (!$this.$s.$read4)
                        var$8 = $q;
                    else {
                        var$8 = 0;
                        $m = var$8 >= $this.$s.$read4 ? $this.$s.$end2 - var$8 | 0 : ($this.$s.$read4 - var$8 | 0) - 1 | 0;
                    }
                    if (!$m) {
                        $this.$s.$write1 = var$8;
                        $r = cjj_InfBlocks_inflate_flush($this.$s, $r);
                        var$8 = $this.$s.$write1;
                        $m = var$8 >= $this.$s.$read4 ? $this.$s.$end2 - var$8 | 0 : ($this.$s.$read4 - var$8 | 0) - 1 | 0;
                        if (var$8 == $this.$s.$end2 && $this.$s.$read4) {
                            var$8 = 0;
                            $m = var$8 >= $this.$s.$read4 ? $this.$s.$end2 - var$8 | 0 : ($this.$s.$read4 - var$8 | 0) - 1 | 0;
                        }
                        if (!$m) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z1.$avail_in = $n;
                            var$9 = $this.$z1;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
                            $this.$z1.$next_in_index = var$2;
                            $this.$s.$write1 = var$8;
                            return cjj_InfBlocks_inflate_flush($this.$s, $r);
                        }
                    }
                }
                var$17 = $this.$s.$window0.data;
                $q = var$8 + 1 | 0;
                var$10 = $this.$s.$window0.data;
                var$11 = $f + 1 | 0;
                var$17[var$8] = var$10[$f];
                $m = $m + (-1) | 0;
                $f = var$11 == $this.$s.$end2 ? 0 : var$11;
                $this.$len = $this.$len - 1 | 0;
            }
            $this.$mode2 = 0;
        }
        $this.$s.$bitb = var$4;
        $this.$s.$bitk = var$5;
        $this.$z1.$avail_in = $n;
        var$9 = $this.$z1;
        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
        $this.$z1.$next_in_index = var$2;
        $this.$s.$write1 = $q;
        return cjj_InfBlocks_inflate_flush($this.$s, $r);
    }
    $this.$s.$bitb = var$4;
    $this.$s.$bitk = var$5;
    $this.$z1.$avail_in = $n;
    var$9 = $this.$z1;
    var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z1.$next_in_index | 0));
    $this.$z1.$next_in_index = var$2;
    $this.$s.$write1 = $q;
    return cjj_InfBlocks_inflate_flush($this.$s, 1);
},
cjj_InfCodes_free = ($this, $z) => {
    return;
},
cjj_InfCodes_inflate_fast = ($this, $bl, $bd, $tl, $tl_index, $td, $td_index, $s, $z) => {
    let $p, $n, $b, $k, $q, $m, $ml, $md, var$17, var$18, var$19, $t, $tp_index_t_3, var$22, $c, var$24, var$25, var$26, var$27, $d, $r;
    $p = $z.$next_in_index;
    $n = $z.$avail_in;
    $b = $s.$bitb;
    $k = $s.$bitk;
    $q = $s.$write1;
    $m = $q >= $s.$read4 ? $s.$end2 - $q | 0 : ($s.$read4 - $q | 0) - 1 | 0;
    cjj_InfCodes_$callClinit();
    $ml = cjj_InfCodes_inflate_mask.data[$bl];
    $md = cjj_InfCodes_inflate_mask.data[$bd];
    while (true) {
        if ($k < 20) {
            $n = $n + (-1) | 0;
            var$17 = $z.$next_in.data;
            var$18 = $p + 1 | 0;
            $b = $b | (var$17[$p] & 255) << $k;
            $k = $k + 8 | 0;
            $p = var$18;
            continue;
        }
        a: {
            var$19 = $tl.data;
            $t = $b & $ml;
            $tp_index_t_3 = ($tl_index + $t | 0) * 3 | 0;
            var$22 = var$19[$tp_index_t_3];
            if (!var$22) {
                var$18 = $tp_index_t_3 + 1 | 0;
                $b = $b >> var$19[var$18];
                $k = $k - var$19[var$18] | 0;
                var$17 = $s.$window0.data;
                var$22 = $q + 1 | 0;
                var$17[$q] = var$19[$tp_index_t_3 + 2 | 0] << 24 >> 24;
                $m = $m + (-1) | 0;
            } else {
                while (true) {
                    var$18 = $tp_index_t_3 + 1 | 0;
                    $b = $b >> var$19[var$18];
                    $k = $k - var$19[var$18] | 0;
                    if (var$22 & 16) {
                        var$18 = var$22 & 15;
                        $c = var$19[$tp_index_t_3 + 2 | 0] + ($b & cjj_InfCodes_inflate_mask.data[var$18]) | 0;
                        var$24 = $b >> var$18;
                        var$25 = $k - var$18 | 0;
                        while (var$25 < 15) {
                            $n = $n + (-1) | 0;
                            var$17 = $z.$next_in.data;
                            var$18 = $p + 1 | 0;
                            var$24 = var$24 | (var$17[$p] & 255) << var$25;
                            var$25 = var$25 + 8 | 0;
                            $p = var$18;
                        }
                        var$17 = $td.data;
                        var$18 = var$24 & $md;
                        var$26 = ($td_index + var$18 | 0) * 3 | 0;
                        var$22 = var$17[var$26];
                        while (true) {
                            var$27 = var$26 + 1 | 0;
                            var$24 = var$24 >> var$17[var$27];
                            var$25 = var$25 - var$17[var$27] | 0;
                            if (var$22 & 16)
                                break;
                            if (var$22 & 64) {
                                $z.$msg = $rt_s(350);
                                var$18 = $z.$avail_in - $n | 0;
                                var$22 = var$25 >> 3;
                                if (var$22 < var$18)
                                    var$18 = var$22;
                                var$22 = $n + var$18 | 0;
                                var$26 = $p - var$18 | 0;
                                var$18 = var$25 - (var$18 << 3) | 0;
                                $s.$bitb = var$24;
                                $s.$bitk = var$18;
                                $z.$avail_in = var$22;
                                $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$26 - $z.$next_in_index | 0));
                                $z.$next_in_index = var$26;
                                $s.$write1 = $q;
                                return (-3);
                            }
                            var$18 = var$18 + var$17[var$26 + 2 | 0] | 0;
                            var$18 = var$18 + (var$24 & cjj_InfCodes_inflate_mask.data[var$22]) | 0;
                            var$26 = ($td_index + var$18 | 0) * 3 | 0;
                            var$22 = var$17[var$26];
                        }
                        var$18 = var$22 & 15;
                        while (var$25 < var$18) {
                            $n = $n + (-1) | 0;
                            var$19 = $z.$next_in.data;
                            var$22 = $p + 1 | 0;
                            var$24 = var$24 | (var$19[$p] & 255) << var$25;
                            var$25 = var$25 + 8 | 0;
                            $p = var$22;
                        }
                        $d = var$17[var$26 + 2 | 0] + (var$24 & cjj_InfCodes_inflate_mask.data[var$18]) | 0;
                        $b = var$24 >> var$18;
                        $k = var$25 - var$18 | 0;
                        $m = $m - $c | 0;
                        if ($q >= $d) {
                            $r = $q - $d | 0;
                            var$18 = $q - $r | 0;
                            if (var$18 > 0 && 2 > var$18) {
                                var$19 = $s.$window0.data;
                                var$18 = $q + 1 | 0;
                                var$17 = $s.$window0.data;
                                var$22 = $r + 1 | 0;
                                var$19[$q] = var$17[$r];
                                var$19 = $s.$window0.data;
                                $q = var$18 + 1 | 0;
                                var$17 = $s.$window0.data;
                                $r = var$22 + 1 | 0;
                                var$19[var$18] = var$17[var$22];
                                $c = $c + (-2) | 0;
                            } else {
                                jl_System_fastArraycopy($s.$window0, $r, $s.$window0, $q, 2);
                                $q = $q + 2 | 0;
                                $r = $r + 2 | 0;
                                $c = $c + (-2) | 0;
                            }
                        } else {
                            $r = $q - $d | 0;
                            while (true) {
                                $r = $r + $s.$end2 | 0;
                                if ($r >= 0)
                                    break;
                            }
                            var$18 = $s.$end2 - $r | 0;
                            if ($c > var$18) {
                                $c = $c - var$18 | 0;
                                var$22 = $q - $r | 0;
                                if (var$22 > 0 && var$18 > var$22) {
                                    var$22 = $q;
                                    while (true) {
                                        var$19 = $s.$window0.data;
                                        $q = var$22 + 1 | 0;
                                        var$17 = $s.$window0.data;
                                        var$26 = $r + 1 | 0;
                                        var$19[var$22] = var$17[$r];
                                        var$18 = var$18 + (-1) | 0;
                                        if (!var$18)
                                            break;
                                        var$22 = $q;
                                        $r = var$26;
                                    }
                                } else {
                                    jl_System_fastArraycopy($s.$window0, $r, $s.$window0, $q, var$18);
                                    $q = $q + var$18 | 0;
                                }
                                $r = 0;
                            }
                        }
                        var$18 = $q - $r | 0;
                        if (var$18 > 0 && $c > var$18) {
                            while (true) {
                                var$19 = $s.$window0.data;
                                var$22 = $q + 1 | 0;
                                var$17 = $s.$window0.data;
                                var$18 = $r + 1 | 0;
                                var$19[$q] = var$17[$r];
                                $c = $c + (-1) | 0;
                                if (!$c)
                                    break;
                                $q = var$22;
                                $r = var$18;
                            }
                            break a;
                        }
                        jl_System_fastArraycopy($s.$window0, $r, $s.$window0, $q, $c);
                        var$22 = $q + $c | 0;
                        break a;
                    }
                    if (var$22 & 64) {
                        if (var$22 & 32) {
                            $c = $z.$avail_in - $n | 0;
                            var$18 = $k >> 3;
                            if (var$18 < $c)
                                $c = var$18;
                            var$18 = $n + $c | 0;
                            var$22 = $p - $c | 0;
                            var$26 = $k - ($c << 3) | 0;
                            $s.$bitb = $b;
                            $s.$bitk = var$26;
                            $z.$avail_in = var$18;
                            $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$22 - $z.$next_in_index | 0));
                            $z.$next_in_index = var$22;
                            $s.$write1 = $q;
                            return 1;
                        }
                        $z.$msg = $rt_s(351);
                        $c = $z.$avail_in - $n | 0;
                        var$18 = $k >> 3;
                        if (var$18 < $c)
                            $c = var$18;
                        var$26 = $n + $c | 0;
                        var$18 = $p - $c | 0;
                        var$22 = $k - ($c << 3) | 0;
                        $s.$bitb = $b;
                        $s.$bitk = var$22;
                        $z.$avail_in = var$26;
                        $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$18 - $z.$next_in_index | 0));
                        $z.$next_in_index = var$18;
                        $s.$write1 = $q;
                        return (-3);
                    }
                    var$18 = $t + var$19[$tp_index_t_3 + 2 | 0] | 0;
                    $t = var$18 + ($b & cjj_InfCodes_inflate_mask.data[var$22]) | 0;
                    $tp_index_t_3 = ($tl_index + $t | 0) * 3 | 0;
                    var$22 = var$19[$tp_index_t_3];
                    if (!var$22)
                        break;
                }
                var$18 = $tp_index_t_3 + 1 | 0;
                $b = $b >> var$19[var$18];
                $k = $k - var$19[var$18] | 0;
                var$17 = $s.$window0.data;
                var$22 = $q + 1 | 0;
                var$17[$q] = var$19[$tp_index_t_3 + 2 | 0] << 24 >> 24;
                $m = $m + (-1) | 0;
            }
        }
        if ($m < 258)
            break;
        if ($n < 10)
            break;
        $q = var$22;
    }
    $c = $z.$avail_in - $n | 0;
    var$18 = $k >> 3;
    if (var$18 < $c)
        $c = var$18;
    var$18 = $n + $c | 0;
    var$26 = $p - $c | 0;
    var$24 = $k - ($c << 3) | 0;
    $s.$bitb = $b;
    $s.$bitk = var$24;
    $z.$avail_in = var$18;
    $z.$total_in = Long_add($z.$total_in, Long_fromInt(var$26 - $z.$next_in_index | 0));
    $z.$next_in_index = var$26;
    $s.$write1 = var$22;
    return 0;
},
cjj_InfCodes__clinit_ = () => {
    cjj_InfCodes_inflate_mask = $rt_createIntArrayFromData([0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535]);
},
jl_Runnable = $rt_classWithoutFields(0),
onnr_NostrRTCSocket$write$lambda$_18_1 = $rt_classWithoutFields(),
onnr_NostrRTCSocket$write$lambda$_18_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnr_NostrRTCSocket$write$lambda$_18_1__init_0 = () => {
    let var_0 = new onnr_NostrRTCSocket$write$lambda$_18_1();
    onnr_NostrRTCSocket$write$lambda$_18_1__init_(var_0);
    return var_0;
},
onnr_NostrRTCSocket$write$lambda$_18_1_run = var$0 => {
    onnr_NostrRTCSocket_lambda$write$4();
},
onnr_NostrRTCSocket$write$lambda$_18_0 = $rt_classWithoutFields(),
onnr_NostrRTCSocket$write$lambda$_18_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnr_NostrRTCSocket$write$lambda$_18_0__init_0 = () => {
    let var_0 = new onnr_NostrRTCSocket$write$lambda$_18_0();
    onnr_NostrRTCSocket$write$lambda$_18_0__init_(var_0);
    return var_0;
},
onnr_NostrRTCSocket$write$lambda$_18_0_run = var$0 => {
    onnr_NostrRTCSocket_lambda$write$3();
};
function onnn_Nip44$getConversationKey$lambda$_15_0() {
    let a = this; jl_Object.call(a);
    a.$_031 = null;
    a.$_117 = null;
}
let onnn_Nip44$getConversationKey$lambda$_15_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_031 = var$1;
    var$0.$_117 = var$2;
},
onnn_Nip44$getConversationKey$lambda$_15_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnn_Nip44$getConversationKey$lambda$_15_0();
    onnn_Nip44$getConversationKey$lambda$_15_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnn_Nip44$getConversationKey$lambda$_15_0_call0 = var$0 => {
    return onnn_Nip44$getConversationKey$lambda$_15_0_call(var$0);
},
onnn_Nip44$getConversationKey$lambda$_15_0_call = var$0 => {
    return onnn_Nip44_lambda$getConversationKey$3(var$0.$_031, var$0.$_117);
},
jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDigit_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDigit$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1() {
    let a = this; jl_Object.call(a);
    a.$_040 = null;
    a.$_122 = null;
    a.$_211 = null;
}
let onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_040 = var$1;
    var$0.$_122 = var$2;
    var$0.$_211 = var$3;
},
onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1();
    onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1_apply = (var$0, var$1) => {
    return onpt_TeaVMPlatform_lambda$awaitAllSettled$6(var$0.$_040, var$0.$_122, var$0.$_211, var$1);
},
juf_Consumer = $rt_classWithoutFields(0);
function onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0() {
    let a = this; jl_Object.call(a);
    a.$_02 = null;
    a.$_11 = null;
    a.$_20 = null;
}
let onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_02 = var$1;
    var$0.$_11 = var$2;
    var$0.$_20 = var$3;
},
onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0();
    onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0_accept0 = (var$0, var$1) => {
    onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0_accept(var$0, var$1);
},
onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0_accept = (var$0, var$1) => {
    onpt_TeaVMPlatform_lambda$awaitAllSettled$5(var$0.$_02, var$0.$_11, var$0.$_20, var$1);
},
juf_ToLongFunction = $rt_classWithoutFields(0),
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0 = $rt_classWithoutFields(),
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0__init_0 = () => {
    let var_0 = new jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0();
    jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0__init_(var_0);
    return var_0;
},
jtf_DateTimeTextProvider = $rt_classWithoutFields(),
jtf_DateTimeTextProvider__init_ = $this => {
    jl_Object__init_($this);
},
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1 = $rt_classWithoutFields(),
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1__init_0 = () => {
    let var_0 = new jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1();
    jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1__init_(var_0);
    return var_0;
},
onnrl_NostrRTCRoomListener = $rt_classWithoutFields(0),
onnrl_NostrRTCRoomPeerDiscoveredListener = $rt_classWithoutFields(0),
otji_JS = $rt_classWithoutFields(),
otji_JS_wrap = $array => {
    let var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = otji_JSWrapper_javaToJs(var$6);
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_map = ($array, $f) => {
    let var$3, var$4, $result, $i, var$7;
    if ($array === null)
        return null;
    var$3 = $array.data;
    var$4 = var$3.length;
    $result = new Array(var$4);
    $i = 0;
    while ($i < var$4) {
        var$7 = $f.$apply1(var$3[$i]);
        $result[$i] = var$7;
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_wrap0 = $array => {
    let var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new Int8Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = var$6;
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_byteArrayWrapper = () => {
    return otji_JS$byteArrayWrapper$lambda$_37_0__init_0();
},
otji_JS_wrap1 = $array => {
    let var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new Int32Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = var$6;
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_unwrapArray = ($type, $array) => {
    let $result, $i, var$5;
    if ($array === null)
        return null;
    $result = jlr_Array_newInstance($type, $array.length);
    $i = 0;
    while (true) {
        var$5 = $result.data;
        if ($i >= var$5.length)
            break;
        var$5[$i] = otji_JSWrapper_wrap(otji_JSWrapper_maybeUnwrap($array[$i]));
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_unwrapByteArray = $array => {
    let $result, $i, var$4;
    if ($array === null)
        return null;
    $result = $rt_createByteArray($array.length);
    $i = 0;
    while (true) {
        var$4 = $result.data;
        if ($i >= var$4.length)
            break;
        var$4[$i] = otjc_JSNumber_byteValue$static(otji_JSWrapper_maybeUnwrap($array[$i]));
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_unwrapIntArray = $array => {
    let $result, $i, var$4;
    if ($array === null)
        return null;
    $result = $rt_createIntArray($array.length);
    $i = 0;
    while (true) {
        var$4 = $result.data;
        if ($i >= var$4.length)
            break;
        var$4[$i] = otjc_JSNumber_intValue$static(otji_JSWrapper_maybeUnwrap($array[$i]));
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_unwrapStringArray = $array => {
    let $result, $i, var$4;
    if ($array === null)
        return null;
    $result = $rt_createArray(jl_String, $array.length);
    $i = 0;
    while (true) {
        var$4 = $result.data;
        if ($i >= var$4.length)
            break;
        var$4[$i] = otjc_JSString_stringValue$static(otji_JSWrapper_maybeUnwrap($array[$i]));
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_function = (var$1, var$2) => {
    let name = 'jso$functor$' + var$2;
    let result = var$1[name];
    if (typeof result !== 'function') {
        let fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        result = () => fn;
        var$1[name] = result;
    }
    return result();
},
otji_JS_functionAsObject = (var$1, var$2) => {
    if (typeof var$1 !== 'function') return var$1;
    let result = {  };
    result[var$2] = var$1;
    return result;
},
onnu_Bech32$Bech32InvalidRangeException = $rt_classWithoutFields(onnu_Bech32$Bech32Exception),
onnu_Bech32$Bech32InvalidRangeException__init_ = ($this, var$1) => {
    onnu_Bech32$Bech32Exception__init_($this, var$1);
},
onnu_Bech32$Bech32InvalidRangeException__init_0 = var_0 => {
    let var_1 = new onnu_Bech32$Bech32InvalidRangeException();
    onnu_Bech32$Bech32InvalidRangeException__init_(var_1, var_0);
    return var_1;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$053 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_ = ($this, $this$0) => {
    $this.$this$053 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains = ($this, $ch) => {
    return jl_Character_isUnicodeIdentifierStart($ch);
};
function jnc_Charset() {
    let a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
let jnc_Charset__init_ = ($this, $canonicalName, $aliases) => {
    let var$3, var$4, var$5, $alias;
    var$3 = $aliases.data;
    jl_Object__init_($this);
    jnc_Charset_checkCanonicalName($canonicalName);
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $alias = var$3[var$5];
        jnc_Charset_checkCanonicalName($alias);
        var$5 = var$5 + 1 | 0;
    }
    $this.$canonicalName = $canonicalName;
    $this.$aliases = $aliases.$clone0();
},
jnc_Charset_checkCanonicalName = $name => {
    let $i, $c;
    if ($name.$isEmpty())
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart($name.$charAt(0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$length()) {
        a: {
            $c = $name.$charAt($i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
},
jnc_Charset_isValidCharsetStart = $c => {
    let var$2;
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
jnc_Charset_forName = $charsetName => {
    let $charset;
    if ($charsetName === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(352)));
    jnc_Charset_checkCanonicalName($charsetName);
    jnc_Charset$Charsets_$callClinit();
    $charset = jnc_Charset$Charsets_value.$get1($charsetName.$toUpperCase());
    if ($charset !== null)
        return $charset;
    $rt_throw(jnc_UnsupportedCharsetException__init_0($charsetName));
},
jnc_Charset_name = $this => {
    return $this.$canonicalName;
},
jnc_Charset_decode = ($this, $bb) => {
    let var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newDecoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetDecoder_decode0(var$3, $bb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_2($rt_s(353), $e));
},
jnc_Charset_encode = ($this, $cb) => {
    let var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newEncoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetEncoder_encode0(var$3, $cb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_2($rt_s(353), $e));
},
jnc_Charset_compareTo = ($this, $that) => {
    return $this.$canonicalName.$compareToIgnoreCase($that.$canonicalName);
},
jnc_Charset_compareTo0 = ($this, var$1) => {
    return jnc_Charset_compareTo($this, var$1);
};
function jnci_UTF16Charset() {
    let a = this; jnc_Charset.call(a);
    a.$bom1 = 0;
    a.$littleEndian1 = 0;
}
let jnci_UTF16Charset__init_0 = ($this, $canonicalName, $bom, $littleEndian) => {
    jnc_Charset__init_($this, $canonicalName, $rt_createArray(jl_String, 0));
    $this.$bom1 = $bom;
    $this.$littleEndian1 = $littleEndian;
},
jnci_UTF16Charset__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jnci_UTF16Charset();
    jnci_UTF16Charset__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jnci_UTF16Charset_newDecoder = $this => {
    return jnci_UTF16Decoder__init_0($this, $this.$bom1, $this.$littleEndian1);
},
jnci_UTF16Charset_newEncoder = $this => {
    return jnci_UTF16Encoder__init_0($this, $this.$bom1, $this.$littleEndian1);
},
otciu_UnicodeHelper = $rt_classWithoutFields(),
otciu_UnicodeHelper_decodeIntPairsDiff = $text => {
    let $flow, $sz, $data, $j, $lastKey, $lastValue, $i, var$9, var$10;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    $j = 0;
    $lastKey = 0;
    $lastValue = 0;
    $i = 0;
    while ($i < $sz) {
        var$9 = $data.data;
        $lastKey = $lastKey + otci_Base46_decode($flow) | 0;
        $lastValue = $lastValue + otci_Base46_decode($flow) | 0;
        var$10 = $j + 1 | 0;
        var$9[$j] = $lastKey;
        $j = var$10 + 1 | 0;
        var$9[var$10] = $lastValue;
        $i = $i + 1 | 0;
    }
    return $data;
},
otciu_UnicodeHelper_decodeCaseMapping = $text => {
    let $flow, $sz, $data, $last, $i, var$7, var$8;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    $last = 0;
    $i = 0;
    while ($i < $sz) {
        var$7 = $data.data;
        $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
        var$8 = $i * 2 | 0;
        var$7[var$8] = $last;
        var$7[var$8 + 1 | 0] = otci_Base46_decode($flow);
        $i = $i + 1 | 0;
    }
    return $data;
},
otciu_UnicodeHelper_createCharMapping = $data => {
    let $result, $last, $lastValue, $i, var$6, var$7, $key, $value, var$10;
    $result = $rt_createIntArray(65536);
    $last = 0;
    $lastValue = 0;
    $i = 0;
    a: {
        while (true) {
            var$6 = $data.data;
            if ($i >= var$6.length)
                break a;
            var$7 = $result.data;
            $key = var$6[$i];
            $value = var$6[$i + 1 | 0];
            var$10 = var$7.length;
            if ($key < var$10)
                var$10 = $key;
            else if ($key == $last)
                break;
            ju_Arrays_fill1($result, $last, var$10, $lastValue);
            $i = $i + 2 | 0;
            $last = var$10;
            $lastValue = $value;
        }
    }
    return otciu_CharMapping__init_0($data, $result);
},
otciu_UnicodeHelper_decodeByte = $c => {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
},
otciu_UnicodeHelper_extractRle = $encoded => {
    let $ranges, $buffer, $index, $rangeIndex, $codePoint, $i, $b, $count, $pos, $j, $digit, var$13, var$14, var$15, var$16, var$17;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    $buffer = $rt_createByteArray(16384);
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    while ($i < $encoded.$length()) {
        $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        if ($b == 64) {
            $i = $i + 1 | 0;
            $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
            $count = 0;
            $pos = 1;
            $j = 0;
            while ($j < 3) {
                $i = $i + 1 | 0;
                $digit = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
                $count = $count | $rt_imul($pos, $digit);
                $pos = $pos * 64 | 0;
                $j = $j + 1 | 0;
            }
        } else if ($b < 32)
            $count = 1;
        else {
            $b = ($b - 32 | 0) << 24 >> 24;
            $i = $i + 1 | 0;
            $count = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        }
        if (!$b && $count >= 128) {
            if ($index > 0) {
                var$13 = $ranges.data;
                var$14 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $rangeIndex = var$14;
            }
            $codePoint = $codePoint + ($index + $count | 0) | 0;
            $index = 0;
        } else {
            var$15 = $buffer.data;
            var$14 = $index + $count | 0;
            if (var$14 < var$15.length)
                var$16 = $rangeIndex;
            else {
                var$13 = $ranges.data;
                var$16 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $codePoint = $codePoint + var$14 | 0;
                $index = 0;
            }
            while (true) {
                var$14 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$17 = $index + 1 | 0;
                var$15[$index] = $b;
                $index = var$17;
                $count = var$14;
            }
            $rangeIndex = var$16;
        }
        $i = $i + 1 | 0;
    }
    return ju_Arrays_copyOf0($ranges, $rangeIndex);
},
jus_Collectors = $rt_classWithoutFields(),
jus_Collectors_joining0 = $delimiter => {
    return jus_Collectors_joining($delimiter, $rt_s(23), $rt_s(23));
},
jus_Collectors_joining = ($delimiter, $prefix, $suffix) => {
    let $accumulator, $combiner;
    $accumulator = jus_Collectors$joining$lambda$_8_0__init_0($delimiter);
    $combiner = jus_Collectors$joining$lambda$_8_1__init_0($delimiter);
    return jus_Collector_of(jus_Collectors$joining$lambda$_8_2__init_0(), $accumulator, $combiner, jus_Collectors$joining$lambda$_8_3__init_0($prefix, $suffix), $rt_createArray(jus_Collector$Characteristics, 0));
},
jus_Collectors_lambda$joining$3 = ($prefix, $suffix, $sb) => {
    return (($sb.$insert12(0, $prefix)).$append9($suffix)).$toString();
},
jus_Collectors_lambda$joining$1 = ($delimiter, $sb, $item) => {
    if ($sb.$length() > 0)
        $sb.$append9($delimiter);
    $sb.$append9($item);
},
otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorEnterWait$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_027 = null;
    a.$_116 = null;
    a.$_27 = 0;
    a.$_33 = null;
}
let jl_Object$monitorEnterWait$lambda$_6_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_027 = var$1;
    var$0.$_116 = var$2;
    var$0.$_27 = var$3;
    var$0.$_33 = var$4;
},
jl_Object$monitorEnterWait$lambda$_6_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jl_Object$monitorEnterWait$lambda$_6_0();
    jl_Object$monitorEnterWait$lambda$_6_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jl_Object$monitorEnterWait$lambda$_6_0_run = var$0 => {
    jl_Object_lambda$monitorEnterWait$0(var$0.$_027, var$0.$_116, var$0.$_27, var$0.$_33);
};
function onn_NostrRelay$lambda$connect$18$lambda$_53_0() {
    let a = this; jl_Object.call(a);
    a.$_060 = null;
    a.$_132 = null;
    a.$_215 = null;
}
let onn_NostrRelay$lambda$connect$18$lambda$_53_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_060 = var$1;
    var$0.$_132 = var$2;
    var$0.$_215 = var$3;
},
onn_NostrRelay$lambda$connect$18$lambda$_53_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$lambda$connect$18$lambda$_53_0();
    onn_NostrRelay$lambda$connect$18$lambda$_53_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$lambda$connect$18$lambda$_53_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$lambda$connect$18$lambda$_53_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$lambda$connect$18$lambda$_53_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$connect$17(var$0.$_060, var$0.$_132, var$0.$_215, var$1, var$2);
},
onnp_NostrPoolAckPolicy = $rt_classWithoutFields(0);
function onnp_NostrPoolAnyAckPolicy() {
    jl_Object.call(this);
    this.$logger = null;
}
let onnp_NostrPoolAnyAckPolicy_INSTANCE = null,
onnp_NostrPoolAnyAckPolicy_$callClinit = () => {
    onnp_NostrPoolAnyAckPolicy_$callClinit = $rt_eraseClinit(onnp_NostrPoolAnyAckPolicy);
    onnp_NostrPoolAnyAckPolicy__clinit_();
},
onnp_NostrPoolAnyAckPolicy__init_0 = $this => {
    onnp_NostrPoolAnyAckPolicy_$callClinit();
    jl_Object__init_($this);
    $this.$logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onnp_NostrPoolAnyAckPolicy)));
},
onnp_NostrPoolAnyAckPolicy__init_ = () => {
    let var_0 = new onnp_NostrPoolAnyAckPolicy();
    onnp_NostrPoolAnyAckPolicy__init_0(var_0);
    return var_0;
},
onnp_NostrPoolAnyAckPolicy_get = () => {
    onnp_NostrPoolAnyAckPolicy_$callClinit();
    return onnp_NostrPoolAnyAckPolicy_INSTANCE;
},
onnp_NostrPoolAnyAckPolicy_apply0 = ($this, $t) => {
    let $atLeastOneNonFailed, $atLeastOneSuccess, var$4, $ackTask, var$6, var$7, $ack, var$9, $e, var$11, var$12, $$je;
    $atLeastOneNonFailed = 0;
    $atLeastOneSuccess = 0;
    var$4 = $t.$iterator();
    a: {
        b: {
            c: while (var$4.$hasNext()) {
                $ackTask = var$4.$next();
                d: {
                    try {
                        var$6 = $atLeastOneSuccess;
                        var$7 = $atLeastOneNonFailed;
                        if (!$ackTask.$isDone()) {
                            var$6 = $atLeastOneSuccess;
                            var$7 = $atLeastOneNonFailed;
                            $atLeastOneNonFailed = 1;
                            var$7 = $atLeastOneNonFailed;
                            continue c;
                        }
                        var$6 = $atLeastOneSuccess;
                        var$7 = $atLeastOneNonFailed;
                        if ($ackTask.$isFailed())
                            continue c;
                        var$6 = $atLeastOneSuccess;
                        var$7 = $atLeastOneNonFailed;
                        $ack = $ackTask.$await();
                        var$9 = $ack.$getStatus();
                        onnp_NostrMessageAck$Status_$callClinit();
                        if (var$9 !== onnp_NostrMessageAck$Status_FAILURE) {
                            var$6 = $atLeastOneSuccess;
                            var$7 = $atLeastOneNonFailed;
                            $atLeastOneNonFailed = 1;
                            var$7 = $atLeastOneNonFailed;
                        }
                        var$6 = $atLeastOneSuccess;
                        var$7 = $atLeastOneNonFailed;
                        if ($ack.$getStatus() !== onnp_NostrMessageAck$Status_SUCCESS)
                            break d;
                        var$7 = $atLeastOneNonFailed;
                        var$6 = $atLeastOneSuccess;
                        $atLeastOneSuccess = 1;
                        var$6 = $atLeastOneSuccess;
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $e = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    var$9 = $this.$logger;
                    var$11 = $e.$getMessage();
                    var$12 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(354)), var$11);
                    var$9.$warning(jl_StringBuilder_toString(var$12));
                    $atLeastOneNonFailed = var$7;
                    $atLeastOneSuccess = var$6;
                }
            }
            break a;
        }
    }
    var$4 = $this.$logger;
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append3(jl_StringBuilder_append(var$9, $rt_s(355)), $atLeastOneNonFailed), $rt_s(356)), $atLeastOneSuccess);
    var$4.$finer(jl_StringBuilder_toString(var$9));
    if ($atLeastOneSuccess) {
        onnp_NostrMessageAck$Status_$callClinit();
        return onnp_NostrMessageAck$Status_SUCCESS;
    }
    if (!$atLeastOneNonFailed) {
        onnp_NostrMessageAck$Status_$callClinit();
        return onnp_NostrMessageAck$Status_FAILURE;
    }
    onnp_NostrMessageAck$Status_$callClinit();
    return onnp_NostrMessageAck$Status_PENDING;
},
onnp_NostrPoolAnyAckPolicy_apply = ($this, var$1) => {
    return $this.$apply2(var$1);
},
onnp_NostrPoolAnyAckPolicy__clinit_ = () => {
    onnp_NostrPoolAnyAckPolicy_INSTANCE = onnp_NostrPoolAnyAckPolicy__init_();
},
onnp_NostrPoolAnyAckPolicy__init_$exported$0 = () => {
    onnp_NostrPoolAnyAckPolicy_$callClinit();
    return onnp_NostrPoolAnyAckPolicy__init_();
},
onnp_NostrPoolAnyAckPolicy_apply$exported$1 = (var$1, var$2) => {
    onnp_NostrPoolAnyAckPolicy_$callClinit();
    var$2 = var$2;
    return var$1.$apply2(var$2);
},
onnp_NostrPoolAnyAckPolicy_apply$exported$2 = (var$1, var$2) => {
    onnp_NostrPoolAnyAckPolicy_$callClinit();
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return otji_JSWrapper_javaToJs(var$1.$apply(var$2));
},
onnp_NostrPoolAnyAckPolicy_get$exported$0 = () => {
    onnp_NostrPoolAnyAckPolicy_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnp_NostrPoolAnyAckPolicy_get();
},
otjc_JSUndefined = $rt_classWithoutFields(),
jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha),
jur_AbstractCharClass$LazyAlnum__init_ = $this => {
    jur_AbstractCharClass$LazyAlpha__init_($this);
},
jur_AbstractCharClass$LazyAlnum__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlnum_computeValue = $this => {
    return (jur_AbstractCharClass$LazyAlpha_computeValue($this)).$add0(48, 57);
},
jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum),
jur_AbstractCharClass$LazyGraph__init_ = $this => {
    jur_AbstractCharClass$LazyAlnum__init_($this);
},
jur_AbstractCharClass$LazyGraph__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyGraph_computeValue = $this => {
    return (((jur_AbstractCharClass$LazyAlnum_computeValue($this)).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
},
jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph),
jur_AbstractCharClass$LazyPrint__init_ = $this => {
    jur_AbstractCharClass$LazyGraph__init_($this);
},
jur_AbstractCharClass$LazyPrint__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPrint_computeValue = $this => {
    return (jur_AbstractCharClass$LazyGraph_computeValue($this)).$add(32);
},
jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaSpaceChar__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaSpaceChar__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaSpaceChar_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0($this);
};
function onn_NostrSubscription$callEventListeners$lambda$_15_0() {
    let a = this; jl_Object.call(a);
    a.$_083 = null;
    a.$_148 = null;
    a.$_222 = 0;
}
let onn_NostrSubscription$callEventListeners$lambda$_15_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_083 = var$1;
    var$0.$_148 = var$2;
    var$0.$_222 = var$3;
},
onn_NostrSubscription$callEventListeners$lambda$_15_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrSubscription$callEventListeners$lambda$_15_0();
    onn_NostrSubscription$callEventListeners$lambda$_15_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrSubscription$callEventListeners$lambda$_15_0_call = var$0 => {
    return onn_NostrSubscription_lambda$callEventListeners$3(var$0.$_083, var$0.$_148, var$0.$_222);
},
jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookBehind__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_PositiveLookBehind__init_0 = (var_0, var_1) => {
    let var_2 = new jur_PositiveLookBehind();
    jur_PositiveLookBehind__init_(var_2, var_0, var_1);
    return var_2;
},
jur_PositiveLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $leftBound, $shift, $i, $e;
    $size = $this.$children0.$size();
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    a: {
        $shift = $this.$next5.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                $e = $this.$children0.$get($i);
                if ($e.$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    $matchResult.$setConsumed($this.$groupIndex, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
},
jur_PositiveLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookBehind_getName = $this => {
    return $rt_s(357);
},
ju_Comparator = $rt_classWithoutFields(0),
ju_Comparator_thenComparingLong = ($this, $keyExtractor) => {
    return ju_Comparator$thenComparingLong$lambda$_6_0__init_0($this, $keyExtractor);
},
ju_Comparator_comparingLong = $keyExtractor => {
    return ju_Comparator$comparingLong$lambda$_15_0__init_0($keyExtractor);
},
ju_Comparator$NaturalOrder = $rt_classWithoutFields(),
ju_Comparator$NaturalOrder_INSTANCE = null,
ju_Comparator$NaturalOrder_$callClinit = () => {
    ju_Comparator$NaturalOrder_$callClinit = $rt_eraseClinit(ju_Comparator$NaturalOrder);
    ju_Comparator$NaturalOrder__clinit_();
},
ju_Comparator$NaturalOrder__init_ = $this => {
    ju_Comparator$NaturalOrder_$callClinit();
    jl_Object__init_($this);
},
ju_Comparator$NaturalOrder__init_0 = () => {
    let var_0 = new ju_Comparator$NaturalOrder();
    ju_Comparator$NaturalOrder__init_(var_0);
    return var_0;
},
ju_Comparator$NaturalOrder_compare = ($this, $o1, $o2) => {
    return $o1.$compareTo7($o2);
},
ju_Comparator$NaturalOrder_instance = () => {
    ju_Comparator$NaturalOrder_$callClinit();
    return ju_Comparator$NaturalOrder_INSTANCE;
},
ju_Comparator$NaturalOrder__clinit_ = () => {
    ju_Comparator$NaturalOrder_INSTANCE = ju_Comparator$NaturalOrder__init_0();
};
function onns_NostrKeyPairSigner$sign$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_0106 = null;
    a.$_157 = null;
    a.$_229 = null;
}
let onns_NostrKeyPairSigner$sign$lambda$_2_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0106 = var$1;
    var$0.$_157 = var$2;
    var$0.$_229 = var$3;
},
onns_NostrKeyPairSigner$sign$lambda$_2_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onns_NostrKeyPairSigner$sign$lambda$_2_0();
    onns_NostrKeyPairSigner$sign$lambda$_2_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_NostrKeyPairSigner$sign$lambda$_2_0_apply0 = (var$0, var$1) => {
    return onns_NostrKeyPairSigner$sign$lambda$_2_0_apply(var$0, var$1);
},
onns_NostrKeyPairSigner$sign$lambda$_2_0_apply = (var$0, var$1) => {
    return onns_NostrKeyPairSigner_lambda$sign$0(var$0.$_0106, var$0.$_157, var$0.$_229, var$1);
};
function onn_NostrSubscription$callEventListeners$lambda$_15_1() {
    jl_Object.call(this);
    this.$_063 = null;
}
let onn_NostrSubscription$callEventListeners$lambda$_15_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_063 = var$1;
},
onn_NostrSubscription$callEventListeners$lambda$_15_1__init_0 = var_0 => {
    let var_1 = new onn_NostrSubscription$callEventListeners$lambda$_15_1();
    onn_NostrSubscription$callEventListeners$lambda$_15_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrSubscription$callEventListeners$lambda$_15_1_accept0 = (var$0, var$1) => {
    onn_NostrSubscription$callEventListeners$lambda$_15_1_accept(var$0, var$1);
},
onn_NostrSubscription$callEventListeners$lambda$_15_1_accept = (var$0, var$1) => {
    onn_NostrSubscription_lambda$callEventListeners$4(var$0.$_063, var$1);
},
jnci_AsciiCharset = $rt_classWithoutFields(jnc_Charset),
jnci_AsciiCharset__init_ = $this => {
    jnc_Charset__init_($this, $rt_s(358), $rt_createArray(jl_String, 0));
},
jnci_AsciiCharset__init_0 = () => {
    let var_0 = new jnci_AsciiCharset();
    jnci_AsciiCharset__init_(var_0);
    return var_0;
},
jnci_AsciiCharset_newDecoder = $this => {
    return jnci_AsciiDecoder__init_0($this);
},
jnci_AsciiCharset_newEncoder = $this => {
    return jnci_AsciiEncoder__init_0($this);
},
jtc_ChronoLocalDate = $rt_classWithoutFields(),
jtc_ChronoLocalDate_DATE_COMPARATOR = null,
jtc_ChronoLocalDate_$callClinit = () => {
    jtc_ChronoLocalDate_$callClinit = $rt_eraseClinit(jtc_ChronoLocalDate);
    jtc_ChronoLocalDate__clinit_();
},
jtc_ChronoLocalDate__init_ = $this => {
    jtc_ChronoLocalDate_$callClinit();
    jl_Object__init_($this);
},
jtc_ChronoLocalDate_isSupported = ($this, $field) => {
    if ($field instanceof jtt_ChronoField)
        return $field.$isDateBased();
    return $field !== null && $field.$isSupportedBy($this) ? 1 : 0;
},
jtc_ChronoLocalDate_query = ($this, $query) => {
    if ($query === jtt_TemporalQueries_chronology())
        return $this.$getChronology();
    if ($query === jtt_TemporalQueries_precision()) {
        jtt_ChronoUnit_$callClinit();
        return jtt_ChronoUnit_DAYS;
    }
    if ($query === jtt_TemporalQueries_localDate())
        return jt_LocalDate_ofEpochDay($this.$toEpochDay());
    if ($query !== jtt_TemporalQueries_localTime() && $query !== jtt_TemporalQueries_zone() && $query !== jtt_TemporalQueries_zoneId() && $query !== jtt_TemporalQueries_offset())
        return jtt_TemporalAccessor_query($this, $query);
    return null;
},
jtc_ChronoLocalDate_compareTo = ($this, $other) => {
    let $cmp;
    $cmp = jl_Long_compare($this.$toEpochDay(), $other.$toEpochDay());
    if (!$cmp)
        $cmp = ($this.$getChronology()).$compareTo3($other.$getChronology());
    return $cmp;
},
jtc_ChronoLocalDate__clinit_ = () => {
    let var$1;
    var$1 = jtc_ChronoLocalDate$_clinit_$lambda$_36_0__init_0();
    jtc_ChronoLocalDate_DATE_COMPARATOR = ju_Comparator_comparingLong(var$1);
};
function jt_LocalDate() {
    let a = this; jtc_ChronoLocalDate.call(a);
    a.$year = 0;
    a.$month = 0;
    a.$day = 0;
}
let jt_LocalDate_MIN = null,
jt_LocalDate_MAX = null,
jt_LocalDate_$callClinit = () => {
    jt_LocalDate_$callClinit = $rt_eraseClinit(jt_LocalDate);
    jt_LocalDate__clinit_();
},
jt_LocalDate_of0 = ($year, $month, $dayOfMonth) => {
    jt_LocalDate_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_YEAR, Long_fromInt($year));
    ju_Objects_requireNonNull($month, $rt_s(342));
    jtt_ChronoField_checkValidValue(jtt_ChronoField_DAY_OF_MONTH, Long_fromInt($dayOfMonth));
    return jt_LocalDate_create($year, $month, $dayOfMonth);
},
jt_LocalDate_of = ($year, $month, $dayOfMonth) => {
    jt_LocalDate_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_YEAR, Long_fromInt($year));
    jtt_ChronoField_checkValidValue(jtt_ChronoField_MONTH_OF_YEAR, Long_fromInt($month));
    jtt_ChronoField_checkValidValue(jtt_ChronoField_DAY_OF_MONTH, Long_fromInt($dayOfMonth));
    return jt_LocalDate_create($year, jt_Month_of($month), $dayOfMonth);
},
jt_LocalDate_ofYearDay = ($year, $dayOfYear) => {
    let var$3, var$4, $leap, var$6, $moy, $monthEnd, $dom;
    jt_LocalDate_$callClinit();
    jtt_ChronoField_$callClinit();
    var$3 = jtt_ChronoField_YEAR;
    var$4 = Long_fromInt($year);
    jtt_ChronoField_checkValidValue(var$3, var$4);
    jtt_ChronoField_checkValidValue(jtt_ChronoField_DAY_OF_YEAR, Long_fromInt($dayOfYear));
    jtc_IsoChronology_$callClinit();
    $leap = jtc_IsoChronology_isLeapYear(jtc_IsoChronology_INSTANCE, var$4);
    if ($dayOfYear == 366 && !$leap) {
        var$3 = new jt_DateTimeException;
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(359)), $year), $rt_s(360));
        jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$6));
        $rt_throw(var$3);
    }
    $moy = jt_Month_of((($dayOfYear - 1 | 0) / 31 | 0) + 1 | 0);
    $monthEnd = (jt_Month_firstDayOfYear($moy, $leap) + jt_Month_length($moy, $leap) | 0) - 1 | 0;
    if ($dayOfYear > $monthEnd)
        $moy = jt_Month_plus($moy, Long_fromInt(1));
    $dom = ($dayOfYear - jt_Month_firstDayOfYear($moy, $leap) | 0) + 1 | 0;
    return jt_LocalDate_create($year, $moy, $dom);
},
jt_LocalDate_ofEpochDay = $epochDay => {
    let $zeroDay, var$3, $adjust, $adjustCycles, $yearEst, $doyEst, $marchDoy0, $marchMonth0, $month, $dom, $year;
    jt_LocalDate_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_EPOCH_DAY, $epochDay);
    $zeroDay = Long_add($epochDay, Long_fromInt(719528));
    var$3 = Long_sub($zeroDay, Long_fromInt(60));
    $adjust = Long_ZERO;
    if (Long_lt(var$3, Long_ZERO)) {
        $adjustCycles = Long_sub(Long_div(Long_add(var$3, Long_fromInt(1)), Long_fromInt(146097)), Long_fromInt(1));
        $adjust = Long_mul($adjustCycles, Long_fromInt(400));
        var$3 = Long_add(var$3, Long_mul(Long_neg($adjustCycles), Long_fromInt(146097)));
    }
    $yearEst = Long_div(Long_add(Long_mul(Long_fromInt(400), var$3), Long_fromInt(591)), Long_fromInt(146097));
    $doyEst = Long_sub(var$3, Long_add(Long_sub(Long_add(Long_mul(Long_fromInt(365), $yearEst), Long_div($yearEst, Long_fromInt(4))), Long_div($yearEst, Long_fromInt(100))), Long_div($yearEst, Long_fromInt(400))));
    if (Long_lt($doyEst, Long_ZERO)) {
        $yearEst = Long_sub($yearEst, Long_fromInt(1));
        $doyEst = Long_sub(var$3, Long_add(Long_sub(Long_add(Long_mul(Long_fromInt(365), $yearEst), Long_div($yearEst, Long_fromInt(4))), Long_div($yearEst, Long_fromInt(100))), Long_div($yearEst, Long_fromInt(400))));
    }
    var$3 = Long_add($yearEst, $adjust);
    $marchDoy0 = Long_lo($doyEst);
    $marchMonth0 = (($marchDoy0 * 5 | 0) + 2 | 0) / 153 | 0;
    $month = (($marchMonth0 + 2 | 0) % 12 | 0) + 1 | 0;
    $dom = ($marchDoy0 - ((($marchMonth0 * 306 | 0) + 5 | 0) / 10 | 0) | 0) + 1 | 0;
    var$3 = Long_add(var$3, Long_fromInt($marchMonth0 / 10 | 0));
    $year = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, var$3);
    return jt_LocalDate__init_($year, $month, $dom);
},
jt_LocalDate_from = $temporal => {
    let $date, var$3, var$4, var$5, var$6;
    jt_LocalDate_$callClinit();
    $date = $temporal.$query(jtt_TemporalQueries_localDate());
    if ($date !== null)
        return $date;
    var$3 = new jt_DateTimeException;
    var$4 = jl_String_valueOf($temporal);
    var$5 = jl_Class_getName(jl_Object_getClass($temporal));
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(361)), var$4), $rt_s(362)), var$5);
    jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$6));
    $rt_throw(var$3);
},
jt_LocalDate_create = ($year, $month, $dayOfMonth) => {
    let var$4, var$5, var$6;
    jt_LocalDate_$callClinit();
    if ($dayOfMonth > 28) {
        jtc_IsoChronology_$callClinit();
        if ($dayOfMonth > jt_Month_length($month, jtc_IsoChronology_isLeapYear(jtc_IsoChronology_INSTANCE, Long_fromInt($year)))) {
            if ($dayOfMonth == 29) {
                var$4 = new jt_DateTimeException;
                var$5 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(363)), $year), $rt_s(360));
                jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$5));
                $rt_throw(var$4);
            }
            var$4 = new jt_DateTimeException;
            var$5 = jl_Enum_name($month);
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(364)), var$5), 32), $dayOfMonth), 39);
            jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$6));
            $rt_throw(var$4);
        }
    }
    return jt_LocalDate__init_($year, jt_Month_getValue($month), $dayOfMonth);
},
jt_LocalDate_resolvePreviousValid = ($year, $month, $day) => {
    jt_LocalDate_$callClinit();
    a: {
        switch ($month) {
            case 2:
                jtc_IsoChronology_$callClinit();
                $day = jl_Math_min($day, !jtc_IsoChronology_isLeapYear(jtc_IsoChronology_INSTANCE, Long_fromInt($year)) ? 28 : 29);
                break a;
            case 4:
            case 6:
            case 9:
            case 11:
                $day = jl_Math_min($day, 30);
                break a;
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
                break;
            default:
        }
    }
    return jt_LocalDate_of($year, $month, $day);
},
jt_LocalDate__init_0 = ($this, $year, $month, $dayOfMonth) => {
    jt_LocalDate_$callClinit();
    jtc_ChronoLocalDate__init_($this);
    $this.$year = $year;
    $this.$month = $month << 16 >> 16;
    $this.$day = $dayOfMonth << 16 >> 16;
},
jt_LocalDate__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jt_LocalDate();
    jt_LocalDate__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jt_LocalDate_isSupported = ($this, $field) => {
    return jtc_ChronoLocalDate_isSupported($this, $field);
},
jt_LocalDate_range = ($this, $field) => {
    let $f, var$3, var$4, var$5;
    if (!($field instanceof jtt_ChronoField))
        return $field.$rangeRefinedBy($this);
    $f = $field;
    if (!jtt_ChronoField_isDateBased($f)) {
        var$3 = new jtt_UnsupportedTemporalTypeException;
        var$4 = jl_String_valueOf($field);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(51)), var$4);
        jtt_UnsupportedTemporalTypeException__init_(var$3, jl_StringBuilder_toString(var$5));
        $rt_throw(var$3);
    }
    jt_LocalDate$1_$callClinit();
    switch (jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal($f)]) {
        case 1:
            return jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(jt_LocalDate_lengthOfMonth($this)));
        case 2:
            return jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(jt_LocalDate_lengthOfYear($this)));
        case 3:
            var$4 = jt_LocalDate_getMonth($this);
            jt_Month_$callClinit();
            return jtt_ValueRange_of(Long_fromInt(1), var$4 === jt_Month_FEBRUARY && !jt_LocalDate_isLeapYear($this) ? Long_fromInt(4) : Long_fromInt(5));
        case 4:
            return jt_LocalDate_getYear($this) > 0 ? jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(999999999)) : jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(1000000000));
        default:
    }
    return $field.$range();
},
jt_LocalDate_get = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return jtt_TemporalAccessor_get($this, $field);
    return jt_LocalDate_get0($this, $field);
},
jt_LocalDate_getLong = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return $field.$getFrom($this);
    jtt_ChronoField_$callClinit();
    if ($field === jtt_ChronoField_EPOCH_DAY)
        return jt_LocalDate_toEpochDay($this);
    if ($field === jtt_ChronoField_PROLEPTIC_MONTH)
        return jt_LocalDate_getProlepticMonth($this);
    return Long_fromInt(jt_LocalDate_get0($this, $field));
},
jt_LocalDate_get0 = ($this, $field) => {
    let var$2, var$3, var$4;
    jt_LocalDate$1_$callClinit();
    switch (jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal($field)]) {
        case 1:
            break;
        case 2:
            return jt_LocalDate_getDayOfYear($this);
        case 3:
            return (($this.$day - 1 | 0) / 7 | 0) + 1 | 0;
        case 4:
            return $this.$year >= 1 ? $this.$year : 1 - $this.$year | 0;
        case 5:
            return jt_DayOfWeek_getValue(jt_LocalDate_getDayOfWeek($this));
        case 6:
            return (($this.$day - 1 | 0) % 7 | 0) + 1 | 0;
        case 7:
            return ((jt_LocalDate_getDayOfYear($this) - 1 | 0) % 7 | 0) + 1 | 0;
        case 8:
            var$2 = new jt_DateTimeException;
            var$3 = jl_String_valueOf($field);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(365)), var$3);
            jt_DateTimeException__init_(var$2, jl_StringBuilder_toString(var$4));
            $rt_throw(var$2);
        case 9:
            return ((jt_LocalDate_getDayOfYear($this) - 1 | 0) / 7 | 0) + 1 | 0;
        case 10:
            return $this.$month;
        case 11:
            var$2 = new jt_DateTimeException;
            var$3 = jl_String_valueOf($field);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(365)), var$3);
            jt_DateTimeException__init_(var$2, jl_StringBuilder_toString(var$4));
            $rt_throw(var$2);
        case 12:
            return $this.$year;
        case 13:
            return $this.$year < 1 ? 0 : 1;
        default:
            var$2 = new jtt_UnsupportedTemporalTypeException;
            var$3 = jl_String_valueOf($field);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(51)), var$3);
            jtt_UnsupportedTemporalTypeException__init_(var$2, jl_StringBuilder_toString(var$4));
            $rt_throw(var$2);
    }
    return $this.$day;
},
jt_LocalDate_getProlepticMonth = $this => {
    return Long_add(Long_mul(Long_fromInt($this.$year), Long_fromInt(12)), Long_fromInt($this.$month - 1 | 0));
},
jt_LocalDate_getChronology = $this => {
    jtc_IsoChronology_$callClinit();
    return jtc_IsoChronology_INSTANCE;
},
jt_LocalDate_getYear = $this => {
    return $this.$year;
},
jt_LocalDate_getMonth = $this => {
    return jt_Month_of($this.$month);
},
jt_LocalDate_getDayOfYear = $this => {
    return (jt_Month_firstDayOfYear(jt_LocalDate_getMonth($this), jt_LocalDate_isLeapYear($this)) + $this.$day | 0) - 1 | 0;
},
jt_LocalDate_getDayOfWeek = $this => {
    let $dow0;
    $dow0 = jl_Math_floorMod(Long_add(jt_LocalDate_toEpochDay($this), Long_fromInt(3)), 7);
    return jt_DayOfWeek_of($dow0 + 1 | 0);
},
jt_LocalDate_isLeapYear = $this => {
    jtc_IsoChronology_$callClinit();
    return jtc_IsoChronology_isLeapYear(jtc_IsoChronology_INSTANCE, Long_fromInt($this.$year));
},
jt_LocalDate_lengthOfMonth = $this => {
    switch ($this.$month) {
        case 2:
            return !jt_LocalDate_isLeapYear($this) ? 28 : 29;
        case 3:
        case 5:
        case 7:
        case 8:
        case 10:
            break;
        case 4:
        case 6:
        case 9:
        case 11:
            return 30;
        default:
    }
    return 31;
},
jt_LocalDate_lengthOfYear = $this => {
    return !jt_LocalDate_isLeapYear($this) ? 365 : 366;
},
jt_LocalDate_with0 = ($this, $adjuster) => {
    if ($adjuster instanceof jt_LocalDate)
        return $adjuster;
    return $adjuster.$adjustInto($this);
},
jt_LocalDate_with = ($this, $field, $newValue) => {
    let $f, var$4, var$5, var$6;
    if (!($field instanceof jtt_ChronoField))
        return $field.$adjustInto0($this, $newValue);
    $f = $field;
    jtt_ChronoField_checkValidValue($f, $newValue);
    jt_LocalDate$1_$callClinit();
    switch (jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal($f)]) {
        case 1:
            return jt_LocalDate_withDayOfMonth($this, Long_lo($newValue));
        case 2:
            return jt_LocalDate_withDayOfYear($this, Long_lo($newValue));
        case 3:
            return jt_LocalDate_plusWeeks($this, Long_sub($newValue, jt_LocalDate_getLong($this, jtt_ChronoField_ALIGNED_WEEK_OF_MONTH)));
        case 4:
            if ($this.$year < 1)
                $newValue = Long_sub(Long_fromInt(1), $newValue);
            return jt_LocalDate_withYear($this, Long_lo($newValue));
        case 5:
            return jt_LocalDate_plusDays($this, Long_sub($newValue, Long_fromInt(jt_DayOfWeek_getValue(jt_LocalDate_getDayOfWeek($this)))));
        case 6:
            return jt_LocalDate_plusDays($this, Long_sub($newValue, jt_LocalDate_getLong($this, jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH)));
        case 7:
            return jt_LocalDate_plusDays($this, Long_sub($newValue, jt_LocalDate_getLong($this, jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR)));
        case 8:
            break;
        case 9:
            return jt_LocalDate_plusWeeks($this, Long_sub($newValue, jt_LocalDate_getLong($this, jtt_ChronoField_ALIGNED_WEEK_OF_YEAR)));
        case 10:
            return jt_LocalDate_withMonth($this, Long_lo($newValue));
        case 11:
            return jt_LocalDate_plusMonths($this, Long_sub($newValue, jt_LocalDate_getLong($this, jtt_ChronoField_PROLEPTIC_MONTH)));
        case 12:
            return jt_LocalDate_withYear($this, Long_lo($newValue));
        case 13:
            if (Long_ne(jt_LocalDate_getLong($this, jtt_ChronoField_ERA), $newValue))
                $this = jt_LocalDate_withYear($this, 1 - $this.$year | 0);
            return $this;
        default:
            var$4 = new jtt_UnsupportedTemporalTypeException;
            var$5 = jl_String_valueOf($field);
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(51)), var$5);
            jtt_UnsupportedTemporalTypeException__init_(var$4, jl_StringBuilder_toString(var$6));
            $rt_throw(var$4);
    }
    return jt_LocalDate_ofEpochDay($newValue);
},
jt_LocalDate_withYear = ($this, $year) => {
    if ($this.$year == $year)
        return $this;
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_YEAR, Long_fromInt($year));
    return jt_LocalDate_resolvePreviousValid($year, $this.$month, $this.$day);
},
jt_LocalDate_withMonth = ($this, $month) => {
    if ($this.$month == $month)
        return $this;
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_MONTH_OF_YEAR, Long_fromInt($month));
    return jt_LocalDate_resolvePreviousValid($this.$year, $month, $this.$day);
},
jt_LocalDate_withDayOfMonth = ($this, $dayOfMonth) => {
    if ($this.$day == $dayOfMonth)
        return $this;
    return jt_LocalDate_of($this.$year, $this.$month, $dayOfMonth);
},
jt_LocalDate_withDayOfYear = ($this, $dayOfYear) => {
    if (jt_LocalDate_getDayOfYear($this) == $dayOfYear)
        return $this;
    return jt_LocalDate_ofYearDay($this.$year, $dayOfYear);
},
jt_LocalDate_plus0 = ($this, $amount) => {
    return $amount.$addTo($this);
},
jt_LocalDate_plus = ($this, $amountToAdd, $unit) => {
    let $f, var$4, var$5, var$6;
    if (!($unit instanceof jtt_ChronoUnit))
        return $unit.$addTo0($this, $amountToAdd);
    $f = $unit;
    jt_LocalDate$1_$callClinit();
    switch (jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal($f)]) {
        case 1:
            break;
        case 2:
            return jt_LocalDate_plusWeeks($this, $amountToAdd);
        case 3:
            return jt_LocalDate_plusMonths($this, $amountToAdd);
        case 4:
            return jt_LocalDate_plusYears($this, $amountToAdd);
        case 5:
            return jt_LocalDate_plusYears($this, jl_Math_multiplyExact($amountToAdd, 10));
        case 6:
            return jt_LocalDate_plusYears($this, jl_Math_multiplyExact($amountToAdd, 100));
        case 7:
            return jt_LocalDate_plusYears($this, jl_Math_multiplyExact($amountToAdd, 1000));
        case 8:
            jtt_ChronoField_$callClinit();
            return jt_LocalDate_with($this, jtt_ChronoField_ERA, jl_Math_addExact(jt_LocalDate_getLong($this, jtt_ChronoField_ERA), $amountToAdd));
        default:
            var$4 = new jtt_UnsupportedTemporalTypeException;
            var$5 = jl_String_valueOf($unit);
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(366)), var$5);
            jtt_UnsupportedTemporalTypeException__init_(var$4, jl_StringBuilder_toString(var$6));
            $rt_throw(var$4);
    }
    return jt_LocalDate_plusDays($this, $amountToAdd);
},
jt_LocalDate_plusYears = ($this, $yearsToAdd) => {
    let $newYear;
    if (Long_eq($yearsToAdd, Long_ZERO))
        return $this;
    jtt_ChronoField_$callClinit();
    $newYear = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, Long_add(Long_fromInt($this.$year), $yearsToAdd));
    return jt_LocalDate_resolvePreviousValid($newYear, $this.$month, $this.$day);
},
jt_LocalDate_plusMonths = ($this, $monthsToAdd) => {
    let $monthCount, $calcMonths, $newYear, $newMonth;
    if (Long_eq($monthsToAdd, Long_ZERO))
        return $this;
    $monthCount = Long_add(Long_mul(Long_fromInt($this.$year), Long_fromInt(12)), Long_fromInt($this.$month - 1 | 0));
    $calcMonths = Long_add($monthCount, $monthsToAdd);
    jtt_ChronoField_$callClinit();
    $newYear = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, jl_Math_floorDiv($calcMonths, 12));
    $newMonth = jl_Math_floorMod($calcMonths, 12) + 1 | 0;
    return jt_LocalDate_resolvePreviousValid($newYear, $newMonth, $this.$day);
},
jt_LocalDate_plusWeeks = ($this, $weeksToAdd) => {
    return jt_LocalDate_plusDays($this, jl_Math_multiplyExact($weeksToAdd, 7));
},
jt_LocalDate_plusDays = ($this, $daysToAdd) => {
    let $mjDay;
    if (Long_eq($daysToAdd, Long_ZERO))
        return $this;
    $mjDay = jl_Math_addExact(jt_LocalDate_toEpochDay($this), $daysToAdd);
    return jt_LocalDate_ofEpochDay($mjDay);
},
jt_LocalDate_minus = ($this, $amountToSubtract, $unit) => {
    return Long_ne($amountToSubtract, Long_create(0, 2147483648)) ? jt_LocalDate_plus($this, Long_neg($amountToSubtract), $unit) : jt_LocalDate_plus(jt_LocalDate_plus($this, Long_create(4294967295, 2147483647), $unit), Long_fromInt(1), $unit);
},
jt_LocalDate_minusYears = ($this, $yearsToSubtract) => {
    return Long_ne($yearsToSubtract, Long_create(0, 2147483648)) ? jt_LocalDate_plusYears($this, Long_neg($yearsToSubtract)) : jt_LocalDate_plusYears(jt_LocalDate_plusYears($this, Long_create(4294967295, 2147483647)), Long_fromInt(1));
},
jt_LocalDate_query = ($this, $query) => {
    if ($query === jtt_TemporalQueries_localDate())
        return $this;
    return jtc_ChronoLocalDate_query($this, $query);
},
jt_LocalDate_atTime = ($this, $time) => {
    return jt_LocalDateTime_of($this, $time);
},
jt_LocalDate_toEpochDay = $this => {
    let $y, $m, $total, var$4, var$5;
    $y = Long_fromInt($this.$year);
    $m = Long_fromInt($this.$month);
    $total = Long_ZERO;
    var$4 = Long_add($total, Long_mul(Long_fromInt(365), $y));
    var$5 = Long_lt($y, Long_ZERO) ? Long_sub(var$4, Long_add(Long_sub(Long_div($y, Long_fromInt(-4)), Long_div($y, Long_fromInt(-100))), Long_div($y, Long_fromInt(-400)))) : Long_add(var$4, Long_add(Long_sub(Long_div(Long_add($y, Long_fromInt(3)), Long_fromInt(4)), Long_div(Long_add($y, Long_fromInt(99)), Long_fromInt(100))), Long_div(Long_add($y, Long_fromInt(399)), Long_fromInt(400))));
    var$5 = Long_add(var$5, Long_div(Long_sub(Long_mul(Long_fromInt(367), $m), Long_fromInt(362)), Long_fromInt(12)));
    var$5 = Long_add(var$5, Long_fromInt($this.$day - 1 | 0));
    if (Long_gt($m, Long_fromInt(2))) {
        var$5 = Long_sub(var$5, Long_fromInt(1));
        if (!jt_LocalDate_isLeapYear($this))
            var$5 = Long_sub(var$5, Long_fromInt(1));
    }
    return Long_sub(var$5, Long_fromInt(719528));
},
jt_LocalDate_compareTo = ($this, $other) => {
    if (!($other instanceof jt_LocalDate))
        return jtc_ChronoLocalDate_compareTo($this, $other);
    return jt_LocalDate_compareTo0($this, $other);
},
jt_LocalDate_compareTo0 = ($this, $otherDate) => {
    let $cmp;
    $cmp = $this.$year - $otherDate.$year | 0;
    if (!$cmp) {
        $cmp = $this.$month - $otherDate.$month | 0;
        if (!$cmp)
            $cmp = $this.$day - $otherDate.$day | 0;
    }
    return $cmp;
},
jt_LocalDate_equals = ($this, $obj) => {
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jt_LocalDate))
        return 0;
    return jt_LocalDate_compareTo0($this, $obj) ? 0 : 1;
},
jt_LocalDate_hashCode = $this => {
    let $yearValue, $monthValue, $dayValue;
    $yearValue = $this.$year;
    $monthValue = $this.$month;
    $dayValue = $this.$day;
    return $yearValue & (-2048) ^ ((($yearValue << 11) + ($monthValue << 6) | 0) + $dayValue | 0);
},
jt_LocalDate_toString = $this => {
    let $yearValue, $monthValue, $dayValue, $absYear, $buf, var$6;
    $yearValue = $this.$year;
    $monthValue = $this.$month;
    $dayValue = $this.$day;
    $absYear = jl_Math_abs($yearValue);
    $buf = jl_StringBuilder__init_0(10);
    if ($absYear >= 1000) {
        if ($yearValue > 9999)
            $buf.$append0(43);
        $buf.$append3($yearValue);
    } else if ($yearValue >= 0)
        ($buf.$append3($yearValue + 10000 | 0)).$deleteCharAt(0);
    else
        ($buf.$append3($yearValue - 10000 | 0)).$deleteCharAt(1);
    var$6 = $buf.$append1($monthValue >= 10 ? $rt_s(367) : $rt_s(368));
    var$6 = var$6.$append3($monthValue);
    var$6 = var$6.$append1($dayValue >= 10 ? $rt_s(367) : $rt_s(368));
    var$6 = var$6.$append3($dayValue);
    var$6 = var$6.$toString();
    return var$6;
},
jt_LocalDate_atTime0 = ($this, var$1) => {
    return jt_LocalDate_atTime($this, var$1);
},
jt_LocalDate_plus1 = ($this, var$1) => {
    return jt_LocalDate_plus0($this, var$1);
};
let jt_LocalDate_getChronology0 = $this => {
    return jt_LocalDate_getChronology($this);
},
jt_LocalDate_minus0 = ($this, var$1, var$2) => {
    return jt_LocalDate_minus($this, var$1, var$2);
},
jt_LocalDate_plus2 = ($this, var$1, var$2) => {
    return jt_LocalDate_plus($this, var$1, var$2);
},
jt_LocalDate_with1 = ($this, var$1, var$2) => {
    return jt_LocalDate_with($this, var$1, var$2);
},
jt_LocalDate__clinit_ = () => {
    jt_LocalDate_MIN = jt_LocalDate_of((-999999999), 1, 1);
    jt_LocalDate_MAX = jt_LocalDate_of(999999999, 12, 31);
},
jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException),
jl_ArrayStoreException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jl_ArrayStoreException__init_ = () => {
    let var_0 = new jl_ArrayStoreException();
    jl_ArrayStoreException__init_0(var_0);
    return var_0;
};
function onp_RTCSettings() {
    let a = this; jl_Object.call(a);
    a.$signalingLoopInterval = null;
    a.$peerExpiration = null;
    a.$delayedCandidatesInterval = null;
    a.$roomLoopInterval = null;
    a.$p2pAttemptTimeout = null;
}
let onp_RTCSettings_SIGNALING_LOOP_INTERVAL = null,
onp_RTCSettings_PEER_EXPIRATION = null,
onp_RTCSettings_DELAYED_CANDIDATES_INTERVAL = null,
onp_RTCSettings_ROOM_LOOP_INTERVAL = null,
onp_RTCSettings_P2P_TIMEOUT = null,
onp_RTCSettings_PUBLIC_STUN_SERVERS = null,
onp_RTCSettings_DEFAULT = null,
onp_RTCSettings_$callClinit = () => {
    onp_RTCSettings_$callClinit = $rt_eraseClinit(onp_RTCSettings);
    onp_RTCSettings__clinit_();
},
onp_RTCSettings__init_ = ($this, $announceInterval, $peerExpiration, $delayedCandidatesInterval, $roomLoopInterval, $p2pAttemptTimeout) => {
    onp_RTCSettings_$callClinit();
    jl_Object__init_($this);
    $this.$signalingLoopInterval = $announceInterval;
    $this.$peerExpiration = $peerExpiration;
    $this.$delayedCandidatesInterval = $delayedCandidatesInterval;
    $this.$roomLoopInterval = $roomLoopInterval;
    $this.$p2pAttemptTimeout = $p2pAttemptTimeout;
},
onp_RTCSettings__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onp_RTCSettings();
    onp_RTCSettings__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onp_RTCSettings_getSignalingLoopInterval = $this => {
    return $this.$signalingLoopInterval;
},
onp_RTCSettings_getPeerExpiration = $this => {
    return $this.$peerExpiration;
},
onp_RTCSettings_getRoomLoopInterval = $this => {
    return $this.$roomLoopInterval;
},
onp_RTCSettings_getDelayedCandidatesInterval = $this => {
    return $this.$delayedCandidatesInterval;
},
onp_RTCSettings__clinit_ = () => {
    let var$1, var$2;
    onp_RTCSettings_SIGNALING_LOOP_INTERVAL = jt_Duration_ofSeconds(Long_fromInt(5));
    onp_RTCSettings_PEER_EXPIRATION = jt_Duration_ofMinutes(Long_fromInt(5));
    onp_RTCSettings_DELAYED_CANDIDATES_INTERVAL = jt_Duration_ofMillis(Long_fromInt(100));
    onp_RTCSettings_ROOM_LOOP_INTERVAL = jt_Duration_ofSeconds(Long_fromInt(1));
    onp_RTCSettings_P2P_TIMEOUT = jt_Duration_ofSeconds(Long_fromInt(120));
    var$1 = $rt_wrapArray(jl_String, [$rt_s(369), $rt_s(370), $rt_s(371), $rt_s(372), $rt_s(373), $rt_s(374), $rt_s(375), $rt_s(376), $rt_s(377), $rt_s(378), $rt_s(379), $rt_s(380)]);
    var$2 = ju_Arrays_asList(var$1);
    onp_RTCSettings_PUBLIC_STUN_SERVERS = ju_Collections_unmodifiableCollection(var$2);
    onp_RTCSettings_DEFAULT = onp_RTCSettings__init_0(onp_RTCSettings_SIGNALING_LOOP_INTERVAL, onp_RTCSettings_PEER_EXPIRATION, onp_RTCSettings_DELAYED_CANDIDATES_INTERVAL, onp_RTCSettings_ROOM_LOOP_INTERVAL, onp_RTCSettings_P2P_TIMEOUT);
},
otji_JS$WrapFunction = $rt_classWithoutFields(0),
jur_MatchResult = $rt_classWithoutFields(0);
function jur_MatchResultImpl() {
    let a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string5 = null;
    a.$groupCount0 = 0;
    a.$valid = 0;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode4 = 0;
}
let jur_MatchResultImpl__init_ = ($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) => {
    let var$7;
    jl_Object__init_($this);
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount0 = var$7;
    $this.$groupBounds = $rt_createIntArray(var$7 * 2 | 0);
    $this.$consumers = $rt_createIntArray($consumersCount);
    ju_Arrays_fill($this.$consumers, (-1));
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    ju_Arrays_fill($this.$groupBounds, (-1));
    $this.$reset2($string, $leftBound, $rightBound);
},
jur_MatchResultImpl__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
jur_MatchResultImpl_setConsumed = ($this, $counter, $value) => {
    $this.$consumers.data[$counter] = $value;
},
jur_MatchResultImpl_getConsumed = ($this, $counter) => {
    return $this.$consumers.data[$counter];
},
jur_MatchResultImpl_end0 = $this => {
    return $this.$end(0);
},
jur_MatchResultImpl_end = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_setStart = ($this, $group, $offset) => {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
},
jur_MatchResultImpl_setEnd = ($this, $group, $offset) => {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
},
jur_MatchResultImpl_getStart = ($this, $group) => {
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_getEnd = ($this, $group) => {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_getGroupNoCheck = ($this, $group) => {
    let $st, $end;
    $st = $this.$getStart($group);
    $end = $this.$getEnd($group);
    if (($end | $st | ($end - $st | 0)) >= 0 && $end <= $this.$string5.$length())
        return ($this.$string5.$subSequence($st, $end)).$toString();
    return null;
},
jur_MatchResultImpl_start0 = $this => {
    return $this.$start(0);
},
jur_MatchResultImpl_start = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_finalizeMatch = $this => {
    if ($this.$groupBounds.data[0] == (-1)) {
        $this.$groupBounds.data[0] = $this.$startIndex;
        $this.$groupBounds.data[1] = $this.$startIndex;
    }
    $this.$previousMatch = $this.$end0();
},
jur_MatchResultImpl_getEnterCounter = ($this, $setCounter) => {
    return $this.$compQuantCounters.data[$setCounter];
},
jur_MatchResultImpl_setEnterCounter = ($this, $setCounter, $value) => {
    $this.$compQuantCounters.data[$setCounter] = $value;
},
jur_MatchResultImpl_checkGroup = ($this, $group) => {
    if (!$this.$valid)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($group >= 0 && $group < $this.$groupCount0)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_2(jl_String_valueOf0($group)));
},
jur_MatchResultImpl_setValid = $this => {
    $this.$valid = 1;
},
jur_MatchResultImpl_isValid = $this => {
    return $this.$valid;
},
jur_MatchResultImpl_reset0 = ($this, $newSequence, $leftBound, $rightBound) => {
    $this.$valid = 0;
    $this.$mode4 = 2;
    ju_Arrays_fill($this.$groupBounds, (-1));
    ju_Arrays_fill($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string5 = $newSequence;
    if ($leftBound >= 0)
        jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound);
    $this.$startIndex = $this.$leftBound0;
},
jur_MatchResultImpl_reset = $this => {
    $this.$reset2(null, (-1), (-1));
},
jur_MatchResultImpl_setBounds = ($this, $leftBound, $rightBound) => {
    $this.$leftBound0 = $leftBound;
    $this.$rightBound0 = $rightBound;
},
jur_MatchResultImpl_setStartIndex = ($this, $startIndex) => {
    $this.$startIndex = $startIndex;
    if ($this.$previousMatch >= 0)
        $startIndex = $this.$previousMatch;
    $this.$previousMatch = $startIndex;
},
jur_MatchResultImpl_getLeftBound = $this => {
    return $this.$leftBound0;
},
jur_MatchResultImpl_getRightBound = $this => {
    return $this.$rightBound0;
},
jur_MatchResultImpl_setMode = ($this, $mode) => {
    $this.$mode4 = $mode;
},
jur_MatchResultImpl_mode = $this => {
    return $this.$mode4;
},
jur_MatchResultImpl_useAnchoringBounds = ($this, $value) => {
    $this.$anchoringBounds = $value;
},
jur_MatchResultImpl_hasAnchoringBounds = $this => {
    return $this.$anchoringBounds;
},
jur_MatchResultImpl_hasTransparentBounds = $this => {
    return $this.$transparentBounds;
},
jur_MatchResultImpl_getPreviousMatchEnd = $this => {
    return $this.$previousMatch;
};
function otcit_DateTimeZone() {
    jl_Object.call(this);
    this.$iID = null;
}
let otcit_DateTimeZone__init_ = ($this, $id) => {
    jl_Object__init_($this);
    if ($id !== null) {
        $this.$iID = $id;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(381)));
},
otcit_DateTimeZone_getID = $this => {
    return $this.$iID;
};
function juca_AtomicBoolean() {
    jl_Object.call(this);
    this.$value10 = 0;
}
let juca_AtomicBoolean__init_ = ($this, $initialValue) => {
    jl_Object__init_($this);
    $this.$value10 = $initialValue;
},
juca_AtomicBoolean__init_0 = var_0 => {
    let var_1 = new juca_AtomicBoolean();
    juca_AtomicBoolean__init_(var_1, var_0);
    return var_1;
},
juca_AtomicBoolean_get = $this => {
    return $this.$value10;
},
juca_AtomicBoolean_set = ($this, $newValue) => {
    $this.$value10 = $newValue;
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$022 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_ = ($this, $this$0) => {
    $this.$this$022 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains = ($this, $ch) => {
    return jl_Character_isJavaIdentifierPart($ch);
},
onnk_NostrKey = $rt_classWithoutFields(0);
function onnk_NostrPrivateKey() {
    let a = this; jl_Object.call(a);
    a.$bech320 = null;
    a.$hex = null;
    a.$publicKey2 = null;
    a.$keySecurity = null;
    a.$readOnlyData0 = null;
    a.$data0 = null;
    a.$array6 = null;
}
let onnk_NostrPrivateKey_BECH32_PREFIX = null,
onnk_NostrPrivateKey_$assertionsDisabled = 0,
onnk_NostrPrivateKey_$callClinit = () => {
    onnk_NostrPrivateKey_$callClinit = $rt_eraseClinit(onnk_NostrPrivateKey);
    onnk_NostrPrivateKey__clinit_();
},
onnk_NostrPrivateKey_fromBytes = $data => {
    let $bbf;
    onnk_NostrPrivateKey_$callClinit();
    $bbf = jn_ByteBuffer_allocate($data.data.length);
    jn_ByteBuffer_put($bbf, $data);
    jn_ByteBuffer_rewind($bbf);
    return onnk_NostrPrivateKey__init_($bbf);
},
onnk_NostrPrivateKey_fromBytes0 = $bbf => {
    let $copy;
    onnk_NostrPrivateKey_$callClinit();
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_remaining($bbf) <= 0)
        $rt_throw(jl_AssertionError__init_0($rt_s(382)));
    $copy = jn_ByteBuffer_allocate(jn_Buffer_remaining($bbf));
    $copy.$put3($bbf.$slice());
    jn_ByteBuffer_rewind($copy);
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($bbf))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return onnk_NostrPrivateKey__init_($copy);
},
onnk_NostrPrivateKey_fromHex = $hex => {
    let $key;
    onnk_NostrPrivateKey_$callClinit();
    $key = onnk_NostrPrivateKey__init_(onp_NGEUtils_hexToBytes($hex));
    return $key;
},
onnk_NostrPrivateKey_fromNsec = $bech32 => {
    onnk_NostrPrivateKey_$callClinit();
    return onnk_NostrPrivateKey_fromBech32($bech32);
},
onnk_NostrPrivateKey_fromBech32 = $bech32 => {
    let $e, $data, $key, $$je;
    onnk_NostrPrivateKey_$callClinit();
    a: {
        try {
            if (!$bech32.$startsWith($rt_s(384)))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(385)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        b: {
            try {
                $data = onnu_Bech32_bech32Decode($bech32);
                $key = onnk_NostrPrivateKey__init_($data);
                if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($data))
                    break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $key;
        }
        try {
            $rt_throw(jl_AssertionError__init_());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
    }
    $rt_throw(jl_IllegalArgumentException__init_3($rt_s(386), $e));
},
onnk_NostrPrivateKey_fromNcryptsec = ($ncryptsec, $passphrase) => {
    onnk_NostrPrivateKey_$callClinit();
    return onnn_Nip49_decrypt($ncryptsec, $passphrase);
},
onnk_NostrPrivateKey_generate = () => {
    let $data, $key;
    onnk_NostrPrivateKey_$callClinit();
    $data = (onp_NGEUtils_getPlatform()).$generatePrivateKey();
    $key = onnk_NostrPrivateKey__init_(jn_ByteBuffer_wrap0($data));
    return $key;
},
onnk_NostrPrivateKey__init_0 = ($this, $data) => {
    onnk_NostrPrivateKey_$callClinit();
    jl_Object__init_($this);
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    $this.$keySecurity = onnk_NostrPrivateKey$KeySecurity_UNKNOWN;
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($data))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    $this.$data0 = $data;
},
onnk_NostrPrivateKey__init_ = var_0 => {
    let var_1 = new onnk_NostrPrivateKey();
    onnk_NostrPrivateKey__init_0(var_1, var_0);
    return var_1;
},
onnk_NostrPrivateKey_asReadOnlyBytes = $this => {
    if ($this.$readOnlyData0 !== null)
        return $this.$readOnlyData0;
    $this.$readOnlyData0 = ju_Collections_unmodifiableList(onnu_ByteBufferList__init_($this.$data0));
    onnk_NostrPrivateKey_$callClinit();
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$readOnlyData0;
},
onnk_NostrPrivateKey_asHex = $this => {
    if ($this.$hex !== null)
        return $this.$hex;
    $this.$hex = onp_NGEUtils_bytesToHex0($this.$data0);
    onnk_NostrPrivateKey_$callClinit();
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$hex;
},
onnk_NostrPrivateKey__array = $this => {
    if ($this.$array6 === null) {
        $this.$array6 = $rt_createByteArray(jn_Buffer_limit($this.$data0));
        ($this.$data0.$slice()).$get5($this.$array6);
    }
    onnk_NostrPrivateKey_$callClinit();
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$array6;
},
onnk_NostrPrivateKey_asBech32 = $this => {
    let var$1, $e, $$je;
    a: {
        b: {
            try {
                if ($this.$bech320 === null)
                    break b;
                var$1 = $this.$bech320;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        c: {
            try {
                onnk_NostrPrivateKey_$callClinit();
                $this.$bech320 = onnu_Bech32_bech32Encode(onnk_NostrPrivateKey_BECH32_PREFIX, $this.$data0);
                if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
                    break c;
                var$1 = $this.$bech320;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        try {
            $rt_throw(jl_AssertionError__init_0($rt_s(383)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
    }
    $rt_throw(jl_IllegalArgumentException__init_3($rt_s(386), $e));
},
onnk_NostrPrivateKey_toString = $this => {
    return onnk_NostrPrivateKey_asHex($this);
},
onnk_NostrPrivateKey_equals = ($this, $obj) => {
    let $b1, $b2, $i;
    if ($obj !== null && $obj instanceof onnk_NostrPrivateKey) {
        if ($obj === $this) {
            onnk_NostrPrivateKey_$callClinit();
            if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
                $rt_throw(jl_AssertionError__init_0($rt_s(383)));
            return 1;
        }
        $b1 = $this.$data0;
        $b2 = $obj.$data0;
        if ($b1 !== null && $b2 !== null) {
            if ($b1 === $b2) {
                onnk_NostrPrivateKey_$callClinit();
                if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
                    $rt_throw(jl_AssertionError__init_0($rt_s(383)));
                return 1;
            }
            if (jn_Buffer_limit($b1) != jn_Buffer_limit($b2)) {
                onnk_NostrPrivateKey_$callClinit();
                if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
                    $rt_throw(jl_AssertionError__init_0($rt_s(383)));
                return 0;
            }
            $i = 0;
            while ($i < jn_Buffer_limit($b1)) {
                if ($b1.$get6($i) != $b2.$get6($i)) {
                    onnk_NostrPrivateKey_$callClinit();
                    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
                        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
                    return 0;
                }
                $i = $i + 1 | 0;
            }
            onnk_NostrPrivateKey_$callClinit();
            if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
                $rt_throw(jl_AssertionError__init_0($rt_s(383)));
            return 1;
        }
        return 0;
    }
    onnk_NostrPrivateKey_$callClinit();
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return 0;
},
onnk_NostrPrivateKey_hashCode = $this => {
    let $hashcode;
    if ($this.$data0 === null)
        return 0;
    $hashcode = $this.$data0.$hashCode();
    onnk_NostrPrivateKey_$callClinit();
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $hashcode;
},
onnk_NostrPrivateKey_clone = $this => {
    let var$1, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    return onnk_NostrPrivateKey_fromBytes0($this.$data0);
},
onnk_NostrPrivateKey_preload = $this => {
    onnk_NostrPrivateKey_asHex($this);
    onnk_NostrPrivateKey_asBech32($this);
    onnk_NostrPrivateKey_asReadOnlyBytes($this);
    onnk_NostrPrivateKey__array($this);
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
},
onnk_NostrPrivateKey_getPublicKey = $this => {
    let $bdata, var$2;
    if ($this.$publicKey2 === null) {
        $bdata = onnk_NostrPrivateKey__array($this);
        var$2 = (onp_NGEUtils_getPlatform()).$genPubKey($bdata);
        $this.$publicKey2 = onnk_NostrPublicKey__init_(jn_ByteBuffer_wrap0(var$2));
    }
    onnk_NostrPrivateKey_$callClinit();
    if (!onnk_NostrPrivateKey_$assertionsDisabled && jn_Buffer_position($this.$data0))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$publicKey2;
},
onnk_NostrPrivateKey_setKeySecurity = ($this, $keySecurity) => {
    $this.$keySecurity = $keySecurity;
},
onnk_NostrPrivateKey_getKeySecurity = $this => {
    return $this.$keySecurity;
},
onnk_NostrPrivateKey_asNcryptsec = ($this, $passphrase) => {
    return onnn_Nip49_encrypt($this, $passphrase);
},
onnk_NostrPrivateKey_clone0 = $this => {
    return onnk_NostrPrivateKey_clone($this);
},
onnk_NostrPrivateKey__clinit_ = () => {
    onnk_NostrPrivateKey_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnk_NostrPrivateKey)) ? 0 : 1;
    jnc_StandardCharsets_$callClinit();
    onnk_NostrPrivateKey_BECH32_PREFIX = $rt_s(384).$getBytes(jnc_StandardCharsets_UTF_8);
},
onnk_NostrPrivateKey_clone$exported$0 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return onnk_NostrPrivateKey_clone(var$1);
},
onnk_NostrPrivateKey_preload$exported$1 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    onnk_NostrPrivateKey_preload(var$1);
},
onnk_NostrPrivateKey_toString$exported$2 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return $rt_ustr(onnk_NostrPrivateKey_toString(var$1));
},
onnk_NostrPrivateKey_equals$exported$3 = (var$1, var$2) => {
    onnk_NostrPrivateKey_$callClinit();
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onnk_NostrPrivateKey_equals(var$1, var$2);
},
onnk_NostrPrivateKey_hashCode$exported$4 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return onnk_NostrPrivateKey_hashCode(var$1);
},
onnk_NostrPrivateKey_getPublicKey$exported$5 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return onnk_NostrPrivateKey_getPublicKey(var$1);
},
onnk_NostrPrivateKey_setKeySecurity$exported$6 = (var$1, var$2) => {
    onnk_NostrPrivateKey_$callClinit();
    var$2 = var$2;
    onnk_NostrPrivateKey_setKeySecurity(var$1, var$2);
},
onnk_NostrPrivateKey_getKeySecurity$exported$7 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return onnk_NostrPrivateKey_getKeySecurity(var$1);
},
onnk_NostrPrivateKey__init_$exported$8 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return onnk_NostrPrivateKey__init_(var$1);
},
onnk_NostrPrivateKey_asNcryptsec$exported$9 = (var$1, var$2) => {
    onnk_NostrPrivateKey_$callClinit();
    var$2 = $rt_str(var$2);
    return onnk_NostrPrivateKey_asNcryptsec(var$1, var$2);
},
onnk_NostrPrivateKey_asHex$exported$10 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return $rt_ustr(onnk_NostrPrivateKey_asHex(var$1));
},
onnk_NostrPrivateKey_asBech32$exported$11 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return $rt_ustr(onnk_NostrPrivateKey_asBech32(var$1));
},
onnk_NostrPrivateKey_asReadOnlyBytes$exported$12 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return onnk_NostrPrivateKey_asReadOnlyBytes(var$1);
},
onnk_NostrPrivateKey__array$exported$13 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return otji_JS_wrap0(onnk_NostrPrivateKey__array(var$1));
},
onnk_NostrPrivateKey_clone$exported$14 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    return otji_JSWrapper_javaToJs(onnk_NostrPrivateKey_clone0(var$1));
},
onnk_NostrPrivateKey_fromBytes$exported$0 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey_fromBytes(otji_JS_unwrapByteArray(var$1));
},
onnk_NostrPrivateKey_fromBytes$exported$1 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey_fromBytes0(var$1);
},
onnk_NostrPrivateKey_fromHex$exported$2 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey_fromHex($rt_str(var$1));
},
onnk_NostrPrivateKey_fromNsec$exported$3 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey_fromNsec($rt_str(var$1));
},
onnk_NostrPrivateKey_fromBech32$exported$4 = var$1 => {
    onnk_NostrPrivateKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey_fromBech32($rt_str(var$1));
},
onnk_NostrPrivateKey_fromNcryptsec$exported$5 = (var$1, var$2) => {
    onnk_NostrPrivateKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey_fromNcryptsec($rt_str(var$1), $rt_str(var$2));
},
onnk_NostrPrivateKey_generate$exported$6 = () => {
    onnk_NostrPrivateKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey_generate();
};
function jur_DecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar0 = null;
    a.$decomposedCharLength0 = 0;
}
let jur_DecomposedCharSet__init_ = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_JointSet__init_($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
},
jur_DecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_DecomposedCharSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_DecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $decCodePoint, $readCodePoints, $rightBound, $curChar, var$8, $decCurCodePoint, var$10, var$11, var$12, var$13, var$14, var$15;
    $decCodePoint = $rt_createIntArray(4);
    $readCodePoints = 0;
    $rightBound = $matchResult.$getRightBound();
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = $this.$codePointAt($strIndex, $testString, $rightBound);
    var$8 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        var$10 = $decCodePoint.data;
        var$11 = 1;
        var$10[$readCodePoints] = $curChar;
    } else {
        var$11 = $decCurCodePoint.data.length;
        jl_System_fastArraycopy($decCurCodePoint, 0, $decCodePoint, 0, var$11);
        var$11 = $readCodePoints + var$11 | 0;
    }
    a: {
        if (var$8 < $rightBound) {
            var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
            while (var$11 < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass(var$12)) {
                    var$10 = $decCodePoint.data;
                    var$13 = var$11 + 1 | 0;
                    var$10[var$11] = var$12;
                } else {
                    var$10 = (jur_Lexer_getDecomposition(var$12)).data;
                    if (var$10.length != 2) {
                        var$14 = $decCodePoint.data;
                        var$13 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                    } else {
                        var$14 = $decCodePoint.data;
                        var$12 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                        var$13 = var$12 + 1 | 0;
                        var$14[var$12] = var$10[1];
                    }
                }
                var$8 = var$8 + $this.$readCharsForCodePoint | 0;
                if (var$8 >= $rightBound) {
                    var$11 = var$13;
                    break a;
                }
                var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
                var$11 = var$13;
            }
        }
    }
    if (var$11 != $this.$decomposedCharLength0)
        return (-1);
    var$15 = 0;
    while (true) {
        if (var$15 >= var$11)
            return $this.$next5.$matches(var$8, $testString, $matchResult);
        if ($decCodePoint.data[var$15] != $this.$decomposedChar0.data[var$15])
            break;
        var$15 = var$15 + 1 | 0;
    }
    return (-1);
},
jur_DecomposedCharSet_getDecomposedChar = $this => {
    let $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$decomposedCharLength0) {
            $strBuff.$append11(jl_Character_toChars($this.$decomposedChar0.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = $strBuff.$toString();
    }
    return $this.$decomposedCharUTF16;
},
jur_DecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_DecomposedCharSet_getDecomposedChar($this);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(387)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_DecomposedCharSet_codePointAt = ($this, $strIndex, $testString, $rightBound) => {
    let $curChar, var$5, $low, $curCodePointUTF16;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = $testString.$charAt($strIndex);
    else {
        var$5 = $strIndex + 1 | 0;
        $curChar = $testString.$charAt($strIndex);
        $low = $testString.$charAt(var$5);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArrayFromData([$curChar, $low]);
            $curChar = jl_Character_codePointAt($curCodePointUTF16, 0);
            $this.$readCharsForCodePoint = 2;
        }
    }
    return $curChar;
},
jur_DecomposedCharSet_first = ($this, $set) => {
    let var$2, var$3;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            var$2 = $set;
            if (!(jur_DecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_DecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
},
jur_DecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function onnpi_NostrEOSEMessage() {
    onnp_NostrMessage.call(this);
    this.$subId0 = null;
}
let onnpi_NostrEOSEMessage__init_0 = ($this, $subId) => {
    onnp_NostrMessage__init_($this);
    $this.$subId0 = $subId;
},
onnpi_NostrEOSEMessage__init_ = var_0 => {
    let var_1 = new onnpi_NostrEOSEMessage();
    onnpi_NostrEOSEMessage__init_0(var_1, var_0);
    return var_1;
},
onnpi_NostrEOSEMessage_getSubId = $this => {
    return $this.$subId0;
},
onnpi_NostrEOSEMessage_getPrefix = $this => {
    return $rt_s(388);
},
onnpi_NostrEOSEMessage_getFragments = $this => {
    return ju_List_of1($this.$subId0);
},
onnpi_NostrEOSEMessage_parse = $data => {
    let $prefix, $subId;
    $prefix = onp_NGEUtils_safeString($data.$get(0));
    if ($data.$size() >= 2 && $prefix.$equals($rt_s(388))) {
        $subId = onp_NGEUtils_safeString($data.$get(1));
        return onnpi_NostrEOSEMessage__init_($subId);
    }
    return null;
},
onnpi_NostrEOSEMessage_getSubId$exported$0 = var$1 => {
    return $rt_ustr(var$1.$getSubId());
},
onnpi_NostrEOSEMessage__init_$exported$1 = var$1 => {
    return onnpi_NostrEOSEMessage__init_($rt_str(var$1));
},
onnpi_NostrEOSEMessage_parse$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnpi_NostrEOSEMessage_parse(var$1);
},
jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalArgumentException__init_2 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IllegalArgumentException__init_0 = () => {
    let var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_0);
    return var_0;
},
jl_IllegalArgumentException__init_4 = ($this, $message, $cause) => {
    jl_RuntimeException__init_2($this, $message, $cause);
},
jl_IllegalArgumentException__init_3 = (var_0, var_1) => {
    let var_2 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_4(var_2, var_0, var_1);
    return var_2;
},
jl_IllegalArgumentException__init_1 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_IllegalArgumentException__init_ = var_0 => {
    let var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_1(var_1, var_0);
    return var_1;
};
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
let jnc_IllegalCharsetNameException__init_0 = ($this, $charsetName) => {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName = $charsetName;
},
jnc_IllegalCharsetNameException__init_ = var_0 => {
    let var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
};
function onnr_NostrRTCRoom() {
    let a = this; jl_Object.call(a);
    a.$pendingInitiatedConnections = null;
    a.$connections = null;
    a.$bannedPeers = null;
    a.$onConnectionListeners = null;
    a.$onDisconnectionListeners = null;
    a.$onMessageListeners = null;
    a.$onPeerDiscoveredListeners = null;
    a.$localPeer2 = null;
    a.$signaling = null;
    a.$settings = null;
    a.$turnSettings = null;
    a.$executor2 = null;
    a.$roomKeyPair0 = null;
    a.$listener = null;
}
let onnr_NostrRTCRoom_logger = null,
onnr_NostrRTCRoom_$assertionsDisabled = 0,
onnr_NostrRTCRoom_$callClinit = () => {
    onnr_NostrRTCRoom_$callClinit = $rt_eraseClinit(onnr_NostrRTCRoom);
    onnr_NostrRTCRoom__clinit_();
},
onnr_NostrRTCRoom__init_ = ($this, $settings, $turnSettings, $localPeer, $roomKeyPair, $signalingPool) => {
    let var$6, $platform;
    onnr_NostrRTCRoom_$callClinit();
    jl_Object__init_($this);
    $this.$pendingInitiatedConnections = juc_ConcurrentHashMap__init_();
    $this.$connections = juc_ConcurrentHashMap__init_();
    $this.$bannedPeers = juc_CopyOnWriteArrayList__init_();
    $this.$onConnectionListeners = juc_CopyOnWriteArrayList__init_();
    $this.$onDisconnectionListeners = juc_CopyOnWriteArrayList__init_();
    $this.$onMessageListeners = juc_CopyOnWriteArrayList__init_();
    $this.$onPeerDiscoveredListeners = juc_CopyOnWriteArrayList__init_();
    $this.$listener = onnr_NostrRTCRoom$1__init_($this);
    $this.$roomKeyPair0 = ju_Objects_requireNonNull($roomKeyPair, $rt_s(389));
    $this.$settings = ju_Objects_requireNonNull($settings, $rt_s(390));
    $this.$turnSettings = ju_Objects_requireNonNull($turnSettings, $rt_s(390));
    $this.$localPeer2 = ju_Objects_requireNonNull($localPeer, $rt_s(391));
    var$6 = onnrs_NostrRTCSignaling__init_($settings, $localPeer, $roomKeyPair, ju_Objects_requireNonNull($signalingPool, $rt_s(392)));
    $this.$signaling = var$6;
    $this.$signaling.$addListener($this.$listener);
    $platform = onp_NGEUtils_getPlatform();
    $this.$executor2 = onp_NGEPlatform_newPoolExecutor($platform);
},
onnr_NostrRTCRoom__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onnr_NostrRTCRoom();
    onnr_NostrRTCRoom__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onnr_NostrRTCRoom_close = $this => {
    let var$1, $socket, $conn;
    var$1 = ($this.$connections.$values0()).$iterator();
    while (var$1.$hasNext()) {
        $socket = var$1.$next();
        $socket.$close();
    }
    var$1 = ($this.$pendingInitiatedConnections.$values0()).$iterator();
    while (var$1.$hasNext()) {
        $conn = var$1.$next();
        $conn.$socket.$close();
    }
    $this.$signaling.$close();
    $this.$executor2.$close();
},
onnr_NostrRTCRoom_addMessageListener = ($this, $listener) => {
    $this.$onMessageListeners.$add1($listener);
    return $this;
},
onnr_NostrRTCRoom_addConnectionListener = ($this, $listener) => {
    $this.$onConnectionListeners.$add1($listener);
    return $this;
},
onnr_NostrRTCRoom_addDisconnectionListener = ($this, $listener) => {
    $this.$onDisconnectionListeners.$add1($listener);
    return $this;
},
onnr_NostrRTCRoom_addPeerDiscoveryListener = ($this, $listener) => {
    $this.$onPeerDiscoveredListeners.$add1($listener);
    return $this;
},
onnr_NostrRTCRoom_addListener = ($this, $listener) => {
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerConnectedListener))
        $this.$addConnectionListener($listener);
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerDisconnectListener))
        $this.$addDisconnectionListener($listener);
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerMessageListener))
        $this.$addMessageListener($listener);
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerDiscoveredListener))
        $this.$addPeerDiscoveryListener($listener);
    return $this;
},
onnr_NostrRTCRoom_removeListener = ($this, $listener) => {
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerConnectedListener))
        $this.$onConnectionListeners.$remove2($listener);
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerDisconnectListener))
        $this.$onDisconnectionListeners.$remove2($listener);
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerMessageListener))
        $this.$onMessageListeners.$remove2($listener);
    if ($rt_isInstance($listener, onnrl_NostrRTCRoomPeerDiscoveredListener))
        $this.$onPeerDiscoveredListeners.$remove2($listener);
    return $this;
},
onnr_NostrRTCRoom_loop = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$executor2;
    var$2 = onnr_NostrRTCRoom$loop$lambda$_8_0__init_0($this);
    var$3 = $this.$settings;
    var$4 = jt_Duration_toMillis(onp_RTCSettings_getRoomLoopInterval(var$3));
    juc_TimeUnit_$callClinit();
    var$3 = juc_TimeUnit_MILLISECONDS;
    var$1.$runLater(var$2, var$4, var$3);
},
onnr_NostrRTCRoom_shouldOfferConnection = ($this, $pubkey) => {
    let $localHex, $remoteHex, $precedence, var$5, var$6, var$7;
    $localHex = onnk_NostrPublicKey_asHex($this.$localPeer2.$getPubkey());
    $remoteHex = onnk_NostrPublicKey_asHex($pubkey);
    $precedence = $localHex.$compareTo0($remoteHex) >= 0 ? 0 : 1;
    if (!$precedence) {
        onnr_NostrRTCRoom_$callClinit();
        var$5 = onnr_NostrRTCRoom_logger;
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(393)), $localHex), $rt_s(394)), $remoteHex);
        var$5.$fine(jl_StringBuilder_toString(var$6));
    } else {
        onnr_NostrRTCRoom_$callClinit();
        var$5 = onnr_NostrRTCRoom_logger;
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(395)), $localHex), $rt_s(37)), $remoteHex);
        var$5.$fine(jl_StringBuilder_toString(var$7));
    }
    return $precedence;
},
onnr_NostrRTCRoom_discover = $this => {
    return $this.$signaling.$start0(0);
},
onnr_NostrRTCRoom_start = $this => {
    onnr_NostrRTCRoom_loop($this);
    return $this.$signaling.$start0(1);
},
onnr_NostrRTCRoom_kick = ($this, $peer) => {
    let $socket, var$3, var$4, var$5, $listener, $e, $$je;
    $socket = $this.$connections.$remove1($peer);
    if ($socket === null) {
        onnr_NostrRTCRoom_$callClinit();
        var$3 = onnr_NostrRTCRoom_logger;
        var$4 = jl_String_valueOf($peer);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(396)), var$4);
        var$3.$warning(jl_StringBuilder_toString(var$5));
    } else {
        onnr_NostrRTCRoom_$callClinit();
        var$3 = onnr_NostrRTCRoom_logger;
        var$4 = jl_String_valueOf($peer);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(397)), var$4);
        var$3.$fine(jl_StringBuilder_toString(var$5));
        $socket.$close();
        var$3 = $this.$onDisconnectionListeners.$iterator();
        while (var$3.$hasNext()) {
            $listener = var$3.$next();
            a: {
                try {
                    $listener.$onRoomPeerDisconnected(($socket.$getRemotePeer()).$getPubkey(), $socket);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                    } else {
                        throw $$e;
                    }
                }
                var$4 = onnr_NostrRTCRoom_logger;
                jul_Level_$callClinit();
                var$4.$log(jul_Level_WARNING, $rt_s(398), $e);
            }
        }
    }
},
onnr_NostrRTCRoom_onRTCSocketClose = ($this, $socket) => {
    let $c, var$3, var$4, var$5, $listener, $e, $$je;
    a: {
        $c = $this.$connections.$remove1(($socket.$getRemotePeer()).$getPubkey());
        if ($c !== null) {
            onnr_NostrRTCRoom_$callClinit();
            var$3 = onnr_NostrRTCRoom_logger;
            var$4 = jl_String_valueOf(($socket.$getRemotePeer()).$getPubkey());
            var$5 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(399)), var$4);
            var$3.$fine(jl_StringBuilder_toString(var$5));
            var$3 = $this.$onDisconnectionListeners.$iterator();
            while (true) {
                if (!var$3.$hasNext())
                    break a;
                $listener = var$3.$next();
                b: {
                    try {
                        $listener.$onRoomPeerDisconnected(($socket.$getRemotePeer()).$getPubkey(), $socket);
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $e = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    var$4 = onnr_NostrRTCRoom_logger;
                    jul_Level_$callClinit();
                    var$4.$log(jul_Level_WARNING, $rt_s(398), $e);
                }
            }
        }
    }
},
onnr_NostrRTCRoom_ban = ($this, $peer) => {
    let var$2, var$3, var$4, var$5;
    if ($this.$bannedPeers.$contains($peer)) {
        onnr_NostrRTCRoom_$callClinit();
        var$2 = onnr_NostrRTCRoom_logger;
        var$3 = jl_String_valueOf($peer);
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(400)), var$3);
        var$2.$fine(jl_StringBuilder_toString(var$4));
    } else {
        onnr_NostrRTCRoom_$callClinit();
        var$2 = onnr_NostrRTCRoom_logger;
        var$5 = jl_String_valueOf($peer);
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(401)), var$5);
        var$2.$fine(jl_StringBuilder_toString(var$3));
        $this.$bannedPeers.$add1($peer);
    }
    $this.$kick($peer);
},
onnr_NostrRTCRoom_unban = ($this, $peer) => {
    let var$2, var$3, var$4;
    onnr_NostrRTCRoom_$callClinit();
    var$2 = onnr_NostrRTCRoom_logger;
    var$3 = jl_String_valueOf($peer);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(402)), var$3);
    var$2.$fine(jl_StringBuilder_toString(var$4));
    $this.$bannedPeers.$remove2($peer);
},
onnr_NostrRTCRoom_onAddAnnounce = ($this, $announce) => {
    let var$2, $listener, var$4, var$5, $e, $$je;
    var$2 = $this.$onPeerDiscoveredListeners.$iterator();
    while (var$2.$hasNext()) {
        $listener = var$2.$next();
        a: {
            try {
                var$4 = $announce.$getPubkey();
                onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
                var$5 = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_ONLINE;
                $listener.$onRoomPeerDiscovered(var$4, $announce, var$5);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onnr_NostrRTCRoom_$callClinit();
            var$5 = onnr_NostrRTCRoom_logger;
            jul_Level_$callClinit();
            var$5.$log(jul_Level_WARNING, $rt_s(398), $e);
        }
    }
},
onnr_NostrRTCRoom_onUpdateAnnounce = ($this, $announce) => {
    let var$2, $listener, var$4, var$5, $e, $$je;
    var$2 = $this.$onPeerDiscoveredListeners.$iterator();
    while (var$2.$hasNext()) {
        $listener = var$2.$next();
        a: {
            try {
                var$4 = $announce.$getPubkey();
                onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
                var$5 = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_OFFLINE;
                $listener.$onRoomPeerDiscovered(var$4, $announce, var$5);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onnr_NostrRTCRoom_$callClinit();
            var$5 = onnr_NostrRTCRoom_logger;
            jul_Level_$callClinit();
            var$5.$log(jul_Level_WARNING, $rt_s(398), $e);
        }
    }
},
onnr_NostrRTCRoom_onRemoveAnnounce = ($this, $announce, $reason) => {
    let $remotePubkey, var$4, var$5, var$6, var$7, $socket, $listener, $e, $conn, $$je;
    a: {
        $remotePubkey = $announce.$getPubkey();
        onnr_NostrRTCRoom_$callClinit();
        var$4 = onnr_NostrRTCRoom_logger;
        var$5 = jl_String_valueOf($announce);
        var$6 = jl_String_valueOf($reason);
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(403)), var$5), $rt_s(404)), var$6);
        var$4.$fine(jl_StringBuilder_toString(var$7));
        $socket = $this.$connections.$remove1($remotePubkey);
        if ($socket !== null) {
            $socket.$close();
            var$4 = $this.$onDisconnectionListeners.$iterator();
            while (true) {
                if (!var$4.$hasNext())
                    break a;
                $listener = var$4.$next();
                b: {
                    try {
                        $listener.$onRoomPeerDisconnected(($socket.$getRemotePeer()).$getPubkey(), $socket);
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $e = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    var$5 = onnr_NostrRTCRoom_logger;
                    jul_Level_$callClinit();
                    var$5.$log(jul_Level_WARNING, $rt_s(398), $e);
                }
            }
        }
    }
    $conn = $this.$pendingInitiatedConnections.$remove1($remotePubkey);
    if ($conn !== null)
        $conn.$socket.$close();
},
onnr_NostrRTCRoom_getRemotePeerInfo = ($this, $pubkey) => {
    let $peer;
    $peer = ($this.$connections.$get1($pubkey)).$getRemotePeer();
    if ($peer !== null)
        return $peer;
    return null;
},
onnr_NostrRTCRoom_getLocalPeerInfo = $this => {
    return $this.$localPeer2;
},
onnr_NostrRTCRoom_onReceiveOffer = ($this, $offer) => {
    let $remotePubkey, $conn, var$4, var$5, var$6, var$7, $socket, $listener, $e, $$je;
    $remotePubkey = ($offer.$getPeerInfo()).$getPubkey();
    $conn = $this.$pendingInitiatedConnections.$get1($remotePubkey);
    if ($conn !== null) {
        $this.$pendingInitiatedConnections.$remove1($remotePubkey);
        onnr_NostrRTCRoom_$callClinit();
        var$4 = onnr_NostrRTCRoom_logger;
        var$5 = jl_String_valueOf($remotePubkey);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(405)), var$5), $rt_s(406));
        var$4.$fine(jl_StringBuilder_toString(var$6));
        $conn.$socket.$close();
    }
    onnr_NostrRTCRoom_$callClinit();
    var$6 = onnr_NostrRTCRoom_logger;
    var$7 = jl_String_valueOf($remotePubkey);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(407)), var$7);
    var$6.$fine(jl_StringBuilder_toString(var$5));
    $socket = new onnr_NostrRTCSocket;
    var$6 = $this.$executor2;
    var$7 = $this.$localPeer2;
    var$5 = $this.$roomKeyPair0;
    onnr_NostrRTCSocket__init_($socket, var$6, var$7, onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey(var$5)), $this.$settings, $this.$turnSettings);
    $socket.$addListener0($this.$listener);
    var$6 = $socket.$connect($offer);
    var$7 = onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0__init_0($this, $remotePubkey);
    var$6.$then(var$7);
    $this.$connections.$put1($remotePubkey, $socket);
    var$6 = $this.$onConnectionListeners.$iterator();
    while (var$6.$hasNext()) {
        $listener = var$6.$next();
        a: {
            try {
                $listener.$onRoomPeerConnected(($socket.$getRemotePeer()).$getPubkey(), $socket);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            var$7 = onnr_NostrRTCRoom_logger;
            jul_Level_$callClinit();
            var$7.$log(jul_Level_WARNING, $rt_s(398), $e);
        }
    }
},
onnr_NostrRTCRoom_onReceiveAnswer = ($this, $answer) => {
    let $remotePubkey, $conn, var$4, var$5, var$6, $listener, $e, $$je;
    $remotePubkey = ($answer.$getPeerInfo()).$getPubkey();
    $conn = $this.$pendingInitiatedConnections.$remove1($remotePubkey);
    if ($conn === null) {
        onnr_NostrRTCRoom_$callClinit();
        var$4 = onnr_NostrRTCRoom_logger;
        var$5 = jl_String_valueOf($remotePubkey);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(408)), var$5);
        var$4.$warning(jl_StringBuilder_toString(var$6));
    } else {
        onnr_NostrRTCRoom_$callClinit();
        var$4 = onnr_NostrRTCRoom_logger;
        var$5 = jl_String_valueOf($remotePubkey);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(409)), var$5);
        var$4.$fine(jl_StringBuilder_toString(var$6));
        var$4 = $conn.$socket;
        var$4 = var$4.$connect($answer);
        var$5 = onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0__init_0($remotePubkey);
        var$4.$then(var$5);
        $this.$connections.$put1($remotePubkey, $conn.$socket);
        var$5 = $this.$onConnectionListeners.$iterator();
        while (var$5.$hasNext()) {
            $listener = var$5.$next();
            a: {
                try {
                    $listener.$onRoomPeerConnected($remotePubkey, $conn.$socket);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                    } else {
                        throw $$e;
                    }
                }
                var$4 = onnr_NostrRTCRoom_logger;
                jul_Level_$callClinit();
                var$4.$log(jul_Level_WARNING, $rt_s(398), $e);
            }
        }
    }
},
onnr_NostrRTCRoom_onReceiveCandidates = ($this, $candidate) => {
    let var$2, var$3, var$4, $remotePubkey, $socket;
    onnr_NostrRTCRoom_$callClinit();
    var$2 = onnr_NostrRTCRoom_logger;
    var$3 = jl_String_valueOf($candidate);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(410)), var$3);
    var$2.$fine(jl_StringBuilder_toString(var$4));
    $remotePubkey = $candidate.$getPubkey();
    $socket = $this.$connections.$get1($remotePubkey);
    if ($socket !== null)
        $socket.$mergeRemoteRTCIceCandidate($candidate);
    else {
        var$2 = onnr_NostrRTCRoom_logger;
        var$3 = jl_String_valueOf($remotePubkey);
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(396)), var$3);
        var$2.$warning(jl_StringBuilder_toString(var$4));
    }
},
onnr_NostrRTCRoom_onRTCSocketLocalIceCandidate = ($this, $socket, $candidate) => {
    let $remotePeer, $e, $pubkey, var$6, $$je;
    a: {
        b: {
            c: {
                try {
                    $remotePeer = $socket.$getRemotePeer();
                    if ($remotePeer !== null)
                        break c;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            d: {
                try {
                    $pubkey = $remotePeer.$getPubkey();
                    if ($pubkey !== null)
                        break d;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            try {
                $this.$signaling.$sendCandidates($candidate, $pubkey);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
        }
        onnr_NostrRTCRoom_$callClinit();
        var$6 = onnr_NostrRTCRoom_logger;
        jul_Level_$callClinit();
        var$6.$log(jul_Level_WARNING, $rt_s(411), $e);
    }
},
onnr_NostrRTCRoom_onRTCSocketMessage = ($this, $socket, $bbf, $turn) => {
    let var$4, $listener, $e, var$7, $bbfArray, $$je;
    var$4 = $this.$onMessageListeners.$iterator();
    while (var$4.$hasNext()) {
        $listener = var$4.$next();
        a: {
            try {
                $listener.$onRoomPeerMessage(($socket.$getRemotePeer()).$getPubkey(), $socket, $bbf, $turn);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onnr_NostrRTCRoom_$callClinit();
            var$7 = onnr_NostrRTCRoom_logger;
            jul_Level_$callClinit();
            var$7.$log(jul_Level_WARNING, $rt_s(398), $e);
        }
    }
    $bbfArray = $rt_createByteArray(jn_Buffer_remaining($bbf));
    $bbf.$get5($bbfArray);
    jn_ByteBuffer_flip($bbf);
    onnr_NostrRTCRoom_$callClinit();
    if (!onnr_NostrRTCRoom_$assertionsDisabled && !onp_NGEUtils_dbg(onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0__init_0($socket, $bbfArray, $turn)))
        $rt_throw(jl_AssertionError__init_());
},
onnr_NostrRTCRoom_send = ($this, $peer, $bbf) => {
    let $socket, var$4, var$5, var$6;
    $socket = $this.$connections.$get1($peer);
    if ($socket !== null)
        return $socket.$write0($bbf);
    onnr_NostrRTCRoom_$callClinit();
    var$4 = onnr_NostrRTCRoom_logger;
    var$5 = jl_String_valueOf($peer);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(396)), var$5);
    var$4.$warning(jl_StringBuilder_toString(var$6));
    var$4 = new jl_IllegalStateException;
    var$5 = jl_String_valueOf($peer);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(396)), var$5);
    jl_IllegalStateException__init_1(var$4, jl_StringBuilder_toString(var$6));
    $rt_throw(var$4);
},
onnr_NostrRTCRoom_broadcast = ($this, $bbf) => {
    let $tasks, var$3, $socket, $platform, var$6;
    $tasks = ju_ArrayList__init_1($this.$connections.$size());
    var$3 = ($this.$connections.$values0()).$iterator();
    while (var$3.$hasNext()) {
        $socket = var$3.$next();
        $tasks.$add1($socket.$write0($bbf));
    }
    $platform = onp_NGEUtils_getPlatform();
    var$3 = $platform.$awaitAllSettled($tasks);
    var$6 = onnr_NostrRTCRoom$broadcast$lambda$_27_0__init_0();
    var$3 = var$3.$then(var$6);
    return var$3;
},
onnr_NostrRTCRoom_lambda$broadcast$5 = $r => {
    onnr_NostrRTCRoom_$callClinit();
    return null;
},
onnr_NostrRTCRoom_lambda$onRTCSocketMessage$4 = ($socket, $bbfArray, $turn) => {
    let var$4, var$5, var$6, var$7;
    onnr_NostrRTCRoom_$callClinit();
    var$4 = onnr_NostrRTCRoom_logger;
    var$5 = jl_String_valueOf(($socket.$getRemotePeer()).$getPubkey());
    var$6 = jl_String__init_9($bbfArray);
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(412)), var$5), $rt_s(413)), var$6), $rt_s(414)), $turn);
    var$6 = jl_StringBuilder_toString(var$7);
    var$4.$finest(var$6);
},
onnr_NostrRTCRoom_lambda$onReceiveAnswer$3 = ($remotePubkey, $ignored) => {
    let var$3, var$4, var$5;
    onnr_NostrRTCRoom_$callClinit();
    var$3 = onnr_NostrRTCRoom_logger;
    var$4 = jl_String_valueOf($remotePubkey);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(415)), var$4);
    var$3.$fine(jl_StringBuilder_toString(var$5));
    return null;
},
onnr_NostrRTCRoom_lambda$onReceiveOffer$2 = ($this, $remotePubkey, $answer) => {
    let var$3, var$4, var$5, $e, $$je;
    a: {
        try {
            onnr_NostrRTCRoom_$callClinit();
            var$3 = onnr_NostrRTCRoom_logger;
            var$4 = jl_String_valueOf($remotePubkey);
            var$5 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(416)), var$4);
            var$3.$fine(jl_StringBuilder_toString(var$5));
            $this.$signaling.$sendAnswer($answer, $remotePubkey);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        var$3 = onnr_NostrRTCRoom_logger;
        jul_Level_$callClinit();
        var$3.$log(jul_Level_WARNING, $rt_s(417), $e);
    }
    return null;
},
onnr_NostrRTCRoom_lambda$loop$1 = $this => {
    let $now, var$2, $entry, $conn, var$5, var$6, var$7, $announces, $announce, $remotePubkey, $isConnected, $isPending, var$13, $e, $$je;
    a: {
        try {
            $now = jt_Instant_now();
            var$2 = ($this.$pendingInitiatedConnections.$entrySet()).$iterator();
            while (var$2.$hasNext()) {
                $entry = var$2.$next();
                $conn = $entry.$getValue();
                if (jt_Instant_isBefore(jt_Instant_plusSeconds($conn.$createdAt3, jt_Duration_getSeconds(onp_RTCSettings_getPeerExpiration($this.$settings))), $now)) {
                    onnr_NostrRTCRoom_$callClinit();
                    var$5 = onnr_NostrRTCRoom_logger;
                    var$6 = jl_String_valueOf($entry.$getKey());
                    var$7 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(418)), var$6);
                    var$5.$warning(jl_StringBuilder_toString(var$7));
                    $conn.$socket.$close();
                    $this.$pendingInitiatedConnections.$remove1($entry.$getKey());
                }
            }
            $announces = $this.$signaling.$getAnnounces();
            var$2 = $announces.$iterator();
            while (var$2.$hasNext()) {
                $announce = var$2.$next();
                $remotePubkey = $announce.$getPubkey();
                $isConnected = $this.$connections.$containsKey($remotePubkey);
                if ($isConnected)
                    continue;
                $isPending = $this.$pendingInitiatedConnections.$containsKey($remotePubkey);
                if ($isPending)
                    continue;
                if (!onnr_NostrRTCRoom_shouldOfferConnection($this, $remotePubkey))
                    continue;
                var$13 = onnr_NostrRTCRoom_logger;
                var$5 = jl_String_valueOf($remotePubkey);
                var$6 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(419)), var$5);
                var$13.$fine(jl_StringBuilder_toString(var$6));
                $conn = onnr_NostrRTCRoom$PendingConnection__init_();
                $conn.$createdAt3 = jt_Instant_now();
                var$5 = new onnr_NostrRTCSocket;
                var$6 = $this.$executor2;
                var$7 = $this.$localPeer2;
                var$13 = $this.$roomKeyPair0;
                onnr_NostrRTCSocket__init_(var$5, var$6, var$7, onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey(var$13)), $this.$settings, $this.$turnSettings);
                $conn.$socket = var$5;
                $conn.$socket.$addListener0($this.$listener);
                var$5 = $conn.$socket;
                var$5 = var$5.$listen();
                var$6 = onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0__init_0($this, $remotePubkey);
                var$5.$then(var$6);
                $this.$pendingInitiatedConnections.$put1($remotePubkey, $conn);
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        onnr_NostrRTCRoom_$callClinit();
        var$2 = onnr_NostrRTCRoom_logger;
        var$5 = $e.$getMessage();
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(420)), var$5);
        var$2.$warning(jl_StringBuilder_toString(var$6));
    }
    onnr_NostrRTCRoom_loop($this);
    return null;
},
onnr_NostrRTCRoom_lambda$loop$0 = ($this, $remotePubkey, $offer) => {
    let var$3, var$4, var$5, $e, $$je;
    a: {
        try {
            onnr_NostrRTCRoom_$callClinit();
            var$3 = onnr_NostrRTCRoom_logger;
            var$4 = jl_String_valueOf($remotePubkey);
            var$5 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(421)), var$4);
            var$3.$fine(jl_StringBuilder_toString(var$5));
            $this.$signaling.$sendOffer($offer, $remotePubkey);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        var$3 = onnr_NostrRTCRoom_logger;
        jul_Level_$callClinit();
        var$3.$log(jul_Level_WARNING, $rt_s(422), $e);
    }
    return null;
},
onnr_NostrRTCRoom__clinit_ = () => {
    onnr_NostrRTCRoom_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnr_NostrRTCRoom)) ? 0 : 1;
    onnr_NostrRTCRoom_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onnr_NostrRTCRoom)));
},
onnr_NostrRTCRoom_addListener$exported$0 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$addListener1(var$2);
},
onnr_NostrRTCRoom_lambda$loop$0$exported$1 = (var$1, var$2, var$3) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return otji_JSWrapper_javaToJs(onnr_NostrRTCRoom_lambda$loop$0(var$1, var$2, var$3));
},
onnr_NostrRTCRoom_lambda$onReceiveOffer$2$exported$2 = (var$1, var$2, var$3) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return otji_JSWrapper_javaToJs(onnr_NostrRTCRoom_lambda$onReceiveOffer$2(var$1, var$2, var$3));
},
onnr_NostrRTCRoom_onAddAnnounce$exported$3 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$onAddAnnounce(var$2);
},
onnr_NostrRTCRoom_getLocalPeerInfo$exported$4 = var$1 => {
    onnr_NostrRTCRoom_$callClinit();
    return var$1.$getLocalPeerInfo();
},
onnr_NostrRTCRoom_addMessageListener$exported$5 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$addMessageListener(var$2);
},
onnr_NostrRTCRoom_onReceiveCandidates$exported$6 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$onReceiveCandidates(var$2);
},
onnr_NostrRTCRoom_start$exported$7 = var$1 => {
    onnr_NostrRTCRoom_$callClinit();
    return var$1.$start1();
},
onnr_NostrRTCRoom_ban$exported$8 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$ban(var$2);
},
onnr_NostrRTCRoom_loop$exported$9 = var$1 => {
    onnr_NostrRTCRoom_$callClinit();
    onnr_NostrRTCRoom_loop(var$1);
},
onnr_NostrRTCRoom_onUpdateAnnounce$exported$10 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$onUpdateAnnounce(var$2);
};
let onnr_NostrRTCRoom_send$exported$11 = (var$1, var$2, var$3) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$send(var$2, var$3);
},
onnr_NostrRTCRoom_kick$exported$12 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$kick(var$2);
},
onnr_NostrRTCRoom_addPeerDiscoveryListener$exported$13 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$addPeerDiscoveryListener(var$2);
},
onnr_NostrRTCRoom_onRTCSocketMessage$exported$14 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$5 = var$4 ? 1 : 0;
    var$1.$onRTCSocketMessage(var$2, var$3, var$5);
},
onnr_NostrRTCRoom_onReceiveOffer$exported$15 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$onReceiveOffer(var$2);
},
onnr_NostrRTCRoom_unban$exported$16 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$unban(var$2);
},
onnr_NostrRTCRoom_getRemotePeerInfo$exported$17 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$getRemotePeerInfo(var$2);
},
onnr_NostrRTCRoom_lambda$loop$1$exported$18 = var$1 => {
    onnr_NostrRTCRoom_$callClinit();
    return otji_JSWrapper_javaToJs(onnr_NostrRTCRoom_lambda$loop$1(var$1));
},
onnr_NostrRTCRoom_removeListener$exported$19 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$removeListener(var$2);
},
onnr_NostrRTCRoom_shouldOfferConnection$exported$20 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return !!onnr_NostrRTCRoom_shouldOfferConnection(var$1, var$2);
},
onnr_NostrRTCRoom_onReceiveAnswer$exported$21 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$onReceiveAnswer(var$2);
},
onnr_NostrRTCRoom_onRemoveAnnounce$exported$22 = (var$1, var$2, var$3) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$1.$onRemoveAnnounce(var$2, var$3);
},
onnr_NostrRTCRoom_close$exported$23 = var$1 => {
    onnr_NostrRTCRoom_$callClinit();
    var$1.$close();
},
onnr_NostrRTCRoom_addConnectionListener$exported$24 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$addConnectionListener(var$2);
},
onnr_NostrRTCRoom_addDisconnectionListener$exported$25 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$addDisconnectionListener(var$2);
},
onnr_NostrRTCRoom_onRTCSocketLocalIceCandidate$exported$26 = (var$1, var$2, var$3) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$1.$onRTCSocketLocalIceCandidate(var$2, var$3);
},
onnr_NostrRTCRoom_broadcast$exported$27 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    return var$1.$broadcast(var$2);
},
onnr_NostrRTCRoom__init_$exported$28 = (var$1, var$2, var$3, var$4, var$5) => {
    onnr_NostrRTCRoom_$callClinit();
    return onnr_NostrRTCRoom__init_0(var$1, var$2, var$3, var$4, var$5);
},
onnr_NostrRTCRoom_discover$exported$29 = var$1 => {
    onnr_NostrRTCRoom_$callClinit();
    return var$1.$discover();
},
onnr_NostrRTCRoom_onRTCSocketClose$exported$30 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    var$2 = var$2;
    var$1.$onRTCSocketClose(var$2);
},
onnr_NostrRTCRoom_lambda$broadcast$5$exported$0 = var$1 => {
    onnr_NostrRTCRoom_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnr_NostrRTCRoom_lambda$broadcast$5(var$1);
},
onnr_NostrRTCRoom_lambda$onRTCSocketMessage$4$exported$1 = (var$1, var$2, var$3) => {
    onnr_NostrRTCRoom_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnr_NostrRTCRoom_lambda$onRTCSocketMessage$4(var$1, otji_JS_unwrapByteArray(var$2), var$3 ? 1 : 0);
},
onnr_NostrRTCRoom_lambda$onReceiveAnswer$3$exported$2 = (var$1, var$2) => {
    onnr_NostrRTCRoom_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JSWrapper_javaToJs(onnr_NostrRTCRoom_lambda$onReceiveAnswer$3(var$1, var$2));
};
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out1 = null;
}
let ji_FilterOutputStream__init_ = ($this, $out) => {
    ji_OutputStream__init_($this);
    $this.$out1 = $out;
},
ji_FilterOutputStream__init_0 = var_0 => {
    let var_1 = new ji_FilterOutputStream();
    ji_FilterOutputStream__init_(var_1, var_0);
    return var_1;
};
function ji_PrintStream() {
    let a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$sb = null;
    a.$buffer1 = null;
    a.$charset = null;
}
let ji_PrintStream__init_ = ($this, $out, $autoFlush, $charset) => {
    ji_FilterOutputStream__init_($this, $out);
    $this.$sb = jl_StringBuilder__init_();
    $this.$buffer1 = $rt_createCharArray(32);
    $this.$autoFlush = $autoFlush;
    $this.$charset = $charset;
},
ji_PrintStream__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new ji_PrintStream();
    ji_PrintStream__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookBehind__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_NegativeLookBehind__init_0 = (var_0, var_1) => {
    let var_2 = new jur_NegativeLookBehind();
    jur_NegativeLookBehind__init_(var_2, var_0, var_1);
    return var_2;
},
jur_NegativeLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e, $shift;
    $size = $this.$children0.$size();
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next5.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children0.$get($i);
        $shift = $e.$findBack(0, $stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookBehind_getName = $this => {
    return $rt_s(423);
},
jtf_SimpleDateTimeTextProvider = $rt_classWithoutFields(jtf_DateTimeTextProvider),
jtf_SimpleDateTimeTextProvider_COMPARATOR = null,
jtf_SimpleDateTimeTextProvider_$callClinit = () => {
    jtf_SimpleDateTimeTextProvider_$callClinit = $rt_eraseClinit(jtf_SimpleDateTimeTextProvider);
    jtf_SimpleDateTimeTextProvider__clinit_();
},
jtf_SimpleDateTimeTextProvider_createEntry = ($text, $field) => {
    jtf_SimpleDateTimeTextProvider_$callClinit();
    return ju_AbstractMap$SimpleImmutableEntry__init_($text, $field);
},
jtf_SimpleDateTimeTextProvider_lambda$static$0 = ($obj1, $obj2) => {
    jtf_SimpleDateTimeTextProvider_$callClinit();
    return ($obj2.$getKey()).$length() - ($obj1.$getKey()).$length() | 0;
},
jtf_SimpleDateTimeTextProvider__clinit_ = () => {
    jtf_SimpleDateTimeTextProvider_COMPARATOR = jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0__init_0();
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function onn_NostrPool$lambda$fetch$17$lambda$_40_0() {
    let a = this; jl_Object.call(a);
    a.$_0191 = null;
    a.$_194 = null;
    a.$_244 = null;
}
let onn_NostrPool$lambda$fetch$17$lambda$_40_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0191 = var$1;
    var$0.$_194 = var$2;
    var$0.$_244 = var$3;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrPool$lambda$fetch$17$lambda$_40_0();
    onn_NostrPool$lambda$fetch$17$lambda$_40_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
juf_Predicate = $rt_classWithoutFields(0),
onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0 = $rt_classWithoutFields(),
onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0__init_0 = () => {
    let var_0 = new onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0();
    onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0__init_(var_0);
    return var_0;
},
onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0_test0 = (var$0, var$1) => {
    return onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0_test(var$0, var$1);
},
onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0_test = (var$0, var$1) => {
    return onns_SdanTaxonomy$SdanTaxonomyTerm_lambda$term$0(var$1);
};
function onn_NostrPool$lambda$fetch$17$lambda$_40_3() {
    let a = this; jl_Object.call(a);
    a.$_071 = null;
    a.$_139 = null;
}
let onn_NostrPool$lambda$fetch$17$lambda$_40_3__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_071 = var$1;
    var$0.$_139 = var$2;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_3__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$lambda$fetch$17$lambda$_40_3();
    onn_NostrPool$lambda$fetch$17$lambda$_40_3__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_3_onSubEvent = (var$0, var$1, var$2) => {
    onn_NostrPool_lambda$fetch$14(var$0.$_071, var$0.$_139, var$1, var$2);
},
onn_NostrPool$lambda$fetch$17$lambda$_40_3_onSubEvent$exported$0 = (var$1, var$2, var$3) => {
    let var$4;
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    var$1.$onSubEvent(var$2, var$4);
},
onnls_NostrSubCloseListener = $rt_classWithoutFields(0);
function onn_NostrPool$lambda$fetch$17$lambda$_40_4() {
    let a = this; jl_Object.call(a);
    a.$_041 = null;
    a.$_123 = null;
    a.$_212 = null;
    a.$_35 = null;
}
let onn_NostrPool$lambda$fetch$17$lambda$_40_4__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_041 = var$1;
    var$0.$_123 = var$2;
    var$0.$_212 = var$3;
    var$0.$_35 = var$4;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_4__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onn_NostrPool$lambda$fetch$17$lambda$_40_4();
    onn_NostrPool$lambda$fetch$17$lambda$_40_4__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_4_onSubClose = (var$0, var$1) => {
    onn_NostrPool_lambda$fetch$16(var$0.$_041, var$0.$_123, var$0.$_212, var$0.$_35, var$1);
},
onn_NostrPool$lambda$fetch$17$lambda$_40_4_onSubClose$exported$0 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onSubClose(var$2);
};
function onn_NostrPool$lambda$fetch$17$lambda$_40_1() {
    let a = this; jl_Object.call(a);
    a.$_0152 = null;
    a.$_176 = null;
    a.$_240 = null;
    a.$_315 = null;
}
let onn_NostrPool$lambda$fetch$17$lambda$_40_1__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_0152 = var$1;
    var$0.$_176 = var$2;
    var$0.$_240 = var$3;
    var$0.$_315 = var$4;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_1__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onn_NostrPool$lambda$fetch$17$lambda$_40_1();
    onn_NostrPool$lambda$fetch$17$lambda$_40_1__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_1_accept0 = (var$0, var$1) => {
    onn_NostrPool$lambda$fetch$17$lambda$_40_1_accept(var$0, var$1);
},
onn_NostrPool$lambda$fetch$17$lambda$_40_1_accept = (var$0, var$1) => {
    onn_NostrPool_lambda$fetch$10(var$0.$_0152, var$0.$_176, var$0.$_240, var$0.$_315, var$1);
},
onnls_NostrSubEoseListener = $rt_classWithoutFields(0);
function onn_NostrPool$lambda$fetch$17$lambda$_40_2() {
    let a = this; jl_Object.call(a);
    a.$_0109 = null;
    a.$_159 = null;
    a.$_230 = null;
}
let onn_NostrPool$lambda$fetch$17$lambda$_40_2__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0109 = var$1;
    var$0.$_159 = var$2;
    var$0.$_230 = var$3;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_2__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrPool$lambda$fetch$17$lambda$_40_2();
    onn_NostrPool$lambda$fetch$17$lambda$_40_2__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_2_onSubEose = (var$0, var$1) => {
    onn_NostrPool_lambda$fetch$12(var$0.$_0109, var$0.$_159, var$0.$_230, var$1);
},
onn_NostrPool$lambda$fetch$17$lambda$_40_2_onSubEose$exported$0 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2 ? 1 : 0;
    var$1.$onSubEose(var$3);
};
function jtf_DateTimePrintContext() {
    let a = this; jl_Object.call(a);
    a.$temporal = null;
    a.$locale1 = null;
    a.$symbols0 = null;
    a.$optional1 = 0;
}
let jtf_DateTimePrintContext__init_ = ($this, $temporal, $locale, $symbols) => {
    jl_Object__init_($this);
    $this.$temporal = $temporal;
    $this.$locale1 = $locale;
    $this.$symbols0 = $symbols;
},
jtf_DateTimePrintContext__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jtf_DateTimePrintContext();
    jtf_DateTimePrintContext__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jtf_DateTimePrintContext_getTemporal = $this => {
    return $this.$temporal;
},
jtf_DateTimePrintContext_getValue = ($this, $field) => {
    let var$2, $ex, $$je;
    a: {
        try {
            var$2 = jl_Long_valueOf($this.$temporal.$getLong($field));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jt_DateTimeException) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    if ($this.$optional1 <= 0)
        $rt_throw($ex);
    return null;
};
function onnrt_NostrTURNSettings() {
    let a = this; jl_Object.call(a);
    a.$chunkLength = 0;
    a.$packetTimeout = null;
    a.$maxLatency = null;
    a.$loopInterval = null;
    a.$kind2 = 0;
}
let onnrt_NostrTURNSettings_PACKET_TIMEOUT = null,
onnrt_NostrTURNSettings_MAX_LATENCY = null,
onnrt_NostrTURNSettings_LOOP_INTERVAL = null,
onnrt_NostrTURNSettings_DEFAULT = null,
onnrt_NostrTURNSettings_$callClinit = () => {
    onnrt_NostrTURNSettings_$callClinit = $rt_eraseClinit(onnrt_NostrTURNSettings);
    onnrt_NostrTURNSettings__clinit_();
},
onnrt_NostrTURNSettings__init_ = ($this, $chunkLength, $packetTimeout, $maxLatency, $loopInterval, $kind) => {
    onnrt_NostrTURNSettings_$callClinit();
    jl_Object__init_($this);
    $this.$chunkLength = $chunkLength;
    $this.$packetTimeout = $packetTimeout;
    $this.$maxLatency = $maxLatency;
    $this.$loopInterval = $loopInterval;
    $this.$kind2 = $kind;
},
onnrt_NostrTURNSettings__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onnrt_NostrTURNSettings();
    onnrt_NostrTURNSettings__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onnrt_NostrTURNSettings_getChunkLength = $this => {
    return $this.$chunkLength;
},
onnrt_NostrTURNSettings_getPacketTimeout = $this => {
    return $this.$packetTimeout;
},
onnrt_NostrTURNSettings_getMaxLatency = $this => {
    return $this.$maxLatency;
},
onnrt_NostrTURNSettings_getLoopInterval = $this => {
    return $this.$loopInterval;
},
onnrt_NostrTURNSettings_getKind = $this => {
    return $this.$kind2;
},
onnrt_NostrTURNSettings_clone = $this => {
    let var$1, $e, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(jl_RuntimeException__init_1($rt_s(424), $e));
},
onnrt_NostrTURNSettings_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$chunkLength;
    var$2 = jl_String_valueOf($this.$packetTimeout);
    var$3 = jl_String_valueOf($this.$maxLatency);
    var$4 = jl_String_valueOf($this.$loopInterval);
    var$5 = $this.$kind2;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(425)), var$1), $rt_s(426)), var$2), $rt_s(427)), var$3), $rt_s(428)), var$4), $rt_s(99)), var$5), 125);
    return jl_StringBuilder_toString(var$6);
},
onnrt_NostrTURNSettings_equals = ($this, $obj) => {
    let $that;
    if ($this === $obj)
        return 1;
    if ($obj !== null && jl_Object_getClass($this) === jl_Object_getClass($obj)) {
        $that = $obj;
        if ($this.$chunkLength != $that.$chunkLength)
            return 0;
        if ($this.$packetTimeout !== $that.$packetTimeout)
            return 0;
        if ($this.$maxLatency !== $that.$maxLatency)
            return 0;
        if ($this.$loopInterval !== $that.$loopInterval)
            return 0;
        return $this.$kind2 != $that.$kind2 ? 0 : 1;
    }
    return 0;
},
onnrt_NostrTURNSettings_hashCode = $this => {
    let $result, var$2;
    $result = $this.$chunkLength;
    var$2 = (31 * $result | 0) + ($this.$chunkLength ^ ($this.$chunkLength >>> 32 | 0)) | 0;
    var$2 = (31 * var$2 | 0) + Long_lo(Long_xor(jt_Duration_toMillis($this.$packetTimeout), Long_shru(jt_Duration_toMillis($this.$packetTimeout), 32))) | 0;
    var$2 = (31 * var$2 | 0) + Long_lo(Long_xor(jt_Duration_toMillis($this.$maxLatency), Long_shru(jt_Duration_toMillis($this.$maxLatency), 32))) | 0;
    var$2 = (31 * var$2 | 0) + Long_lo(Long_xor(jt_Duration_toMillis($this.$loopInterval), Long_shru(jt_Duration_toMillis($this.$loopInterval), 32))) | 0;
    var$2 = (31 * var$2 | 0) + $this.$kind2 | 0;
    return var$2;
},
onnrt_NostrTURNSettings_clone0 = $this => {
    return onnrt_NostrTURNSettings_clone($this);
},
onnrt_NostrTURNSettings__clinit_ = () => {
    onnrt_NostrTURNSettings_PACKET_TIMEOUT = jt_Duration_ofSeconds(Long_fromInt(10));
    onnrt_NostrTURNSettings_MAX_LATENCY = jt_Duration_ofSeconds(Long_fromInt(5));
    onnrt_NostrTURNSettings_LOOP_INTERVAL = jt_Duration_ofMillis(Long_fromInt(100));
    onnrt_NostrTURNSettings_DEFAULT = onnrt_NostrTURNSettings__init_0(1024, onnrt_NostrTURNSettings_PACKET_TIMEOUT, onnrt_NostrTURNSettings_MAX_LATENCY, onnrt_NostrTURNSettings_LOOP_INTERVAL, 29999);
},
onnrt_NostrTURNSettings_getPacketTimeout$exported$0 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings_getPacketTimeout(var$1);
},
onnrt_NostrTURNSettings_getLoopInterval$exported$1 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings_getLoopInterval(var$1);
},
onnrt_NostrTURNSettings_getMaxLatency$exported$2 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings_getMaxLatency(var$1);
},
onnrt_NostrTURNSettings_toString$exported$3 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return $rt_ustr(onnrt_NostrTURNSettings_toString(var$1));
},
onnrt_NostrTURNSettings_equals$exported$4 = (var$1, var$2) => {
    onnrt_NostrTURNSettings_$callClinit();
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onnrt_NostrTURNSettings_equals(var$1, var$2);
},
onnrt_NostrTURNSettings_clone$exported$5 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings_clone(var$1);
},
onnrt_NostrTURNSettings__init_$exported$6 = (var$1, var$2, var$3, var$4, var$5) => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings__init_0(var$1, var$2, var$3, var$4, var$5);
},
onnrt_NostrTURNSettings_getChunkLength$exported$7 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings_getChunkLength(var$1);
},
onnrt_NostrTURNSettings_getKind$exported$8 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings_getKind(var$1);
},
onnrt_NostrTURNSettings_hashCode$exported$9 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return onnrt_NostrTURNSettings_hashCode(var$1);
},
onnrt_NostrTURNSettings_clone$exported$10 = var$1 => {
    onnrt_NostrTURNSettings_$callClinit();
    return otji_JSWrapper_javaToJs(onnrt_NostrTURNSettings_clone0(var$1));
};
function onn_NostrPool$lambda$fetch$17$lambda$_40_5() {
    let a = this; jl_Object.call(a);
    a.$_01 = null;
    a.$_10 = Long_ZERO;
    a.$_2 = null;
    a.$_3 = null;
}
let onn_NostrPool$lambda$fetch$17$lambda$_40_5__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_01 = var$1;
    var$0.$_10 = var$2;
    var$0.$_2 = var$3;
    var$0.$_3 = var$4;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_5__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onn_NostrPool$lambda$fetch$17$lambda$_40_5();
    onn_NostrPool$lambda$fetch$17$lambda$_40_5__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onn_NostrPool$lambda$fetch$17$lambda$_40_5_run = var$0 => {
    onn_NostrPool_lambda$fetch$8(var$0.$_01, var$0.$_10, var$0.$_2, var$0.$_3);
};
function onns_SdanOffer() {
    jl_Object.call(this);
    this.$bid0 = null;
}
let onns_SdanOffer__init_ = ($this, $bid) => {
    jl_Object__init_($this);
    $this.$bid0 = $bid;
},
onns_SdanOffer__init_0 = var_0 => {
    let var_1 = new onns_SdanOffer();
    onns_SdanOffer__init_(var_1, var_0);
    return var_1;
},
onns_SdanOffer_getBid = $this => {
    return $this.$bid0;
},
onns_SdanOffer__init_$exported$0 = var$1 => {
    return onns_SdanOffer__init_0(var$1);
},
onns_SdanOffer_getBid$exported$1 = var$1 => {
    return var$1.$getBid();
};
function jtf_DateTimeFormatter() {
    let a = this; jl_Object.call(a);
    a.$printerParser = null;
    a.$locale0 = null;
    a.$decimalStyle = null;
    a.$resolverStyle = null;
    a.$resolverFields = null;
    a.$chrono0 = null;
    a.$zone3 = null;
}
let jtf_DateTimeFormatter_ISO_LOCAL_DATE = null,
jtf_DateTimeFormatter_ISO_OFFSET_DATE = null,
jtf_DateTimeFormatter_ISO_DATE = null,
jtf_DateTimeFormatter_ISO_LOCAL_TIME = null,
jtf_DateTimeFormatter_ISO_OFFSET_TIME = null,
jtf_DateTimeFormatter_ISO_TIME = null,
jtf_DateTimeFormatter_ISO_LOCAL_DATE_TIME = null,
jtf_DateTimeFormatter_ISO_OFFSET_DATE_TIME = null,
jtf_DateTimeFormatter_ISO_ZONED_DATE_TIME = null,
jtf_DateTimeFormatter_ISO_DATE_TIME = null,
jtf_DateTimeFormatter_ISO_ORDINAL_DATE = null,
jtf_DateTimeFormatter_ISO_WEEK_DATE = null,
jtf_DateTimeFormatter_ISO_INSTANT = null,
jtf_DateTimeFormatter_BASIC_ISO_DATE = null,
jtf_DateTimeFormatter_RFC_1123_DATE_TIME = null,
jtf_DateTimeFormatter_$callClinit = () => {
    jtf_DateTimeFormatter_$callClinit = $rt_eraseClinit(jtf_DateTimeFormatter);
    jtf_DateTimeFormatter__clinit_();
},
jtf_DateTimeFormatter__init_ = ($this, $printerParser, $locale, $decimalStyle, $resolverStyle, $resolverFields, $chrono, $zone) => {
    jtf_DateTimeFormatter_$callClinit();
    jl_Object__init_($this);
    $this.$printerParser = ju_Objects_requireNonNull($printerParser, $rt_s(429));
    $this.$locale0 = ju_Objects_requireNonNull($locale, $rt_s(46));
    $this.$decimalStyle = ju_Objects_requireNonNull($decimalStyle, $rt_s(430));
    $this.$resolverStyle = ju_Objects_requireNonNull($resolverStyle, $rt_s(431));
    $this.$resolverFields = $resolverFields;
    $this.$chrono0 = $chrono;
    $this.$zone3 = $zone;
},
jtf_DateTimeFormatter__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6) => {
    let var_7 = new jtf_DateTimeFormatter();
    jtf_DateTimeFormatter__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
},
jtf_DateTimeFormatter_getLocale = $this => {
    return $this.$locale0;
},
jtf_DateTimeFormatter_getDecimalStyle = $this => {
    return $this.$decimalStyle;
},
jtf_DateTimeFormatter_getChronology = $this => {
    return $this.$chrono0;
},
jtf_DateTimeFormatter_withChronology = ($this, $chrono) => {
    if (ju_Objects_equals($this.$chrono0, $chrono))
        return $this;
    return jtf_DateTimeFormatter__init_0($this.$printerParser, $this.$locale0, $this.$decimalStyle, $this.$resolverStyle, $this.$resolverFields, $chrono, $this.$zone3);
},
jtf_DateTimeFormatter_getZone = $this => {
    return $this.$zone3;
},
jtf_DateTimeFormatter_withResolverStyle = ($this, $resolverStyle) => {
    ju_Objects_requireNonNull($resolverStyle, $rt_s(431));
    if (ju_Objects_equals($this.$resolverStyle, $resolverStyle))
        return $this;
    return jtf_DateTimeFormatter__init_0($this.$printerParser, $this.$locale0, $this.$decimalStyle, $resolverStyle, $this.$resolverFields, $this.$chrono0, $this.$zone3);
},
jtf_DateTimeFormatter_parse = ($this, $text, $type) => {
    let $builder, var$4, $ex, $$je;
    ju_Objects_requireNonNull($text, $rt_s(432));
    ju_Objects_requireNonNull($type, $rt_s(433));
    a: {
        try {
            $builder = jtf_DateTimeBuilder_resolve(jtf_DateTimeFormatter_parseToBuilder($this, $text, null), $this.$resolverStyle, $this.$resolverFields);
            var$4 = jtf_DateTimeBuilder_build($builder, $type);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jtf_DateTimeParseException) {
                $ex = $$je;
                break a;
            } else if ($$je instanceof jl_RuntimeException) {
                $ex = $$je;
                $rt_throw(jtf_DateTimeFormatter_createError($this, $text, $ex));
            } else {
                throw $$e;
            }
        }
        return var$4;
    }
    $rt_throw($ex);
},
jtf_DateTimeFormatter_createError = ($this, $text, $ex) => {
    let var$3, var$4, var$5, var$6;
    if ($text.$length() <= 64)
        var$3 = $text.$toString();
    else {
        var$3 = ($text.$subSequence(0, 64)).$toString();
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$3), $rt_s(434));
        var$3 = jl_StringBuilder_toString(var$4);
    }
    var$4 = new jtf_DateTimeParseException;
    var$5 = $ex.$getMessage();
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(435)), var$3), $rt_s(436)), var$5);
    jtf_DateTimeParseException__init_0(var$4, jl_StringBuilder_toString(var$6), $text, 0, $ex);
    return var$4;
},
jtf_DateTimeFormatter_parseToBuilder = ($this, $text, $position) => {
    let $pos, $result, var$5, var$6, var$7, var$8, var$9;
    $pos = $position !== null ? $position : jt_ParsePosition__init_0(0);
    $result = jtf_DateTimeFormatter_parseUnresolved0($this, $text, $pos);
    if ($result !== null && $pos.$getErrorIndex() < 0 && !($position === null && $pos.$getIndex() < $text.$length()))
        return jtf_DateTimeParseContext$Parsed_toBuilder($result);
    if ($text.$length() <= 64)
        var$5 = $text.$toString();
    else {
        var$5 = ($text.$subSequence(0, 64)).$toString();
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$5), $rt_s(434));
        var$5 = jl_StringBuilder_toString(var$6);
    }
    if ($pos.$getErrorIndex() < 0) {
        var$6 = new jtf_DateTimeParseException;
        var$7 = $pos.$getIndex();
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(435)), var$5), $rt_s(437)), var$7);
        jtf_DateTimeParseException__init_(var$6, jl_StringBuilder_toString(var$8), $text, $pos.$getIndex());
        $rt_throw(var$6);
    }
    var$8 = new jtf_DateTimeParseException;
    var$7 = $pos.$getErrorIndex();
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(435)), var$5), $rt_s(438)), var$7);
    jtf_DateTimeParseException__init_(var$8, jl_StringBuilder_toString(var$9), $text, $pos.$getErrorIndex());
    $rt_throw(var$8);
},
jtf_DateTimeFormatter_parseUnresolved0 = ($this, $text, $position) => {
    let $context, $pos, var$5;
    ju_Objects_requireNonNull($text, $rt_s(432));
    ju_Objects_requireNonNull($position, $rt_s(439));
    $context = jtf_DateTimeParseContext__init_1($this);
    $pos = $position.$getIndex();
    var$5 = jtf_DateTimeFormatterBuilder$CompositePrinterParser_parse($this.$printerParser, $context, $text, $pos);
    if (var$5 >= 0) {
        $position.$setIndex(var$5);
        return jtf_DateTimeParseContext_toParsed($context);
    }
    $position.$setErrorIndex(var$5 ^ (-1));
    return null;
},
jtf_DateTimeFormatter_toPrinterParser = ($this, $optional) => {
    return jtf_DateTimeFormatterBuilder$CompositePrinterParser_withOptional($this.$printerParser, $optional);
},
jtf_DateTimeFormatter__clinit_ = () => {
    let var$1, var$2, var$3, $dow, $moy;
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    jtt_ChronoField_$callClinit();
    var$2 = jtt_ChronoField_YEAR;
    jtf_SignStyle_$callClinit();
    var$3 = jtf_SignStyle_EXCEEDS_PAD;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue0(var$1, var$2, 4, 10, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 45);
    var$3 = jtt_ChronoField_MONTH_OF_YEAR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 45);
    var$3 = jtt_ChronoField_DAY_OF_MONTH;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    jtf_ResolverStyle_$callClinit();
    var$3 = jtf_ResolverStyle_STRICT;
    var$1 = jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3);
    jtc_IsoChronology_$callClinit();
    jtf_DateTimeFormatter_ISO_LOCAL_DATE = jtf_DateTimeFormatter_withChronology(var$1, jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_DATE;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_OFFSET_DATE = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_DATE;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_DATE = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$3 = jtt_ChronoField_HOUR_OF_DAY;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 58);
    var$3 = jtt_ChronoField_MINUTE_OF_HOUR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 58);
    var$3 = jtt_ChronoField_SECOND_OF_MINUTE;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$3 = jtt_ChronoField_NANO_OF_SECOND;
    var$1 = jtf_DateTimeFormatterBuilder_appendFraction(var$1, var$3, 0, 9, 1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_LOCAL_TIME = jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_TIME;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_OFFSET_TIME = jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_TIME;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_TIME = jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_DATE;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 84);
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_TIME;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_LOCAL_DATE_TIME = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_DATE_TIME;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_OFFSET_DATE_TIME = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$3 = jtf_DateTimeFormatter_ISO_OFFSET_DATE_TIME;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 91);
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseSensitive(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendZoneRegionId(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 93);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_ZONED_DATE_TIME = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$3 = jtf_DateTimeFormatter_ISO_LOCAL_DATE_TIME;
    var$1 = jtf_DateTimeFormatterBuilder_append(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 91);
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseSensitive(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendZoneRegionId(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 93);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_DATE_TIME = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtt_ChronoField_YEAR;
    var$2 = jtf_SignStyle_EXCEEDS_PAD;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue0(var$1, var$3, 4, 10, var$2);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 45);
    var$3 = jtt_ChronoField_DAY_OF_YEAR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 3);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_ORDINAL_DATE = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    jtt_IsoFields_$callClinit();
    var$3 = jtt_IsoFields_WEEK_BASED_YEAR;
    var$2 = jtf_SignStyle_EXCEEDS_PAD;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue0(var$1, var$3, 4, 10, var$2);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral0(var$1, $rt_s(440));
    var$3 = jtt_IsoFields_WEEK_OF_WEEK_BASED_YEAR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 45);
    var$3 = jtt_ChronoField_DAY_OF_WEEK;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 1);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffsetId(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_WEEK_DATE = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendInstant(var$1);
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_ISO_INSTANT = jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3);
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$3 = jtt_ChronoField_YEAR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 4);
    var$3 = jtt_ChronoField_MONTH_OF_YEAR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$3 = jtt_ChronoField_DAY_OF_MONTH;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffset(var$1, $rt_s(441), $rt_s(442));
    var$3 = jtf_ResolverStyle_STRICT;
    jtf_DateTimeFormatter_BASIC_ISO_DATE = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
    $dow = ju_HashMap__init_();
    $dow.$put1(jl_Long_valueOf(Long_fromInt(1)), $rt_s(443));
    $dow.$put1(jl_Long_valueOf(Long_fromInt(2)), $rt_s(444));
    $dow.$put1(jl_Long_valueOf(Long_fromInt(3)), $rt_s(445));
    $dow.$put1(jl_Long_valueOf(Long_fromInt(4)), $rt_s(446));
    $dow.$put1(jl_Long_valueOf(Long_fromInt(5)), $rt_s(447));
    $dow.$put1(jl_Long_valueOf(Long_fromInt(6)), $rt_s(448));
    $dow.$put1(jl_Long_valueOf(Long_fromInt(7)), $rt_s(449));
    $moy = ju_HashMap__init_();
    $moy.$put1(jl_Long_valueOf(Long_fromInt(1)), $rt_s(450));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(2)), $rt_s(451));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(3)), $rt_s(452));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(4)), $rt_s(453));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(5)), $rt_s(454));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(6)), $rt_s(455));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(7)), $rt_s(456));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(8)), $rt_s(457));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(9)), $rt_s(458));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(10)), $rt_s(459));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(11)), $rt_s(460));
    $moy.$put1(jl_Long_valueOf(Long_fromInt(12)), $rt_s(461));
    var$1 = jtf_DateTimeFormatterBuilder__init_();
    var$1 = jtf_DateTimeFormatterBuilder_parseCaseInsensitive(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_parseLenient(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$3 = jtt_ChronoField_DAY_OF_WEEK;
    var$1 = jtf_DateTimeFormatterBuilder_appendText(var$1, var$3, $dow);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral0(var$1, $rt_s(12));
    var$1 = jtf_DateTimeFormatterBuilder_optionalEnd(var$1);
    var$3 = jtt_ChronoField_DAY_OF_MONTH;
    var$2 = jtf_SignStyle_NOT_NEGATIVE;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue0(var$1, var$3, 1, 2, var$2);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 32);
    var$3 = jtt_ChronoField_MONTH_OF_YEAR;
    var$1 = jtf_DateTimeFormatterBuilder_appendText(var$1, var$3, $moy);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 32);
    var$3 = jtt_ChronoField_YEAR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 4);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 32);
    var$3 = jtt_ChronoField_HOUR_OF_DAY;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 58);
    var$3 = jtt_ChronoField_MINUTE_OF_HOUR;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_optionalStart(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 58);
    var$3 = jtt_ChronoField_SECOND_OF_MINUTE;
    var$1 = jtf_DateTimeFormatterBuilder_appendValue(var$1, var$3, 2);
    var$1 = jtf_DateTimeFormatterBuilder_optionalEnd(var$1);
    var$1 = jtf_DateTimeFormatterBuilder_appendLiteral(var$1, 32);
    var$1 = jtf_DateTimeFormatterBuilder_appendOffset(var$1, $rt_s(462), $rt_s(463));
    var$3 = jtf_ResolverStyle_SMART;
    jtf_DateTimeFormatter_RFC_1123_DATE_TIME = jtf_DateTimeFormatter_withChronology(jtf_DateTimeFormatterBuilder_toFormatter(var$1, var$3), jtc_IsoChronology_INSTANCE);
};
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
let jur_LeafQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
},
jur_LeafQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_LeafQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next5.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
},
jur_LeafQuantifierSet_getName = $this => {
    return $rt_s(464);
},
jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_UnifiedQuantifierSet__init_ = ($this, $quant) => {
    jur_LeafQuantifierSet__init_($this, $quant.$getInnerSet(), $quant.$getNext(), $quant.$getType());
    $this.$innerSet.$setNext($this);
},
jur_UnifiedQuantifierSet__init_0 = var_0 => {
    let var_1 = new jur_UnifiedQuantifierSet();
    jur_UnifiedQuantifierSet__init_(var_1, var_0);
    return var_1;
},
jur_UnifiedQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf;
        if (var$4.$accepts($stringIndex, $testString) <= 0)
            break;
        $stringIndex = $stringIndex + $this.$leaf.$charCount() | 0;
    }
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_UnifiedQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next5.$find($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
},
jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    let a = this; jl_Object.call(a);
    a.$name4 = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
}
let jl_Class_reflectionInitialized = 0,
jl_Class__init_0 = ($this, $platformClass) => {
    let var$2;
    jl_Object__init_($this);
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
},
jl_Class__init_ = var_0 => {
    let var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
},
jl_Class_getClass = $cls => {
    let $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null)
        $result = jl_Class__init_($cls);
    return $result;
},
jl_Class_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_Class_isInterface($this) ? $rt_s(465) : !jl_Class_isPrimitive($this) ? $rt_s(466) : $rt_s(23);
    var$2 = jl_Class_getName($this);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jl_Class_getPlatformClass = $this => {
    return $this.$platformClass;
},
jl_Class_isInstance = ($this, $obj) => {
    return otp_Platform_isInstance($obj, $this.$platformClass);
},
jl_Class_isAssignableFrom = ($this, $obj) => {
    return otp_Platform_isAssignable(jl_Class_getPlatformClass($obj), $this.$platformClass);
},
jl_Class_getName = $this => {
    if ($this.$name4 === null)
        $this.$name4 = otp_Platform_getName($this.$platformClass);
    return $this.$name4;
},
jl_Class_isPrimitive = $this => {
    return otp_Platform_isPrimitive($this.$platformClass);
},
jl_Class_isArray = $this => {
    return otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1;
},
jl_Class_isEnum = $this => {
    return otp_Platform_isEnum($this.$platformClass);
},
jl_Class_isInterface = $this => {
    return !($this.$platformClass.$meta.flags & 2) ? 0 : 1;
},
jl_Class_getComponentType = $this => {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
},
jl_Class_initReflection = () => {
    if (!jl_Class_reflectionInitialized) {
        jl_Class_reflectionInitialized = 1;
        jl_Class_createMetadata();
    }
},
jl_Class_createMetadata = () => {
    onnet_ForwardSlidingWindowEventTracker.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls, $rt_intcls, $rt_longcls, juc_TimeUnit, $rt_longcls, juc_TimeUnit],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "seen",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [onne_SignedNostrEvent],
            returnType : $rt_booleancls,
            callable : null
        }, {
            name : "count",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls,
            callable : null
        }, {
            name : "currentTimeSeconds",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_longcls,
            callable : null
        }, {
            name : "getAll",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : ju_Collection,
            callable : null
        }, {
            name : "update",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "checkOrder",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_booleancls,
            callable : null
        }, {
            name : "tuneFor",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [onn_NostrSubscription],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "<init>$exported$0",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "seen$exported$1",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject, otj_JSObject],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "tuneFor$exported$2",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject, otj_JSObject],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "checkOrder$exported$3",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "update$exported$4",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "count$exported$5",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "currentTimeSeconds$exported$6",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "<init>$exported$7",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject, otj_JSObject, otj_JSObject, otj_JSObject, otj_JSObject, otj_JSObject],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "getAll$exported$8",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject],
            returnType : otj_JSObject,
            callable : null
        }];
    onnet_PassthroughEventTracker.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "seen",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [onne_SignedNostrEvent],
            returnType : $rt_booleancls,
            callable : null
        }, {
            name : "tuneFor",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [onn_NostrSubscription],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "<init>$exported$0",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "seen$exported$1",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject, otj_JSObject],
            returnType : otj_JSObject,
            callable : null
        }, {
            name : "tuneFor$exported$2",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [otj_JSObject, otj_JSObject],
            returnType : $rt_voidcls,
            callable : null
        }];
},
jl_Class_getDeclaredConstructors = $this => {
    let var$1, $jsMethods, $count, $i, $jsMethod, $jsParameterTypes, $parameterTypes, $j, var$9, var$10, var$11, var$12, var$13;
    if (!jl_Class_isPrimitive($this) && !jl_Class_isArray($this)) {
        if ($this.$declaredConstructors === null) {
            jl_Class_initReflection();
            var$1 = (jl_Class_getPlatformClass($this)).$meta;
            $jsMethods = var$1.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                $jsMethod = otji_JSWrapper_maybeUnwrap($jsMethods[$i]);
                if ($rt_str($jsMethod.name).$equals($rt_s(467))) {
                    $jsParameterTypes = $jsMethod.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    $j = 0;
                    while (true) {
                        var$9 = $parameterTypes.data;
                        if ($j >= var$9.length)
                            break;
                        var$9[$j] = jl_Class_getClass($jsParameterTypes[$j]);
                        $j = $j + 1 | 0;
                    }
                    var$9 = $this.$declaredConstructors.data;
                    var$10 = $count + 1 | 0;
                    var$11 = new jlr_Constructor;
                    var$1 = $rt_str($jsMethod.name);
                    var$12 = $jsMethod.modifiers;
                    var$13 = $jsMethod.accessLevel;
                    jlr_Constructor__init_(var$11, $this, var$1, var$12, var$13, $parameterTypes, otcir_MethodCaller_forJs(otji_JS_functionAsObject($jsMethod.callable, "call")));
                    var$9[$count] = var$11;
                    $count = var$10;
                }
                $i = $i + 1 | 0;
            }
            $this.$declaredConstructors = ju_Arrays_copyOf0($this.$declaredConstructors, $count);
        }
        return $this.$declaredConstructors.$clone0();
    }
    return $rt_createArray(jlr_Constructor, 0);
},
jl_Class_getDeclaredConstructor = ($this, $parameterTypes) => {
    let var$2, var$3, var$4, $constructor;
    var$2 = (jl_Class_getDeclaredConstructors($this)).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3)
            $rt_throw(jl_NoSuchMethodException__init_0());
        $constructor = var$2[var$4];
        if (ju_Arrays_equals($constructor.$getParameterTypes(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
},
jl_Class_desiredAssertionStatus = $this => {
    return 1;
},
jl_Class_getSuperclass = $this => {
    return jl_Class_getClass($this.$platformClass.$meta.superclass);
},
jl_Class_getEnumConstants = $this => {
    if (!jl_Class_isEnum($this))
        return null;
    $this.$platformClass.$clinit();
    return (otp_Platform_getEnumConstants($this.$platformClass)).$clone0();
},
jl_Class_cast = ($this, $obj) => {
    let var$2, var$3, var$4, var$5;
    if ($obj !== null && !jl_Class_isAssignableFrom($this, jl_Object_getClass($obj))) {
        var$2 = new jl_ClassCastException;
        var$3 = jl_Class_getName(jl_Object_getClass($obj));
        var$4 = jl_Class_getName($this);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$3), $rt_s(468)), var$4);
        jl_ClassCastException__init_(var$2, jl_StringBuilder_toString(var$5));
        $rt_throw(var$2);
    }
    return $obj;
},
jl_Class_getClassLoader = $this => {
    return jl_ClassLoader_getSystemClassLoader();
},
jl_Class_getResourceAsStream = ($this, $name) => {
    let $cls, $prefix, $index, var$5, var$6;
    if ($name.$startsWith($rt_s(469)))
        return (jl_Class_getClassLoader($this)).$getResourceAsStream($name.$substring0(1));
    $cls = $this;
    while (jl_Class_isArray($cls)) {
        $cls = jl_Class_getComponentType($cls);
    }
    $prefix = (jl_Class_getName($cls)).$toString();
    $index = $prefix.$lastIndexOf(46);
    if ($index >= 0) {
        var$5 = ($prefix.$substring(0, $index + 1 | 0)).$replace0(46, 47);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$5), $name);
        $name = jl_StringBuilder_toString(var$6);
    }
    return (jl_Class_getClassLoader($this)).$getResourceAsStream($name);
};
function ju_BitSet() {
    let a = this; jl_Object.call(a);
    a.$data = null;
    a.$length2 = 0;
}
let ju_BitSet__init_0 = $this => {
    jl_Object__init_($this);
    $this.$data = $rt_createIntArray(2);
},
ju_BitSet__init_1 = () => {
    let var_0 = new ju_BitSet();
    ju_BitSet__init_0(var_0);
    return var_0;
},
ju_BitSet__init_ = ($this, $nbits) => {
    jl_Object__init_($this);
    if ($nbits < 0)
        $rt_throw(jl_NegativeArraySizeException__init_0());
    $this.$data = $rt_createIntArray((($nbits + 32 | 0) - 1 | 0) / 32 | 0);
},
ju_BitSet__init_2 = var_0 => {
    let var_1 = new ju_BitSet();
    ju_BitSet__init_(var_1, var_0);
    return var_1;
},
ju_BitSet_set0 = ($this, $bitIndex) => {
    let $index, var$3;
    if ($bitIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length2) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length2 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
},
ju_BitSet_set = ($this, $fromIndex, $toIndex) => {
    let var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex >= 0) {
        var$3 = $rt_compare($fromIndex, $toIndex);
        if (var$3 <= 0) {
            if (!var$3)
                return;
            $fromDataIndex = $fromIndex / 32 | 0;
            $toDataIndex = $toIndex / 32 | 0;
            if ($toIndex > $this.$length2) {
                ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
                $this.$length2 = $toIndex;
            }
            if ($fromDataIndex == $toDataIndex) {
                var$6 = $this.$data.data;
                var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
            } else {
                var$6 = $this.$data.data;
                var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
                $i = $fromDataIndex + 1 | 0;
                while ($i < $toDataIndex) {
                    $this.$data.data[$i] = (-1);
                    $i = $i + 1 | 0;
                }
                if ($toIndex & 31) {
                    var$6 = $this.$data.data;
                    var$6[$toDataIndex] = var$6[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
                }
            }
            return;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_BitSet_trailingZeroBits = ($this, $num) => {
    let var$2;
    var$2 = $num % 32 | 0;
    return (-1) << var$2;
},
ju_BitSet_trailingOneBits = ($this, $num) => {
    let var$2;
    var$2 = $num % 32 | 0;
    return !var$2 ? 0 : (-1) >>> (32 - var$2 | 0) | 0;
},
ju_BitSet_clear0 = ($this, $bitIndex) => {
    let $index, var$3;
    if ($bitIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $index = $bitIndex / 32 | 0;
    if ($index < $this.$data.data.length) {
        var$3 = $this.$data.data;
        var$3[$index] = var$3[$index] & jl_Integer_rotateLeft((-2), $bitIndex % 32 | 0);
        if ($bitIndex == ($this.$length2 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
},
ju_BitSet_clear = ($this, $fromIndex, $toIndex) => {
    let var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex >= 0 && $fromIndex <= $toIndex) {
        if ($fromIndex >= $this.$length2)
            return;
        var$3 = jl_Math_min($this.$length2, $toIndex);
        if ($fromIndex == var$3)
            return;
        $fromDataIndex = $fromIndex / 32 | 0;
        $toDataIndex = var$3 / 32 | 0;
        if ($fromDataIndex == $toDataIndex) {
            var$6 = $this.$data.data;
            var$6[$fromDataIndex] = var$6[$fromDataIndex] & (ju_BitSet_trailingOneBits($this, $fromIndex) | ju_BitSet_trailingZeroBits($this, var$3));
        } else {
            var$6 = $this.$data.data;
            var$6[$fromDataIndex] = var$6[$fromDataIndex] & ju_BitSet_trailingOneBits($this, $fromIndex);
            $i = $fromDataIndex + 1 | 0;
            while ($i < $toDataIndex) {
                $this.$data.data[$i] = 0;
                $i = $i + 1 | 0;
            }
            if (var$3 & 31) {
                var$6 = $this.$data.data;
                var$6[$toDataIndex] = var$6[$toDataIndex] & ju_BitSet_trailingZeroBits($this, var$3);
            }
        }
        ju_BitSet_recalculateLength($this);
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_BitSet_get = ($this, $bitIndex) => {
    let $index;
    if ($bitIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $index = $bitIndex / 32 | 0;
    return $index < $this.$data.data.length && $this.$data.data[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
},
ju_BitSet_nextSetBit = ($this, $fromIndex) => {
    let $index, $val, var$4, $top, $i;
    if ($fromIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length2)
        return (-1);
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index];
    var$4 = $val >>> ($fromIndex % 32 | 0) | 0;
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
ju_BitSet_nextClearBit = ($this, $fromIndex) => {
    let $index, $val, var$4, $top, $i;
    if ($fromIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length2)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index] ^ (-1);
    var$4 = $val >>> ($fromIndex % 32 | 0) | 0;
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return $this.$length2;
},
ju_BitSet_ensureCapacity = ($this, $capacity) => {
    let $newArrayLength;
    if ($this.$data.data.length >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($this.$data.data.length * 2 | 0) + 1 | 0);
    $this.$data = ju_Arrays_copyOf2($this.$data, $newArrayLength);
},
ju_BitSet_recalculateLength = $this => {
    let $top, $i, $sz;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $this.$length2 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length2 = $this.$length2 - 32 | 0;
        }
        $this.$length2 = $this.$length2 - $sz | 0;
    }
},
ju_BitSet_intersects = ($this, $set) => {
    let $sz, $i;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        if ($this.$data.data[$i] & $set.$data.data[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
ju_BitSet_and = ($this, $set) => {
    let $i, $i_0, var$4;
    $i = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while ($i < $this.$data.data.length) {
        $this.$data.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length2 = jl_Math_min($this.$length2, $set.$length2);
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_andNot = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] & ($set.$data.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_or = ($this, $set) => {
    let $sz, $i, var$4;
    $this.$length2 = jl_Math_max($this.$length2, $set.$length2);
    ju_BitSet_ensureCapacity($this, ($this.$length2 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] | $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
},
ju_BitSet_xor = ($this, $set) => {
    let $sz, $i, var$4;
    $this.$length2 = jl_Math_max($this.$length2, $set.$length2);
    ju_BitSet_ensureCapacity($this, ($this.$length2 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] ^ $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_isEmpty = $this => {
    return $this.$length2 ? 0 : 1;
},
jl_Float = $rt_classWithoutFields(jl_Number),
jl_Float_TYPE = null,
jl_Float_$callClinit = () => {
    jl_Float_$callClinit = $rt_eraseClinit(jl_Float);
    jl_Float__clinit_();
},
jl_Float_compare = ($a, $b) => {
    let $diff, var$4, var$5, var$6;
    jl_Float_$callClinit();
    $diff = ($a <= $b ? 0 : 1) - ($b <= $a ? 0 : 1) | 0;
    if (!$diff) {
        var$4 = 1.0 / $a;
        var$5 = 1.0 / $b;
        var$6 = (var$4 <= var$5 ? 0 : 1) - (var$5 <= var$4 ? 0 : 1) | 0;
        $diff = (var$6 + ($b !== $b ? 0 : 1) | 0) - ($a !== $a ? 0 : 1) | 0;
    }
    return $diff;
},
jl_Float_floatToIntBits = $value => {
    jl_Float_$callClinit();
    if (isNaN($value) ? 1 : 0)
        return 2143289344;
    return $rt_floatToRawIntBits($value);
},
jl_Float__clinit_ = () => {
    jl_Float_TYPE = $rt_cls($rt_floatcls);
};
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
let jur_CharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch0 = $ch;
},
jur_CharSet__init_ = var_0 => {
    let var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
},
jur_CharSet_charCount = $this => {
    return 1;
},
jur_CharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch0 != $testString.$charAt($strIndex) ? (-1) : 1;
},
jur_CharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf0($this.$ch0, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next5;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_CharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf0($this.$ch0, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next5.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
},
jur_CharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch0;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_CharSet_getChar = $this => {
    return $this.$ch0;
},
jur_CharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$ch0 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains0($this.$ch0);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return $set.$accepts(0, jl_Character_toString($this.$ch0)) <= 0 ? 0 : 1;
},
jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0 = $rt_classWithoutFields(),
jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0__init_0 = () => {
    let var_0 = new jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0();
    jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0__init_(var_0);
    return var_0;
},
jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0_compare0 = (var$0, var$1, var$2) => {
    return jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0_compare(var$0, var$1, var$2);
},
jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0_compare = (var$0, var$1, var$2) => {
    return jtf_SimpleDateTimeTextProvider_lambda$static$0(var$1, var$2);
},
otcit_StorableDateTimeZone = $rt_classWithoutFields(otcit_DateTimeZone),
otcit_StorableDateTimeZone__init_ = ($this, $id) => {
    otcit_DateTimeZone__init_($this, $id);
},
otcit_StorableDateTimeZone_readTime = $flow => {
    let $value;
    $value = otci_Base46_decodeLong($flow);
    if (Long_ne(Long_and($value, Long_fromInt(1)), Long_ZERO))
        return Long_shr($value, 1);
    return Long_mul(Long_shr($value, 1), Long_fromInt(1800000));
},
otcit_StorableDateTimeZone_readUnsignedTime = $flow => {
    let $value;
    $value = otci_Base46_decodeUnsignedLong($flow);
    if (Long_ne(Long_and($value, Long_fromInt(1)), Long_ZERO))
        return Long_shru($value, 1);
    return Long_mul(Long_shru($value, 1), Long_fromInt(1800000));
},
otcit_StorableDateTimeZone_readTimeArray = ($flow, $array) => {
    let $index, var$4, $count, $t, var$7, var$8, var$9;
    $index = 0;
    while (true) {
        var$4 = $array.data;
        if ($index >= var$4.length)
            break;
        $count = otci_Base46_decode($flow);
        if ($count >= 0) {
            $t = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
            while (true) {
                var$7 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$8 = $index + 1 | 0;
                var$4[$index] = $t;
                $count = var$7;
                $index = var$8;
            }
        } else {
            var$9 = $count ^ (-1);
            while (true) {
                var$7 = var$9 + (-1) | 0;
                if (var$9 <= 0)
                    break;
                var$8 = $index + 1 | 0;
                var$4[$index] = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
                var$9 = var$7;
                $index = var$8;
            }
        }
    }
},
otcit_StorableDateTimeZone_read = ($id, $text) => {
    let $flow, $type, var$5, var$6;
    a: {
        $flow = otci_CharFlow__init_($text.$toCharArray());
        $type = otci_Base46_decodeUnsigned($flow);
        switch ($type) {
            case 0:
                break;
            case 1:
                return otcit_FixedDateTimeZone_readZone($id, $flow);
            case 2:
            case 4:
                break a;
            case 3:
                return otcit_DateTimeZoneBuilder$DSTZone_readZone($id, $flow);
            case 5:
                return otcit_DateTimeZoneBuilder$RuleBasedZone_readZone($id, $flow);
            default:
                break a;
        }
        return otcit_DateTimeZoneBuilder$PrecalculatedZone_readZone($id, $flow);
    }
    var$5 = new jl_IllegalArgumentException;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(470)), $type);
    jl_IllegalArgumentException__init_1(var$5, jl_StringBuilder_toString(var$6));
    $rt_throw(var$5);
};
function otcit_DateTimeZoneBuilder$RuleBasedZone() {
    let a = this; otcit_StorableDateTimeZone.call(a);
    a.$builder = null;
    a.$zone2 = null;
}
let otcit_DateTimeZoneBuilder$RuleBasedZone__init_ = ($this, $id, $builder) => {
    otcit_StorableDateTimeZone__init_($this, $id);
    $this.$builder = $builder;
},
otcit_DateTimeZoneBuilder$RuleBasedZone__init_0 = (var_0, var_1) => {
    let var_2 = new otcit_DateTimeZoneBuilder$RuleBasedZone();
    otcit_DateTimeZoneBuilder$RuleBasedZone__init_(var_2, var_0, var_1);
    return var_2;
},
otcit_DateTimeZoneBuilder$RuleBasedZone_initZone = $this => {
    if ($this.$zone2 === null)
        $this.$zone2 = $this.$builder.$toDateTimeZone(otcit_DateTimeZone_getID($this), 1);
},
otcit_DateTimeZoneBuilder$RuleBasedZone_getOffset = ($this, $instant) => {
    otcit_DateTimeZoneBuilder$RuleBasedZone_initZone($this);
    return $this.$zone2.$getOffset($instant);
},
otcit_DateTimeZoneBuilder$RuleBasedZone_getStandardOffset = ($this, $instant) => {
    otcit_DateTimeZoneBuilder$RuleBasedZone_initZone($this);
    return $this.$zone2.$getStandardOffset($instant);
},
otcit_DateTimeZoneBuilder$RuleBasedZone_readZone = ($id, $flow) => {
    let $builder, $ruleSetCount, $currentYear, $i, $rs, $ruleCount, var$9, $j, $fromYear, $toYear, var$13, $recurrence, $year;
    $builder = otcit_DateTimeZoneBuilder__init_0();
    $ruleSetCount = otci_Base46_decodeUnsigned($flow);
    $currentYear = (-2147483648);
    $i = 0;
    while ($i < $ruleSetCount) {
        $rs = otcit_DateTimeZoneBuilder$RuleSet__init_1();
        $rs.$iInitialSaveMillis = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
        $rs.$iStandardOffset = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
        $ruleCount = otci_Base46_decodeUnsigned($flow);
        if ($ruleCount & 1)
            $rs.$iInitialNameKey = $rt_s(471);
        var$9 = $ruleCount >>> 1 | 0;
        $j = 0;
        while ($j < var$9) {
            $fromYear = otci_Base46_decode($flow);
            if ($currentYear != (-2147483648))
                $fromYear = $fromYear + $currentYear | 0;
            $toYear = otci_Base46_decodeUnsigned($flow);
            if (!$toYear) {
                var$13 = 2147483647;
                $currentYear = $fromYear;
            } else {
                var$13 = $toYear + (-1) | 0;
                $currentYear = !(var$13 & 1) ? var$13 >>> 1 | 0 : ( -(var$13 >>> 1 | 0) | 0) - 1 | 0;
                if ($fromYear != (-2147483648))
                    $currentYear = $currentYear + $fromYear | 0;
                var$13 = $currentYear;
            }
            $recurrence = otcit_DateTimeZoneBuilder$Recurrence_read($flow);
            $rs.$iRules.$add1(otcit_DateTimeZoneBuilder$Rule__init_0($recurrence, $fromYear, var$13));
            $j = $j + 1 | 0;
        }
        $year = otci_Base46_decodeUnsigned($flow);
        if (!$year)
            $rs.$iUpperYear = 2147483647;
        else {
            var$9 = $year + (-1) | 0;
            var$9 = !(var$9 & 1) ? var$9 >>> 1 | 0 : ( -(var$9 >>> 1 | 0) | 0) - 1 | 0;
            $currentYear = $currentYear != (-2147483648) ? var$9 + $currentYear | 0 : var$9;
            $rs.$iUpperYear = $currentYear;
            $rs.$iUpperOfYear = otcit_DateTimeZoneBuilder$OfYear_read($flow);
        }
        $builder.$iRuleSets.$add1($rs);
        $i = $i + 1 | 0;
    }
    return otcit_DateTimeZoneBuilder$RuleBasedZone__init_0($id, $builder);
},
otcit_DateTimeZoneBuilder$RuleBasedZone_asZoneRules = $this => {
    otcit_DateTimeZoneBuilder$RuleBasedZone_initZone($this);
    return $this.$zone2.$asZoneRules();
},
ju_ListIterator = $rt_classWithoutFields(0),
ju_Collections$5 = $rt_classWithoutFields(),
ju_Collections$5__init_ = $this => {
    jl_Object__init_($this);
},
ju_Collections$5__init_0 = () => {
    let var_0 = new ju_Collections$5();
    ju_Collections$5__init_(var_0);
    return var_0;
},
ju_SequencedCollection = $rt_classWithoutFields(0),
ju_List = $rt_classWithoutFields(0),
ju_List_of = () => {
    return ju_Collections_emptyList();
},
ju_List_of1 = $e => {
    return ju_Collections_singletonList($e);
},
ju_List_of2 = ($e1, $e2) => {
    ju_Objects_requireNonNull0($e1);
    ju_Objects_requireNonNull0($e2);
    return ju_TemplateCollections$TwoElementsList__init_0($e1, $e2);
},
ju_List_of0 = $elements => {
    let var$2, var$3, var$4, $element;
    var$2 = $elements.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $element = var$2[var$4];
        ju_Objects_requireNonNull0($element);
        var$4 = var$4 + 1 | 0;
    }
    return ju_TemplateCollections$ImmutableArrayList__init_0($elements.$clone0());
};
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount = 0;
}
let ju_AbstractList__init_ = $this => {
    ju_AbstractCollection__init_($this);
},
ju_AbstractList_add = ($this, $e) => {
    $this.$add2($this.$size(), $e);
    return 1;
},
ju_AbstractList_iterator = $this => {
    return ju_AbstractList$1__init_0($this);
},
ju_AbstractList_set = ($this, $index, $element) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_AbstractList_add0 = ($this, $index, $element) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_AbstractList_remove = ($this, $index) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_AbstractList_indexOf = ($this, $o) => {
    let $sz, $i;
    $sz = $this.$size();
    $i = 0;
    while (true) {
        if ($i >= $sz)
            return (-1);
        if (ju_Objects_equals($o, $this.$get($i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_AbstractList_hashCode = $this => {
    let $hashCode, $iter, $elem;
    $hashCode = 1;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        $elem = $iter.$next();
        $hashCode = (31 * $hashCode | 0) + ju_Objects_hashCode($elem) | 0;
    }
    return $hashCode;
},
ju_AbstractList_equals = ($this, $other) => {
    let $list, $i;
    if (!$rt_isInstance($other, ju_List))
        return 0;
    $list = $other;
    if ($this.$size() != $list.$size())
        return 0;
    $i = 0;
    while ($i < $list.$size()) {
        if (!ju_Objects_equals($this.$get($i), $list.$get($i)))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
ju_RandomAccess = $rt_classWithoutFields(0),
ju_TemplateCollections$AbstractImmutableList = $rt_classWithoutFields(ju_AbstractList),
ju_TemplateCollections$AbstractImmutableList__init_ = $this => {
    ju_AbstractList__init_($this);
},
ju_TemplateCollections$AbstractImmutableList_remove = ($this, $index) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_Collections$3 = $rt_classWithoutFields(ju_TemplateCollections$AbstractImmutableList),
ju_Collections$3__init_ = $this => {
    ju_TemplateCollections$AbstractImmutableList__init_($this);
},
ju_Collections$3__init_0 = () => {
    let var_0 = new ju_Collections$3();
    ju_Collections$3__init_(var_0);
    return var_0;
},
ju_Collections$3_get = ($this, $index) => {
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_Collections$3_size = $this => {
    return 0;
},
ju_Collections$3_iterator = $this => {
    return ju_Collections_emptyIterator();
},
ju_Collections$3_isEmpty = $this => {
    return 1;
},
ju_Collections$4 = $rt_classWithoutFields(),
ju_Collections$4__init_ = $this => {
    jl_Object__init_($this);
},
ju_Collections$4__init_0 = () => {
    let var_0 = new ju_Collections$4();
    ju_Collections$4__init_(var_0);
    return var_0;
},
ju_Collections$4_hasNext = $this => {
    return 0;
},
ju_Collections$4_next = $this => {
    $rt_throw(ju_NoSuchElementException__init_());
},
ju_Collections$4_remove = $this => {
    $rt_throw(jl_IllegalStateException__init_0());
},
ju_TemplateCollections$AbstractImmutableSet = $rt_classWithoutFields(ju_AbstractSet),
ju_TemplateCollections$AbstractImmutableSet__init_ = $this => {
    ju_AbstractSet__init_($this);
},
ju_Collections$1 = $rt_classWithoutFields(ju_TemplateCollections$AbstractImmutableSet),
ju_Collections$1__init_ = $this => {
    ju_TemplateCollections$AbstractImmutableSet__init_($this);
},
ju_Collections$1__init_0 = () => {
    let var_0 = new ju_Collections$1();
    ju_Collections$1__init_(var_0);
    return var_0;
},
ju_Collections$1_size = $this => {
    return 0;
},
ju_Collections$1_iterator = $this => {
    return ju_Collections_emptyIterator();
},
ju_TemplateCollections$AbstractImmutableMap = $rt_classWithoutFields(ju_AbstractMap),
ju_TemplateCollections$AbstractImmutableMap__init_ = $this => {
    ju_AbstractMap__init_($this);
},
ju_TemplateCollections$AbstractImmutableMap_put = ($this, $key, $value) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_TemplateCollections$AbstractImmutableMap_remove = ($this, $key) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_Collections$2 = $rt_classWithoutFields(ju_TemplateCollections$AbstractImmutableMap),
ju_Collections$2__init_ = $this => {
    ju_TemplateCollections$AbstractImmutableMap__init_($this);
},
ju_Collections$2__init_0 = () => {
    let var_0 = new ju_Collections$2();
    ju_Collections$2__init_(var_0);
    return var_0;
},
ju_Collections$2_entrySet = $this => {
    return ju_Collections_emptySet();
},
ju_Collections$2_size = $this => {
    return 0;
},
ju_Collections$2_get = ($this, $key) => {
    return null;
},
ju_Collections$2_isEmpty = $this => {
    return 1;
},
ju_Collections$2_containsKey = ($this, $key) => {
    return 0;
},
jtf_DateTimeFormatterBuilder$DateTimePrinterParser = $rt_classWithoutFields(0);
function jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser() {
    jl_Object.call(this);
    this.$literal = null;
}
let jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser__init_ = ($this, $literal) => {
    jl_Object__init_($this);
    $this.$literal = $literal;
},
jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser__init_0 = var_0 => {
    let var_1 = new jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser();
    jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser__init_(var_1, var_0);
    return var_1;
},
jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser_parse = ($this, $context, $text, $position) => {
    let $length;
    $length = $text.$length();
    if ($position <= $length && $position >= 0) {
        if (!jtf_DateTimeParseContext_subSequenceEquals($context, $text, $position, $this.$literal, 0, $this.$literal.$length()))
            return $position ^ (-1);
        return $position + $this.$literal.$length() | 0;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser_toString = $this => {
    let $converted, var$2;
    $converted = $this.$literal.$replace($rt_s(472), $rt_s(473));
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(var$2, 39), $converted), 39);
    return jl_StringBuilder_toString(var$2);
};
function jtf_DateTimeFormatterBuilder$InstantPrinterParser() {
    jl_Object.call(this);
    this.$fractionalDigits = 0;
}
let jtf_DateTimeFormatterBuilder$InstantPrinterParser__init_ = ($this, $fractionalDigits) => {
    jl_Object__init_($this);
    $this.$fractionalDigits = $fractionalDigits;
},
jtf_DateTimeFormatterBuilder$InstantPrinterParser__init_0 = var_0 => {
    let var_1 = new jtf_DateTimeFormatterBuilder$InstantPrinterParser();
    jtf_DateTimeFormatterBuilder$InstantPrinterParser__init_(var_1, var_0);
    return var_1;
},
jtf_DateTimeFormatterBuilder$InstantPrinterParser_print = ($this, $context, $buf) => {
    let $inSecs, $inNanos, $inSec, $inNano, $zeroSecs, $hi, $lo, var$10, $ldt, $pos, $div, $i, $digit;
    jtt_ChronoField_$callClinit();
    $inSecs = jtf_DateTimePrintContext_getValue($context, jtt_ChronoField_INSTANT_SECONDS);
    $inNanos = Long_ZERO;
    if ((jtf_DateTimePrintContext_getTemporal($context)).$isSupported(jtt_ChronoField_NANO_OF_SECOND))
        $inNanos = (jtf_DateTimePrintContext_getTemporal($context)).$getLong(jtt_ChronoField_NANO_OF_SECOND);
    if ($inSecs === null)
        return 0;
    $inSec = $inSecs.$longValue();
    $inNano = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_NANO_OF_SECOND, $inNanos);
    if (Long_ge($inSec, Long_create(2257290240, 4294967281))) {
        $zeroSecs = Long_add(Long_sub($inSec, Long_create(2036907392, 73)), Long_create(2037677056, 14));
        $hi = Long_add(jl_Math_floorDiv0($zeroSecs, Long_create(2036907392, 73)), Long_fromInt(1));
        $lo = jl_Math_floorMod0($zeroSecs, Long_create(2036907392, 73));
        var$10 = Long_sub($lo, Long_create(2037677056, 14));
        jt_ZoneOffset_$callClinit();
        $ldt = jt_LocalDateTime_ofEpochSecond(var$10, 0, jt_ZoneOffset_UTC);
        if (Long_gt($hi, Long_ZERO))
            ($buf.$append0(43)).$append13($hi);
        $buf.$append($ldt);
        if (!jt_LocalDateTime_getSecond($ldt))
            $buf.$append1($rt_s(474));
    } else {
        $zeroSecs = Long_add($inSec, Long_create(2037677056, 14));
        $hi = Long_div($zeroSecs, Long_create(2036907392, 73));
        $lo = Long_rem($zeroSecs, Long_create(2036907392, 73));
        var$10 = Long_sub($lo, Long_create(2037677056, 14));
        jt_ZoneOffset_$callClinit();
        $ldt = jt_LocalDateTime_ofEpochSecond(var$10, 0, jt_ZoneOffset_UTC);
        $pos = $buf.$length();
        $buf.$append($ldt);
        if (!jt_LocalDateTime_getSecond($ldt))
            $buf.$append1($rt_s(474));
        if (Long_lt($hi, Long_ZERO)) {
            if (jt_LocalDateTime_getYear($ldt) == (-10000))
                $buf.$replace1($pos, $pos + 2 | 0, jl_Long_toString(Long_sub($hi, Long_fromInt(1))));
            else if (Long_eq($lo, Long_ZERO))
                $buf.$insert13($pos, $hi);
            else
                $buf.$insert13($pos + 1 | 0, jl_Math_abs0($hi));
        }
    }
    a: {
        if ($this.$fractionalDigits != (-2)) {
            if ($this.$fractionalDigits <= 0) {
                if ($this.$fractionalDigits != (-1))
                    break a;
                if ($inNano <= 0)
                    break a;
            }
            $buf.$append0(46);
            $div = 100000000;
            $i = 0;
            while (true) {
                if (!($this.$fractionalDigits == (-1) && $inNano > 0) && $i >= $this.$fractionalDigits)
                    break a;
                $digit = $inNano / $div | 0;
                $buf.$append0(($digit + 48 | 0) & 65535);
                $inNano = $inNano - $rt_imul($digit, $div) | 0;
                $div = $div / 10 | 0;
                $i = $i + 1 | 0;
            }
        } else if ($inNano) {
            $buf.$append0(46);
            if (!($inNano % 1000000 | 0))
                $buf.$append1((jl_Integer_toString(($inNano / 1000000 | 0) + 1000 | 0)).$substring0(1));
            else if ($inNano % 1000 | 0)
                $buf.$append1((jl_Integer_toString($inNano + 1000000000 | 0)).$substring0(1));
            else
                $buf.$append1((jl_Integer_toString(($inNano / 1000 | 0) + 1000000 | 0)).$substring0(1));
        }
    }
    $buf.$append0(90);
    return 1;
},
jtf_DateTimeFormatterBuilder$InstantPrinterParser_parse = ($this, $context, $text, $position) => {
    let $newContext, $minDigits, $maxDigits, var$7, var$8, $parser, $pos, $yearParsed, $month, $day, $hour, $min, $secVal, $nanoVal, $sec, $nano, $year, $days, $ldt, $instantSecs, var$24, $$je;
    $newContext = jtf_DateTimeParseContext_copy($context);
    $minDigits = $this.$fractionalDigits >= 0 ? $this.$fractionalDigits : 0;
    $maxDigits = $this.$fractionalDigits >= 0 ? $this.$fractionalDigits : 9;
    var$7 = jtf_DateTimeFormatterBuilder__init_();
    jtf_DateTimeFormatter_$callClinit();
    var$8 = jtf_DateTimeFormatter_ISO_LOCAL_DATE;
    var$7 = jtf_DateTimeFormatterBuilder_appendLiteral(jtf_DateTimeFormatterBuilder_append(var$7, var$8), 84);
    jtt_ChronoField_$callClinit();
    var$8 = jtt_ChronoField_HOUR_OF_DAY;
    var$7 = jtf_DateTimeFormatterBuilder_appendLiteral(jtf_DateTimeFormatterBuilder_appendValue(jtf_DateTimeFormatterBuilder_appendLiteral(jtf_DateTimeFormatterBuilder_appendValue(var$7, var$8, 2), 58), jtt_ChronoField_MINUTE_OF_HOUR, 2), 58);
    var$8 = jtt_ChronoField_SECOND_OF_MINUTE;
    var$7 = jtf_DateTimeFormatterBuilder_appendFraction(jtf_DateTimeFormatterBuilder_appendValue(var$7, var$8, 2), jtt_ChronoField_NANO_OF_SECOND, $minDigits, $maxDigits, 1);
    var$7 = jtf_DateTimeFormatterBuilder_appendLiteral(var$7, 90);
    $parser = jtf_DateTimeFormatter_toPrinterParser(jtf_DateTimeFormatterBuilder_toFormatter0(var$7), 0);
    $pos = jtf_DateTimeFormatterBuilder$CompositePrinterParser_parse($parser, $newContext, $text, $position);
    if ($pos < 0)
        return $pos;
    $yearParsed = (jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_YEAR)).$longValue();
    $month = (jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_MONTH_OF_YEAR)).$intValue();
    $day = (jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_DAY_OF_MONTH)).$intValue();
    $hour = (jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_HOUR_OF_DAY)).$intValue();
    $min = (jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_MINUTE_OF_HOUR)).$intValue();
    $secVal = jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_SECOND_OF_MINUTE);
    $nanoVal = jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_NANO_OF_SECOND);
    $sec = $secVal === null ? 0 : $secVal.$intValue();
    $nano = $nanoVal === null ? 0 : $nanoVal.$intValue();
    $year = Long_lo($yearParsed) % 10000 | 0;
    $days = 0;
    if ($hour == 24 && !$min && !$sec && !$nano) {
        $hour = 0;
        $days = 1;
    } else if ($hour == 23 && $min == 59 && $sec == 60) {
        jtf_DateTimeParseContext_setParsedLeapSecond($context);
        $sec = 59;
    }
    a: {
        try {
            $ldt = jt_LocalDateTime_plusDays(jt_LocalDateTime_of0($year, $month, $day, $hour, $min, $sec, 0), Long_fromInt($days));
            jt_ZoneOffset_$callClinit();
            $instantSecs = $ldt.$toEpochSecond(jt_ZoneOffset_UTC);
            $instantSecs = Long_add($instantSecs, jl_Math_multiplyExact0(Long_div($yearParsed, Long_fromInt(10000)), Long_create(2036907392, 73)));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
            } else {
                throw $$e;
            }
        }
        return $position ^ (-1);
    }
    var$24 = jtf_DateTimeParseContext_setParsedField($context, jtt_ChronoField_INSTANT_SECONDS, $instantSecs, $position, $pos);
    return jtf_DateTimeParseContext_setParsedField($context, jtt_ChronoField_NANO_OF_SECOND, Long_fromInt($nano), $position, var$24);
},
jtf_DateTimeFormatterBuilder$InstantPrinterParser_toString = $this => {
    return $rt_s(475);
},
juf_IntPredicate = $rt_classWithoutFields(0);
function jusi_SimpleIntStreamImpl$ArrayFillingConsumer() {
    let a = this; jl_Object.call(a);
    a.$array8 = null;
    a.$index5 = 0;
}
let jusi_SimpleIntStreamImpl$ArrayFillingConsumer__init_ = ($this, $array) => {
    jl_Object__init_($this);
    $this.$array8 = $array;
},
jusi_SimpleIntStreamImpl$ArrayFillingConsumer__init_0 = var_0 => {
    let var_1 = new jusi_SimpleIntStreamImpl$ArrayFillingConsumer();
    jusi_SimpleIntStreamImpl$ArrayFillingConsumer__init_(var_1, var_0);
    return var_1;
},
jusi_SimpleIntStreamImpl$ArrayFillingConsumer_test = ($this, $t) => {
    let var$2, var$3;
    var$2 = $this.$array8.data;
    var$3 = $this.$index5;
    $this.$index5 = var$3 + 1 | 0;
    var$2[var$3] = $t;
    return 1;
};
function jur_AbstractCharClass$LazyCategoryScope() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates = 0;
}
let jur_AbstractCharClass$LazyCategoryScope__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategoryScope__init_1 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategoryScope_computeValue = $this => {
    let $chCl;
    $chCl = jur_UnicodeCategoryScope__init_0($this.$category0);
    if ($this.$containsAllSurrogates)
        $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints1;
    return $chCl;
};
function ju_Collections$9() {
    ju_AbstractList.call(this);
    this.$val$list = null;
}
let ju_Collections$9__init_ = ($this, var$1) => {
    $this.$val$list = var$1;
    ju_AbstractList__init_($this);
},
ju_Collections$9__init_0 = var_0 => {
    let var_1 = new ju_Collections$9();
    ju_Collections$9__init_(var_1, var_0);
    return var_1;
},
ju_Collections$9_get = ($this, $index) => {
    return $this.$val$list.$get($index);
},
ju_Collections$9_size = $this => {
    return $this.$val$list.$size();
},
ju_Collections$9_remove = ($this, $o) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
};
function ju_Collections$7() {
    ju_AbstractMap.call(this);
    this.$val$entries = null;
}
let ju_Collections$7__init_ = ($this, var$1) => {
    $this.$val$entries = var$1;
    ju_AbstractMap__init_($this);
},
ju_Collections$7__init_0 = var_0 => {
    let var_1 = new ju_Collections$7();
    ju_Collections$7__init_(var_1, var_0);
    return var_1;
},
ju_Collections$7_entrySet = $this => {
    return $this.$val$entries;
},
onnr_NostrRTCRoom$broadcast$lambda$_27_0 = $rt_classWithoutFields(),
onnr_NostrRTCRoom$broadcast$lambda$_27_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnr_NostrRTCRoom$broadcast$lambda$_27_0__init_0 = () => {
    let var_0 = new onnr_NostrRTCRoom$broadcast$lambda$_27_0();
    onnr_NostrRTCRoom$broadcast$lambda$_27_0__init_(var_0);
    return var_0;
},
onnr_NostrRTCRoom$broadcast$lambda$_27_0_apply0 = (var$0, var$1) => {
    return onnr_NostrRTCRoom$broadcast$lambda$_27_0_apply(var$0, var$1);
},
onnr_NostrRTCRoom$broadcast$lambda$_27_0_apply = (var$0, var$1) => {
    return onnr_NostrRTCRoom_lambda$broadcast$5(var$1);
},
ju_SequencedSet = $rt_classWithoutFields(0);
function onns_NostrNIP46Signer$getPublicKey$lambda$_16_0() {
    jl_Object.call(this);
    this.$_039 = null;
}
let onns_NostrNIP46Signer$getPublicKey$lambda$_16_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_039 = var$1;
},
onns_NostrNIP46Signer$getPublicKey$lambda$_16_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$getPublicKey$lambda$_16_0();
    onns_NostrNIP46Signer$getPublicKey$lambda$_16_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$getPublicKey$lambda$_16_0_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$getPublicKey$lambda$_16_0_apply(var$0, var$1);
},
onns_NostrNIP46Signer$getPublicKey$lambda$_16_0_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$getPublicKey$28(var$0.$_039, var$1);
};
function onns_NostrNIP46Signer$getPublicKey$lambda$_16_1() {
    jl_Object.call(this);
    this.$_066 = null;
}
let onns_NostrNIP46Signer$getPublicKey$lambda$_16_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_066 = var$1;
},
onns_NostrNIP46Signer$getPublicKey$lambda$_16_1__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$getPublicKey$lambda$_16_1();
    onns_NostrNIP46Signer$getPublicKey$lambda$_16_1__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$getPublicKey$lambda$_16_1_accept0 = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer$getPublicKey$lambda$_16_1_accept(var$0, var$1, var$2);
},
onns_NostrNIP46Signer$getPublicKey$lambda$_16_1_accept = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer_lambda$getPublicKey$27(var$0.$_066, var$1, var$2);
};
function jtz_ZoneOffsetTransition() {
    let a = this; jl_Object.call(a);
    a.$transition = null;
    a.$offsetBefore0 = null;
    a.$offsetAfter0 = null;
}
let jtz_ZoneOffsetTransition_of = ($transition, $offsetBefore, $offsetAfter) => {
    ju_Objects_requireNonNull($transition, $rt_s(476));
    ju_Objects_requireNonNull($offsetBefore, $rt_s(477));
    ju_Objects_requireNonNull($offsetAfter, $rt_s(478));
    if (jt_ZoneOffset_equals($offsetBefore, $offsetAfter))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(479)));
    if (!jt_LocalDateTime_getNano($transition))
        return jtz_ZoneOffsetTransition__init_($transition, $offsetBefore, $offsetAfter);
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(480)));
},
jtz_ZoneOffsetTransition__init_0 = ($this, $transition, $offsetBefore, $offsetAfter) => {
    jl_Object__init_($this);
    $this.$transition = $transition;
    $this.$offsetBefore0 = $offsetBefore;
    $this.$offsetAfter0 = $offsetAfter;
},
jtz_ZoneOffsetTransition__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jtz_ZoneOffsetTransition();
    jtz_ZoneOffsetTransition__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jtz_ZoneOffsetTransition_getInstant = $this => {
    return $this.$transition.$toInstant($this.$offsetBefore0);
},
jtz_ZoneOffsetTransition_toEpochSecond = $this => {
    return $this.$transition.$toEpochSecond($this.$offsetBefore0);
},
jtz_ZoneOffsetTransition_getDateTimeBefore = $this => {
    return $this.$transition;
},
jtz_ZoneOffsetTransition_getDateTimeAfter = $this => {
    return jt_LocalDateTime_plusSeconds($this.$transition, Long_fromInt(jtz_ZoneOffsetTransition_getDurationSeconds($this)));
},
jtz_ZoneOffsetTransition_getOffsetBefore = $this => {
    return $this.$offsetBefore0;
},
jtz_ZoneOffsetTransition_getOffsetAfter = $this => {
    return $this.$offsetAfter0;
},
jtz_ZoneOffsetTransition_getDuration = $this => {
    return jt_Duration_ofSeconds(Long_fromInt(jtz_ZoneOffsetTransition_getDurationSeconds($this)));
},
jtz_ZoneOffsetTransition_getDurationSeconds = $this => {
    return jt_ZoneOffset_getTotalSeconds(jtz_ZoneOffsetTransition_getOffsetAfter($this)) - jt_ZoneOffset_getTotalSeconds(jtz_ZoneOffsetTransition_getOffsetBefore($this)) | 0;
},
jtz_ZoneOffsetTransition_isGap = $this => {
    return jt_ZoneOffset_getTotalSeconds(jtz_ZoneOffsetTransition_getOffsetAfter($this)) <= jt_ZoneOffset_getTotalSeconds(jtz_ZoneOffsetTransition_getOffsetBefore($this)) ? 0 : 1;
},
jtz_ZoneOffsetTransition_getValidOffsets = $this => {
    let var$1, var$2;
    if (jtz_ZoneOffsetTransition_isGap($this))
        return ju_Collections_emptyList();
    var$1 = $rt_createArray(jt_ZoneOffset, 2);
    var$2 = var$1.data;
    var$2[0] = jtz_ZoneOffsetTransition_getOffsetBefore($this);
    var$2[1] = jtz_ZoneOffsetTransition_getOffsetAfter($this);
    return ju_Arrays_asList(var$1);
},
jtz_ZoneOffsetTransition_compareTo = ($this, $transition) => {
    return jt_Instant_compareTo(jtz_ZoneOffsetTransition_getInstant($this), jtz_ZoneOffsetTransition_getInstant($transition));
},
jtz_ZoneOffsetTransition_equals = ($this, $other) => {
    let $d, var$3, var$4, var$5;
    if ($other === $this)
        return 1;
    if (!($other instanceof jtz_ZoneOffsetTransition))
        return 0;
    a: {
        $d = $other;
        if (jt_LocalDateTime_equals($this.$transition, $d.$transition)) {
            var$3 = $this.$offsetBefore0;
            var$4 = $d.$offsetBefore0;
            if (jt_ZoneOffset_equals(var$3, var$4) && jt_ZoneOffset_equals($this.$offsetAfter0, $d.$offsetAfter0)) {
                var$5 = 1;
                break a;
            }
        }
        var$5 = 0;
    }
    return var$5;
},
jtz_ZoneOffsetTransition_hashCode = $this => {
    return jt_LocalDateTime_hashCode($this.$transition) ^ jt_ZoneOffset_hashCode($this.$offsetBefore0) ^ jl_Integer_rotateLeft(jt_ZoneOffset_hashCode($this.$offsetAfter0), 16);
},
jtz_ZoneOffsetTransition_toString = $this => {
    let $buf, var$2, var$3;
    $buf = jl_StringBuilder__init_();
    var$2 = $buf.$append1($rt_s(481));
    var$2 = var$2.$append1(!jtz_ZoneOffsetTransition_isGap($this) ? $rt_s(482) : $rt_s(483));
    var$2 = var$2.$append1($rt_s(484));
    var$3 = $this.$transition;
    var$2 = var$2.$append(var$3);
    var$3 = $this.$offsetBefore0;
    var$2 = var$2.$append(var$3);
    var$2 = var$2.$append1($rt_s(316));
    var$3 = $this.$offsetAfter0;
    var$2 = var$2.$append(var$3);
    var$2.$append0(93);
    return $buf.$toString();
},
jtz_ZoneOffsetTransition_compareTo0 = ($this, var$1) => {
    return jtz_ZoneOffsetTransition_compareTo($this, var$1);
};
function onn_NostrRelay() {
    let a = this; jl_Object.call(a);
    a.$listener2 = null;
    a.$connector = null;
    a.$url = null;
    a.$listeners = null;
    a.$waitingEventsAck = null;
    a.$executor1 = null;
    a.$reconnectionBackoff = null;
    a.$ackTimeoutS = Long_ZERO;
    a.$reconnectOnDrop = 0;
    a.$disconnectedByClient = 0;
    a.$connected = 0;
    a.$connecting = 0;
    a.$firstConnection = 0;
    a.$verifyEvents = 0;
    a.$parallelEvents = 0;
    a.$messageQueue = null;
    a.$connectCallbacks = null;
    a.$queue = null;
    a.$relayInfo = null;
}
let onn_NostrRelay_logger = null,
onn_NostrRelay_$assertionsDisabled = 0,
onn_NostrRelay_$callClinit = () => {
    onn_NostrRelay_$callClinit = $rt_eraseClinit(onn_NostrRelay);
    onn_NostrRelay__clinit_();
},
onn_NostrRelay__init_2 = ($this, $url) => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay__init_0($this, $url, onp_NGEPlatform_newRelayExecutor(onp_NGEUtils_getPlatform()));
},
onn_NostrRelay__init_1 = var_0 => {
    let var_1 = new onn_NostrRelay();
    onn_NostrRelay__init_2(var_1, var_0);
    return var_1;
},
onn_NostrRelay__init_0 = ($this, $url, $executor) => {
    let $platform, $e, $$je;
    onn_NostrRelay_$callClinit();
    jl_Object__init_($this);
    $this.$listener2 = onn_NostrRelay$1__init_0($this);
    $this.$listeners = juc_CopyOnWriteArrayList__init_();
    $this.$waitingEventsAck = juc_ConcurrentHashMap__init_();
    $this.$reconnectionBackoff = onnu_ExponentialBackoff__init_0();
    juc_TimeUnit_$callClinit();
    $this.$ackTimeoutS = juc_TimeUnit_toSeconds(juc_TimeUnit_MINUTES, Long_fromInt(21));
    $this.$reconnectOnDrop = 1;
    $this.$disconnectedByClient = 0;
    $this.$connected = 0;
    $this.$connecting = 0;
    $this.$firstConnection = 0;
    $this.$verifyEvents = 1;
    $this.$parallelEvents = 1;
    $this.$queue = juca_AtomicReference__init_0(null);
    $this.$relayInfo = null;
    a: {
        try {
            $platform = onp_NGEUtils_getPlatform();
            $this.$connector = $platform.$newTransport();
            $this.$connector.$addListener2($this.$listener2);
            $this.$messageQueue = $platform.$newConcurrentQueue($rt_cls(onn_NostrRelay$QueuedMessage));
            $this.$connectCallbacks = $platform.$newConcurrentQueue($rt_cls(jl_Runnable));
            $this.$url = $url;
            $this.$executor1 = $executor;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $rt_throw(jl_RuntimeException__init_1($rt_s(485), $e));
},
onn_NostrRelay__init_ = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay();
    onn_NostrRelay__init_0(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay_getInfo = $this => {
    let var$1, $e, $$je;
    if ($this.$relayInfo !== null)
        return $this.$relayInfo;
    a: {
        try {
            $this.$relayInfo = (onn_NostrRelayInfo_get($this.$url)).$await();
            var$1 = $this.$relayInfo;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(ji_IOException__init_3($rt_s(486), $e));
},
onn_NostrRelay_setVerifyEvents = ($this, $verify) => {
    $this.$verifyEvents = $verify;
},
onn_NostrRelay_isVerifyEvents = $this => {
    return $this.$verifyEvents;
},
onn_NostrRelay_setAsyncEventsVerification = ($this, $v) => {
    $this.$parallelEvents = $v;
},
onn_NostrRelay_isAsyncEventsVerification = $this => {
    return $this.$parallelEvents;
},
onn_NostrRelay_runInRelayExecutor = ($this, $runnable, $enqueue) => {
    let $platform, var$4, $nq, $q, var$7, $$je;
    a: {
        b: {
            $platform = onp_NGEUtils_getPlatform();
            if (!$enqueue)
                $platform.$promisify($runnable, $this.$executor1);
            else {
                var$4 = $this.$queue;
                jl_Object_monitorEnterSync(var$4);
                c: {
                    try {
                        if (juca_AtomicReference_get($this.$queue) === null) {
                            $nq = $platform.$promisify($runnable, $this.$executor1);
                            juca_AtomicReference_set($this.$queue, $nq);
                            break c;
                        }
                        $q = juca_AtomicReference_get($this.$queue);
                        $nq = $q.$compose(onn_NostrRelay$runInRelayExecutor$lambda$_7_0__init_0($platform, $runnable));
                        juca_AtomicReference_set($this.$queue, $nq);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$7 = $$je;
                        break a;

                    }
                }
                try {
                    jl_Object_monitorExitSync(var$4);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$7 = $$je;
                    break a;

                }
            }
        }
        return;
    }
    jl_Object_monitorExitSync(var$4);
    $rt_throw(var$7);
},
onn_NostrRelay_setAutoReconnect = ($this, $reconnect) => {
    $this.$reconnectOnDrop = $reconnect;
},
onn_NostrRelay_isAutoReconnect = $this => {
    return $this.$reconnectOnDrop;
},
onn_NostrRelay_setAckTimeout = ($this, $time, $unit) => {
    $this.$ackTimeoutS = juc_TimeUnit_toSeconds($unit, $time);
},
onn_NostrRelay_getAckTimeout = ($this, $outputUnit) => {
    let var$2;
    var$2 = $this.$ackTimeoutS;
    juc_TimeUnit_$callClinit();
    return juc_TimeUnit_convert($outputUnit, var$2, juc_TimeUnit_SECONDS);
},
onn_NostrRelay_addComponent = ($this, $listener) => {
    onn_NostrRelay_$callClinit();
    if (!onn_NostrRelay_$assertionsDisabled && $this.$listeners.$contains($listener))
        $rt_throw(jl_AssertionError__init_());
    $this.$listeners.$add1($listener);
    return $this;
},
onn_NostrRelay_removeComponent = ($this, $listener) => {
    $this.$listeners.$remove2($listener);
    return $this;
},
onn_NostrRelay_getComponent = ($this, $clazz) => {
    let var$2, $listener;
    var$2 = $this.$listeners.$iterator();
    while (var$2.$hasNext()) {
        $listener = var$2.$next();
        if (jl_Class_isInstance($clazz, $listener))
            return jl_Class_cast($clazz, $listener);
    }
    return null;
},
onn_NostrRelay_isConnected = $this => {
    let var$1;
    a: {
        b: {
            if (!$this.$connected) {
                if ($this.$disconnectedByClient)
                    break b;
                if (!$this.$reconnectOnDrop)
                    break b;
                if (!$this.$firstConnection)
                    break b;
            }
            var$1 = 1;
            break a;
        }
        var$1 = 0;
    }
    return var$1;
},
onn_NostrRelay_beforeSendMessage = ($this, $message) => {
    let var$2, $listener, $e, $$je;
    var$2 = $this.$listeners.$iterator();
    a: {
        b: {
            while (var$2.$hasNext()) {
                $listener = var$2.$next();
                try {
                    if (!$listener.$onRelayBeforeSend($this, $message))
                        break b;
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
            }
            return;
        }
        c: {
            try {
                onn_NostrRelay_$callClinit();
                if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$beforeSendMessage$lambda$_16_0__init_0($this)))
                    break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return;
        }
        try {
            $rt_throw(jl_AssertionError__init_());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
    }
    onn_NostrRelay_$callClinit();
    if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$beforeSendMessage$lambda$_16_1__init_0($e)))
        $rt_throw(jl_AssertionError__init_());
},
onn_NostrRelay_afterSendMessage = ($this, $message) => {
    let var$2, $listener, $e, $$je;
    var$2 = $this.$listeners.$iterator();
    a: {
        b: {
            while (var$2.$hasNext()) {
                $listener = var$2.$next();
                try {
                    if (!$listener.$onRelayAfterSend($this, $message))
                        break b;
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
            }
            return;
        }
        c: {
            try {
                onn_NostrRelay_$callClinit();
                if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$afterSendMessage$lambda$_17_0__init_0($this)))
                    break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return;
        }
        try {
            $rt_throw(jl_AssertionError__init_());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
    }
    onn_NostrRelay_$callClinit();
    if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$afterSendMessage$lambda$_17_1__init_0($e)))
        $rt_throw(jl_AssertionError__init_());
},
onn_NostrRelay_sendMessage = ($this, $message) => {
    let $platform;
    $platform = onp_NGEUtils_getPlatform();
    return $platform.$wrapPromise(onn_NostrRelay$sendMessage$lambda$_18_0__init_0($this, $message));
},
onn_NostrRelay_getUrl = $this => {
    return $this.$url;
},
onn_NostrRelay_connect = $this => {
    let $platform;
    $platform = onp_NGEUtils_getPlatform();
    if (!$this.$connected && !$this.$connecting) {
        $this.$connecting = 1;
        return $platform.$wrapPromise(onn_NostrRelay$connect$lambda$_20_1__init_0($this));
    }
    return $platform.$wrapPromise(onn_NostrRelay$connect$lambda$_20_0__init_0($this));
},
onn_NostrRelay_disconnect = ($this, $reason) => {
    let $executor, $platform;
    $this.$connected = 0;
    $this.$disconnectedByClient = 1;
    $this.$connector.$close1($reason);
    $executor = $this.$executor1;
    $platform = onp_NGEUtils_getPlatform();
    return $platform.$wrapPromise(onn_NostrRelay$disconnect$lambda$_21_0__init_0($this, $reason, $executor));
},
onn_NostrRelay_onConnectionOpen = $this => {
    onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$onConnectionOpen$lambda$_22_0__init_0($this), 1);
},
onn_NostrRelay_onConnectionMessage = ($this, $msg) => {
    let $platform, $data, $prefix, $rcv, var$6, var$7, $asyncVerifyPromise, $e, var$10, $$je;
    a: {
        try {
            $platform = onp_NGEUtils_getPlatform();
            onn_NostrRelay_$callClinit();
            if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$onConnectionMessage$lambda$_23_0__init_0($msg)))
                $rt_throw(jl_AssertionError__init_());
            $data = $platform.$fromJSON($msg, $rt_cls(ju_List));
            $prefix = onp_NGEUtils_safeString($data.$get(0));
            $rcv = null;
            if ($rcv === null)
                $rcv = onne_SignedNostrEvent_parse($data);
            if ($rcv === null)
                $rcv = onnpi_NostrClosedMessage_parse($data);
            if ($rcv === null)
                $rcv = onnpi_NostrEOSEMessage_parse($data);
            if ($rcv === null)
                $rcv = onnpi_NostrOKMessage_parse($data);
            if ($rcv === null)
                $rcv = onnpi_NostrNoticeMessage_parse($data);
            if ($rcv === null) {
                var$6 = new jl_Exception;
                var$7 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(487)), $prefix);
                jl_Exception__init_(var$6, jl_StringBuilder_toString(var$7));
                $rt_throw(var$6);
            }
            $asyncVerifyPromise = $rcv instanceof onne_SignedNostrEvent && $this.$verifyEvents && $this.$parallelEvents ? $rcv.$verifyAsync() : null;
            onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$onConnectionMessage$lambda$_23_1__init_0($this, $rcv, $asyncVerifyPromise), 1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        var$6 = onn_NostrRelay_logger;
        var$7 = $e.$getMessage();
        var$10 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(488)), var$7);
        var$6.$severe(jl_StringBuilder_toString(var$10));
    }
},
onn_NostrRelay_onConnectionClosedByServer = ($this, $reason) => {
    let var$2, var$3, var$4, $wasConnected, $e, $$je;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = $this.$url;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(489)), var$3), $rt_s(404)), $reason);
    var$2.$finer(jl_StringBuilder_toString(var$4));
    $wasConnected = $this.$connected;
    $this.$connecting = 0;
    $this.$connected = 0;
    a: {
        try {
            onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0__init_0($this, $wasConnected, $reason), 1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        var$2 = onn_NostrRelay_logger;
        var$3 = $e.$getMessage();
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(490)), var$3);
        var$2.$severe(jl_StringBuilder_toString(var$4));
    }
},
onn_NostrRelay_onConnectionClosedByClient = ($this, $reason) => {
    let var$2, var$3, var$4, $e, $$je;
    $this.$connected = 0;
    $this.$connecting = 0;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = $this.$url;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(491)), var$3), $rt_s(404)), $reason);
    var$2.$finer(jl_StringBuilder_toString(var$4));
    a: {
        try {
            onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0__init_0($this, $reason), 1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        var$2 = onn_NostrRelay_logger;
        var$3 = $e.$getMessage();
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(492)), var$3);
        var$2.$severe(jl_StringBuilder_toString(var$4));
    }
},
onn_NostrRelay_loop = $this => {
    let $nowInstant, $now, $it, $entry, $ack, $e, var$7, $listener, var$9, var$10, $$je;
    a: {
        b: {
            try {
                $nowInstant = jt_Instant_now();
                $now = jt_Instant_getEpochSecond($nowInstant);
                $it = ($this.$waitingEventsAck.$entrySet()).$iterator();
                while ($it.$hasNext()) {
                    try {
                        $entry = $it.$next();
                        $ack = $entry.$getValue();
                        if (Long_lt(Long_add(jt_Instant_getEpochSecond($ack.$getSentAt()), $this.$ackTimeoutS), $now)) {
                            onn_NostrRelay_$callClinit();
                            if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$loop$lambda$_26_0__init_0($ack)))
                                $rt_throw(jl_AssertionError__init_());
                            $it.$remove();
                            $ack.$callFailureCallback($rt_s(493));
                        }
                        continue;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $e = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    onn_NostrRelay_$callClinit();
                    var$7 = onn_NostrRelay_logger;
                    jul_Level_$callClinit();
                    var$7.$log(jul_Level_WARNING, $rt_s(494), $e);
                }
                var$7 = $this.$listeners.$iterator();
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $e = $$je;
                    break b;
                } else {
                    throw $$e;
                }
            }
            c: {
                d: {
                    try {
                        while (var$7.$hasNext()) {
                            $listener = var$7.$next();
                            try {
                                if (!$listener.$onRelayLoop($this, $nowInstant))
                                    break d;
                                continue;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                    $e = $$je;
                                    break c;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                        if (!$this.$disconnectedByClient)
                            break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                    e: {
                        try {
                            onn_NostrRelay_$callClinit();
                            if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$loop$lambda$_26_2__init_0($this)))
                                break e;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Throwable) {
                                $e = $$je;
                                break b;
                            } else {
                                throw $$e;
                            }
                        }
                        return;
                    }
                    try {
                        $rt_throw(jl_AssertionError__init_());
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                }
                f: {
                    try {
                        g: {
                            try {
                                onn_NostrRelay_$callClinit();
                                if (onn_NostrRelay_$assertionsDisabled)
                                    break g;
                                if (onp_NGEUtils_dbg(onn_NostrRelay$loop$lambda$_26_1__init_0($this)))
                                    break g;
                                else
                                    break f;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                    $e = $$je;
                                    break c;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                    return;
                }
                try {
                    $rt_throw(jl_AssertionError__init_());
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                    } else if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            h: {
                try {
                    onn_NostrRelay_$callClinit();
                    if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$loop$lambda$_26_4__init_0($e)))
                        break h;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            try {
                $rt_throw(jl_AssertionError__init_());
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
        }
        onn_NostrRelay_$callClinit();
        var$7 = onn_NostrRelay_logger;
        var$9 = $e.$getMessage();
        var$10 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(420)), var$9);
        var$7.$severe(jl_StringBuilder_toString(var$10));
    }
    var$9 = $this.$executor1;
    var$10 = onn_NostrRelay$loop$lambda$_26_3__init_0($this);
    juc_TimeUnit_$callClinit();
    var$9.$runLater(var$10, Long_fromInt(10), juc_TimeUnit_SECONDS);
},
onn_NostrRelay_onConnectionError = ($this, $e) => {
    let $e1, var$3, var$4, var$5, $$je;
    a: {
        try {
            onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$onConnectionError$lambda$_27_0__init_0($this, $e), 1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e1 = $$je;
            } else {
                throw $$e;
            }
        }
        onn_NostrRelay_$callClinit();
        var$3 = onn_NostrRelay_logger;
        var$4 = $e1.$getMessage();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(495)), var$4);
        var$3.$severe(jl_StringBuilder_toString(var$5));
    }
},
onn_NostrRelay_lambda$onConnectionError$43 = ($this, $e, $res, $rej) => {
    let var$4, $listener, $ex, var$7, var$8, var$9, $$je;
    var$4 = $this.$listeners.$iterator();
    a: {
        b: {
            while (var$4.$hasNext()) {
                $listener = var$4.$next();
                try {
                    if (!$listener.$onRelayError($this, $e))
                        break b;
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $ex = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
            }
            return;
        }
        c: {
            try {
                onn_NostrRelay_$callClinit();
                if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0__init_0($this)))
                    break c;
                $res.$accept0($this);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $ex = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return;
        }
        try {
            $rt_throw(jl_AssertionError__init_());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $ex = $$je;
            } else {
                throw $$e;
            }
        }
    }
    var$7 = new jl_Exception;
    var$8 = $ex.$getMessage();
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(496)), var$8);
    jl_Exception__init_(var$7, jl_StringBuilder_toString(var$9));
    $rej.$accept0(var$7);
},
onn_NostrRelay_lambda$onConnectionError$42 = $this => {
    let var$1, var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$1 = onn_NostrRelay_logger;
    var$2 = $this.$url;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(497)), var$2);
    var$1.$finer(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$loop$41 = $this => {
    onn_NostrRelay_loop($this);
    return null;
},
onn_NostrRelay_lambda$loop$40 = $this => {
    let var$1, var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$1 = onn_NostrRelay_logger;
    var$2 = $this.$url;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(498)), var$2);
    var$1.$finest(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$loop$39 = $e => {
    let var$2, var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = $e.$getMessage();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(499)), var$3);
    var$2.$finest(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$loop$38 = $this => {
    let var$1, var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$1 = onn_NostrRelay_logger;
    var$2 = $this.$url;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(500)), var$2);
    var$1.$finest(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$loop$37 = $ack => {
    let var$2, var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = $ack.$getId();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(501)), var$3);
    var$2.$finest(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$onConnectionClosedByClient$36 = ($this, $reason, $res, $rej) => {
    let var$4, $listener, $e, var$7, var$8, $$je;
    var$4 = $this.$listeners.$iterator();
    a: {
        b: {
            while (var$4.$hasNext()) {
                $listener = var$4.$next();
                try {
                    if (!$listener.$onRelayDisconnect($this, $reason, 1))
                        break b;
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
            }
            $res.$accept0($this);
            return;
        }
        try {
            onn_NostrRelay_$callClinit();
            var$7 = onn_NostrRelay_logger;
            var$8 = $this.$url;
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(502)), var$8);
            var$7.$finer(jl_StringBuilder_toString(var$4));
            $res.$accept0($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    var$7 = new jl_Exception;
    var$8 = $e.$getMessage();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(503)), var$8);
    jl_Exception__init_(var$7, jl_StringBuilder_toString(var$4));
    $rej.$accept0(var$7);
},
onn_NostrRelay_lambda$onConnectionClosedByServer$35 = ($this, $wasConnected, $reason, $res, $rej) => {
    let var$5, $listener, $e, $now, var$9, $delay, var$11, var$12, $$je;
    a: {
        b: {
            c: {
                if ($wasConnected) {
                    var$5 = $this.$listeners.$iterator();
                    while (true) {
                        if (!var$5.$hasNext())
                            break c;
                        $listener = var$5.$next();
                        try {
                            if (!$listener.$onRelayDisconnect($this, $reason, 0))
                                break b;
                            continue;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Throwable) {
                                $e = $$je;
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                }
            }
            if ($this.$reconnectOnDrop && !$this.$disconnectedByClient) {
                $now = jt_Instant_getEpochSecond(jt_Instant_now());
                onnu_ExponentialBackoff_registerFailure($this.$reconnectionBackoff);
                var$9 = $this.$reconnectionBackoff;
                juc_TimeUnit_$callClinit();
                $delay = onnu_ExponentialBackoff_getNextAttemptTime(var$9, $now, juc_TimeUnit_SECONDS);
                $this.$executor1.$runLater(onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0__init_0($this), $delay, juc_TimeUnit_SECONDS);
            }
            $res.$accept0($this);
            return;
        }
        try {
            onn_NostrRelay_$callClinit();
            var$11 = onn_NostrRelay_logger;
            var$12 = $this.$url;
            var$5 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(502)), var$12);
            var$11.$finer(jl_StringBuilder_toString(var$5));
            $res.$accept0($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    var$12 = new jl_Exception;
    var$5 = $e.$getMessage();
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(503)), var$5);
    jl_Exception__init_(var$12, jl_StringBuilder_toString(var$9));
    $rej.$accept0(var$12);
},
onn_NostrRelay_lambda$onConnectionClosedByServer$34 = $this => {
    onn_NostrRelay_connect($this);
    return null;
},
onn_NostrRelay_lambda$onConnectionMessage$33 = ($this, $message, $asyncVerifyPromise, $res, $rej) => {
    let $ok, $eventId, $success, $eventMessage, $ack, $event, var$11, $e, $listener, var$14, var$15, $$je;
    a: {
        b: {
            try {
                c: {
                    if ($message instanceof onnpi_NostrOKMessage) {
                        $ok = $message;
                        $eventId = $ok.$getEventId();
                        $success = $ok.$isSuccess();
                        $eventMessage = $ok.$getMessage();
                        $ack = $this.$waitingEventsAck.$get1($eventId);
                        if ($ack === null) {
                            onn_NostrRelay_$callClinit();
                            if (onn_NostrRelay_$assertionsDisabled)
                                break c;
                            if (onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2__init_0($eventId)))
                                break c;
                            $rt_throw(jl_AssertionError__init_());
                        }
                        onn_NostrRelay_$callClinit();
                        if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0__init_0($eventId, $success, $eventMessage)))
                            $rt_throw(jl_AssertionError__init_());
                        if (!$success)
                            $ack.$callFailureCallback($eventMessage);
                        else
                            $ack.$callSuccessCallback($eventMessage);
                    }
                }
                d: {
                    if ($asyncVerifyPromise !== null) {
                        if (($asyncVerifyPromise.$await()).$booleanValue())
                            break d;
                        $rt_throw(jl_Exception__init_0($rt_s(504)));
                    }
                    if ($this.$verifyEvents && $message instanceof onne_SignedNostrEvent) {
                        $event = $message;
                        if (!$event.$verify())
                            $rt_throw(jl_Exception__init_0($rt_s(504)));
                    }
                }
                var$11 = $this.$listeners.$iterator();
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break b;
                } else {
                    throw $$e;
                }
            }
            e: {
                try {
                    f: {
                        while (var$11.$hasNext()) {
                            $listener = var$11.$next();
                            try {
                                if (!$listener.$onRelayMessage($this, $message))
                                    break f;
                                continue;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                    $e = $$je;
                                    break e;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                        $res.$accept0($this);
                        break a;
                    }
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                g: {
                    try {
                        onn_NostrRelay_$callClinit();
                        if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1__init_0($this)))
                            break g;
                        $res.$accept0($this);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                            break e;
                        } else if ($$je instanceof jl_Exception) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                    return;
                }
                try {
                    $rt_throw(jl_AssertionError__init_());
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                    } else if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            try {
                var$11 = new jl_Exception;
                var$14 = $e.$getMessage();
                var$15 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$15, $rt_s(505)), var$14);
                jl_Exception__init_(var$11, jl_StringBuilder_toString(var$15));
                $rej.$accept0(var$11);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break b;
                } else {
                    throw $$e;
                }
            }
            return;
        }
        $rej.$accept0($e);
        onn_NostrRelay_$callClinit();
        if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3__init_0($e)))
            $rt_throw(jl_AssertionError__init_());
    }
},
onn_NostrRelay_lambda$onConnectionMessage$32 = $e => {
    let var$2;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    jul_Level_$callClinit();
    var$2.$log(jul_Level_WARNING, $rt_s(506), $e);
},
onn_NostrRelay_lambda$onConnectionMessage$31 = $this => {
    let var$1, var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$1 = onn_NostrRelay_logger;
    var$2 = $this.$url;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(507)), var$2);
    var$1.$finest(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$onConnectionMessage$30 = $eventId => {
    let var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(508)), $eventId);
    var$2.$warning(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$onConnectionMessage$29 = ($eventId, $success, $eventMessage) => {
    let var$4, var$5;
    onn_NostrRelay_$callClinit();
    var$4 = onn_NostrRelay_logger;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(509)), $eventId), $rt_s(510)), $success), $rt_s(511)), $eventMessage);
    var$4.$finest(jl_StringBuilder_toString(var$5));
},
onn_NostrRelay_lambda$onConnectionMessage$28 = $msg => {
    let var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(512)), $msg);
    var$2.$finest(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$onConnectionOpen$27 = ($this, $res, $rej) => {
    let var$3, var$4, var$5, $e, $listener, var$8, $it, $q, $message, $rs, $rj, $callback, $$je;
    a: {
        b: {
            try {
                onnu_ExponentialBackoff_registerSuccess($this.$reconnectionBackoff);
                onn_NostrRelay_$callClinit();
                var$3 = onn_NostrRelay_logger;
                var$4 = $this.$url;
                var$5 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(513)), var$4);
                var$3.$fine(jl_StringBuilder_toString(var$5));
                var$5 = $this.$listeners.$iterator();
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $e = $$je;
                    break b;
                } else {
                    throw $$e;
                }
            }
            c: {
                d: {
                    try {
                        while (true) {
                            if (!var$5.$hasNext())
                                break c;
                            $listener = var$5.$next();
                            try {
                                if (!$listener.$onRelayConnect($this))
                                    break;
                                continue;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                    $e = $$je;
                                    break d;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                        try {
                            var$5 = onn_NostrRelay_logger;
                            var$8 = $this.$url;
                            var$3 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(514)), var$8);
                            var$5.$finer(jl_StringBuilder_toString(var$3));
                            $res.$accept0($this);
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Throwable) {
                                $e = $$je;
                                break d;
                            } else {
                                throw $$e;
                            }
                        }
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                    return;
                }
                try {
                    var$5 = new jl_Exception;
                    var$8 = $e.$getMessage();
                    var$3 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(515)), var$8);
                    jl_Exception__init_(var$5, jl_StringBuilder_toString(var$3));
                    $rej.$accept0(var$5);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            try {
                $this.$connected = 1;
                $this.$connecting = 0;
                $this.$firstConnection = 1;
                $it = $this.$connectCallbacks.$iterator();
                e: while (true) {
                    if (!$it.$hasNext()) {
                        $it = $this.$messageQueue.$iterator();
                        while (true) {
                            if (!$it.$hasNext()) {
                                $res.$accept0($this);
                                break a;
                            }
                            $q = $it.$next();
                            $it.$remove();
                            if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0__init_0($q)))
                                break;
                            $message = $q.$message0;
                            $rs = $q.$res;
                            $rj = $q.$rej;
                            f: {
                                try {
                                    var$8 = onn_NostrRelay_sendMessage($this, $message);
                                    var$5 = onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3__init_0($rj);
                                    var$8 = var$8.$catchException(var$5);
                                    var$5 = onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4__init_0($rs);
                                    var$8.$then(var$5);
                                    break f;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_Throwable) {
                                        $e = $$je;
                                    } else {
                                        throw $$e;
                                    }
                                }
                                $rej.$accept0($e);
                            }
                        }
                        $rt_throw(jl_AssertionError__init_());
                    }
                    $callback = $it.$next();
                    $it.$remove();
                    g: {
                        try {
                            $callback.$run();
                            break g;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Throwable) {
                                $e = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2__init_0($e)))
                            break e;
                    }
                }
                $rt_throw(jl_AssertionError__init_());
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
        }
        if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1__init_0($e)))
            $rt_throw(jl_AssertionError__init_());
        $rej.$accept0($e);
    }
};
let onn_NostrRelay_lambda$onConnectionOpen$26 = $e => {
    let var$2;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    jul_Level_$callClinit();
    var$2.$log(jul_Level_WARNING, $rt_s(516), $e);
},
onn_NostrRelay_lambda$onConnectionOpen$25 = ($rs, $v) => {
    onn_NostrRelay_$callClinit();
    $rs.$accept0($v);
    return null;
},
onn_NostrRelay_lambda$onConnectionOpen$24 = ($rj, $t) => {
    onn_NostrRelay_$callClinit();
    $rj.$accept0($t);
},
onn_NostrRelay_lambda$onConnectionOpen$23 = $q => {
    let var$2, var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = jl_String_valueOf($q.$message0);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(517)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$onConnectionOpen$22 = $e => {
    let var$2;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    jul_Level_$callClinit();
    var$2.$log(jul_Level_WARNING, $rt_s(516), $e);
},
onn_NostrRelay_lambda$disconnect$21 = ($this, $reason, $executor, $ores, $orej) => {
    onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$lambda$disconnect$21$lambda$_50_0__init_0($this, $reason, $ores, $orej, $executor), 1);
},
onn_NostrRelay_lambda$disconnect$20 = ($this, $reason, $ores, $orej, $executor, $rs0, $rj0) => {
    let var$7, var$8, var$9, $listener, $e, var$12, $$je;
    onn_NostrRelay_$callClinit();
    var$7 = onn_NostrRelay_logger;
    var$8 = $this.$url;
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(518)), var$8), $rt_s(404)), $reason);
    var$7.$fine(jl_StringBuilder_toString(var$9));
    var$8 = $this.$listeners.$iterator();
    a: {
        b: {
            while (var$8.$hasNext()) {
                $listener = var$8.$next();
                try {
                    if (!$listener.$onRelayDisconnectRequest($this, $reason))
                        break b;
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
            }
            $executor.$close();
            $ores.$accept0($this);
            $rs0.$accept0($this);
            return;
        }
        try {
            var$9 = onn_NostrRelay_logger;
            var$12 = $this.$url;
            var$8 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(502)), var$12);
            var$9.$finer(jl_StringBuilder_toString(var$8));
            $ores.$accept0($this);
            $rs0.$accept0($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    var$9 = new jl_Exception;
    var$12 = $e.$getMessage();
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(503)), var$12);
    jl_Exception__init_(var$9, jl_StringBuilder_toString(var$8));
    $orej.$accept0(var$9);
    $rj0.$accept0($e);
},
onn_NostrRelay_lambda$connect$19 = ($this, $res, $rej) => {
    $res.$accept0($this);
},
onn_NostrRelay_lambda$connect$18 = ($this, $res, $rej) => {
    onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$lambda$connect$18$lambda$_53_0__init_0($this, $res, $rej), 1);
},
onn_NostrRelay_lambda$connect$17 = ($this, $res, $rej, $r0, $rj0) => {
    let var$5, var$6, var$7, $listener, $e, var$10, $$je;
    $this.$disconnectedByClient = 0;
    onn_NostrRelay_$callClinit();
    var$5 = onn_NostrRelay_logger;
    var$6 = $this.$url;
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(519)), var$6);
    var$5.$fine(jl_StringBuilder_toString(var$7));
    var$6 = $this.$listeners.$iterator();
    a: {
        b: {
            while (var$6.$hasNext()) {
                $listener = var$6.$next();
                try {
                    if (!$listener.$onRelayConnectRequest($this))
                        break b;
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
            }
            $this.$connectCallbacks.$add1(onn_NostrRelay$lambda$connect$17$lambda$_54_0__init_0($this, $res));
            var$5 = $this.$connector.$connect1($this.$url);
            var$6 = onn_NostrRelay$lambda$connect$17$lambda$_54_1__init_0($this, $rej);
            var$5.$catchException(var$6);
            onn_NostrRelay_loop($this);
            $r0.$accept0($this);
            return;
        }
        try {
            var$7 = onn_NostrRelay_logger;
            var$10 = $this.$url;
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(514)), var$10);
            var$7.$finer(jl_StringBuilder_toString(var$6));
            $res.$accept0($this);
            $r0.$accept0($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    var$7 = new jl_Exception;
    var$10 = $e.$getMessage();
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(515)), var$10);
    jl_Exception__init_(var$7, jl_StringBuilder_toString(var$6));
    $rej.$accept0(var$7);
    $rj0.$accept0($e);
},
onn_NostrRelay_lambda$connect$16 = ($this, $rej, $e) => {
    onn_NostrRelay_onConnectionClosedByServer($this, $rt_s(520));
    $rej.$accept0($e);
},
onn_NostrRelay_lambda$connect$15 = ($this, $res) => {
    $res.$accept0($this);
},
onn_NostrRelay_lambda$sendMessage$14 = ($this, $message, $ores, $orej) => {
    onn_NostrRelay_runInRelayExecutor($this, onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0__init_0($this, $message, $ores, $orej), 0);
},
onn_NostrRelay_lambda$sendMessage$13 = ($this, $message, $ores, $orej, $r0, $rj0) => {
    let $e, $q, var$8, var$9, var$10, $eventId, var$12, $result, $listener, $json, $$je;
    a: {
        b: {
            c: {
                try {
                    if ($this.$connected)
                        break c;
                    onn_NostrRelay_$callClinit();
                    if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0__init_0($message)))
                        $rt_throw(jl_AssertionError__init_());
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                d: {
                    try {
                        $q = onn_NostrRelay$QueuedMessage__init_($message, $ores, $orej);
                        if (!onn_NostrRelay_$assertionsDisabled && $this.$messageQueue.$contains($q))
                            break d;
                        $this.$messageQueue.$add1($q);
                        $r0.$accept0($this);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                    return;
                }
                try {
                    var$8 = new jl_AssertionError;
                    var$9 = onnp_NostrMessage_toString($q.$message0);
                    var$10 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(521)), var$9);
                    jl_AssertionError__init_1(var$8, jl_StringBuilder_toString(var$10));
                    $rt_throw(var$8);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            e: {
                try {
                    if (!($message instanceof onne_SignedNostrEvent)) {
                        $eventId = null;
                        break e;
                    }
                    $eventId = $message.$getId();
                    break e;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            f: {
                try {
                    if ($eventId === null) {
                        var$12 = null;
                        break f;
                    }
                    var$12 = $eventId;
                    break f;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            try {
                var$10 = jt_Instant_now();
                var$8 = onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1__init_0($this, $eventId, $ores);
                var$9 = onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2__init_0($this, $eventId, $ores);
                $result = onnp_NostrMessage_ack($this, var$12, var$10, var$8, var$9);
                var$9 = $this.$listeners.$iterator();
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $e = $$je;
                    break b;
                } else {
                    throw $$e;
                }
            }
            g: {
                h: {
                    try {
                        while (true) {
                            if (!var$9.$hasNext())
                                break g;
                            $listener = var$9.$next();
                            try {
                                if (!$listener.$onRelaySend($this, $message))
                                    break;
                                continue;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                    $e = $$je;
                                    break h;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                        try {
                            $result.$callSuccessCallback($rt_s(522));
                            $r0.$accept0($this);
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Throwable) {
                                $e = $$je;
                                break h;
                            } else {
                                throw $$e;
                            }
                        }
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                    return;
                }
                try {
                    var$8 = $e.$getMessage();
                    var$9 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(523)), var$8);
                    $result.$callFailureCallback(jl_StringBuilder_toString(var$9));
                    $rj0.$accept0($e);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            i: {
                try {
                    if ($eventId === null)
                        break i;
                    $this.$waitingEventsAck.$put1($eventId, $result);
                    break i;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            j: {
                try {
                    try {
                        $json = onnp_NostrMessage_toJSON($message);
                        var$9 = $this.$connector.$send0($json);
                        var$8 = onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3__init_0($result);
                        var$9 = var$9.$catchException(var$8);
                        var$8 = onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4__init_0($json, $eventId, $result);
                        var$9.$then(var$8);
                        break j;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $e = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    onn_NostrRelay_$callClinit();
                    var$8 = onn_NostrRelay_logger;
                    jul_Level_$callClinit();
                    var$8.$log(jul_Level_WARNING, $rt_s(524), $e);
                    $result.$callFailureCallback($e.$getMessage());
                    break j;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            break a;
        }
        onn_NostrRelay_$callClinit();
        var$8 = onn_NostrRelay_logger;
        jul_Level_$callClinit();
        var$8.$log(jul_Level_WARNING, $rt_s(525), $e);
        $rj0.$accept0($e);
    }
    $r0.$accept0($this);
},
onn_NostrRelay_lambda$sendMessage$12 = ($json, $eventId, $result, $vo) => {
    onn_NostrRelay_$callClinit();
    if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0__init_0($json)))
        $rt_throw(jl_AssertionError__init_());
    if ($eventId === null)
        $result.$callSuccessCallback($rt_s(526));
    return null;
},
onn_NostrRelay_lambda$sendMessage$11 = $json => {
    let var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(527)), $json);
    var$2.$finest(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$sendMessage$10 = ($result, $e) => {
    let var$3;
    onn_NostrRelay_$callClinit();
    var$3 = onn_NostrRelay_logger;
    jul_Level_$callClinit();
    var$3.$log(jul_Level_WARNING, $rt_s(528), $e);
    $result.$callFailureCallback($e.$getMessage());
},
onn_NostrRelay_lambda$sendMessage$9 = ($this, $eventId, $ores, $rr, $msg) => {
    if ($eventId !== null)
        $this.$waitingEventsAck.$remove1($eventId);
    onn_NostrRelay_$callClinit();
    if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0__init_0($msg, $eventId)))
        $rt_throw(jl_AssertionError__init_());
    $ores.$accept0($rr);
},
onn_NostrRelay_lambda$sendMessage$8 = ($msg, $eventId) => {
    let var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$3 = onn_NostrRelay_logger;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(529)), $msg), 32), $eventId);
    var$3.$finest(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$sendMessage$7 = ($this, $eventId, $ores, $rr, $msg) => {
    if ($eventId !== null)
        $this.$waitingEventsAck.$remove1($eventId);
    onn_NostrRelay_$callClinit();
    if (!onn_NostrRelay_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0__init_0($msg, $eventId)))
        $rt_throw(jl_AssertionError__init_());
    $ores.$accept0($rr);
},
onn_NostrRelay_lambda$sendMessage$6 = ($msg, $eventId) => {
    let var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$3 = onn_NostrRelay_logger;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(530)), $msg), 32), $eventId);
    var$3.$finest(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$sendMessage$5 = $message => {
    let var$2, var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = onnp_NostrMessage_toString($message);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(531)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$afterSendMessage$4 = $e => {
    let var$2, var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = $e.$getMessage();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(505)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$afterSendMessage$3 = $this => {
    let var$1, var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$1 = onn_NostrRelay_logger;
    var$2 = $this.$url;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(507)), var$2);
    var$1.$finer(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$beforeSendMessage$2 = $e => {
    let var$2, var$3, var$4;
    onn_NostrRelay_$callClinit();
    var$2 = onn_NostrRelay_logger;
    var$3 = $e.$getMessage();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(505)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onn_NostrRelay_lambda$beforeSendMessage$1 = $this => {
    let var$1, var$2, var$3;
    onn_NostrRelay_$callClinit();
    var$1 = onn_NostrRelay_logger;
    var$2 = $this.$url;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(507)), var$2);
    var$1.$finer(jl_StringBuilder_toString(var$3));
},
onn_NostrRelay_lambda$runInRelayExecutor$0 = ($platform, $runnable, $r) => {
    onn_NostrRelay_$callClinit();
    return $platform.$wrapPromise($runnable);
},
onn_NostrRelay__clinit_ = () => {
    onn_NostrRelay_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onn_NostrRelay)) ? 0 : 1;
    onn_NostrRelay_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onn_NostrRelay)));
},
onn_NostrRelay_afterSendMessage$exported$0 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    onn_NostrRelay_afterSendMessage(var$1, var$2);
},
onn_NostrRelay_lambda$onConnectionError$43$exported$1 = (var$1, var$2, var$3, var$4) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    onn_NostrRelay_lambda$onConnectionError$43(var$1, var$2, var$3, var$4);
},
onn_NostrRelay_lambda$sendMessage$14$exported$2 = (var$1, var$2, var$3, var$4) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    onn_NostrRelay_lambda$sendMessage$14(var$1, var$2, var$3, var$4);
},
onn_NostrRelay_lambda$onConnectionClosedByClient$36$exported$3 = (var$1, var$2, var$3, var$4) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    var$4 = var$4;
    onn_NostrRelay_lambda$onConnectionClosedByClient$36(var$1, var$2, var$3, var$4);
},
onn_NostrRelay_connect$exported$4 = var$1 => {
    onn_NostrRelay_$callClinit();
    return onn_NostrRelay_connect(var$1);
},
onn_NostrRelay_sendMessage$exported$5 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    return onn_NostrRelay_sendMessage(var$1, var$2);
},
onn_NostrRelay_lambda$connect$19$exported$6 = (var$1, var$2, var$3) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onn_NostrRelay_lambda$connect$19(var$1, var$2, var$3);
},
onn_NostrRelay_setAckTimeout$exported$7 = (var$1, var$2, var$3) => {
    let var$4;
    onn_NostrRelay_$callClinit();
    var$4 = var$2;
    var$2 = var$3;
    onn_NostrRelay_setAckTimeout(var$1, var$4, var$2);
},
onn_NostrRelay_lambda$connect$17$exported$8 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    var$5 = var$5;
    onn_NostrRelay_lambda$connect$17(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrRelay_getUrl$exported$9 = var$1 => {
    onn_NostrRelay_$callClinit();
    return $rt_ustr(onn_NostrRelay_getUrl(var$1));
},
onn_NostrRelay_onConnectionError$exported$10 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    onn_NostrRelay_onConnectionError(var$1, var$2);
},
onn_NostrRelay_lambda$sendMessage$9$exported$11 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    var$4 = var$4;
    var$5 = $rt_str(var$5);
    onn_NostrRelay_lambda$sendMessage$9(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrRelay__init_$exported$12 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    return onn_NostrRelay__init_($rt_str(var$1), var$2);
},
onn_NostrRelay_setAutoReconnect$exported$13 = (var$1, var$2) => {
    let var$3;
    onn_NostrRelay_$callClinit();
    var$3 = var$2 ? 1 : 0;
    onn_NostrRelay_setAutoReconnect(var$1, var$3);
},
onn_NostrRelay_lambda$onConnectionMessage$31$exported$14 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_lambda$onConnectionMessage$31(var$1);
},
onn_NostrRelay_disconnect$exported$15 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    return onn_NostrRelay_disconnect(var$1, var$2);
},
onn_NostrRelay_isAutoReconnect$exported$16 = var$1 => {
    onn_NostrRelay_$callClinit();
    return !!onn_NostrRelay_isAutoReconnect(var$1);
},
onn_NostrRelay_lambda$sendMessage$7$exported$17 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    var$4 = var$4;
    var$5 = $rt_str(var$5);
    onn_NostrRelay_lambda$sendMessage$7(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrRelay_lambda$beforeSendMessage$1$exported$18 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_lambda$beforeSendMessage$1(var$1);
},
onn_NostrRelay__init_$exported$19 = var$1 => {
    onn_NostrRelay_$callClinit();
    return onn_NostrRelay__init_1($rt_str(var$1));
},
onn_NostrRelay_onConnectionOpen$exported$20 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_onConnectionOpen(var$1);
},
onn_NostrRelay_getComponent$exported$21 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    return onn_NostrRelay_getComponent(var$1, var$2);
};
let onn_NostrRelay_beforeSendMessage$exported$22 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    onn_NostrRelay_beforeSendMessage(var$1, var$2);
},
onn_NostrRelay_onConnectionClosedByServer$exported$23 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    onn_NostrRelay_onConnectionClosedByServer(var$1, var$2);
},
onn_NostrRelay_setAsyncEventsVerification$exported$24 = (var$1, var$2) => {
    let var$3;
    onn_NostrRelay_$callClinit();
    var$3 = var$2 ? 1 : 0;
    onn_NostrRelay_setAsyncEventsVerification(var$1, var$3);
},
onn_NostrRelay_lambda$connect$15$exported$25 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    onn_NostrRelay_lambda$connect$15(var$1, var$2);
},
onn_NostrRelay_onConnectionClosedByClient$exported$26 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    onn_NostrRelay_onConnectionClosedByClient(var$1, var$2);
},
onn_NostrRelay_lambda$loop$40$exported$27 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_lambda$loop$40(var$1);
},
onn_NostrRelay_onConnectionMessage$exported$28 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    onn_NostrRelay_onConnectionMessage(var$1, var$2);
},
onn_NostrRelay_getInfo$exported$29 = var$1 => {
    onn_NostrRelay_$callClinit();
    return onn_NostrRelay_getInfo(var$1);
},
onn_NostrRelay_getAckTimeout$exported$30 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    return onn_NostrRelay_getAckTimeout(var$1, var$2);
},
onn_NostrRelay_lambda$loop$38$exported$31 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_lambda$loop$38(var$1);
},
onn_NostrRelay_lambda$disconnect$20$exported$32 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7) => {
    let var$8;
    onn_NostrRelay_$callClinit();
    var$8 = $rt_str(var$2);
    var$2 = var$3;
    var$3 = var$4;
    var$4 = var$5;
    var$5 = var$6;
    var$6 = var$7;
    onn_NostrRelay_lambda$disconnect$20(var$1, var$8, var$2, var$3, var$4, var$5, var$6);
},
onn_NostrRelay_lambda$connect$16$exported$33 = (var$1, var$2, var$3) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onn_NostrRelay_lambda$connect$16(var$1, var$2, var$3);
},
onn_NostrRelay_removeComponent$exported$34 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    return onn_NostrRelay_removeComponent(var$1, var$2);
},
onn_NostrRelay_isConnected$exported$35 = var$1 => {
    onn_NostrRelay_$callClinit();
    return !!onn_NostrRelay_isConnected(var$1);
},
onn_NostrRelay_isAsyncEventsVerification$exported$36 = var$1 => {
    onn_NostrRelay_$callClinit();
    return !!onn_NostrRelay_isAsyncEventsVerification(var$1);
},
onn_NostrRelay_isVerifyEvents$exported$37 = var$1 => {
    onn_NostrRelay_$callClinit();
    return !!onn_NostrRelay_isVerifyEvents(var$1);
},
onn_NostrRelay_runInRelayExecutor$exported$38 = (var$1, var$2, var$3) => {
    let var$4;
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    onn_NostrRelay_runInRelayExecutor(var$1, var$2, var$4);
},
onn_NostrRelay_loop$exported$39 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_loop(var$1);
},
onn_NostrRelay_lambda$sendMessage$13$exported$40 = (var$1, var$2, var$3, var$4, var$5, var$6) => {
    let var$7, var$8;
    onn_NostrRelay_$callClinit();
    var$7 = var$2;
    var$8 = var$3;
    var$2 = var$4;
    var$3 = var$5;
    var$4 = var$6;
    onn_NostrRelay_lambda$sendMessage$13(var$1, var$7, var$8, var$2, var$3, var$4);
},
onn_NostrRelay_lambda$afterSendMessage$3$exported$41 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_lambda$afterSendMessage$3(var$1);
},
onn_NostrRelay_lambda$onConnectionClosedByServer$35$exported$42 = (var$1, var$2, var$3, var$4, var$5) => {
    let var$6;
    onn_NostrRelay_$callClinit();
    var$6 = var$2 ? 1 : 0;
    var$2 = $rt_str(var$3);
    var$3 = var$4;
    var$4 = var$5;
    onn_NostrRelay_lambda$onConnectionClosedByServer$35(var$1, var$6, var$2, var$3, var$4);
},
onn_NostrRelay_lambda$onConnectionClosedByServer$34$exported$43 = var$1 => {
    onn_NostrRelay_$callClinit();
    return otji_JSWrapper_javaToJs(onn_NostrRelay_lambda$onConnectionClosedByServer$34(var$1));
},
onn_NostrRelay_lambda$onConnectionOpen$27$exported$44 = (var$1, var$2, var$3) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onn_NostrRelay_lambda$onConnectionOpen$27(var$1, var$2, var$3);
},
onn_NostrRelay_lambda$onConnectionMessage$33$exported$45 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    var$5 = var$5;
    onn_NostrRelay_lambda$onConnectionMessage$33(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrRelay_lambda$onConnectionError$42$exported$46 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_NostrRelay_lambda$onConnectionError$42(var$1);
},
onn_NostrRelay_addComponent$exported$47 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    return onn_NostrRelay_addComponent(var$1, var$2);
},
onn_NostrRelay_setVerifyEvents$exported$48 = (var$1, var$2) => {
    let var$3;
    onn_NostrRelay_$callClinit();
    var$3 = var$2 ? 1 : 0;
    onn_NostrRelay_setVerifyEvents(var$1, var$3);
},
onn_NostrRelay_lambda$loop$41$exported$49 = var$1 => {
    onn_NostrRelay_$callClinit();
    return otji_JSWrapper_javaToJs(onn_NostrRelay_lambda$loop$41(var$1));
},
onn_NostrRelay_lambda$disconnect$21$exported$50 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrRelay_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    var$4 = var$4;
    var$5 = var$5;
    onn_NostrRelay_lambda$disconnect$21(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrRelay_lambda$connect$18$exported$51 = (var$1, var$2, var$3) => {
    onn_NostrRelay_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onn_NostrRelay_lambda$connect$18(var$1, var$2, var$3);
},
onn_NostrRelay_lambda$loop$39$exported$0 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$loop$39(var$1);
},
onn_NostrRelay_lambda$loop$37$exported$1 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$loop$37(var$1);
},
onn_NostrRelay_lambda$onConnectionMessage$32$exported$2 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionMessage$32(var$1);
},
onn_NostrRelay_lambda$onConnectionMessage$30$exported$3 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionMessage$30($rt_str(var$1));
},
onn_NostrRelay_lambda$onConnectionMessage$29$exported$4 = (var$1, var$2, var$3) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionMessage$29($rt_str(var$1), var$2 ? 1 : 0, $rt_str(var$3));
},
onn_NostrRelay_lambda$onConnectionMessage$28$exported$5 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionMessage$28($rt_str(var$1));
},
onn_NostrRelay_lambda$onConnectionOpen$26$exported$6 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionOpen$26(var$1);
},
onn_NostrRelay_lambda$onConnectionOpen$25$exported$7 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JSWrapper_javaToJs(onn_NostrRelay_lambda$onConnectionOpen$25(var$1, var$2));
},
onn_NostrRelay_lambda$onConnectionOpen$24$exported$8 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionOpen$24(var$1, var$2);
},
onn_NostrRelay_lambda$onConnectionOpen$23$exported$9 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionOpen$23(var$1);
},
onn_NostrRelay_lambda$onConnectionOpen$22$exported$10 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$onConnectionOpen$22(var$1);
},
onn_NostrRelay_lambda$sendMessage$12$exported$11 = (var$1, var$2, var$3, var$4) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JSWrapper_javaToJs(onn_NostrRelay_lambda$sendMessage$12($rt_str(var$1), $rt_str(var$2), var$3, var$4));
},
onn_NostrRelay_lambda$sendMessage$11$exported$12 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$sendMessage$11($rt_str(var$1));
},
onn_NostrRelay_lambda$sendMessage$10$exported$13 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$sendMessage$10(var$1, var$2);
},
onn_NostrRelay_lambda$sendMessage$8$exported$14 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$sendMessage$8($rt_str(var$1), $rt_str(var$2));
},
onn_NostrRelay_lambda$sendMessage$6$exported$15 = (var$1, var$2) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$sendMessage$6($rt_str(var$1), $rt_str(var$2));
},
onn_NostrRelay_lambda$sendMessage$5$exported$16 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$sendMessage$5(var$1);
},
onn_NostrRelay_lambda$afterSendMessage$4$exported$17 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$afterSendMessage$4(var$1);
},
onn_NostrRelay_lambda$beforeSendMessage$2$exported$18 = var$1 => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelay_lambda$beforeSendMessage$2(var$1);
},
onn_NostrRelay_lambda$runInRelayExecutor$0$exported$19 = (var$1, var$2, var$3) => {
    onn_NostrRelay_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onn_NostrRelay_lambda$runInRelayExecutor$0(var$1, var$2, otji_JSWrapper_jsToJava(var$3));
};
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$047 = null;
}
let jur_AbstractCharClass$LazyJavaTitleCase$1__init_ = ($this, $this$0) => {
    $this.$this$047 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaTitleCase$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaTitleCase$1();
    jur_AbstractCharClass$LazyJavaTitleCase$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaTitleCase$1_contains = ($this, $ch) => {
    return jl_Character_isTitleCase($ch);
};
function onns_NostrNIP46Signer$sign$lambda$_13_0() {
    jl_Object.call(this);
    this.$_0174 = null;
}
let onns_NostrNIP46Signer$sign$lambda$_13_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0174 = var$1;
},
onns_NostrNIP46Signer$sign$lambda$_13_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$sign$lambda$_13_0();
    onns_NostrNIP46Signer$sign$lambda$_13_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$sign$lambda$_13_0_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$sign$lambda$_13_0_apply(var$0, var$1);
},
onns_NostrNIP46Signer$sign$lambda$_13_0_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$sign$26(var$0.$_0174, var$1);
},
ju_Collections$_clinit_$lambda$_59_0 = $rt_classWithoutFields(),
ju_Collections$_clinit_$lambda$_59_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
ju_Collections$_clinit_$lambda$_59_0__init_0 = () => {
    let var_0 = new ju_Collections$_clinit_$lambda$_59_0();
    ju_Collections$_clinit_$lambda$_59_0__init_(var_0);
    return var_0;
},
onn_Nostr4jsModule = $rt_classWithoutFields(),
onn_Nostr4jsModule_$callClinit = () => {
    onn_Nostr4jsModule_$callClinit = $rt_eraseClinit(onn_Nostr4jsModule);
    onn_Nostr4jsModule__clinit_();
},
onn_Nostr4jsModule_init = () => {
    onn_Nostr4jsModule_$callClinit();
    onp_NGEUtils_setPlatform(onpt_TeaVMPlatform__init_0());
},
onn_Nostr4jsModule_init$exported$0 = () => {
    onn_Nostr4jsModule_$callClinit();
    onn_Nostr4jsModule_init();
},
onn_Nostr4jsModule__clinit_ = () => {
    return;
};
function onn_NostrRelay$beforeSendMessage$lambda$_16_0() {
    jl_Object.call(this);
    this.$_03 = null;
}
let onn_NostrRelay$beforeSendMessage$lambda$_16_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_03 = var$1;
},
onn_NostrRelay$beforeSendMessage$lambda$_16_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$beforeSendMessage$lambda$_16_0();
    onn_NostrRelay$beforeSendMessage$lambda$_16_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$beforeSendMessage$lambda$_16_0_run = var$0 => {
    onn_NostrRelay_lambda$beforeSendMessage$1(var$0.$_03);
},
jtc_Chronology = $rt_classWithoutFields(),
jtc_Chronology_CHRONOS_BY_ID = null,
jtc_Chronology_CHRONOS_BY_TYPE = null,
jtc_Chronology_$callClinit = () => {
    jtc_Chronology_$callClinit = $rt_eraseClinit(jtc_Chronology);
    jtc_Chronology__clinit_();
},
jtc_Chronology_from = $temporal => {
    let $obj;
    jtc_Chronology_$callClinit();
    ju_Objects_requireNonNull($temporal, $rt_s(532));
    $obj = $temporal.$query(jtt_TemporalQueries_chronology());
    if ($obj === null) {
        jtc_IsoChronology_$callClinit();
        $obj = jtc_IsoChronology_INSTANCE;
    }
    return $obj;
},
jtc_Chronology__init_ = $this => {
    jtc_Chronology_$callClinit();
    jl_Object__init_($this);
},
jtc_Chronology_updateResolveMap = ($this, $fieldValues, $field, $value) => {
    let $current, var$5, var$6, var$7, var$8;
    $current = $fieldValues.$get1($field);
    if ($current !== null && Long_ne($current.$longValue(), $value)) {
        var$5 = new jt_DateTimeException;
        var$6 = jl_String_valueOf($field);
        var$7 = jl_String_valueOf($field);
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append2(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(533)), var$6), 32), $current), $rt_s(534)), var$7), 32), $value);
        jt_DateTimeException__init_(var$5, jl_StringBuilder_toString(var$8));
        $rt_throw(var$5);
    }
    $fieldValues.$put1($field, jl_Long_valueOf($value));
},
jtc_Chronology_compareTo = ($this, $other) => {
    return ($this.$getId()).$compareTo0($other.$getId());
},
jtc_Chronology_equals = ($this, $obj) => {
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jtc_Chronology))
        return 0;
    return $this.$compareTo3($obj) ? 0 : 1;
},
jtc_Chronology_toString = $this => {
    return $this.$getId();
},
jtc_Chronology__clinit_ = () => {
    jtc_Chronology_CHRONOS_BY_ID = ju_HashMap__init_();
    jtc_Chronology_CHRONOS_BY_TYPE = ju_HashMap__init_();
};
function onn_NostrRelay$beforeSendMessage$lambda$_16_1() {
    jl_Object.call(this);
    this.$_088 = null;
}
let onn_NostrRelay$beforeSendMessage$lambda$_16_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_088 = var$1;
},
onn_NostrRelay$beforeSendMessage$lambda$_16_1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$beforeSendMessage$lambda$_16_1();
    onn_NostrRelay$beforeSendMessage$lambda$_16_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$beforeSendMessage$lambda$_16_1_run = var$0 => {
    onn_NostrRelay_lambda$beforeSendMessage$2(var$0.$_088);
};
function ju_LinkedHashMapIterator() {
    let a = this; jl_Object.call(a);
    a.$base0 = null;
    a.$reversed1 = 0;
    a.$expectedModCount1 = 0;
    a.$futureEntry1 = null;
    a.$currentEntry2 = null;
}
let ju_LinkedHashMapIterator__init_ = ($this, $base, $reversed) => {
    jl_Object__init_($this);
    $this.$base0 = $base;
    $this.$reversed1 = $reversed;
    $this.$expectedModCount1 = $base.$modCount0;
    $this.$futureEntry1 = !$reversed ? $base.$head0 : $base.$tail;
},
ju_LinkedHashMapIterator__init_0 = (var_0, var_1) => {
    let var_2 = new ju_LinkedHashMapIterator();
    ju_LinkedHashMapIterator__init_(var_2, var_0, var_1);
    return var_2;
},
ju_LinkedHashMapIterator_hasNext = $this => {
    return $this.$futureEntry1 === null ? 0 : 1;
},
ju_LinkedHashMapIterator_checkConcurrentMod = $this => {
    if ($this.$expectedModCount1 == $this.$base0.$modCount0)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
},
ju_LinkedHashMapIterator_makeNext = $this => {
    ju_LinkedHashMapIterator_checkConcurrentMod($this);
    if (!$this.$hasNext())
        $rt_throw(ju_NoSuchElementException__init_());
    $this.$currentEntry2 = $this.$futureEntry1;
    $this.$futureEntry1 = !$this.$reversed1 ? $this.$futureEntry1.$chainForward : $this.$futureEntry1.$chainBackward;
},
ju_LinkedHashMapIterator_remove = $this => {
    if ($this.$currentEntry2 === null)
        $rt_throw(jl_IllegalStateException__init_0());
    ju_LinkedHashMapIterator_checkConcurrentMod($this);
    $this.$base0.$removeLinkedEntry($this.$currentEntry2);
    $this.$currentEntry2 = null;
    $this.$expectedModCount1 = $this.$expectedModCount1 + 1 | 0;
};
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
let jnc_UnsupportedCharsetException__init_ = ($this, $charsetName) => {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName0 = $charsetName;
},
jnc_UnsupportedCharsetException__init_0 = var_0 => {
    let var_1 = new jnc_UnsupportedCharsetException();
    jnc_UnsupportedCharsetException__init_(var_1, var_0);
    return var_1;
};
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$029 = null;
}
let jur_AbstractCharClass$LazyJavaISOControl$1__init_ = ($this, $this$0) => {
    $this.$this$029 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaISOControl$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaISOControl$1();
    jur_AbstractCharClass$LazyJavaISOControl$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaISOControl$1_contains = ($this, $ch) => {
    return jl_Character_isISOControl($ch);
};
function onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0() {
    jl_Object.call(this);
    this.$_07 = null;
}
let onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_07 = var$1;
},
onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0();
    onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0_run = var$0 => {
    onn_NostrRelay_lambda$sendMessage$11(var$0.$_07);
};
function cjj_GZIPHeader() {
    let a = this; jl_Object.call(a);
    a.$text = 0;
    a.$fhcrc = 0;
    a.$time3 = Long_ZERO;
    a.$xflags = 0;
    a.$os = 0;
    a.$extra = null;
    a.$name1 = null;
    a.$comment = null;
    a.$hcrc = 0;
    a.$crc = Long_ZERO;
    a.$done = 0;
    a.$mtime = Long_ZERO;
}
let cjj_GZIPHeader__init_0 = $this => {
    jl_Object__init_($this);
    $this.$text = 0;
    $this.$fhcrc = 0;
    $this.$os = 255;
    $this.$done = 0;
    $this.$mtime = Long_ZERO;
},
cjj_GZIPHeader__init_ = () => {
    let var_0 = new cjj_GZIPHeader();
    cjj_GZIPHeader__init_0(var_0);
    return var_0;
},
cjj_GZIPHeader_setCRC = ($this, $crc) => {
    $this.$crc = $crc;
},
cjj_GZIPHeader_put = ($this, $d) => {
    let $flag, $xfl;
    $flag = 0;
    if ($this.$text)
        $flag = 1;
    if ($this.$fhcrc)
        $flag = $flag | 2;
    if ($this.$extra !== null)
        $flag = $flag | 4;
    if ($this.$name1 !== null)
        $flag = $flag | 8;
    if ($this.$comment !== null)
        $flag = $flag | 16;
    $xfl = 0;
    if ($d.$level == 1)
        $xfl = 4;
    else if ($d.$level == 9)
        $xfl = 2;
    cjj_Deflate_put_short($d, (-29921));
    cjj_Deflate_put_byte($d, 8);
    cjj_Deflate_put_byte($d, $flag << 24 >> 24);
    cjj_Deflate_put_byte($d, Long_lo($this.$mtime) << 24 >> 24);
    cjj_Deflate_put_byte($d, Long_lo(Long_shr($this.$mtime, 8)) << 24 >> 24);
    cjj_Deflate_put_byte($d, Long_lo(Long_shr($this.$mtime, 16)) << 24 >> 24);
    cjj_Deflate_put_byte($d, Long_lo(Long_shr($this.$mtime, 24)) << 24 >> 24);
    cjj_Deflate_put_byte($d, $xfl << 24 >> 24);
    cjj_Deflate_put_byte($d, $this.$os << 24 >> 24);
    if ($this.$extra !== null) {
        cjj_Deflate_put_byte($d, $this.$extra.data.length << 24 >> 24);
        cjj_Deflate_put_byte($d, $this.$extra.data.length >> 8 << 24 >> 24);
        cjj_Deflate_put_byte0($d, $this.$extra, 0, $this.$extra.data.length);
    }
    if ($this.$name1 !== null) {
        cjj_Deflate_put_byte0($d, $this.$name1, 0, $this.$name1.data.length);
        cjj_Deflate_put_byte($d, 0);
    }
    if ($this.$comment !== null) {
        cjj_Deflate_put_byte0($d, $this.$comment, 0, $this.$comment.data.length);
        cjj_Deflate_put_byte($d, 0);
    }
},
jus_Stream = $rt_classWithoutFields(0),
jus_Stream_of = $values => {
    return jusi_ArrayStreamImpl__init_0($values, 0, $values.data.length);
},
jusi_SimpleStreamImpl = $rt_classWithoutFields(),
jusi_SimpleStreamImpl__init_ = $this => {
    jl_Object__init_($this);
},
jusi_SimpleStreamImpl_filter = ($this, $predicate) => {
    return jusi_FilteringStreamImpl__init_0($this, $predicate);
},
jusi_SimpleStreamImpl_mapToInt = ($this, $mapper) => {
    return jusi_MappingToIntStreamImpl__init_0($this, $mapper);
},
jusi_SimpleStreamImpl_collect = ($this, $collector) => {
    let $collection, $accumulator, $hasMore;
    $collection = ($collector.$supplier()).$get8();
    $accumulator = $collector.$accumulator();
    while (true) {
        $hasMore = $this.$next1(jusi_SimpleStreamImpl$collect$lambda$_26_0__init_0($accumulator, $collection));
        if (!$hasMore)
            break;
    }
    return ($collector.$finisher()).$apply($collection);
},
jusi_SimpleStreamImpl_anyMatch = ($this, $predicate) => {
    let $consumer;
    $consumer = jusi_AnyMatchConsumer__init_0($predicate);
    while (!$consumer.$matched && $this.$next1($consumer)) {
    }
    return $consumer.$matched;
},
jusi_SimpleStreamImpl_findFirst = $this => {
    let $consumer;
    $consumer = jusi_FindFirstConsumer__init_0();
    while ($consumer.$result0 === null && $this.$next1($consumer)) {
    }
    return ju_Optional_ofNullable($consumer.$result0);
},
jusi_SimpleStreamImpl_lambda$collect$4 = ($accumulator, $collection, $e) => {
    $accumulator.$accept3($collection, $e);
    return 1;
};
function jusi_WrappingStreamImpl() {
    jusi_SimpleStreamImpl.call(this);
    this.$sourceStream = null;
}
let jusi_WrappingStreamImpl__init_ = ($this, $sourceStream) => {
    jusi_SimpleStreamImpl__init_($this);
    $this.$sourceStream = $sourceStream;
},
jusi_WrappingStreamImpl_next = ($this, $consumer) => {
    return $this.$sourceStream.$next1($this.$wrap3($consumer));
};
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index8 = 0;
}
let jur_AtomicFSet__init_ = ($this, $groupIndex) => {
    jur_FSet__init_($this, $groupIndex);
},
jur_AtomicFSet__init_0 = var_0 => {
    let var_1 = new jur_AtomicFSet();
    jur_AtomicFSet__init_(var_1, var_0);
    return var_1;
},
jur_AtomicFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    $this.$index8 = $stringIndex;
    return $stringIndex;
},
jur_AtomicFSet_getIndex = $this => {
    return $this.$index8;
},
jur_AtomicFSet_getName = $this => {
    return $rt_s(535);
},
jur_AtomicFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jn_JSBufferHelper = $rt_classWithoutFields(),
jn_JSBufferHelper_getArrayBufferView = $buffer => {
    let $provider, $result;
    if (!$rt_isInstance($buffer, jn_ArrayBufferViewProvider))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(536)));
    $provider = $buffer;
    $result = $provider.$getArrayBufferView();
    return $result;
},
jn_JSBufferHelper_toInt8Array = $view => {
    return new Int8Array($view.buffer, $view.byteOffset, $view.byteLength);
};
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
let jur_LowSurrogateCharSet__init_ = ($this, $low) => {
    jur_JointSet__init_($this);
    $this.$low = $low;
},
jur_LowSurrogateCharSet__init_0 = var_0 => {
    let var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_(var_1, var_0);
    return var_1;
},
jur_LowSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_LowSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $low = $testString.$charAt($stringIndex);
    if ($stringIndex > $matchResult.$getLeftBound()) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    if ($this.$low != $low)
        return (-1);
    return $this.$next5.$matches(var$4, $testString, $matchResult);
},
jur_LowSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = $testStr.$indexOf0($this.$low, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next5;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
},
jur_LowSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $startStr, $testStr, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$getLeftBound();
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf0($this.$low, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
                $lastIndex = var$7 + (-2) | 0;
                continue;
            }
            if ($this.$next5.$matches(var$7 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_LowSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$low;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_LowSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
},
jur_LowSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jl_Error = $rt_classWithoutFields(jl_Throwable),
jl_Error__init_ = $this => {
    jl_Throwable__init_($this);
},
jl_Error__init_5 = () => {
    let var_0 = new jl_Error();
    jl_Error__init_(var_0);
    return var_0;
},
jl_Error__init_0 = ($this, $message, $cause) => {
    jl_Throwable__init_0($this, $message, $cause);
},
jl_Error__init_3 = (var_0, var_1) => {
    let var_2 = new jl_Error();
    jl_Error__init_0(var_2, var_0, var_1);
    return var_2;
},
jl_Error__init_1 = ($this, $message) => {
    jl_Throwable__init_2($this, $message);
},
jl_Error__init_6 = var_0 => {
    let var_1 = new jl_Error();
    jl_Error__init_1(var_1, var_0);
    return var_1;
},
jl_Error__init_2 = ($this, $cause) => {
    jl_Throwable__init_1($this, $cause);
},
jl_Error__init_4 = var_0 => {
    let var_1 = new jl_Error();
    jl_Error__init_2(var_1, var_0);
    return var_1;
};
function onns_SdanTaxonomy$SdanTaxonomyTerm() {
    let a = this; jl_Record.call(a);
    a.$id4 = null;
    a.$parent1 = null;
    a.$name0 = null;
    a.$tier10 = null;
    a.$tier20 = null;
    a.$tier30 = null;
    a.$tier40 = null;
    a.$extension0 = null;
}
let onns_SdanTaxonomy$SdanTaxonomyTerm__init_0 = ($this, $id, $parent, $name, $tier1, $tier2, $tier3, $tier4, $extension) => {
    jl_Record__init_($this);
    $this.$id4 = $id;
    $this.$parent1 = $parent;
    $this.$name0 = $name;
    $this.$tier10 = $tier1;
    $this.$tier20 = $tier2;
    $this.$tier30 = $tier3;
    $this.$tier40 = $tier4;
    $this.$extension0 = $extension;
},
onns_SdanTaxonomy$SdanTaxonomyTerm__init_ = (var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) => {
    let var_8 = new onns_SdanTaxonomy$SdanTaxonomyTerm();
    onns_SdanTaxonomy$SdanTaxonomyTerm__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_term = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray(jl_String, 4);
    var$2 = var$1.data;
    var$2[0] = $this.$tier10;
    var$2[1] = $this.$tier20;
    var$2[2] = $this.$tier30;
    var$2[3] = $this.$tier40;
    var$3 = jus_Stream_of(var$1);
    var$4 = onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0__init_0();
    var$3 = var$3.$filter(var$4);
    var$3 = var$3.$collect(jus_Collectors_joining0($rt_s(469)));
    return var$3;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_toString = $this => {
    return ((((((((((((((((((jl_StringBuilder__init_1($rt_s(537))).$append1($rt_s(538))).$append($this.$id4)).$append1($rt_s(539))).$append($this.$parent1)).$append1($rt_s(540))).$append($this.$name0)).$append1($rt_s(541))).$append($this.$tier10)).$append1($rt_s(542))).$append($this.$tier20)).$append1($rt_s(543))).$append($this.$tier30)).$append1($rt_s(544))).$append($this.$tier40)).$append1($rt_s(545))).$append($this.$extension0)).$append1($rt_s(62))).$toString();
},
onns_SdanTaxonomy$SdanTaxonomyTerm_hashCode = $this => {
    return ((((((((((((((31 + ju_Objects_hashCode($this.$id4) | 0) * 31 | 0) + ju_Objects_hashCode($this.$parent1) | 0) * 31 | 0) + ju_Objects_hashCode($this.$name0) | 0) * 31 | 0) + ju_Objects_hashCode($this.$tier10) | 0) * 31 | 0) + ju_Objects_hashCode($this.$tier20) | 0) * 31 | 0) + ju_Objects_hashCode($this.$tier30) | 0) * 31 | 0) + ju_Objects_hashCode($this.$tier40) | 0) * 31 | 0) + ju_Objects_hashCode($this.$extension0) | 0;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_equals = ($this, $o) => {
    let var$2, var$3;
    a: {
        if ($this === $o)
            var$2 = 1;
        else if ($o !== null && jl_Object_getClass($o) === $rt_cls(onns_SdanTaxonomy$SdanTaxonomyTerm)) {
            var$3 = $o;
            if (!ju_Objects_equals($this.$id4, var$3.$id4)) {
                var$2 = 0;
                break a;
            }
            if (!ju_Objects_equals($this.$parent1, var$3.$parent1)) {
                var$2 = 0;
                break a;
            }
            if (!ju_Objects_equals($this.$name0, var$3.$name0)) {
                var$2 = 0;
                break a;
            }
            if (!ju_Objects_equals($this.$tier10, var$3.$tier10)) {
                var$2 = 0;
                break a;
            }
            if (!ju_Objects_equals($this.$tier20, var$3.$tier20)) {
                var$2 = 0;
                break a;
            }
            if (!ju_Objects_equals($this.$tier30, var$3.$tier30)) {
                var$2 = 0;
                break a;
            }
            if (!ju_Objects_equals($this.$tier40, var$3.$tier40)) {
                var$2 = 0;
                break a;
            }
            if (ju_Objects_equals($this.$extension0, var$3.$extension0)) {
                var$2 = 1;
                break a;
            }
            var$2 = 0;
        } else
            var$2 = 0;
    }
    return var$2;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_id = $this => {
    return $this.$id4;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_parent = $this => {
    return $this.$parent1;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_name = $this => {
    return $this.$name0;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier1 = $this => {
    return $this.$tier10;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier2 = $this => {
    return $this.$tier20;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier3 = $this => {
    return $this.$tier30;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier4 = $this => {
    return $this.$tier40;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_extension = $this => {
    return $this.$extension0;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_lambda$term$0 = $tier => {
    return $tier !== null && !$tier.$isEmpty() ? 1 : 0;
},
onns_SdanTaxonomy$SdanTaxonomyTerm_extension$exported$0 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_extension(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_toString$exported$1 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_toString(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_equals$exported$2 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onns_SdanTaxonomy$SdanTaxonomyTerm_equals(var$1, var$2);
},
onns_SdanTaxonomy$SdanTaxonomyTerm_term$exported$3 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_term(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_hashCode$exported$4 = var$1 => {
    return onns_SdanTaxonomy$SdanTaxonomyTerm_hashCode(var$1);
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier2$exported$5 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_tier2(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier3$exported$6 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_tier3(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier4$exported$7 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_tier4(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_id$exported$8 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_id(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm__init_$exported$9 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) => {
    return onns_SdanTaxonomy$SdanTaxonomyTerm__init_($rt_str(var$1), $rt_str(var$2), $rt_str(var$3), $rt_str(var$4), $rt_str(var$5), $rt_str(var$6), $rt_str(var$7), $rt_str(var$8));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_tier1$exported$10 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_tier1(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_parent$exported$11 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_parent(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_name$exported$12 = var$1 => {
    return $rt_ustr(onns_SdanTaxonomy$SdanTaxonomyTerm_name(var$1));
},
onns_SdanTaxonomy$SdanTaxonomyTerm_lambda$term$0$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return !!onns_SdanTaxonomy$SdanTaxonomyTerm_lambda$term$0($rt_str(var$1));
},
onnn_Nip49FailedException = $rt_classWithoutFields(jl_Exception),
onnn_Nip49FailedException__init_0 = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
onnn_Nip49FailedException__init_3 = var_0 => {
    let var_1 = new onnn_Nip49FailedException();
    onnn_Nip49FailedException__init_0(var_1, var_0);
    return var_1;
},
onnn_Nip49FailedException__init_2 = ($this, $message, $cause) => {
    jl_Exception__init_3($this, $message, $cause);
},
onnn_Nip49FailedException__init_ = (var_0, var_1) => {
    let var_2 = new onnn_Nip49FailedException();
    onnn_Nip49FailedException__init_2(var_2, var_0, var_1);
    return var_2;
},
onnn_Nip49FailedException__init_1 = ($this, $cause) => {
    jl_Exception__init_2($this, $cause);
},
onnn_Nip49FailedException__init_4 = var_0 => {
    let var_1 = new onnn_Nip49FailedException();
    onnn_Nip49FailedException__init_1(var_1, var_0);
    return var_1;
},
onnn_Nip49FailedException__init_$exported$0 = var$1 => {
    return onnn_Nip49FailedException__init_4(var$1);
},
onnn_Nip49FailedException__init_$exported$1 = var$1 => {
    return onnn_Nip49FailedException__init_3($rt_str(var$1));
},
onnn_Nip49FailedException__init_$exported$2 = (var$1, var$2) => {
    return onnn_Nip49FailedException__init_($rt_str(var$1), var$2);
},
jl_AssertionError = $rt_classWithoutFields(jl_Error),
jl_AssertionError__init_4 = $this => {
    jl_Error__init_($this);
},
jl_AssertionError__init_ = () => {
    let var_0 = new jl_AssertionError();
    jl_AssertionError__init_4(var_0);
    return var_0;
},
jl_AssertionError__init_3 = ($this, $message, $cause) => {
    jl_Error__init_0($this, $message, $cause);
},
jl_AssertionError__init_2 = (var_0, var_1) => {
    let var_2 = new jl_AssertionError();
    jl_AssertionError__init_3(var_2, var_0, var_1);
    return var_2;
},
jl_AssertionError__init_1 = ($this, $message) => {
    jl_Error__init_1($this, jl_String_valueOf($message));
},
jl_AssertionError__init_0 = var_0 => {
    let var_1 = new jl_AssertionError();
    jl_AssertionError__init_1(var_1, var_0);
    return var_1;
};
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier0 = null;
}
let jur_CompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
},
jur_CompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $min, $max, $i, $shift;
    $min = $this.$quantifier0.$min0();
    $max = $this.$quantifier0.$max0();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next5.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CompositeQuantifierSet_getName = $this => {
    return $this.$quantifier0.$toString();
},
jm_Division = $rt_classWithoutFields(),
jm_Division_divide = ($quot, $quotLength, $a, $j, $b, $bLength) => {
    let var$7, $normA, $normB, var$10, $divisorShift, var$12, $firstDivisorDigit, $i, var$15, $product, $res, $rem, $rOverflowed, var$20, var$21, var$22, $longR, var$24, $borrow, $carry, $k;
    var$7 = $b.data;
    $normA = $rt_createIntArray($j + 1 | 0);
    $normB = $rt_createIntArray($bLength + 1 | 0);
    var$10 = $bLength - 1 | 0;
    $divisorShift = jl_Integer_numberOfLeadingZeros(var$7[var$10]);
    if ($divisorShift) {
        jm_BitLevel_shiftLeft($normB, $b, 0, $divisorShift);
        jm_BitLevel_shiftLeft($normA, $a, 0, $divisorShift);
    } else {
        jl_System_fastArraycopy($a, 0, $normA, 0, $j);
        jl_System_fastArraycopy($b, 0, $normB, 0, $bLength);
    }
    var$12 = $normB.data;
    $firstDivisorDigit = var$12[var$10];
    $i = $quotLength - 1 | 0;
    while ($i >= 0) {
        a: {
            var$7 = $normA.data;
            if (var$7[$j] == $firstDivisorDigit)
                var$15 = (-1);
            else {
                $product = Long_add(Long_shl(Long_and(Long_fromInt(var$7[$j]), Long_create(4294967295, 0)), 32), Long_and(Long_fromInt(var$7[$j - 1 | 0]), Long_create(4294967295, 0)));
                $res = jm_Division_divideLongByInt($product, $firstDivisorDigit);
                var$15 = Long_lo($res);
                $rem = Long_hi($res);
                if (var$15) {
                    $rOverflowed = 0;
                    var$15 = var$15 + 1 | 0;
                    while (true) {
                        var$15 = var$15 + (-1) | 0;
                        if ($rOverflowed)
                            break;
                        var$20 = Long_mul(Long_and(Long_fromInt(var$15), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$12[$bLength - 2 | 0]), Long_create(4294967295, 0)));
                        var$21 = Long_fromInt($rem);
                        var$22 = Long_add(Long_shl(var$21, 32), Long_and(Long_fromInt(var$7[$j - 2 | 0]), Long_create(4294967295, 0)));
                        $longR = Long_add(Long_and(var$21, Long_create(4294967295, 0)), Long_and(Long_fromInt($firstDivisorDigit), Long_create(4294967295, 0)));
                        if (jl_Integer_numberOfLeadingZeros(Long_hi($longR)) >= 32)
                            $rem = Long_lo($longR);
                        else
                            $rOverflowed = 1;
                        if (Long_le(Long_xor(var$20, Long_create(0, 2147483648)), Long_xor(var$22, Long_create(0, 2147483648))))
                            break a;
                    }
                }
            }
        }
        if (var$15) {
            var$24 = $j - $bLength | 0;
            $borrow = jm_Division_multiplyAndSubtract($normA, var$24, $normB, $bLength, var$15);
            if ($borrow) {
                var$15 = var$15 + (-1) | 0;
                $carry = Long_ZERO;
                $k = 0;
                while ($k < $bLength) {
                    var$10 = var$24 + $k | 0;
                    var$21 = Long_add($carry, Long_add(Long_and(Long_fromInt(var$7[var$10]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$12[$k]), Long_create(4294967295, 0))));
                    var$7[var$10] = Long_lo(var$21);
                    $carry = Long_shru(var$21, 32);
                    $k = $k + 1 | 0;
                }
            }
        }
        if ($quot !== null)
            $quot.data[$i] = var$15;
        $j = $j + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    if ($divisorShift) {
        jm_BitLevel_shiftRight($normB, $bLength, $normA, 0, $divisorShift);
        return $normB;
    }
    jl_System_fastArraycopy($normA, 0, $normB, 0, $bLength);
    return $normA;
},
jm_Division_divideArrayByInt = ($dest, $src, $srcLength, $divisor) => {
    let $rem, $bLong, $i, var$8, $temp, $quot, $aPos, $bPos, var$13;
    $rem = Long_ZERO;
    $bLong = Long_and(Long_fromInt($divisor), Long_create(4294967295, 0));
    $i = $srcLength - 1 | 0;
    while ($i >= 0) {
        var$8 = $src.data;
        $temp = Long_or(Long_shl($rem, 32), Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)));
        if (Long_ge($temp, Long_ZERO)) {
            $quot = Long_div($temp, $bLong);
            $rem = Long_rem($temp, $bLong);
        } else {
            $aPos = Long_shru($temp, 1);
            $bPos = Long_fromInt($divisor >>> 1 | 0);
            $quot = Long_div($aPos, $bPos);
            var$13 = Long_rem($aPos, $bPos);
            $rem = Long_add(Long_shl(var$13, 1), Long_and($temp, Long_fromInt(1)));
            if ($divisor & 1) {
                if (Long_le($quot, $rem))
                    $rem = Long_sub($rem, $quot);
                else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                    $rem = Long_add($rem, Long_sub($bLong, $quot));
                    $quot = Long_sub($quot, Long_fromInt(1));
                } else {
                    $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                    $quot = Long_sub($quot, Long_fromInt(2));
                }
            }
        }
        $dest.data[$i] = Long_lo(Long_and($quot, Long_create(4294967295, 0)));
        $i = $i + (-1) | 0;
    }
    return Long_lo($rem);
},
jm_Division_divideLongByInt = ($a, $b) => {
    let $bLong, $quot, $rem, $aPos, $bPos;
    $bLong = Long_and(Long_fromInt($b), Long_create(4294967295, 0));
    if (Long_ge($a, Long_ZERO)) {
        $quot = Long_div($a, $bLong);
        $rem = Long_rem($a, $bLong);
    } else {
        $aPos = Long_shru($a, 1);
        $bPos = Long_fromInt($b >>> 1 | 0);
        $quot = Long_div($aPos, $bPos);
        $rem = Long_rem($aPos, $bPos);
        $rem = Long_add(Long_shl($rem, 1), Long_and($a, Long_fromInt(1)));
        if ($b & 1) {
            if (Long_le($quot, $rem))
                $rem = Long_sub($rem, $quot);
            else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                $rem = Long_add($rem, Long_sub($bLong, $quot));
                $quot = Long_sub($quot, Long_fromInt(1));
            } else {
                $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                $quot = Long_sub($quot, Long_fromInt(2));
            }
        }
    }
    return Long_or(Long_shl($rem, 32), Long_and($quot, Long_create(4294967295, 0)));
},
jm_Division_divideAndRemainderByInteger = ($val, $divisor, $divisorSign) => {
    let $valDigits, $valLen, $valSign, $quotientSign, $quotientDigits, $remainderDigits, $result0, $result1, $a, $b, $quo, $rem, var$16, var$17;
    $valDigits = $val.$digits0;
    $valLen = $val.$numberLength;
    $valSign = $val.$sign1;
    if ($valLen != 1) {
        $quotientSign = $valSign != $divisorSign ? (-1) : 1;
        $quotientDigits = $rt_createIntArray($valLen);
        $remainderDigits = $rt_createIntArray(1);
        $remainderDigits.data[0] = jm_Division_divideArrayByInt($quotientDigits, $valDigits, $valLen, $divisor);
        $result0 = jm_BigInteger__init_($quotientSign, $valLen, $quotientDigits);
        $result1 = jm_BigInteger__init_($valSign, 1, $remainderDigits);
        jm_BigInteger_cutOffLeadingZeroes($result0);
        jm_BigInteger_cutOffLeadingZeroes($result1);
        return $rt_wrapArray(jm_BigInteger, [$result0, $result1]);
    }
    $a = Long_and(Long_fromInt($valDigits.data[0]), Long_create(4294967295, 0));
    $b = Long_and(Long_fromInt($divisor), Long_create(4294967295, 0));
    $quo = Long_div($a, $b);
    $rem = Long_rem($a, $b);
    if ($valSign != $divisorSign)
        $quo = Long_neg($quo);
    if ($valSign < 0)
        $rem = Long_neg($rem);
    var$16 = $rt_createArray(jm_BigInteger, 2);
    var$17 = var$16.data;
    var$17[0] = jm_BigInteger_valueOf($quo);
    var$17[1] = jm_BigInteger_valueOf($rem);
    return var$16;
},
jm_Division_multiplyAndSubtract = ($a, $start, $b, $bLen, $c) => {
    let $carry0, $carry1, $i, var$9, var$10, var$11, var$12, var$13, var$14;
    $carry0 = Long_ZERO;
    $carry1 = Long_ZERO;
    $i = 0;
    while ($i < $bLen) {
        var$9 = $a.data;
        var$10 = jm_Multiplication_unsignedMultAddAdd($b.data[$i], $c, Long_lo($carry0), 0);
        var$11 = $start + $i | 0;
        var$12 = Long_add(Long_sub(Long_and(Long_fromInt(var$9[var$11]), Long_create(4294967295, 0)), Long_and(var$10, Long_create(4294967295, 0))), $carry1);
        var$9[var$11] = Long_lo(var$12);
        $carry1 = Long_shr(var$12, 32);
        $carry0 = Long_shru(var$10, 32);
        $i = $i + 1 | 0;
    }
    var$13 = $a.data;
    var$14 = $start + $bLen | 0;
    var$12 = Long_add(Long_sub(Long_and(Long_fromInt(var$13[var$14]), Long_create(4294967295, 0)), $carry0), $carry1);
    var$13[var$14] = Long_lo(var$12);
    return Long_hi(var$12);
},
jm_BitLevel = $rt_classWithoutFields(),
jm_BitLevel_bitLength = $val => {
    let $bLength, $highDigit, $i, var$5;
    if (!$val.$sign1)
        return 0;
    $bLength = $val.$numberLength << 5;
    $highDigit = $val.$digits0.data[$val.$numberLength - 1 | 0];
    if ($val.$sign1 < 0) {
        $i = $val.$getFirstNonzeroDigit();
        if ($i == ($val.$numberLength - 1 | 0))
            $highDigit = $highDigit + (-1) | 0;
    }
    var$5 = $bLength - jl_Integer_numberOfLeadingZeros($highDigit) | 0;
    return var$5;
},
jm_BitLevel_shiftLeft0 = ($source, $count) => {
    let $intCount, var$4, $resLength, $resDigits, $result;
    $intCount = $count >> 5;
    var$4 = $count & 31;
    $resLength = ($source.$numberLength + $intCount | 0) + (var$4 ? 1 : 0) | 0;
    $resDigits = $rt_createIntArray($resLength);
    jm_BitLevel_shiftLeft($resDigits, $source.$digits0, $intCount, var$4);
    $result = jm_BigInteger__init_($source.$sign1, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_BitLevel_shiftLeft = ($result, $source, $intCount, $count) => {
    let var$5, $rightShiftCount, $i, var$8, var$9, var$10;
    a: {
        if (!$count)
            jl_System_fastArraycopy($source, 0, $result, $intCount, $result.data.length - $intCount | 0);
        else {
            var$5 = $result.data;
            $rightShiftCount = 32 - $count | 0;
            $i = var$5.length - 1 | 0;
            var$5[$i] = 0;
            while (true) {
                if ($i <= $intCount)
                    break a;
                var$8 = $source.data;
                var$9 = var$5[$i];
                var$10 = ($i - $intCount | 0) - 1 | 0;
                var$5[$i] = var$9 | (var$8[var$10] >>> $rightShiftCount | 0);
                var$5[$i - 1 | 0] = var$8[var$10] << $count;
                $i = $i + (-1) | 0;
            }
        }
    }
    $i = 0;
    while ($i < $intCount) {
        $result.data[$i] = 0;
        $i = $i + 1 | 0;
    }
},
jm_BitLevel_shiftLeftOneBit = ($result, $source, $srcLen) => {
    let $carry, $i, var$6, $val;
    $carry = 0;
    $i = 0;
    while ($i < $srcLen) {
        var$6 = $result.data;
        $val = $source.data[$i];
        var$6[$i] = $val << 1 | $carry;
        $carry = $val >>> 31 | 0;
        $i = $i + 1 | 0;
    }
    if ($carry)
        $result.data[$srcLen] = $carry;
},
jm_BitLevel_shiftLeftOneBit0 = $source => {
    let $srcLen, $resLen, $resDigits, $result;
    $srcLen = $source.$numberLength;
    $resLen = $srcLen + 1 | 0;
    $resDigits = $rt_createIntArray($resLen);
    jm_BitLevel_shiftLeftOneBit($resDigits, $source.$digits0, $srcLen);
    $result = jm_BigInteger__init_($source.$sign1, $resLen, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_BitLevel_shiftRight0 = ($source, $count) => {
    let $intCount, var$4, var$5, $resLength, var$7, $resDigits, $i, var$10, var$11, var$12, $result;
    $intCount = $count >> 5;
    var$4 = $count & 31;
    if ($intCount >= $source.$numberLength) {
        if ($source.$sign1 >= 0) {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_ZERO;
        } else {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_MINUS_ONE;
        }
        return var$5;
    }
    a: {
        $resLength = $source.$numberLength - $intCount | 0;
        var$7 = $resLength + 1 | 0;
        $resDigits = $rt_createIntArray(var$7);
        jm_BitLevel_shiftRight($resDigits, $resLength, $source.$digits0, $intCount, var$4);
        if ($source.$sign1 >= 0)
            var$7 = $resLength;
        else {
            $i = 0;
            while (true) {
                var$10 = $rt_compare($i, $intCount);
                if (var$10 >= 0)
                    break;
                if ($source.$digits0.data[$i])
                    break;
                $i = $i + 1 | 0;
            }
            if (var$10 >= 0) {
                if (var$4 <= 0) {
                    var$7 = $resLength;
                    break a;
                }
                if (!($source.$digits0.data[$i] << (32 - var$4 | 0))) {
                    var$7 = $resLength;
                    break a;
                }
            }
            var$4 = 0;
            while (true) {
                var$11 = $rt_compare(var$4, $resLength);
                if (var$11 >= 0)
                    break;
                var$12 = $resDigits.data;
                if (var$12[var$4] != (-1))
                    break;
                var$12[var$4] = 0;
                var$4 = var$4 + 1 | 0;
            }
            if (var$11)
                var$7 = $resLength;
            var$12 = $resDigits.data;
            var$12[var$4] = var$12[var$4] + 1 | 0;
        }
    }
    $result = jm_BigInteger__init_($source.$sign1, var$7, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_BitLevel_shiftRight = ($result, $resultLen, $source, $intCount, $count) => {
    let $allZero, $i, var$8, $leftShiftCount, var$10, var$11, var$12;
    $allZero = 1;
    $i = 0;
    while ($i < $intCount) {
        $allZero = $allZero & ($source.data[$i] ? 0 : 1);
        $i = $i + 1 | 0;
    }
    if (!$count)
        jl_System_fastArraycopy($source, $intCount, $result, 0, $resultLen);
    else {
        var$8 = $source.data;
        $leftShiftCount = 32 - $count | 0;
        $allZero = $allZero & (var$8[$i] << $leftShiftCount ? 0 : 1);
        var$10 = 0;
        while (var$10 < ($resultLen - 1 | 0)) {
            var$11 = $result.data;
            var$12 = var$10 + $intCount | 0;
            var$11[var$10] = (var$8[var$12] >>> $count | 0) | var$8[var$12 + 1 | 0] << $leftShiftCount;
            var$10 = var$10 + 1 | 0;
        }
        $result.data[var$10] = var$8[var$10 + $intCount | 0] >>> $count | 0;
    }
    return $allZero;
};
function jur_SupplRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$chars = null;
    a.$alt0 = 0;
}
let jur_SupplRangeSet__init_ = ($this, $cc) => {
    jur_JointSet__init_($this);
    $this.$chars = $cc.$getInstance();
    $this.$alt0 = $cc.$alt;
},
jur_SupplRangeSet__init_0 = var_0 => {
    let var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_SupplRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $high, $offset, var$8, $low;
    $strLength = $matchResult.$getRightBound();
    if ($stringIndex < $strLength) {
        var$5 = $stringIndex + 1 | 0;
        $high = $testString.$charAt($stringIndex);
        if ($this.$contains0($high)) {
            $offset = $this.$next5.$matches(var$5, $testString, $matchResult);
            if ($offset > 0)
                return $offset;
        }
        if (var$5 < $strLength) {
            var$8 = var$5 + 1 | 0;
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains0(jl_Character_toCodePoint($high, $low)))
                return $this.$next5.$matches(var$8, $testString, $matchResult);
        }
    }
    return (-1);
},
jur_SupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(50)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_SupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars.$contains0($ch);
},
jur_SupplRangeSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return jur_AbstractCharClass_intersects0($this.$chars, $set.$getCodePoint());
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects0($this.$chars, $set.$getChar());
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$chars);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects($this.$chars, $set.$getChars());
},
jur_SupplRangeSet_getChars = $this => {
    return $this.$chars;
},
jur_SupplRangeSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_SupplRangeSet_hasConsumed = ($this, $mr) => {
    return 1;
};
function onnn_Nip01$update$lambda$_4_0() {
    jl_Object.call(this);
    this.$_0124 = null;
}
let onnn_Nip01$update$lambda$_4_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0124 = var$1;
},
onnn_Nip01$update$lambda$_4_0__init_0 = var_0 => {
    let var_1 = new onnn_Nip01$update$lambda$_4_0();
    onnn_Nip01$update$lambda$_4_0__init_(var_1, var_0);
    return var_1;
},
onnn_Nip01$update$lambda$_4_0_apply0 = (var$0, var$1) => {
    return onnn_Nip01$update$lambda$_4_0_apply(var$0, var$1);
},
onnn_Nip01$update$lambda$_4_0_apply = (var$0, var$1) => {
    return onnn_Nip01_lambda$update$1(var$0.$_0124, var$1);
};
function jl_String() {
    jl_Object.call(this);
    this.$hashCode8 = 0;
}
let jl_String_EMPTY_CHARS = null,
jl_String_EMPTY = null,
jl_String_CASE_INSENSITIVE_ORDER = null,
jl_String_$callClinit = () => {
    jl_String_$callClinit = $rt_eraseClinit(jl_String);
    jl_String__clinit_();
},
jl_String__init_4 = $this => {
    jl_String_$callClinit();
    jl_Object__init_($this);
    $this.$nativeString = "";
},
jl_String__init_6 = () => {
    let var_0 = new jl_String();
    jl_String__init_4(var_0);
    return var_0;
},
jl_String__init_3 = ($this, $characters) => {
    let var$2;
    jl_String_$callClinit();
    var$2 = $characters.data;
    jl_Object__init_($this);
    $this.$nativeString = $rt_charArrayToString($characters.data, 0, var$2.length);
},
jl_String__init_ = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_3(var_1, var_0);
    return var_1;
},
jl_String__init_5 = (var$0, var$1) => {
    var$0.$nativeString = var$1;
},
jl_String__init_1 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_5(var_1, var_0);
    return var_1;
},
jl_String__init_8 = (var$0, var$1, $offset, $count) => {
    let var$4;
    jl_String_$callClinit();
    var$4 = var$1.data;
    jl_Object__init_(var$0);
    ju_Objects_checkFromIndexSize($offset, $count, var$4.length);
    var$0.$nativeString = $rt_charArrayToString(var$1.data, $offset, $count);
},
jl_String__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jl_String();
    jl_String__init_8(var_3, var_0, var_1, var_2);
    return var_3;
},
jl_String_fromArray = $characters => {
    let $s;
    jl_String_$callClinit();
    $s = jl_String__init_6();
    $s.$nativeString = $rt_fullArrayToString($characters.data);
    return $s;
},
jl_String__init_7 = ($this, $bytes) => {
    let var$2, var$3;
    jl_String_$callClinit();
    var$2 = $bytes.data;
    jl_Object__init_($this);
    var$3 = var$2.length;
    jnci_UTF8Charset_$callClinit();
    jl_String_initWithBytes($this, $bytes, 0, var$3, jnci_UTF8Charset_INSTANCE);
},
jl_String__init_9 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_7(var_1, var_0);
    return var_1;
},
jl_String__init_0 = ($this, $bytes, $charset) => {
    let var$3;
    jl_String_$callClinit();
    var$3 = $bytes.data;
    jl_Object__init_($this);
    jl_String_initWithBytes($this, $bytes, 0, var$3.length, $charset);
},
jl_String__init_10 = (var_0, var_1) => {
    let var_2 = new jl_String();
    jl_String__init_0(var_2, var_0, var_1);
    return var_2;
},
jl_String_initWithBytes = ($this, $bytes, $offset, $length, $charset) => {
    let $buffer, $characters;
    $buffer = jnc_Charset_decode($charset, jn_ByteBuffer_wrap($bytes, $offset, $length));
    if (jn_CharBuffer_hasArray($buffer) && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        $characters = jn_CharBuffer_array($buffer);
    else {
        $characters = $rt_createCharArray(jn_Buffer_remaining($buffer));
        $buffer.$get9($characters);
    }
    $this.$nativeString = $rt_fullArrayToString($characters.data);
},
jl_String_charAt = ($this, $index) => {
    if ($index >= 0 && $index < $this.$nativeString.length)
        return $this.$nativeString.charCodeAt($index);
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_String_length = $this => {
    return $this.$nativeString.length;
},
jl_String_isEmpty = $this => {
    return $this.$nativeString.length ? 0 : 1;
},
jl_String_isBlank = $this => {
    let $i;
    $i = 0;
    while ($i < $this.$nativeString.length) {
        if ($this.$nativeString.charCodeAt($i) != 32)
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
jl_String_compareTo0 = ($this, $anotherString) => {
    let $l, $i, $a, $b, var$6;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min($this.$length(), $anotherString.$length());
    $i = 0;
    while (true) {
        if ($i >= $l)
            return $this.$length() - $anotherString.$length() | 0;
        $a = $this.$charAt($i);
        $b = $anotherString.$charAt($i);
        var$6 = $a - $b | 0;
        if (var$6)
            break;
        $i = $i + 1 | 0;
    }
    return var$6;
},
jl_String_compareToIgnoreCase = ($this, $anotherString) => {
    let $l, $i, $a, $b, var$6;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min($this.$length(), $anotherString.$length());
    $i = 0;
    while (true) {
        if ($i >= $l)
            return $this.$length() - $anotherString.$length() | 0;
        $a = jl_Character_toLowerCase($this.$charAt($i));
        $b = jl_Character_toLowerCase($anotherString.$charAt($i));
        var$6 = $a - $b | 0;
        if (var$6)
            break;
        $i = $i + 1 | 0;
    }
    return var$6;
},
jl_String_startsWith0 = ($this, $prefix, $toffset) => {
    let $i, var$4, var$5;
    if (($toffset + $prefix.$length() | 0) > $this.$length())
        return 0;
    $i = 0;
    while ($i < $prefix.$length()) {
        var$4 = $prefix.$charAt($i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != $this.$charAt($toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
},
jl_String_startsWith = ($this, $prefix) => {
    if ($this === $prefix)
        return 1;
    return $this.$startsWith0($prefix, 0);
},
jl_String_endsWith = ($this, $suffix) => {
    let $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$length() > $this.$length())
        return 0;
    $j = 0;
    $i = $this.$length() - $suffix.$length() | 0;
    while ($i < $this.$length()) {
        var$4 = $this.$charAt($i);
        var$5 = $j + 1 | 0;
        if (var$4 != $suffix.$charAt($j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
},
jl_String_indexOf1 = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$nativeString.length)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$nativeString.length - 1 | 0))
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $hi && $this.$nativeString.charCodeAt(($i + 1 | 0)) == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_indexOf0 = ($this, $ch) => {
    return $this.$indexOf0($ch, 0);
},
jl_String_lastIndexOf1 = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo, var$7;
    $i = jl_Math_min($fromIndex, $this.$length() - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $lo) {
            var$7 = $i - 1 | 0;
            if ($this.$nativeString.charCodeAt(var$7) == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return var$7;
},
jl_String_lastIndexOf0 = ($this, $ch) => {
    return $this.$lastIndexOf0($ch, $this.$length() - 1 | 0);
},
jl_String_indexOf = ($this, $str, $fromIndex) => {
    let $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = $this.$length() - $str.$length() | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_indexOf2 = ($this, $str) => {
    return $this.$indexOf1($str, 0);
},
jl_String_lastIndexOf = ($this, $str, $fromIndex) => {
    let $i, $j;
    $i = jl_Math_min($fromIndex, $this.$length() - $str.$length() | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
},
jl_String_substring = ($this, $beginIndex, $endIndex) => {
    let $length, var$4;
    $length = $this.$nativeString.length;
    var$4 = $rt_compare($beginIndex, $endIndex);
    if (!var$4)
        return jl_String_EMPTY;
    if (!$beginIndex && $endIndex == $length)
        return $this;
    if ($beginIndex >= 0 && var$4 <= 0 && $endIndex <= $length)
        return jl_String__init_1($this.$nativeString.substring($beginIndex, $endIndex));
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_String_substring0 = ($this, $beginIndex) => {
    return $this.$substring($beginIndex, $this.$length());
},
jl_String_subSequence = ($this, $beginIndex, $endIndex) => {
    return $this.$substring($beginIndex, $endIndex);
},
jl_String_concat = ($this, $str) => {
    let $buffer, $index, $i, var$5, var$6;
    if ($str.$isEmpty())
        return $this;
    if ($this.$isEmpty())
        return $str;
    $buffer = $rt_createCharArray($this.$length() + $str.$length() | 0);
    $index = 0;
    $i = 0;
    while ($i < $this.$length()) {
        var$5 = $buffer.data;
        var$6 = $index + 1 | 0;
        var$5[$index] = $this.$charAt($i);
        $i = $i + 1 | 0;
        $index = var$6;
    }
    $i = 0;
    while ($i < $str.$length()) {
        var$5 = $buffer.data;
        var$6 = $index + 1 | 0;
        var$5[$index] = $str.$charAt($i);
        $i = $i + 1 | 0;
        $index = var$6;
    }
    return jl_String_fromArray($buffer);
},
jl_String_replace0 = ($this, $oldChar, $newChar) => {
    let $buffer, $i, var$5;
    if ($oldChar == $newChar)
        return $this;
    $buffer = $rt_createCharArray($this.$length());
    $i = 0;
    while ($i < $this.$length()) {
        var$5 = $this.$charAt($i) != $oldChar ? $this.$charAt($i) : $newChar;
        $buffer.data[$i] = var$5;
        $i = $i + 1 | 0;
    }
    return jl_String_fromArray($buffer);
},
jl_String_replace = ($this, $target, $replacement) => {
    let $sb, $i, $sz, $j;
    if ($target === $replacement)
        return $this;
    if ($target.$isEmpty()) {
        $sb = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$length()) {
            $sb.$append($replacement);
            $sb.$append0($this.$charAt($i));
            $i = $i + 1 | 0;
        }
        $sb.$append($replacement);
        return $sb.$toString();
    }
    if ($target.$length() == 1 && $replacement.$length() == 1)
        return $this.$replace0($target.$charAt(0), $replacement.$charAt(0));
    $sb = jl_StringBuilder__init_();
    $sz = $this.$length() - $target.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= $target.$length()) {
                    $sb.$append($replacement);
                    $i = $i + ($target.$length() - 1 | 0) | 0;
                    break a;
                }
                if ($this.$charAt($i + $j | 0) != $target.$charAt($j))
                    break;
                $j = $j + 1 | 0;
            }
            $sb.$append0($this.$charAt($i));
        }
        $i = $i + 1 | 0;
    }
    $sb.$append($this.$substring0($i));
    return $sb.$toString();
},
jl_String_trim = $this => {
    let $lower, $upper;
    $lower = 0;
    $upper = $this.$length() - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if ($this.$charAt($lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && $this.$charAt($upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return $this.$substring($lower, $upper + 1 | 0);
},
jl_String_toString = $this => {
    return $this;
},
jl_String_toCharArray = $this => {
    let $array, $i, var$3;
    $array = $rt_createCharArray($this.$nativeString.length);
    $i = 0;
    while (true) {
        var$3 = $array.data;
        if ($i >= var$3.length)
            break;
        var$3[$i] = $this.$charAt($i);
        $i = $i + 1 | 0;
    }
    return $array;
},
jl_String_valueOf = $obj => {
    jl_String_$callClinit();
    return $obj === null ? $rt_s(94) : $obj.$toString();
},
jl_String_valueOf2 = $c => {
    let var$2, var$3;
    jl_String_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_3(var$2, var$3);
    return var$2;
},
jl_String_valueOf0 = $i => {
    jl_String_$callClinit();
    return ((jl_StringBuilder__init_()).$append3($i)).$toString();
},
jl_String_valueOf1 = $l => {
    jl_String_$callClinit();
    return ((jl_StringBuilder__init_()).$append13($l)).$toString();
},
jl_String_equals = ($this, $other) => {
    let $str;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    return $this.$nativeString !== $str.$nativeString ? 0 : 1;
},
jl_String_equalsIgnoreCase = ($this, $other) => {
    let $i;
    if ($this === $other)
        return 1;
    if ($other === null)
        return 0;
    if ($this.$length() != $other.$length())
        return 0;
    $i = 0;
    while ($i < $this.$length()) {
        if (jl_Character_toLowerCase($this.$charAt($i)) != jl_Character_toLowerCase($other.$charAt($i)))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
jl_String_getBytes = ($this, $charset) => {
    let $buffer, $result;
    $buffer = jnc_Charset_encode($charset, jn_CharBuffer_wrap($rt_fastStringToCharArray($this.$nativeString)));
    if (jn_ByteBuffer_hasArray($buffer) && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        return jn_ByteBuffer_array($buffer);
    $result = $rt_createByteArray(jn_Buffer_remaining($buffer));
    $buffer.$get5($result);
    return $result;
};
let jl_String_hashCode = $this => {
    let $i;
    a: {
        if (!$this.$hashCode8) {
            $i = 0;
            while (true) {
                if ($i >= $this.$nativeString.length)
                    break a;
                $this.$hashCode8 = (31 * $this.$hashCode8 | 0) + $this.$nativeString.charCodeAt($i) | 0;
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$hashCode8;
},
jl_String_toLowerCase0 = $this => {
    let $lowerCase;
    $lowerCase = $this.$nativeString.toLowerCase();
    if ($lowerCase !== $this.$nativeString)
        $this = jl_String__init_1($lowerCase);
    return $this;
},
jl_String_toLowerCase = ($this, $locale) => {
    let $upperCase;
    $upperCase = $this.$nativeString.toLocaleLowerCase((ju_Locale_toLanguageTag($locale)).$nativeString);
    if ($upperCase !== $this.$nativeString)
        $this = jl_String__init_1($upperCase);
    return $this;
},
jl_String_toUpperCase = $this => {
    let $upperCase;
    $upperCase = $this.$nativeString.toUpperCase();
    if ($upperCase !== $this.$nativeString)
        $this = jl_String__init_1($upperCase);
    return $this;
},
jl_String_split0 = ($this, $regex) => {
    return jur_Pattern_split0(jur_Pattern_compile($regex), $this.$toString());
},
jl_String_split = ($this, $regex, $limit) => {
    return jur_Pattern_split(jur_Pattern_compile($regex), $this.$toString(), $limit);
},
jl_String_join = ($delimiter, $elements) => {
    let $iter, $sb;
    jl_String_$callClinit();
    $iter = $elements.$iterator();
    if (!$iter.$hasNext())
        return $rt_s(23);
    $sb = jl_StringBuilder__init_();
    $sb.$append9($iter.$next());
    while ($iter.$hasNext()) {
        $sb.$append9($delimiter);
        $sb.$append9($iter.$next());
    }
    return $sb.$toString();
},
jl_String_compareTo = ($this, var$1) => {
    return $this.$compareTo0(var$1);
},
jl_String__clinit_ = () => {
    jl_String_EMPTY_CHARS = $rt_createCharArray(0);
    jl_String_EMPTY = jl_String__init_6();
    jl_String_CASE_INSENSITIVE_ORDER = jl_String$_clinit_$lambda$_115_0__init_0();
};
function onpt_TeaVMWebsocketTransport$connect$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_0148 = null;
    a.$_174 = null;
}
let onpt_TeaVMWebsocketTransport$connect$lambda$_2_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0148 = var$1;
    var$0.$_174 = var$2;
},
onpt_TeaVMWebsocketTransport$connect$lambda$_2_0__init_0 = (var_0, var_1) => {
    let var_2 = new onpt_TeaVMWebsocketTransport$connect$lambda$_2_0();
    onpt_TeaVMWebsocketTransport$connect$lambda$_2_0__init_(var_2, var_0, var_1);
    return var_2;
},
onpt_TeaVMWebsocketTransport$connect$lambda$_2_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMWebsocketTransport$connect$lambda$_2_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMWebsocketTransport$connect$lambda$_2_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMWebsocketTransport_lambda$connect$4(var$0.$_0148, var$0.$_174, var$1, var$2);
},
jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder),
jnci_UTF8Encoder__init_ = ($this, $cs) => {
    jnci_BufferedEncoder__init_($this, $cs, 2.0, 4.0);
},
jnci_UTF8Encoder__init_0 = var_0 => {
    let var_1 = new jnci_UTF8Encoder();
    jnci_UTF8Encoder__init_(var_1, var_0);
    return var_1;
},
jnci_UTF8Encoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $ch, var$12, var$13, var$14, $low, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(3))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$14 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                var$13 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $ch >> 6 & 63) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput0())
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                var$13 = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = var$13 + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = var$13 + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                var$9 = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$14 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                var$9 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                var$12 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = var$13;
            }
            $inPos = var$9;
            $outPos = var$12;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
},
onnrl_NostrRTCRoomPeerConnectedListener = $rt_classWithoutFields(0);
function cjj_ZStream() {
    let a = this; jl_Object.call(a);
    a.$next_in = null;
    a.$next_in_index = 0;
    a.$avail_in = 0;
    a.$total_in = Long_ZERO;
    a.$next_out = null;
    a.$next_out_index = 0;
    a.$avail_out = 0;
    a.$total_out = Long_ZERO;
    a.$msg = null;
    a.$dstate = null;
    a.$istate = null;
    a.$data_type0 = 0;
    a.$adler = null;
}
let cjj_ZStream__init_ = $this => {
    cjj_ZStream__init_0($this, cjj_Adler32__init_0());
},
cjj_ZStream__init_2 = () => {
    let var_0 = new cjj_ZStream();
    cjj_ZStream__init_(var_0);
    return var_0;
},
cjj_ZStream__init_0 = ($this, $adler) => {
    jl_Object__init_($this);
    $this.$adler = $adler;
},
cjj_ZStream__init_1 = var_0 => {
    let var_1 = new cjj_ZStream();
    cjj_ZStream__init_0(var_1, var_0);
    return var_1;
},
cjj_ZStream_flush_pending = $this => {
    let $len, var$2;
    $len = $this.$dstate.$pending;
    if ($len > $this.$avail_out)
        $len = $this.$avail_out;
    if (!$len)
        return;
    $this.$dstate.$pending_buf.data.length > $this.$dstate.$pending_out && $this.$next_out.data.length > $this.$next_out_index && $this.$dstate.$pending_buf.data.length >= ($this.$dstate.$pending_out + $len | 0) && $this.$next_out.data.length >= ($this.$next_out_index + $len | 0);
    jl_System_fastArraycopy($this.$dstate.$pending_buf, $this.$dstate.$pending_out, $this.$next_out, $this.$next_out_index, $len);
    $this.$next_out_index = $this.$next_out_index + $len | 0;
    var$2 = $this.$dstate;
    var$2.$pending_out = var$2.$pending_out + $len | 0;
    $this.$total_out = Long_add($this.$total_out, Long_fromInt($len));
    $this.$avail_out = $this.$avail_out - $len | 0;
    var$2 = $this.$dstate;
    var$2.$pending = var$2.$pending - $len | 0;
    if (!$this.$dstate.$pending)
        $this.$dstate.$pending_out = 0;
},
cjj_ZStream_read_buf = ($this, $buf, $start, $size) => {
    let $len;
    $len = $this.$avail_in;
    if ($len <= $size)
        $size = $len;
    if (!$size)
        return 0;
    $this.$avail_in = $this.$avail_in - $size | 0;
    if ($this.$dstate.$wrap10)
        $this.$adler.$update($this.$next_in, $this.$next_in_index, $size);
    jl_System_fastArraycopy($this.$next_in, $this.$next_in_index, $buf, $start, $size);
    $this.$next_in_index = $this.$next_in_index + $size | 0;
    $this.$total_in = Long_add($this.$total_in, Long_fromInt($size));
    return $size;
},
cjj_ZStream_setOutput = ($this, $buf, $off, $len) => {
    $this.$next_out = $buf;
    $this.$next_out_index = $off;
    $this.$avail_out = $len;
},
cjj_ZStream_setInput = ($this, $buf, $off, $len, $append) => {
    let $tmp_0;
    if ($len <= 0 && $append && $this.$next_in !== null)
        return;
    if ($this.$avail_in > 0 && $append) {
        $tmp_0 = $rt_createByteArray($this.$avail_in + $len | 0);
        jl_System_fastArraycopy($this.$next_in, $this.$next_in_index, $tmp_0, 0, $this.$avail_in);
        jl_System_fastArraycopy($buf, $off, $tmp_0, $this.$avail_in, $len);
        $this.$next_in = $tmp_0;
        $this.$next_in_index = 0;
        $this.$avail_in = $this.$avail_in + $len | 0;
    } else {
        $this.$next_in = $buf;
        $this.$next_in_index = $off;
        $this.$avail_in = $len;
    }
},
onpt_WebsocketTransport = $rt_classWithoutFields(0);
function onpt_TeaVMWebsocketTransport() {
    let a = this; jl_Object.call(a);
    a.$ws = null;
    a.$listeners3 = null;
    a.$maxMessageSize = 0;
    a.$aggregator = null;
    a.$platform0 = null;
}
let onpt_TeaVMWebsocketTransport_logger = null,
onpt_TeaVMWebsocketTransport_$callClinit = () => {
    onpt_TeaVMWebsocketTransport_$callClinit = $rt_eraseClinit(onpt_TeaVMWebsocketTransport);
    onpt_TeaVMWebsocketTransport__clinit_();
},
onpt_TeaVMWebsocketTransport__init_ = ($this, $platform) => {
    onpt_TeaVMWebsocketTransport_$callClinit();
    jl_Object__init_($this);
    $this.$listeners3 = juc_CopyOnWriteArrayList__init_();
    $this.$maxMessageSize = 1024;
    $this.$aggregator = jl_StringBuilder__init_();
    $this.$platform0 = $platform;
},
onpt_TeaVMWebsocketTransport__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMWebsocketTransport();
    onpt_TeaVMWebsocketTransport__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMWebsocketTransport_connect = ($this, $url) => {
    return $this.$platform0.$wrapPromise(onpt_TeaVMWebsocketTransport$connect$lambda$_2_0__init_0($this, $url));
},
onpt_TeaVMWebsocketTransport_close = ($this, $reason) => {
    return $this.$platform0.$wrapPromise(onpt_TeaVMWebsocketTransport$close$lambda$_3_0__init_0($this, $reason));
},
onpt_TeaVMWebsocketTransport_send = ($this, $message) => {
    return $this.$platform0.$wrapPromise(onpt_TeaVMWebsocketTransport$send$lambda$_4_0__init_0($this, $message));
},
onpt_TeaVMWebsocketTransport_addListener = ($this, $listener) => {
    $this.$listeners3.$add1($listener);
},
onpt_TeaVMWebsocketTransport_lambda$send$6 = ($this, $message, $res, $rej) => {
    let $e, $l, $sent, $sent_0, $chunk, $$je;
    a: {
        b: {
            c: {
                try {
                    if ($this.$ws !== null)
                        break c;
                    $rej.$accept0(ji_IOException__init_1($rt_s(546)));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            try {
                $l = $message.$length();
                $sent = 0;
                while (true) {
                    $sent_0 = jl_Math_min($sent + $this.$maxMessageSize | 0, $l);
                    $chunk = $message.$substring($sent, $sent_0);
                    $this.$ws.send($rt_ustr($chunk));
                    if ($sent_0 >= $l)
                        break;
                    $sent = $sent_0;
                }
                $res.$accept0(null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMWebsocketTransport_lambda$close$5 = ($this, $reason, $res, $rej) => {
    let $r, $wsToClose, var$6, $listener, $e, var$9, $$je;
    a: {
        try {
            if ($this.$ws === null)
                $res.$accept0(null);
            else {
                $r = $reason === null ? $rt_s(547) : $reason;
                $wsToClose = $this.$ws;
                $this.$ws = null;
                var$6 = $this.$listeners3.$iterator();
                while (var$6.$hasNext()) {
                    $listener = var$6.$next();
                    b: {
                        try {
                            $listener.$onConnectionClosedByClient($reason);
                            break b;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                $e = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        onpt_TeaVMWebsocketTransport_$callClinit();
                        var$9 = onpt_TeaVMWebsocketTransport_logger;
                        jul_Level_$callClinit();
                        var$9.$log(jul_Level_WARNING, $rt_s(548), $e);
                    }
                }
                $wsToClose.close(1000, $rt_ustr($r));
                $res.$accept0(null);
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMWebsocketTransport_lambda$connect$4 = ($this, $url, $res, $rej) => {
    let $e, $$je;
    a: {
        try {
            if ($this.$ws !== null)
                $res.$accept0(null);
            else {
                $this.$ws = new WebSocket($rt_ustr($url));
                $this.$ws.onopen = otji_JS_function(otji_JSWrapper_unwrap(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0__init_0($this, $res)), "handleEvent");
                $this.$ws.onmessage = otji_JS_function(otji_JSWrapper_unwrap(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1__init_0($this)), "handleEvent");
                $this.$ws.onclose = otji_JS_function(otji_JSWrapper_unwrap(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2__init_0($this)), "handleEvent");
                $this.$ws.onerror = otji_JS_function(otji_JSWrapper_unwrap(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3__init_0($rej)), "handleEvent");
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMWebsocketTransport_lambda$connect$3 = ($rej, $evt) => {
    onpt_TeaVMWebsocketTransport_$callClinit();
    $rej.$accept0(ji_IOException__init_1($rt_s(549)));
},
onpt_TeaVMWebsocketTransport_lambda$connect$2 = ($this, $closeEvent) => {
    let $reason, var$3, $listener;
    a: {
        $reason = $rt_str($closeEvent.reason);
        if ($this.$ws !== null) {
            $this.$ws = null;
            var$3 = $this.$listeners3.$iterator();
            while (true) {
                if (!var$3.$hasNext())
                    break a;
                $listener = var$3.$next();
                $listener.$onConnectionClosedByServer($reason);
            }
        }
    }
},
onpt_TeaVMWebsocketTransport_lambda$connect$1 = ($this, $evt) => {
    let $message, $fullMessage, var$4, $listener, $e, var$7, $$je;
    $message = $rt_str($evt.data);
    $this.$aggregator.$append1($message);
    $fullMessage = $this.$aggregator.$toString();
    var$4 = $this.$listeners3.$iterator();
    while (var$4.$hasNext()) {
        $listener = var$4.$next();
        a: {
            try {
                $listener.$onConnectionMessage($fullMessage);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onpt_TeaVMWebsocketTransport_$callClinit();
            var$7 = onpt_TeaVMWebsocketTransport_logger;
            jul_Level_$callClinit();
            var$7.$log(jul_Level_WARNING, $rt_s(550), $e);
        }
    }
    $this.$aggregator.$setLength(0);
},
onpt_TeaVMWebsocketTransport_lambda$connect$0 = ($this, $res, $evt) => {
    let var$3, $listener, $e, var$6, $$je;
    var$3 = $this.$listeners3.$iterator();
    while (var$3.$hasNext()) {
        $listener = var$3.$next();
        a: {
            try {
                $listener.$onConnectionOpen();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onpt_TeaVMWebsocketTransport_$callClinit();
            var$6 = onpt_TeaVMWebsocketTransport_logger;
            jul_Level_$callClinit();
            var$6.$log(jul_Level_WARNING, $rt_s(551), $e);
        }
    }
    $res.$accept0(null);
},
onpt_TeaVMWebsocketTransport__clinit_ = () => {
    onpt_TeaVMWebsocketTransport_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onpt_TeaVMWebsocketTransport)));
},
jtt_TemporalUnit = $rt_classWithoutFields(0);
function jtt_ChronoUnit() {
    let a = this; jl_Enum.call(a);
    a.$name9 = null;
    a.$duration0 = null;
}
let jtt_ChronoUnit_NANOS = null,
jtt_ChronoUnit_MICROS = null,
jtt_ChronoUnit_MILLIS = null,
jtt_ChronoUnit_SECONDS = null,
jtt_ChronoUnit_MINUTES = null,
jtt_ChronoUnit_HOURS = null,
jtt_ChronoUnit_HALF_DAYS = null,
jtt_ChronoUnit_DAYS = null,
jtt_ChronoUnit_WEEKS = null,
jtt_ChronoUnit_MONTHS = null,
jtt_ChronoUnit_YEARS = null,
jtt_ChronoUnit_DECADES = null,
jtt_ChronoUnit_CENTURIES = null,
jtt_ChronoUnit_MILLENNIA = null,
jtt_ChronoUnit_ERAS = null,
jtt_ChronoUnit_FOREVER = null,
jtt_ChronoUnit_$VALUES = null,
jtt_ChronoUnit_$callClinit = () => {
    jtt_ChronoUnit_$callClinit = $rt_eraseClinit(jtt_ChronoUnit);
    jtt_ChronoUnit__clinit_();
},
jtt_ChronoUnit_values = () => {
    jtt_ChronoUnit_$callClinit();
    return jtt_ChronoUnit_$VALUES.$clone0();
},
jtt_ChronoUnit__init_0 = ($this, var$1, var$2, $name, $estimatedDuration) => {
    jtt_ChronoUnit_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$name9 = $name;
    $this.$duration0 = $estimatedDuration;
},
jtt_ChronoUnit__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jtt_ChronoUnit();
    jtt_ChronoUnit__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jtt_ChronoUnit_addTo = ($this, $dateTime, $periodToAdd) => {
    return $dateTime.$plus2($periodToAdd, $this);
},
jtt_ChronoUnit_toString = $this => {
    return $this.$name9;
},
jtt_ChronoUnit_$values = () => {
    let var$1, var$2;
    jtt_ChronoUnit_$callClinit();
    var$1 = $rt_createArray(jtt_ChronoUnit, 16);
    var$2 = var$1.data;
    var$2[0] = jtt_ChronoUnit_NANOS;
    var$2[1] = jtt_ChronoUnit_MICROS;
    var$2[2] = jtt_ChronoUnit_MILLIS;
    var$2[3] = jtt_ChronoUnit_SECONDS;
    var$2[4] = jtt_ChronoUnit_MINUTES;
    var$2[5] = jtt_ChronoUnit_HOURS;
    var$2[6] = jtt_ChronoUnit_HALF_DAYS;
    var$2[7] = jtt_ChronoUnit_DAYS;
    var$2[8] = jtt_ChronoUnit_WEEKS;
    var$2[9] = jtt_ChronoUnit_MONTHS;
    var$2[10] = jtt_ChronoUnit_YEARS;
    var$2[11] = jtt_ChronoUnit_DECADES;
    var$2[12] = jtt_ChronoUnit_CENTURIES;
    var$2[13] = jtt_ChronoUnit_MILLENNIA;
    var$2[14] = jtt_ChronoUnit_ERAS;
    var$2[15] = jtt_ChronoUnit_FOREVER;
    return var$1;
},
jtt_ChronoUnit__clinit_ = () => {
    jtt_ChronoUnit_NANOS = jtt_ChronoUnit__init_($rt_s(552), 0, $rt_s(553), jt_Duration_ofNanos(Long_fromInt(1)));
    jtt_ChronoUnit_MICROS = jtt_ChronoUnit__init_($rt_s(554), 1, $rt_s(555), jt_Duration_ofNanos(Long_fromInt(1000)));
    jtt_ChronoUnit_MILLIS = jtt_ChronoUnit__init_($rt_s(556), 2, $rt_s(557), jt_Duration_ofNanos(Long_fromInt(1000000)));
    jtt_ChronoUnit_SECONDS = jtt_ChronoUnit__init_($rt_s(558), 3, $rt_s(559), jt_Duration_ofSeconds(Long_fromInt(1)));
    jtt_ChronoUnit_MINUTES = jtt_ChronoUnit__init_($rt_s(560), 4, $rt_s(561), jt_Duration_ofSeconds(Long_fromInt(60)));
    jtt_ChronoUnit_HOURS = jtt_ChronoUnit__init_($rt_s(562), 5, $rt_s(563), jt_Duration_ofSeconds(Long_fromInt(3600)));
    jtt_ChronoUnit_HALF_DAYS = jtt_ChronoUnit__init_($rt_s(564), 6, $rt_s(565), jt_Duration_ofSeconds(Long_fromInt(43200)));
    jtt_ChronoUnit_DAYS = jtt_ChronoUnit__init_($rt_s(566), 7, $rt_s(567), jt_Duration_ofSeconds(Long_fromInt(86400)));
    jtt_ChronoUnit_WEEKS = jtt_ChronoUnit__init_($rt_s(568), 8, $rt_s(569), jt_Duration_ofSeconds(Long_fromInt(604800)));
    jtt_ChronoUnit_MONTHS = jtt_ChronoUnit__init_($rt_s(570), 9, $rt_s(571), jt_Duration_ofSeconds(Long_fromInt(2629746)));
    jtt_ChronoUnit_YEARS = jtt_ChronoUnit__init_($rt_s(572), 10, $rt_s(573), jt_Duration_ofSeconds(Long_fromInt(31556952)));
    jtt_ChronoUnit_DECADES = jtt_ChronoUnit__init_($rt_s(574), 11, $rt_s(575), jt_Duration_ofSeconds(Long_fromInt(315569520)));
    jtt_ChronoUnit_CENTURIES = jtt_ChronoUnit__init_($rt_s(576), 12, $rt_s(577), jt_Duration_ofSeconds(Long_create(3155695200, 0)));
    jtt_ChronoUnit_MILLENNIA = jtt_ChronoUnit__init_($rt_s(578), 13, $rt_s(579), jt_Duration_ofSeconds(Long_create(1492180928, 7)));
    jtt_ChronoUnit_ERAS = jtt_ChronoUnit__init_($rt_s(580), 14, $rt_s(581), jt_Duration_ofSeconds(Long_create(1915187200, 7347425)));
    jtt_ChronoUnit_FOREVER = jtt_ChronoUnit__init_($rt_s(582), 15, $rt_s(583), jt_Duration_ofSeconds0(Long_create(4294967295, 2147483647), Long_fromInt(999999999)));
    jtt_ChronoUnit_$VALUES = jtt_ChronoUnit_$values();
},
jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset),
jnci_UTF8Charset_INSTANCE = null,
jnci_UTF8Charset_$callClinit = () => {
    jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
    jnci_UTF8Charset__clinit_();
},
jnci_UTF8Charset__init_0 = $this => {
    jnci_UTF8Charset_$callClinit();
    jnc_Charset__init_($this, $rt_s(584), $rt_createArray(jl_String, 0));
},
jnci_UTF8Charset__init_ = () => {
    let var_0 = new jnci_UTF8Charset();
    jnci_UTF8Charset__init_0(var_0);
    return var_0;
},
jnci_UTF8Charset_newDecoder = $this => {
    return jnci_UTF8Decoder__init_0($this);
},
jnci_UTF8Charset_newEncoder = $this => {
    return jnci_UTF8Encoder__init_0($this);
},
jnci_UTF8Charset__clinit_ = () => {
    jnci_UTF8Charset_INSTANCE = jnci_UTF8Charset__init_();
};
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
let jur_MultiLineEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter = $counter;
},
jur_MultiLineEOLSet__init_0 = var_0 => {
    let var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_MultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif, $ch1, $ch2;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if (!$strDif) {
        $matchResult.$setConsumed($this.$consCounter, 0);
        return $this.$next5.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = 97;
    } else {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = $testString.$charAt($strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next5.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $matchResult.$setConsumed($this.$consCounter, 0);
                return $this.$next5.$matches($strIndex, $testString, $matchResult);
            }
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next5.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
},
jur_MultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter, (-1));
    return $res;
},
jur_MultiLineEOLSet_getName = $this => {
    return $rt_s(585);
},
jl_ReflectiveOperationException = $rt_classWithoutFields(jl_Exception),
jl_ReflectiveOperationException__init_ = $this => {
    jl_Exception__init_1($this);
},
jl_ReflectiveOperationException__init_0 = () => {
    let var_0 = new jl_ReflectiveOperationException();
    jl_ReflectiveOperationException__init_(var_0);
    return var_0;
},
jl_ClassNotFoundException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jl_ClassNotFoundException__init_ = $this => {
    jl_ReflectiveOperationException__init_($this);
},
jl_ClassNotFoundException__init_0 = () => {
    let var_0 = new jl_ClassNotFoundException();
    jl_ClassNotFoundException__init_(var_0);
    return var_0;
};
function onnu_ScheduledAction() {
    let a = this; jl_Object.call(a);
    a.$timestamp0 = Long_ZERO;
    a.$action = null;
}
let onnu_ScheduledAction__init_ = ($this, $timestamp, $action) => {
    jl_Object__init_($this);
    $this.$timestamp0 = $timestamp;
    $this.$action = $action;
},
onnu_ScheduledAction__init_0 = (var_0, var_1) => {
    let var_2 = new onnu_ScheduledAction();
    onnu_ScheduledAction__init_(var_2, var_0, var_1);
    return var_2;
},
onnu_ScheduledAction__init_$exported$0 = (var$1, var$2) => {
    return onnu_ScheduledAction__init_0(var$1, var$2);
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState = $rt_classWithoutFields(jl_Enum),
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_ONLINE = null,
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_OFFLINE = null,
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$VALUES = null,
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit = () => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit = $rt_eraseClinit(onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState);
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__clinit_();
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_values = () => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    return onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$VALUES.$clone0();
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_valueOf = $name => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    return jl_Enum_valueOf($rt_cls(onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState), $name);
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_0 = ($this, var$1, var$2) => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_ = (var_0, var_1) => {
    let var_2 = new onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState();
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_0(var_2, var_0, var_1);
    return var_2;
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$values = () => {
    let var$1, var$2;
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    var$1 = $rt_createArray(onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState, 2);
    var$2 = var$1.data;
    var$2[0] = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_ONLINE;
    var$2[1] = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_OFFLINE;
    return var$1;
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__clinit_ = () => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_ONLINE = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_($rt_s(586), 0);
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_OFFLINE = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_($rt_s(587), 1);
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$VALUES = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$values();
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_$exported$0 = (var$1, var$2) => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    return onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_($rt_str(var$1), var$2);
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_values$exported$0 = () => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_values());
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_valueOf$exported$1 = var$1 => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_valueOf($rt_str(var$1));
},
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$values$exported$2 = () => {
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$values());
};
function juz_Inflater() {
    let a = this; jl_Object.call(a);
    a.$finished3 = 0;
    a.$nowrap0 = 0;
    a.$inLength = 0;
    a.$inRead = 0;
    a.$needsDictionary = 0;
    a.$impl0 = null;
}
let juz_Inflater__init_0 = $this => {
    juz_Inflater__init_($this, 0);
},
juz_Inflater__init_1 = () => {
    let var_0 = new juz_Inflater();
    juz_Inflater__init_0(var_0);
    return var_0;
},
juz_Inflater__init_ = ($this, $noHeader) => {
    let $$je;
    jl_Object__init_($this);
    $this.$nowrap0 = $noHeader;
    a: {
        try {
            $this.$impl0 = cjj_Inflater__init_1($noHeader);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof cjj_GZIPException) {
            } else {
                throw $$e;
            }
        }
    }
},
juz_Inflater__init_2 = var_0 => {
    let var_1 = new juz_Inflater();
    juz_Inflater__init_(var_1, var_0);
    return var_1;
},
juz_Inflater_end = $this => {
    $this.$inRead = 0;
    $this.$inLength = 0;
    $this.$impl0 = null;
},
juz_Inflater_finished = $this => {
    return $this.$finished3;
},
juz_Inflater_inflate0 = ($this, $buf) => {
    return $this.$inflate($buf, 0, $buf.data.length);
},
juz_Inflater_inflate = ($this, $buf, $off, $nbytes) => {
    let var$4, $lastInSize, $lastOutSize, $neededDict, $errCode, var$9, var$10;
    var$4 = $buf.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        if ($this.$impl0 === null)
            $rt_throw(jl_IllegalStateException__init_0());
        a: {
            $lastInSize = $this.$impl0.$total_in;
            $lastOutSize = $this.$impl0.$total_out;
            $neededDict = $this.$needsDictionary;
            $this.$needsDictionary = 0;
            $this.$impl0.$setOutput($buf, $off, $nbytes);
            $errCode = cjj_Inflater_inflate($this.$impl0, 0);
            switch ($errCode) {
                case 0:
                    break a;
                case 1:
                    $this.$finished3 = 1;
                    break a;
                case 2:
                    $this.$needsDictionary = 1;
                    break a;
                default:
            }
            var$9 = new juz_DataFormatException;
            var$10 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(var$10, $rt_s(588)), $errCode);
            juz_DataFormatException__init_(var$9, jl_StringBuilder_toString(var$10));
            $rt_throw(var$9);
        }
        if ($this.$needsDictionary && $neededDict)
            $rt_throw(juz_DataFormatException__init_1());
        $this.$inRead = Long_lo(Long_add(Long_fromInt($this.$inRead), Long_sub($this.$impl0.$total_in, $lastInSize)));
        return Long_lo(Long_sub($this.$impl0.$total_out, $lastOutSize));
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
},
juz_Inflater_setInput = ($this, $buf) => {
    $this.$setInput($buf, 0, $buf.data.length);
},
juz_Inflater_setInput0 = ($this, $buf, $off, $nbytes) => {
    let var$4;
    if ($this.$impl0 === null)
        $rt_throw(jl_IllegalStateException__init_0());
    var$4 = $buf.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        $this.$inRead = 0;
        $this.$inLength = $nbytes;
        $this.$impl0.$setInput0($buf, $off, $nbytes, 0);
        return;
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
},
onnn_Nip49 = $rt_classWithoutFields(),
onnn_Nip49_HRP = null,
onnn_Nip49_executor = null,
onnn_Nip49_$assertionsDisabled = 0,
onnn_Nip49_$callClinit = () => {
    onnn_Nip49_$callClinit = $rt_eraseClinit(onnn_Nip49);
    onnn_Nip49__clinit_();
},
onnn_Nip49__init_ = $this => {
    onnn_Nip49_$callClinit();
    jl_Object__init_($this);
},
onnn_Nip49__init_0 = () => {
    let var_0 = new onnn_Nip49();
    onnn_Nip49__init_(var_0);
    return var_0;
},
onnn_Nip49_getApproximatedMemoryRequirement = $logn => {
    let $n, $bytes;
    onnn_Nip49_$callClinit();
    $n = Long_fromInt(1 << $logn);
    $bytes = Long_mul(Long_mul(Long_fromInt(128), $n), Long_fromInt(8));
    return $bytes;
},
onnn_Nip49_encryptSync0 = ($priv, $password) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_encryptSync($priv, $password, 16, 269484032);
},
onnn_Nip49_isEncrypted = $bech32 => {
    onnn_Nip49_$callClinit();
    return $bech32.$startsWith($rt_s(589));
},
onnn_Nip49_encryptSync = ($priv, $password, $logn, $memoryLimitBytes) => {
    let $platform, $privateKey, var$7, $normalizedPassword, $salt, $keySecurityByte, $nonce, $versionNumber, $n, $symmetricKey, var$15, var$16, $associatedData, var$18, $cipherText, var$20, $concat, $e, $$je;
    onnn_Nip49_$callClinit();
    a: {
        try {
            $platform = onp_NGEPlatform_get();
            $privateKey = onnk_NostrPrivateKey__array($priv);
            if ($logn < 1)
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(590)));
            if (Long_gt(onnn_Nip49_getApproximatedMemoryRequirement($logn), Long_fromInt($memoryLimitBytes)))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(591)));
            var$7 = $platform.$nfkc($password);
            jnc_StandardCharsets_$callClinit();
            $normalizedPassword = var$7.$getBytes(jnc_StandardCharsets_UTF_8);
            $salt = $platform.$randomBytes(16);
            $keySecurityByte = jl_Enum_ordinal(onnk_NostrPrivateKey_getKeySecurity($priv)) << 24 >> 24;
            $nonce = $platform.$randomBytes(24);
            $versionNumber = 2;
            $n = 1 << $logn;
            $symmetricKey = $platform.$scrypt($normalizedPassword, $salt, $n, 8, 1, 32);
            if (!onnn_Nip49_$assertionsDisabled && $symmetricKey.data.length != 32)
                $rt_throw(jl_AssertionError__init_());
            var$15 = $nonce.data;
            var$16 = $salt.data;
            $associatedData = $rt_createByteArray(1);
            var$18 = $associatedData.data;
            var$18[0] = $keySecurityByte;
            $cipherText = $platform.$xchacha20poly1305($symmetricKey, $nonce, $privateKey, $associatedData, 1);
            var$20 = $cipherText.data;
            $concat = jn_ByteBuffer_allocate((((2 + var$16.length | 0) + var$15.length | 0) + var$18.length | 0) + var$20.length | 0);
            $concat.$put4($versionNumber);
            $concat.$put4($logn << 24 >> 24);
            jn_ByteBuffer_put($concat, $salt);
            jn_ByteBuffer_put($concat, $nonce);
            jn_ByteBuffer_put($concat, $associatedData);
            jn_ByteBuffer_put($concat, $cipherText);
            if (!onnn_Nip49_$assertionsDisabled && jn_Buffer_position($concat) != jn_Buffer_limit($concat))
                $rt_throw(jl_AssertionError__init_());
            jn_ByteBuffer_flip($concat);
            var$7 = onnu_Bech32_bech32Encode(onnn_Nip49_HRP, $concat);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$7;
    }
    $rt_throw(onnn_Nip49FailedException__init_($rt_s(592), $e));
},
onnn_Nip49_decryptSync0 = ($ncryptsec, $password) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_decryptSync($ncryptsec, $password, 269484032);
},
onnn_Nip49_decryptSync = ($ncryptsec, $password, $memoryLimitBytes) => {
    let $platform, var$5, $normalizedPassword, $decoded, $versionNumber, $logn, $salt, $nonce, $associatedData, var$13, $keySecurityByte, $keySecurity, $n, $symmetricKey, $cipherText, $privateKey, $priv, $e, $$je;
    onnn_Nip49_$callClinit();
    a: {
        try {
            $platform = onp_NGEPlatform_get();
            if (!$ncryptsec.$startsWith($rt_s(589)))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(593)));
            var$5 = $platform.$nfkc($password);
            jnc_StandardCharsets_$callClinit();
            $normalizedPassword = var$5.$getBytes(jnc_StandardCharsets_UTF_8);
            $decoded = onnu_Bech32_bech32Decode($ncryptsec);
            if (jn_Buffer_remaining($decoded) < 1)
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(594)));
            $versionNumber = $decoded.$get11();
            if ($versionNumber != 2)
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(595)));
            $logn = $decoded.$get11();
            if (!($logn >= 1 && $logn <= 30))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(596)));
            $salt = $rt_createByteArray(16);
            $decoded.$get5($salt);
            $nonce = $rt_createByteArray(24);
            $decoded.$get5($nonce);
            $associatedData = $rt_createByteArray(1);
            var$13 = $associatedData.data;
            $decoded.$get5($associatedData);
            $keySecurityByte = var$13[0];
            $keySecurity = (onnk_NostrPrivateKey$KeySecurity_values()).data[$keySecurityByte];
            if (Long_gt(onnn_Nip49_getApproximatedMemoryRequirement($logn), Long_fromInt($memoryLimitBytes)))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(591)));
            $n = 1 << $logn;
            $symmetricKey = $platform.$scrypt($normalizedPassword, $salt, $n, 8, 1, 32);
            if (!onnn_Nip49_$assertionsDisabled && $symmetricKey.data.length != 32)
                $rt_throw(jl_AssertionError__init_());
            $cipherText = $rt_createByteArray(jn_Buffer_remaining($decoded));
            $decoded.$get5($cipherText);
            $privateKey = $platform.$xchacha20poly1305($symmetricKey, $nonce, $cipherText, $associatedData, 0);
            if ($privateKey === null)
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(597)));
            if ($privateKey.data.length != 32)
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(598)));
            $priv = onnk_NostrPrivateKey_fromBytes($privateKey);
            onnk_NostrPrivateKey_setKeySecurity($priv, $keySecurity);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $priv;
    }
    $rt_throw(onnn_Nip49FailedException__init_($rt_s(599), $e));
},
onnn_Nip49_encrypt = ($priv, $password) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_encrypt0($priv, $password, 16, 269484032);
},
onnn_Nip49_decrypt = ($ncryptsec, $password) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_decrypt0($ncryptsec, $password, 269484032);
},
onnn_Nip49_decrypt0 = ($ncryptsec, $password, $memoryLimitBytes) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_executor.$run0(onnn_Nip49$decrypt$lambda$_9_0__init_0($ncryptsec, $password, $memoryLimitBytes));
},
onnn_Nip49_encrypt0 = ($priv, $password, $logn, $memoryLimitBytes) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_executor.$run0(onnn_Nip49$encrypt$lambda$_10_0__init_0($priv, $password, $logn, $memoryLimitBytes));
},
onnn_Nip49_lambda$encrypt$1 = ($priv, $password, $logn, $memoryLimitBytes) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_encryptSync($priv, $password, $logn, $memoryLimitBytes);
},
onnn_Nip49_lambda$decrypt$0 = ($ncryptsec, $password, $memoryLimitBytes) => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49_decryptSync($ncryptsec, $password, $memoryLimitBytes);
},
onnn_Nip49__clinit_ = () => {
    onnn_Nip49_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnn_Nip49)) ? 0 : 1;
    jnc_StandardCharsets_$callClinit();
    onnn_Nip49_HRP = $rt_s(589).$getBytes(jnc_StandardCharsets_UTF_8);
    onnn_Nip49_executor = (onp_NGEPlatform_get()).$newAsyncExecutor($rt_cls(onnn_Nip49));
},
onnn_Nip49__init_$exported$0 = () => {
    onnn_Nip49_$callClinit();
    return onnn_Nip49__init_0();
},
onnn_Nip49_getApproximatedMemoryRequirement$exported$0 = var$1 => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_getApproximatedMemoryRequirement(var$1);
},
onnn_Nip49_encryptSync$exported$1 = (var$1, var$2) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip49_encryptSync0(var$1, $rt_str(var$2)));
},
onnn_Nip49_isEncrypted$exported$2 = var$1 => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onnn_Nip49_isEncrypted($rt_str(var$1));
},
onnn_Nip49_encryptSync$exported$3 = (var$1, var$2, var$3, var$4) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip49_encryptSync(var$1, $rt_str(var$2), var$3, var$4));
},
onnn_Nip49_decryptSync$exported$4 = (var$1, var$2) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_decryptSync0($rt_str(var$1), $rt_str(var$2));
},
onnn_Nip49_decryptSync$exported$5 = (var$1, var$2, var$3) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_decryptSync($rt_str(var$1), $rt_str(var$2), var$3);
},
onnn_Nip49_encrypt$exported$6 = (var$1, var$2) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_encrypt(var$1, $rt_str(var$2));
},
onnn_Nip49_decrypt$exported$7 = (var$1, var$2) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_decrypt($rt_str(var$1), $rt_str(var$2));
},
onnn_Nip49_decrypt$exported$8 = (var$1, var$2, var$3) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_decrypt0($rt_str(var$1), $rt_str(var$2), var$3);
},
onnn_Nip49_encrypt$exported$9 = (var$1, var$2, var$3, var$4) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_encrypt0(var$1, $rt_str(var$2), var$3, var$4);
},
onnn_Nip49_lambda$encrypt$1$exported$10 = (var$1, var$2, var$3, var$4) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_Nip49_lambda$encrypt$1(var$1, $rt_str(var$2), var$3, var$4));
},
onnn_Nip49_lambda$decrypt$0$exported$11 = (var$1, var$2, var$3) => {
    onnn_Nip49_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip49_lambda$decrypt$0($rt_str(var$1), $rt_str(var$2), var$3);
};
function ju_HashMap$AbstractMapIterator() {
    let a = this; jl_Object.call(a);
    a.$position5 = 0;
    a.$expectedModCount0 = 0;
    a.$futureEntry0 = null;
    a.$currentEntry = null;
    a.$prevEntry0 = null;
    a.$associatedMap0 = null;
}
let ju_HashMap$AbstractMapIterator__init_ = ($this, $hm) => {
    jl_Object__init_($this);
    $this.$associatedMap0 = $hm;
    $this.$expectedModCount0 = $hm.$modCount0;
    $this.$futureEntry0 = null;
},
ju_HashMap$AbstractMapIterator__init_0 = var_0 => {
    let var_1 = new ju_HashMap$AbstractMapIterator();
    ju_HashMap$AbstractMapIterator__init_(var_1, var_0);
    return var_1;
},
ju_HashMap$AbstractMapIterator_hasNext = $this => {
    if ($this.$futureEntry0 !== null)
        return 1;
    while ($this.$position5 < $this.$associatedMap0.$elementData.data.length) {
        if ($this.$associatedMap0.$elementData.data[$this.$position5] !== null)
            return 1;
        $this.$position5 = $this.$position5 + 1 | 0;
    }
    return 0;
},
ju_HashMap$AbstractMapIterator_checkConcurrentMod = $this => {
    if ($this.$expectedModCount0 == $this.$associatedMap0.$modCount0)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
},
ju_HashMap$AbstractMapIterator_makeNext = $this => {
    let var$1, var$2;
    ju_HashMap$AbstractMapIterator_checkConcurrentMod($this);
    if (!$this.$hasNext())
        $rt_throw(ju_NoSuchElementException__init_());
    if ($this.$futureEntry0 === null) {
        var$1 = $this.$associatedMap0.$elementData.data;
        var$2 = $this.$position5;
        $this.$position5 = var$2 + 1 | 0;
        $this.$currentEntry = var$1[var$2];
        $this.$futureEntry0 = $this.$currentEntry.$next6;
        $this.$prevEntry0 = null;
    } else {
        if ($this.$currentEntry !== null)
            $this.$prevEntry0 = $this.$currentEntry;
        $this.$currentEntry = $this.$futureEntry0;
        $this.$futureEntry0 = $this.$futureEntry0.$next6;
    }
},
ju_HashMap$AbstractMapIterator_remove = $this => {
    let $index, var$2;
    ju_HashMap$AbstractMapIterator_checkConcurrentMod($this);
    if ($this.$currentEntry === null)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($this.$prevEntry0 !== null)
        $this.$prevEntry0.$next6 = $this.$currentEntry.$next6;
    else {
        $index = $this.$currentEntry.$origKeyHash & ($this.$associatedMap0.$elementData.data.length - 1 | 0);
        $this.$associatedMap0.$elementData.data[$index] = $this.$associatedMap0.$elementData.data[$index].$next6;
    }
    $this.$currentEntry = null;
    $this.$expectedModCount0 = $this.$expectedModCount0 + 1 | 0;
    var$2 = $this.$associatedMap0;
    var$2.$modCount0 = var$2.$modCount0 + 1 | 0;
    var$2 = $this.$associatedMap0;
    var$2.$elementCount = var$2.$elementCount - 1 | 0;
},
otcir_Converter = $rt_classWithoutFields(),
otci_Base64Impl = $rt_classWithoutFields(),
otci_Base64Impl_alphabet = null,
otci_Base64Impl_urlAlphabet = null,
otci_Base64Impl_reverse = null,
otci_Base64Impl_urlReverse = null,
otci_Base64Impl_$callClinit = () => {
    otci_Base64Impl_$callClinit = $rt_eraseClinit(otci_Base64Impl);
    otci_Base64Impl__clinit_();
},
otci_Base64Impl_decode0 = ($text, $mapping) => {
    let var$3, var$4, $outputSize, $rem, $i, $output;
    otci_Base64Impl_$callClinit();
    var$3 = $text.data;
    var$4 = var$3.length;
    $outputSize = (var$4 / 4 | 0) * 3 | 0;
    $rem = var$4 % 4 | 0;
    if (!($rem != 2 && $rem != 3))
        $outputSize = $outputSize + ($rem - 1 | 0) | 0;
    $i = var$4 - 1 | 0;
    while ($i >= 0 && var$3[$i] == 61) {
        $outputSize = $outputSize + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    $output = $rt_createByteArray($outputSize);
    otci_Base64Impl_decode1($text, $output, $mapping);
    return $output;
},
otci_Base64Impl_decode2 = $text => {
    otci_Base64Impl_$callClinit();
    return otci_Base64Impl_decode0($text, otci_Base64Impl_reverse);
},
otci_Base64Impl_decode1 = ($text, $output, $mapping) => {
    let var$4, $inputSize, $i, $triples, var$8, $j, var$10, var$11, $a, $b, $c, $d, $out, var$17, $rem;
    otci_Base64Impl_$callClinit();
    var$4 = $text.data;
    $inputSize = var$4.length;
    $i = $inputSize - 1 | 0;
    while ($i >= 0 && var$4[$i] == 61) {
        $inputSize = $inputSize + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    $triples = ($inputSize / 4 | 0) * 4 | 0;
    var$8 = 0;
    $j = 0;
    while (var$8 < $triples) {
        var$10 = $output.data;
        var$11 = var$8 + 1 | 0;
        $a = otci_Base64Impl_decode($mapping, var$4[var$8]);
        var$8 = var$11 + 1 | 0;
        $b = otci_Base64Impl_decode($mapping, var$4[var$11]);
        var$11 = var$8 + 1 | 0;
        $c = otci_Base64Impl_decode($mapping, var$4[var$8]);
        var$8 = var$11 + 1 | 0;
        $d = otci_Base64Impl_decode($mapping, var$4[var$11]);
        $out = $a << 18 | $b << 12 | $c << 6 | $d;
        var$11 = $j + 1 | 0;
        var$10[$j] = ($out >>> 16 | 0) << 24 >> 24;
        var$17 = var$11 + 1 | 0;
        var$10[var$11] = ($out >>> 8 | 0) << 24 >> 24;
        $j = var$17 + 1 | 0;
        var$10[var$17] = $out << 24 >> 24;
    }
    $rem = $inputSize - var$8 | 0;
    if ($rem == 2) {
        var$10 = $output.data;
        $a = otci_Base64Impl_decode($mapping, var$4[var$8]);
        $b = otci_Base64Impl_decode($mapping, var$4[var$8 + 1 | 0]);
        var$10[$j] = ($a << 2 | ($b >>> 4 | 0)) << 24 >> 24;
    } else if ($rem == 3) {
        var$10 = $output.data;
        $a = otci_Base64Impl_decode($mapping, var$4[var$8]);
        $b = otci_Base64Impl_decode($mapping, var$4[var$8 + 1 | 0]);
        $c = otci_Base64Impl_decode($mapping, var$4[var$8 + 2 | 0]);
        var$10[$j] = ($a << 2 | ($b >>> 4 | 0)) << 24 >> 24;
        var$10[$j + 1 | 0] = ($b << 4 | ($c >>> 2 | 0)) << 24 >> 24;
    }
},
otci_Base64Impl_decode = ($mapping, $c) => {
    otci_Base64Impl_$callClinit();
    return $mapping.data[$c];
},
otci_Base64Impl_encode1 = ($data, $mapping, $pad) => {
    let var$4, $outputSize, $rem, $output;
    otci_Base64Impl_$callClinit();
    var$4 = $data.data.length;
    $outputSize = ((var$4 + 2 | 0) / 3 | 0) * 4 | 0;
    if (!$pad) {
        $rem = var$4 % 3 | 0;
        if ($rem)
            $outputSize = $outputSize - (3 - $rem | 0) | 0;
    }
    $output = $rt_createByteArray($outputSize);
    otci_Base64Impl_encode0($data, $output, $mapping, $pad);
    return $output;
},
otci_Base64Impl_encode0 = ($data, $output, $mapping, $pad) => {
    let var$5, var$6, $triples, $i, $j, var$10, var$11, var$12, var$13, var$14, var$15, $rem;
    otci_Base64Impl_$callClinit();
    var$5 = $data.data;
    var$6 = var$5.length;
    $triples = (var$6 / 3 | 0) * 3 | 0;
    $i = 0;
    $j = 0;
    while ($j < $triples) {
        var$10 = $output.data;
        var$11 = $i + 1 | 0;
        var$10[$i] = otci_Base64Impl_encode($mapping, (var$5[$j] >>> 2 | 0) << 24 >> 24);
        var$12 = var$11 + 1 | 0;
        var$13 = var$5[$j] << 4;
        var$14 = $j + 1 | 0;
        var$10[var$11] = otci_Base64Impl_encode($mapping, (var$13 | ((var$5[var$14] & 255) >>> 4 | 0)) << 24 >> 24);
        var$13 = var$12 + 1 | 0;
        var$15 = var$5[var$14] << 2;
        var$14 = var$14 + 1 | 0;
        var$10[var$12] = otci_Base64Impl_encode($mapping, (var$15 | ((var$5[var$14] & 255) >>> 6 | 0)) << 24 >> 24);
        $i = var$13 + 1 | 0;
        var$10[var$13] = otci_Base64Impl_encode($mapping, var$5[var$14]);
        $j = var$14 + 1 | 0;
    }
    $rem = var$6 - $j | 0;
    if ($rem == 1) {
        var$10 = $output.data;
        var$12 = $i + 1 | 0;
        var$10[$i] = otci_Base64Impl_encode($mapping, (var$5[$j] >>> 2 | 0) << 24 >> 24);
        $i = var$12 + 1 | 0;
        var$10[var$12] = otci_Base64Impl_encode($mapping, var$5[$j] << 4 << 24 >> 24);
        if ($pad) {
            var$12 = $i + 1 | 0;
            var$10[$i] = 61;
            $i = var$12 + 1 | 0;
            var$10[var$12] = 61;
        }
    } else if ($rem == 2) {
        var$10 = $output.data;
        var$13 = $i + 1 | 0;
        var$10[$i] = otci_Base64Impl_encode($mapping, (var$5[$j] >>> 2 | 0) << 24 >> 24);
        var$14 = var$13 + 1 | 0;
        var$15 = var$5[$j] << 4;
        var$12 = $j + 1 | 0;
        var$10[var$13] = otci_Base64Impl_encode($mapping, (var$15 | ((var$5[var$12] & 255) >>> 4 | 0)) << 24 >> 24);
        var$13 = var$14 + 1 | 0;
        var$10[var$14] = otci_Base64Impl_encode($mapping, var$5[var$12] << 2 << 24 >> 24);
        if (!$pad)
            $i = var$13;
        else {
            $i = var$13 + 1 | 0;
            var$10[var$13] = 61;
        }
    }
    return $i;
},
otci_Base64Impl_encode = ($mapping, $b) => {
    otci_Base64Impl_$callClinit();
    return $mapping.data[$b & 63];
},
otci_Base64Impl__clinit_ = () => {
    let $i, $c, var$3, var$4;
    otci_Base64Impl_alphabet = $rt_createByteArray(64);
    otci_Base64Impl_urlAlphabet = $rt_createByteArray(64);
    otci_Base64Impl_reverse = $rt_createIntArray(256);
    otci_Base64Impl_urlReverse = $rt_createIntArray(256);
    $i = 0;
    $c = 65;
    while ($c <= 90) {
        var$3 = otci_Base64Impl_alphabet.data;
        var$4 = $c << 24 >> 24;
        var$3[$i] = var$4;
        otci_Base64Impl_urlAlphabet.data[$i] = var$4;
        $i = $i + 1 | 0;
        $c = ($c + 1 | 0) & 65535;
    }
    $c = 97;
    while ($c <= 122) {
        var$3 = otci_Base64Impl_alphabet.data;
        var$4 = $c << 24 >> 24;
        var$3[$i] = var$4;
        otci_Base64Impl_urlAlphabet.data[$i] = var$4;
        $i = $i + 1 | 0;
        $c = ($c + 1 | 0) & 65535;
    }
    $c = 48;
    while ($c <= 57) {
        var$3 = otci_Base64Impl_alphabet.data;
        var$4 = $c << 24 >> 24;
        var$3[$i] = var$4;
        otci_Base64Impl_urlAlphabet.data[$i] = var$4;
        $i = $i + 1 | 0;
        $c = ($c + 1 | 0) & 65535;
    }
    otci_Base64Impl_alphabet.data[$i] = 43;
    otci_Base64Impl_urlAlphabet.data[$i] = 45;
    var$4 = $i + 1 | 0;
    otci_Base64Impl_alphabet.data[var$4] = 47;
    otci_Base64Impl_urlAlphabet.data[var$4] = 95;
    ju_Arrays_fill(otci_Base64Impl_reverse, (-1));
    ju_Arrays_fill(otci_Base64Impl_urlReverse, (-1));
    var$4 = 0;
    while (var$4 < otci_Base64Impl_alphabet.data.length) {
        otci_Base64Impl_reverse.data[otci_Base64Impl_alphabet.data[var$4]] = var$4;
        otci_Base64Impl_urlReverse.data[otci_Base64Impl_urlAlphabet.data[var$4]] = var$4;
        var$4 = var$4 + 1 | 0;
    }
};
function jl_Object$Monitor() {
    let a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count0 = 0;
}
let jl_Object$Monitor__init_ = $this => {
    jl_Object__init_($this);
    $this.$owner = jl_Thread_currentThread();
},
jl_Object$Monitor__init_0 = () => {
    let var_0 = new jl_Object$Monitor();
    jl_Object$Monitor__init_(var_0);
    return var_0;
};
function ju_LinkedHashMapEntrySet() {
    let a = this; ju_AbstractSet.call(a);
    a.$base1 = null;
    a.$reversed0 = 0;
}
let ju_LinkedHashMapEntrySet__init_ = ($this, $base, $reversed) => {
    ju_AbstractSet__init_($this);
    $this.$base1 = $base;
    $this.$reversed0 = $reversed;
},
ju_LinkedHashMapEntrySet__init_0 = (var_0, var_1) => {
    let var_2 = new ju_LinkedHashMapEntrySet();
    ju_LinkedHashMapEntrySet__init_(var_2, var_0, var_1);
    return var_2;
},
ju_LinkedHashMapEntrySet_size = $this => {
    return $this.$base1.$elementCount;
},
ju_LinkedHashMapEntrySet_iterator = $this => {
    return ju_LinkedHashMapIterator$EntryIterator__init_0($this.$base1, $this.$reversed0);
};
function onpt_TeaVMPlatform$awaitAll$lambda$_21_0() {
    jl_Object.call(this);
    this.$_076 = null;
}
let onpt_TeaVMPlatform$awaitAll$lambda$_21_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_076 = var$1;
},
onpt_TeaVMPlatform$awaitAll$lambda$_21_0__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$awaitAll$lambda$_21_0();
    onpt_TeaVMPlatform$awaitAll$lambda$_21_0__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$awaitAll$lambda$_21_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$awaitAll$lambda$_21_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$awaitAll$lambda$_21_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform_lambda$awaitAll$2(var$0.$_076, var$1, var$2);
};
function onn_NostrPool$fetch$lambda$_22_0() {
    let a = this; jl_Object.call(a);
    a.$_069 = null;
    a.$_138 = null;
    a.$_218 = Long_ZERO;
    a.$_38 = null;
    a.$_42 = null;
    a.$_5 = null;
}
let onn_NostrPool$fetch$lambda$_22_0__init_ = (var$0, var$1, var$2, var$3, var$4, var$5, var$6) => {
    jl_Object__init_(var$0);
    var$0.$_069 = var$1;
    var$0.$_138 = var$2;
    var$0.$_218 = var$3;
    var$0.$_38 = var$4;
    var$0.$_42 = var$5;
    var$0.$_5 = var$6;
},
onn_NostrPool$fetch$lambda$_22_0__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new onn_NostrPool$fetch$lambda$_22_0();
    onn_NostrPool$fetch$lambda$_22_0__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
onn_NostrPool$fetch$lambda$_22_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrPool$fetch$lambda$_22_0_accept(var$0, var$1, var$2);
},
onn_NostrPool$fetch$lambda$_22_0_accept = (var$0, var$1, var$2) => {
    onn_NostrPool_lambda$fetch$17(var$0.$_069, var$0.$_138, var$0.$_218, var$0.$_38, var$0.$_42, var$0.$_5, var$1, var$2);
},
onne_SignedNostrEvent$_init_$lambda$_0_0 = $rt_classWithoutFields(),
onne_SignedNostrEvent$_init_$lambda$_0_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onne_SignedNostrEvent$_init_$lambda$_0_0__init_0 = () => {
    let var_0 = new onne_SignedNostrEvent$_init_$lambda$_0_0();
    onne_SignedNostrEvent$_init_$lambda$_0_0__init_(var_0);
    return var_0;
},
onne_SignedNostrEvent$_init_$lambda$_0_0_apply0 = (var$0, var$1) => {
    return onne_SignedNostrEvent$_init_$lambda$_0_0_apply(var$0, var$1);
},
onne_SignedNostrEvent$_init_$lambda$_0_0_apply = (var$0, var$1) => {
    return onne_SignedNostrEvent_lambda$new$0(var$1);
};
function onns_NostrNIP46Signer$waitForResponse$lambda$_10_1() {
    let a = this; jl_Object.call(a);
    a.$_094 = null;
    a.$_152 = null;
    a.$_225 = null;
}
let onns_NostrNIP46Signer$waitForResponse$lambda$_10_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_094 = var$1;
    var$0.$_152 = var$2;
    var$0.$_225 = var$3;
},
onns_NostrNIP46Signer$waitForResponse$lambda$_10_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onns_NostrNIP46Signer$waitForResponse$lambda$_10_1();
    onns_NostrNIP46Signer$waitForResponse$lambda$_10_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_NostrNIP46Signer$waitForResponse$lambda$_10_1_run = var$0 => {
    onns_NostrNIP46Signer_lambda$waitForResponse$19(var$0.$_094, var$0.$_152, var$0.$_225);
};
function onns_NostrNIP46Signer$waitForResponse$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_032 = null;
    a.$_118 = null;
    a.$_28 = null;
    a.$_34 = null;
    a.$_40 = null;
}
let onns_NostrNIP46Signer$waitForResponse$lambda$_10_0__init_ = (var$0, var$1, var$2, var$3, var$4, var$5) => {
    jl_Object__init_(var$0);
    var$0.$_032 = var$1;
    var$0.$_118 = var$2;
    var$0.$_28 = var$3;
    var$0.$_34 = var$4;
    var$0.$_40 = var$5;
},
onns_NostrNIP46Signer$waitForResponse$lambda$_10_0__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onns_NostrNIP46Signer$waitForResponse$lambda$_10_0();
    onns_NostrNIP46Signer$waitForResponse$lambda$_10_0__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onns_NostrNIP46Signer$waitForResponse$lambda$_10_0_accept0 = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer$waitForResponse$lambda$_10_0_accept(var$0, var$1, var$2);
},
onns_NostrNIP46Signer$waitForResponse$lambda$_10_0_accept = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer_lambda$waitForResponse$20(var$0.$_032, var$0.$_118, var$0.$_28, var$0.$_34, var$0.$_40, var$1, var$2);
};
function otcit_DateTimeZoneBuilder$Recurrence() {
    let a = this; jl_Object.call(a);
    a.$iOfYear = null;
    a.$iSaveMillis = 0;
}
let otcit_DateTimeZoneBuilder$Recurrence__init_ = ($this, $ofYear, $saveMillis) => {
    jl_Object__init_($this);
    $this.$iOfYear = $ofYear;
    $this.$iSaveMillis = $saveMillis;
},
otcit_DateTimeZoneBuilder$Recurrence__init_0 = (var_0, var_1) => {
    let var_2 = new otcit_DateTimeZoneBuilder$Recurrence();
    otcit_DateTimeZoneBuilder$Recurrence__init_(var_2, var_0, var_1);
    return var_2;
},
otcit_DateTimeZoneBuilder$Recurrence_next = ($this, $instant, $standardOffset, $saveMillis, $calendar) => {
    return otcit_DateTimeZoneBuilder$OfYear_next($this.$iOfYear, $instant, $standardOffset, $saveMillis, $calendar);
},
otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis = $this => {
    return $this.$iSaveMillis;
},
otcit_DateTimeZoneBuilder$Recurrence_read = $flow => {
    let $ofYear, $saveMillis;
    $ofYear = otcit_DateTimeZoneBuilder$OfYear_read($flow);
    $saveMillis = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
    return otcit_DateTimeZoneBuilder$Recurrence__init_0($ofYear, $saveMillis);
},
onpt_WebsocketTransportListener = $rt_classWithoutFields(0);
function onp_NGEUtils$dbg$lambda$_17_0() {
    jl_Object.call(this);
    this.$_0177 = null;
}
let onp_NGEUtils$dbg$lambda$_17_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0177 = var$1;
},
onp_NGEUtils$dbg$lambda$_17_0__init_0 = var_0 => {
    let var_1 = new onp_NGEUtils$dbg$lambda$_17_0();
    onp_NGEUtils$dbg$lambda$_17_0__init_(var_1, var_0);
    return var_1;
},
onp_NGEUtils$dbg$lambda$_17_0_get0 = var$0 => {
    return onp_NGEUtils$dbg$lambda$_17_0_get(var$0);
},
onp_NGEUtils$dbg$lambda$_17_0_get = var$0 => {
    return onp_NGEUtils_lambda$dbg$0(var$0.$_0177);
},
onnrs_NostrRTCSignaling$Listener$RemoveReason = $rt_classWithoutFields(jl_Enum),
onnrs_NostrRTCSignaling$Listener$RemoveReason_EXPIRED = null,
onnrs_NostrRTCSignaling$Listener$RemoveReason_DISCONNECTED = null,
onnrs_NostrRTCSignaling$Listener$RemoveReason_UNKNOWN = null,
onnrs_NostrRTCSignaling$Listener$RemoveReason_$VALUES = null,
onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit = () => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit = $rt_eraseClinit(onnrs_NostrRTCSignaling$Listener$RemoveReason);
    onnrs_NostrRTCSignaling$Listener$RemoveReason__clinit_();
},
onnrs_NostrRTCSignaling$Listener$RemoveReason_values = () => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    return onnrs_NostrRTCSignaling$Listener$RemoveReason_$VALUES.$clone0();
},
onnrs_NostrRTCSignaling$Listener$RemoveReason_valueOf = $name => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    return jl_Enum_valueOf($rt_cls(onnrs_NostrRTCSignaling$Listener$RemoveReason), $name);
},
onnrs_NostrRTCSignaling$Listener$RemoveReason__init_0 = ($this, var$1, var$2) => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
onnrs_NostrRTCSignaling$Listener$RemoveReason__init_ = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCSignaling$Listener$RemoveReason();
    onnrs_NostrRTCSignaling$Listener$RemoveReason__init_0(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCSignaling$Listener$RemoveReason_$values = () => {
    let var$1, var$2;
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    var$1 = $rt_createArray(onnrs_NostrRTCSignaling$Listener$RemoveReason, 3);
    var$2 = var$1.data;
    var$2[0] = onnrs_NostrRTCSignaling$Listener$RemoveReason_EXPIRED;
    var$2[1] = onnrs_NostrRTCSignaling$Listener$RemoveReason_DISCONNECTED;
    var$2[2] = onnrs_NostrRTCSignaling$Listener$RemoveReason_UNKNOWN;
    return var$1;
},
onnrs_NostrRTCSignaling$Listener$RemoveReason__clinit_ = () => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_EXPIRED = onnrs_NostrRTCSignaling$Listener$RemoveReason__init_($rt_s(600), 0);
    onnrs_NostrRTCSignaling$Listener$RemoveReason_DISCONNECTED = onnrs_NostrRTCSignaling$Listener$RemoveReason__init_($rt_s(601), 1);
    onnrs_NostrRTCSignaling$Listener$RemoveReason_UNKNOWN = onnrs_NostrRTCSignaling$Listener$RemoveReason__init_($rt_s(602), 2);
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$VALUES = onnrs_NostrRTCSignaling$Listener$RemoveReason_$values();
},
onnrs_NostrRTCSignaling$Listener$RemoveReason__init_$exported$0 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    return onnrs_NostrRTCSignaling$Listener$RemoveReason__init_($rt_str(var$1), var$2);
},
onnrs_NostrRTCSignaling$Listener$RemoveReason_values$exported$0 = () => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnrs_NostrRTCSignaling$Listener$RemoveReason_values());
},
onnrs_NostrRTCSignaling$Listener$RemoveReason_valueOf$exported$1 = var$1 => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnrs_NostrRTCSignaling$Listener$RemoveReason_valueOf($rt_str(var$1));
},
onnrs_NostrRTCSignaling$Listener$RemoveReason_$values$exported$2 = () => {
    onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnrs_NostrRTCSignaling$Listener$RemoveReason_$values());
},
otjde_EventTarget = $rt_classWithoutFields(0);
function otcit_DateTimeZoneBuilder$OfYear() {
    let a = this; jl_Object.call(a);
    a.$iMode = 0;
    a.$iMonthOfYear = 0;
    a.$iDayOfMonth = 0;
    a.$iDayOfWeek = 0;
    a.$iAdvance = 0;
    a.$iMillisOfDay = 0;
}
let otcit_DateTimeZoneBuilder$OfYear__init_ = ($this, $mode, $monthOfYear, $dayOfMonth, $dayOfWeek, $advanceDayOfWeek, $millisOfDay) => {
    let var$7, var$8;
    jl_Object__init_($this);
    if ($mode != 117 && $mode != 119 && $mode != 115) {
        var$7 = new jl_IllegalArgumentException;
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append0(jl_StringBuilder_append(var$8, $rt_s(603)), $mode);
        jl_IllegalArgumentException__init_1(var$7, jl_StringBuilder_toString(var$8));
        $rt_throw(var$7);
    }
    $this.$iMode = $mode;
    $this.$iMonthOfYear = $monthOfYear;
    $this.$iDayOfMonth = $dayOfMonth;
    $this.$iDayOfWeek = $dayOfWeek;
    $this.$iAdvance = $advanceDayOfWeek;
    $this.$iMillisOfDay = $millisOfDay;
},
otcit_DateTimeZoneBuilder$OfYear__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new otcit_DateTimeZoneBuilder$OfYear();
    otcit_DateTimeZoneBuilder$OfYear__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
otcit_DateTimeZoneBuilder$OfYear_read = $flow => {
    let $flags, $advance, $hasDayOfWeek, $modeBits, $mode, $monthOfYear, $dayOfMonth, $dayOfWeek, $millisOfDay;
    $flags = otci_Base46_decodeUnsigned($flow);
    $advance = !($flags & 1) ? 0 : 1;
    $hasDayOfWeek = !($flags & 2) ? 0 : 1;
    a: {
        $modeBits = ($flags >>> 2 | 0) & 3;
        switch ($modeBits) {
            case 1:
                $mode = 119;
                break a;
            case 2:
                $mode = 115;
                break a;
            default:
        }
        $mode = 117;
    }
    $monthOfYear = otci_Base46_decodeUnsigned($flow);
    $dayOfMonth = otci_Base46_decode($flow);
    $dayOfWeek = !$hasDayOfWeek ? 0 : otci_Base46_decode($flow);
    $millisOfDay = Long_lo((otcit_StorableDateTimeZone_readUnsignedTime($flow)));
    return otcit_DateTimeZoneBuilder$OfYear__init_0($mode, $monthOfYear, $dayOfMonth, $dayOfWeek, $advance, $millisOfDay);
},
otcit_DateTimeZoneBuilder$OfYear_setInstant = ($this, $year, $offset, $saveMillis) => {
    let $calendar;
    if ($this.$iMode == 119)
        $offset = $offset + $saveMillis | 0;
    else if ($this.$iMode != 115)
        $offset = 0;
    $calendar = ju_Calendar_getInstance0(otcit_DateTimeZoneBuilder_getGMT());
    $calendar.$setTimeInMillis(Long_ZERO);
    $calendar.$set(1, $year);
    $calendar.$set(2, $this.$iMonthOfYear - 1 | 0);
    $calendar.$set(10, 0);
    $calendar.$set(12, 0);
    $calendar.$set(13, 0);
    $calendar.$set(14, 0);
    $calendar.$add3(14, $this.$iMillisOfDay);
    otcit_DateTimeZoneBuilder$OfYear_setDayOfMonth($this, $calendar);
    if ($this.$iDayOfWeek)
        otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar);
    return Long_sub($calendar.$getTimeInMillis(), Long_fromInt($offset));
},
otcit_DateTimeZoneBuilder$OfYear_next = ($this, $instant, $offset, $saveMillis, $calendar) => {
    let var$5, var$6;
    if ($this.$iMode == 119)
        $offset = $offset + $saveMillis | 0;
    else if ($this.$iMode != 115)
        $offset = 0;
    var$5 = Long_fromInt($offset);
    var$6 = Long_add($instant, var$5);
    $calendar.$setTimeInMillis(var$6);
    $calendar.$set(2, $this.$iMonthOfYear - 1 | 0);
    $calendar.$set(5, 1);
    $calendar.$set(11, 0);
    $calendar.$set(12, 0);
    $calendar.$set(13, 0);
    $calendar.$set(14, 0);
    $calendar.$add3(14, $this.$iMillisOfDay);
    otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext($this, $calendar);
    if ($this.$iDayOfWeek) {
        otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar);
        if (Long_le($calendar.$getTimeInMillis(), var$6)) {
            $calendar.$add3(1, 1);
            $calendar.$set(2, $this.$iMonthOfYear - 1 | 0);
            otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext($this, $calendar);
            otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar);
        }
    } else if (Long_le($calendar.$getTimeInMillis(), var$6)) {
        $calendar.$add3(1, 1);
        otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext($this, $calendar);
    }
    return Long_sub($calendar.$getTimeInMillis(), var$5);
},
otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext = ($this, $calendar) => {
    a: {
        if ($calendar.$get3(2) == 1 && $calendar.$get3(5) == 29)
            while (true) {
                if ($calendar.$isLeapYear1($calendar.$get3(1)))
                    break a;
                $calendar.$add3(1, 1);
            }
    }
    otcit_DateTimeZoneBuilder$OfYear_setDayOfMonth($this, $calendar);
},
otcit_DateTimeZoneBuilder$OfYear_setDayOfMonth = ($this, $calendar) => {
    if ($this.$iDayOfMonth >= 0)
        $calendar.$set(5, $this.$iDayOfMonth);
    else {
        $calendar.$set(5, 1);
        $calendar.$add3(2, 1);
        $calendar.$add3(5, $this.$iDayOfMonth);
    }
},
otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek = ($this, $calendar) => {
    let $dayOfWeek, $daysToAdd;
    $dayOfWeek = $calendar.$get3(7);
    $daysToAdd = ($this.$iDayOfWeek == 7 ? 1 : $dayOfWeek + 1 | 0) - $dayOfWeek | 0;
    if ($daysToAdd) {
        if (!$this.$iAdvance) {
            if ($daysToAdd > 0)
                $daysToAdd = $daysToAdd + (-7) | 0;
        } else if ($daysToAdd < 0)
            $daysToAdd = $daysToAdd + 7 | 0;
        $calendar.$add3(5, $daysToAdd);
    }
};
function jtf_DateTimeFormatterBuilder$TextPrinterParser() {
    let a = this; jl_Object.call(a);
    a.$field0 = null;
    a.$textStyle = null;
    a.$provider = null;
    a.$numberPrinterParser0 = null;
}
let jtf_DateTimeFormatterBuilder$TextPrinterParser__init_ = ($this, $field, $textStyle, $provider) => {
    jl_Object__init_($this);
    $this.$field0 = $field;
    $this.$textStyle = $textStyle;
    $this.$provider = $provider;
},
jtf_DateTimeFormatterBuilder$TextPrinterParser__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jtf_DateTimeFormatterBuilder$TextPrinterParser();
    jtf_DateTimeFormatterBuilder$TextPrinterParser__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jtf_DateTimeFormatterBuilder$TextPrinterParser_parse = ($this, $context, $parseText, $position) => {
    let $length, $style, $it, $entry, $itText;
    $length = $parseText.$length();
    if ($position >= 0 && $position <= $length) {
        $style = !jtf_DateTimeParseContext_isStrict($context) ? null : $this.$textStyle;
        $it = $this.$provider.$getTextIterator($this.$field0, $style, jtf_DateTimeParseContext_getLocale($context));
        if ($it !== null) {
            while ($it.$hasNext()) {
                $entry = $it.$next();
                $itText = $entry.$getKey();
                if (jtf_DateTimeParseContext_subSequenceEquals($context, $itText, 0, $parseText, $position, $itText.$length()))
                    return jtf_DateTimeParseContext_setParsedField($context, $this.$field0, ($entry.$getValue()).$longValue(), $position, $position + $itText.$length() | 0);
            }
            if (jtf_DateTimeParseContext_isStrict($context))
                return $position ^ (-1);
        }
        return (jtf_DateTimeFormatterBuilder$TextPrinterParser_numberPrinterParser($this)).$parse2($context, $parseText, $position);
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jtf_DateTimeFormatterBuilder$TextPrinterParser_numberPrinterParser = $this => {
    let var$1, var$2;
    if ($this.$numberPrinterParser0 === null) {
        var$1 = new jtf_DateTimeFormatterBuilder$NumberPrinterParser;
        var$2 = $this.$field0;
        jtf_SignStyle_$callClinit();
        jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_(var$1, var$2, 1, 19, jtf_SignStyle_NORMAL);
        $this.$numberPrinterParser0 = var$1;
    }
    return $this.$numberPrinterParser0;
},
jtf_DateTimeFormatterBuilder$TextPrinterParser_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$textStyle;
    jtf_TextStyle_$callClinit();
    if (var$1 === jtf_TextStyle_FULL) {
        var$2 = jl_String_valueOf($this.$field0);
        var$1 = jl_StringBuilder__init_();
        jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$1, $rt_s(604)), var$2), 41);
        return jl_StringBuilder_toString(var$1);
    }
    var$2 = jl_String_valueOf($this.$field0);
    var$1 = jl_String_valueOf($this.$textStyle);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(604)), var$2), 44), var$1), 41);
    return jl_StringBuilder_toString(var$3);
},
jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException),
jn_BufferOverflowException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jn_BufferOverflowException__init_ = () => {
    let var_0 = new jn_BufferOverflowException();
    jn_BufferOverflowException__init_0(var_0);
    return var_0;
};
function onn_NostrRelay$onConnectionError$lambda$_27_0() {
    let a = this; jl_Object.call(a);
    a.$_0111 = null;
    a.$_161 = null;
}
let onn_NostrRelay$onConnectionError$lambda$_27_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0111 = var$1;
    var$0.$_161 = var$2;
},
onn_NostrRelay$onConnectionError$lambda$_27_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$onConnectionError$lambda$_27_0();
    onn_NostrRelay$onConnectionError$lambda$_27_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$onConnectionError$lambda$_27_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$onConnectionError$lambda$_27_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$onConnectionError$lambda$_27_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$onConnectionError$43(var$0.$_0111, var$0.$_161, var$1, var$2);
};
function onpt_TeaVMPlatform$httpGet$lambda$_29_0() {
    let a = this; jl_Object.call(a);
    a.$_0127 = null;
    a.$_166 = null;
    a.$_235 = null;
}
let onpt_TeaVMPlatform$httpGet$lambda$_29_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0127 = var$1;
    var$0.$_166 = var$2;
    var$0.$_235 = var$3;
},
onpt_TeaVMPlatform$httpGet$lambda$_29_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$httpGet$lambda$_29_0();
    onpt_TeaVMPlatform$httpGet$lambda$_29_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$httpGet$lambda$_29_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$httpGet$lambda$_29_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$httpGet$lambda$_29_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform_lambda$httpGet$8(var$0.$_0127, var$0.$_166, var$0.$_235, var$1, var$2);
};
function onpt_TeaVMPlatform$2$run$lambda$_1_0() {
    jl_Object.call(this);
    this.$_0108 = null;
}
let onpt_TeaVMPlatform$2$run$lambda$_1_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0108 = var$1;
},
onpt_TeaVMPlatform$2$run$lambda$_1_0__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$2$run$lambda$_1_0();
    onpt_TeaVMPlatform$2$run$lambda$_1_0__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$2$run$lambda$_1_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$2$run$lambda$_1_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$2$run$lambda$_1_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$2_lambda$run$1(var$0.$_0108, var$1, var$2);
};
function juca_AtomicReference() {
    let a = this; jl_Object.call(a);
    a.$value13 = null;
    a.$version2 = 0;
}
let juca_AtomicReference__init_ = ($this, $value) => {
    jl_Object__init_($this);
    $this.$value13 = $value;
},
juca_AtomicReference__init_0 = var_0 => {
    let var_1 = new juca_AtomicReference();
    juca_AtomicReference__init_(var_1, var_0);
    return var_1;
},
juca_AtomicReference_get = $this => {
    return $this.$value13;
},
juca_AtomicReference_set = ($this, $newValue) => {
    $this.$value13 = $newValue;
    $this.$version2 = $this.$version2 + 1 | 0;
};
function jtf_SimpleDateTimeTextProvider$LocaleStore() {
    let a = this; jl_Object.call(a);
    a.$valueTextMap = null;
    a.$parsable = null;
}
let jtf_SimpleDateTimeTextProvider$LocaleStore__init_ = ($this, $valueTextMap) => {
    let $map, $allList, var$4, $style, $reverse, var$7, $entry, $list;
    jl_Object__init_($this);
    $this.$valueTextMap = $valueTextMap;
    $map = ju_HashMap__init_();
    $allList = ju_ArrayList__init_();
    var$4 = ($valueTextMap.$keySet()).$iterator();
    while (var$4.$hasNext()) {
        $style = var$4.$next();
        $reverse = ju_HashMap__init_();
        var$7 = (($valueTextMap.$get1($style)).$entrySet()).$iterator();
        while (var$7.$hasNext()) {
            $entry = var$7.$next();
            if ($reverse.$put1($entry.$getValue(), jtf_SimpleDateTimeTextProvider_createEntry($entry.$getValue(), $entry.$getKey())) === null)
                continue;
        }
        $list = ju_ArrayList__init_0($reverse.$values0());
        jtf_SimpleDateTimeTextProvider_$callClinit();
        ju_Collections_sort($list, jtf_SimpleDateTimeTextProvider_COMPARATOR);
        $map.$put1($style, $list);
        $allList.$addAll($list);
        $map.$put1(null, $allList);
    }
    jtf_SimpleDateTimeTextProvider_$callClinit();
    ju_Collections_sort($allList, jtf_SimpleDateTimeTextProvider_COMPARATOR);
    $this.$parsable = $map;
},
jtf_SimpleDateTimeTextProvider$LocaleStore__init_0 = var_0 => {
    let var_1 = new jtf_SimpleDateTimeTextProvider$LocaleStore();
    jtf_SimpleDateTimeTextProvider$LocaleStore__init_(var_1, var_0);
    return var_1;
},
jtf_SimpleDateTimeTextProvider$LocaleStore_getTextIterator = ($this, $style) => {
    let $list;
    $list = $this.$parsable.$get1($style);
    return $list === null ? null : $list.$iterator();
},
otcir_MethodCaller = $rt_classWithoutFields(0),
otcir_MethodCaller_forJs = $callable => {
    if ($callable === null)
        return null;
    return otcir_MethodCaller$forJs$lambda$_1_0__init_0($callable);
},
otcir_MethodCaller_lambda$forJs$0 = ($callable, $instance, $args) => {
    let $jsArgs, var$5, $result;
    $jsArgs = $args.data;
    var$5 = $instance;
    $result = $callable.call(var$5, $jsArgs);
    return $result;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function otciu_UnicodeHelper$Range() {
    let a = this; jl_Object.call(a);
    a.$start5 = 0;
    a.$end4 = 0;
    a.$data6 = null;
}
let otciu_UnicodeHelper$Range__init_0 = ($this, $start, $end, $data) => {
    jl_Object__init_($this);
    $this.$start5 = $start;
    $this.$end4 = $end;
    $this.$data6 = $data;
},
otciu_UnicodeHelper$Range__init_ = (var_0, var_1, var_2) => {
    let var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
function onnn_Nip49$decrypt$lambda$_9_0() {
    let a = this; jl_Object.call(a);
    a.$_086 = null;
    a.$_150 = null;
    a.$_223 = 0;
}
let onnn_Nip49$decrypt$lambda$_9_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_086 = var$1;
    var$0.$_150 = var$2;
    var$0.$_223 = var$3;
},
onnn_Nip49$decrypt$lambda$_9_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onnn_Nip49$decrypt$lambda$_9_0();
    onnn_Nip49$decrypt$lambda$_9_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onnn_Nip49$decrypt$lambda$_9_0_call0 = var$0 => {
    return onnn_Nip49$decrypt$lambda$_9_0_call(var$0);
},
onnn_Nip49$decrypt$lambda$_9_0_call = var$0 => {
    return onnn_Nip49_lambda$decrypt$0(var$0.$_086, var$0.$_150, var$0.$_223);
},
jur_AbstractLineTerminator = $rt_classWithoutFields(),
jur_AbstractLineTerminator_unixLT = null,
jur_AbstractLineTerminator_unicodeLT = null,
jur_AbstractLineTerminator__init_ = $this => {
    jl_Object__init_($this);
},
jur_AbstractLineTerminator_getInstance = $flag => {
    if (!($flag & 1)) {
        if (jur_AbstractLineTerminator_unicodeLT !== null)
            return jur_AbstractLineTerminator_unicodeLT;
        jur_AbstractLineTerminator_unicodeLT = jur_AbstractLineTerminator$2__init_0();
        return jur_AbstractLineTerminator_unicodeLT;
    }
    if (jur_AbstractLineTerminator_unixLT !== null)
        return jur_AbstractLineTerminator_unixLT;
    jur_AbstractLineTerminator_unixLT = jur_AbstractLineTerminator$1__init_0();
    return jur_AbstractLineTerminator_unixLT;
},
jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$2__init_ = $this => {
    jur_AbstractLineTerminator__init_($this);
},
jur_AbstractLineTerminator$2__init_0 = () => {
    let var_0 = new jur_AbstractLineTerminator$2();
    jur_AbstractLineTerminator$2__init_(var_0);
    return var_0;
},
jur_AbstractLineTerminator$2_isLineTerminator = ($this, $ch) => {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
},
jur_AbstractLineTerminator$2_isAfterLineTerminator = ($this, $ch, $ch2) => {
    let var$3;
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
};
function juc_ConcurrentHashMap$2() {
    ju_AbstractCollection.call(this);
    this.$this$020 = null;
}
let juc_ConcurrentHashMap$2__init_ = ($this, $this$0) => {
    $this.$this$020 = $this$0;
    ju_AbstractCollection__init_($this);
},
juc_ConcurrentHashMap$2__init_0 = var_0 => {
    let var_1 = new juc_ConcurrentHashMap$2();
    juc_ConcurrentHashMap$2__init_(var_1, var_0);
    return var_1;
},
juc_ConcurrentHashMap$2_iterator = $this => {
    return juc_ConcurrentHashMap$ValueIterator__init_0($this.$this$020);
};
function jtf_DateTimeFormatterBuilder$NumberPrinterParser() {
    let a = this; jl_Object.call(a);
    a.$field = null;
    a.$minWidth = 0;
    a.$maxWidth = 0;
    a.$signStyle = null;
    a.$subsequentWidth = 0;
}
let jtf_DateTimeFormatterBuilder$NumberPrinterParser_EXCEED_POINTS = null,
jtf_DateTimeFormatterBuilder$NumberPrinterParser_$callClinit = () => {
    jtf_DateTimeFormatterBuilder$NumberPrinterParser_$callClinit = $rt_eraseClinit(jtf_DateTimeFormatterBuilder$NumberPrinterParser);
    jtf_DateTimeFormatterBuilder$NumberPrinterParser__clinit_();
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_ = ($this, $field, $minWidth, $maxWidth, $signStyle) => {
    jtf_DateTimeFormatterBuilder$NumberPrinterParser_$callClinit();
    jl_Object__init_($this);
    $this.$field = $field;
    $this.$minWidth = $minWidth;
    $this.$maxWidth = $maxWidth;
    $this.$signStyle = $signStyle;
    $this.$subsequentWidth = 0;
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_2 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jtf_DateTimeFormatterBuilder$NumberPrinterParser();
    jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_1 = ($this, $field, $minWidth, $maxWidth, $signStyle, $subsequentWidth) => {
    jtf_DateTimeFormatterBuilder$NumberPrinterParser_$callClinit();
    jl_Object__init_($this);
    $this.$field = $field;
    $this.$minWidth = $minWidth;
    $this.$maxWidth = $maxWidth;
    $this.$signStyle = $signStyle;
    $this.$subsequentWidth = $subsequentWidth;
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jtf_DateTimeFormatterBuilder$NumberPrinterParser();
    jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser_withFixedWidth = $this => {
    if ($this.$subsequentWidth == (-1))
        return $this;
    return jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_0($this.$field, $this.$minWidth, $this.$maxWidth, $this.$signStyle, (-1));
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser_withSubsequentWidth = ($this, $subsequentWidth) => {
    return jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_0($this.$field, $this.$minWidth, $this.$maxWidth, $this.$signStyle, $this.$subsequentWidth + $subsequentWidth | 0);
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser_isFixedWidth = ($this, $context) => {
    let var$2, var$3;
    a: {
        b: {
            if ($this.$subsequentWidth != (-1)) {
                if ($this.$subsequentWidth <= 0)
                    break b;
                if ($this.$minWidth != $this.$maxWidth)
                    break b;
                var$2 = $this.$signStyle;
                jtf_SignStyle_$callClinit();
                if (var$2 !== jtf_SignStyle_NOT_NEGATIVE)
                    break b;
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser_parse = ($this, $context, $text, $position) => {
    let $length, $sign, $negative, $positive, var$8, $effMinWidth, $minEndPos, var$11, var$12, $effMaxWidth, $total, $totalBig, $pass, var$17, $maxEndPos, var$19, $ch, $digit, $parseLen;
    $length = $text.$length();
    if ($position == $length)
        return $position ^ (-1);
    $sign = $text.$charAt($position);
    $negative = 0;
    $positive = 0;
    if ($sign == jtf_DecimalStyle_getPositiveSign(jtf_DateTimeParseContext_getSymbols($context))) {
        if (!jtf_SignStyle_parse($this.$signStyle, 1, jtf_DateTimeParseContext_isStrict($context), $this.$minWidth != $this.$maxWidth ? 0 : 1))
            return $position ^ (-1);
        $positive = 1;
        $position = $position + 1 | 0;
    } else if ($sign != jtf_DecimalStyle_getNegativeSign(jtf_DateTimeParseContext_getSymbols($context))) {
        var$8 = $this.$signStyle;
        jtf_SignStyle_$callClinit();
        if (var$8 === jtf_SignStyle_ALWAYS && jtf_DateTimeParseContext_isStrict($context))
            return $position ^ (-1);
    } else {
        if (!jtf_SignStyle_parse($this.$signStyle, 0, jtf_DateTimeParseContext_isStrict($context), $this.$minWidth != $this.$maxWidth ? 0 : 1))
            return $position ^ (-1);
        $negative = 1;
        $position = $position + 1 | 0;
    }
    $effMinWidth = !jtf_DateTimeParseContext_isStrict($context) && !$this.$isFixedWidth($context) ? 1 : $this.$minWidth;
    $minEndPos = $position + $effMinWidth | 0;
    if ($minEndPos > $length)
        return $position ^ (-1);
    var$11 = !jtf_DateTimeParseContext_isStrict($context) && !$this.$isFixedWidth($context) ? 9 : $this.$maxWidth;
    var$12 = $this.$subsequentWidth;
    $effMaxWidth = var$11 + jl_Math_max(var$12, 0) | 0;
    $total = Long_ZERO;
    $totalBig = null;
    $pass = 0;
    a: {
        b: while (true) {
            if ($pass >= 2) {
                var$17 = $position;
                break a;
            }
            $maxEndPos = jl_Math_min($position + $effMaxWidth | 0, $length);
            var$17 = $position;
            c: {
                while (var$17 < $maxEndPos) {
                    var$19 = var$17 + 1 | 0;
                    $ch = $text.$charAt(var$17);
                    $digit = jtf_DecimalStyle_convertToDigit(jtf_DateTimeParseContext_getSymbols($context), $ch);
                    if ($digit < 0) {
                        var$17 = var$19 + (-1) | 0;
                        if (var$17 < $minEndPos)
                            break b;
                        break c;
                    }
                    if ((var$19 - $position | 0) <= 18)
                        $total = Long_add(Long_mul($total, Long_fromInt(10)), Long_fromInt($digit));
                    else {
                        if ($totalBig === null)
                            $totalBig = jm_BigInteger_valueOf($total);
                        jm_BigInteger_$callClinit();
                        $totalBig = ($totalBig.$multiply(jm_BigInteger_TEN)).$add4(jm_BigInteger_valueOf(Long_fromInt($digit)));
                    }
                    var$17 = var$19;
                }
            }
            if ($this.$subsequentWidth <= 0)
                break a;
            if ($pass)
                break a;
            $parseLen = var$17 - $position | 0;
            $effMaxWidth = jl_Math_max($effMinWidth, $parseLen - $this.$subsequentWidth | 0);
            $total = Long_ZERO;
            $totalBig = null;
            $pass = $pass + 1 | 0;
        }
        return $position ^ (-1);
    }
    if (!$negative) {
        var$8 = $this.$signStyle;
        jtf_SignStyle_$callClinit();
        if (var$8 === jtf_SignStyle_EXCEEDS_PAD && jtf_DateTimeParseContext_isStrict($context)) {
            $parseLen = var$17 - $position | 0;
            if (!$positive) {
                if ($parseLen > $this.$minWidth)
                    return $position ^ (-1);
            } else if ($parseLen <= $this.$minWidth)
                return ($position - 1 | 0) ^ (-1);
        }
    } else if ($totalBig === null) {
        if (Long_eq($total, Long_ZERO) && jtf_DateTimeParseContext_isStrict($context))
            return ($position - 1 | 0) ^ (-1);
        $total = Long_neg($total);
    } else {
        jm_BigInteger_$callClinit();
        if ($totalBig.$equals(jm_BigInteger_ZERO) && jtf_DateTimeParseContext_isStrict($context))
            return ($position - 1 | 0) ^ (-1);
        $totalBig = $totalBig.$negate();
    }
    if ($totalBig === null)
        return $this.$setValue($context, $total, $position, var$17);
    if ($totalBig.$bitLength() > 63) {
        $totalBig = $totalBig.$divide(jm_BigInteger_TEN);
        var$17 = var$17 + (-1) | 0;
    }
    return $this.$setValue($context, $totalBig.$longValue(), $position, var$17);
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser_setValue = ($this, $context, $value, $errorPos, $successPos) => {
    return jtf_DateTimeParseContext_setParsedField($context, $this.$field, $value, $errorPos, $successPos);
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    if ($this.$minWidth == 1 && $this.$maxWidth == 19) {
        var$1 = $this.$signStyle;
        jtf_SignStyle_$callClinit();
        if (var$1 === jtf_SignStyle_NORMAL) {
            var$1 = jl_String_valueOf($this.$field);
            var$2 = jl_StringBuilder__init_();
            jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(605)), var$1), 41);
            return jl_StringBuilder_toString(var$2);
        }
    }
    if ($this.$minWidth == $this.$maxWidth) {
        var$1 = $this.$signStyle;
        jtf_SignStyle_$callClinit();
        if (var$1 === jtf_SignStyle_NOT_NEGATIVE) {
            var$1 = jl_String_valueOf($this.$field);
            var$3 = $this.$minWidth;
            var$2 = jl_StringBuilder__init_();
            jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(605)), var$1), 44), var$3), 41);
            return jl_StringBuilder_toString(var$2);
        }
    }
    var$1 = jl_String_valueOf($this.$field);
    var$3 = $this.$minWidth;
    var$4 = $this.$maxWidth;
    var$2 = jl_String_valueOf($this.$signStyle);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(605)), var$1), 44), var$3), 44), var$4), 44), var$2), 41);
    return jl_StringBuilder_toString(var$5);
},
jtf_DateTimeFormatterBuilder$NumberPrinterParser__clinit_ = () => {
    jtf_DateTimeFormatterBuilder$NumberPrinterParser_EXCEED_POINTS = $rt_createIntArrayFromData([0, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
};
function otciu_CharMapping() {
    let a = this; jl_Object.call(a);
    a.$binarySearchTable0 = null;
    a.$fastTable = null;
}
let otciu_CharMapping__init_ = ($this, $binarySearchTable, $fastTable) => {
    jl_Object__init_($this);
    $this.$binarySearchTable0 = $binarySearchTable;
    $this.$fastTable = $fastTable;
},
otciu_CharMapping__init_0 = (var_0, var_1) => {
    let var_2 = new otciu_CharMapping();
    otciu_CharMapping__init_(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$1__init_ = $this => {
    jur_AbstractLineTerminator__init_($this);
},
jur_AbstractLineTerminator$1__init_0 = () => {
    let var_0 = new jur_AbstractLineTerminator$1();
    jur_AbstractLineTerminator$1__init_(var_0);
    return var_0;
},
jur_AbstractLineTerminator$1_isLineTerminator = ($this, $ch) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$1_isAfterLineTerminator = ($this, $ch, $ch2) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
otjc_JSWeakRef = $rt_classWithoutFields();
function otci_CharFlow() {
    let a = this; jl_Object.call(a);
    a.$characters = null;
    a.$pointer = 0;
}
let otci_CharFlow__init_0 = ($this, $characters) => {
    jl_Object__init_($this);
    $this.$characters = $characters;
},
otci_CharFlow__init_ = var_0 => {
    let var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
};
function jur_RangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars0 = null;
    a.$alt2 = 0;
}
let jur_RangeSet__init_ = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars0 = $cc.$getInstance();
    $this.$alt2 = $cc.$alt;
},
jur_RangeSet__init_0 = var_0 => {
    let var_1 = new jur_RangeSet();
    jur_RangeSet__init_(var_1, var_0);
    return var_1;
},
jur_RangeSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$chars0.$contains0($testString.$charAt($strIndex)) ? (-1) : 1;
},
jur_RangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt2 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars0.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(50)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_RangeSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects0($this.$chars0, $set.$getChar());
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$chars0);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$getChars());
    if (!($set instanceof jur_SupplCharSet))
        return 1;
    return 0;
},
jur_RangeSet_getChars = $this => {
    return $this.$chars0;
},
jtz_ZoneRules = $rt_classWithoutFields(),
jtz_ZoneRules_of0 = ($baseStandardOffset, $baseWallOffset, $standardOffsetTransitionList, $transitionList, $lastRules) => {
    ju_Objects_requireNonNull($baseStandardOffset, $rt_s(606));
    ju_Objects_requireNonNull($baseWallOffset, $rt_s(607));
    ju_Objects_requireNonNull($standardOffsetTransitionList, $rt_s(608));
    ju_Objects_requireNonNull($transitionList, $rt_s(609));
    ju_Objects_requireNonNull($lastRules, $rt_s(610));
    return jtz_StandardZoneRules__init_0($baseStandardOffset, $baseWallOffset, $standardOffsetTransitionList, $transitionList, $lastRules);
},
jtz_ZoneRules_of = $offset => {
    ju_Objects_requireNonNull($offset, $rt_s(52));
    return jtz_ZoneRules$Fixed__init_0($offset);
},
jtz_ZoneRules__init_ = $this => {
    jl_Object__init_($this);
};
function jtz_StandardZoneRules() {
    let a = this; jtz_ZoneRules.call(a);
    a.$standardTransitions = null;
    a.$standardOffsets = null;
    a.$savingsInstantTransitions = null;
    a.$savingsLocalTransitions = null;
    a.$wallOffsets = null;
    a.$lastRules = null;
    a.$lastRulesCache = null;
}
let jtz_StandardZoneRules__init_ = ($this, $baseStandardOffset, $baseWallOffset, $standardOffsetTransitionList, $transitionList, $lastRules) => {
    let $i, var$7, $i_0, $localTransitionList, $localTransitionOffsetList, var$11, $trans;
    jtz_ZoneRules__init_($this);
    $this.$lastRulesCache = ju_HashMap__init_();
    $this.$standardTransitions = $rt_createLongArray($standardOffsetTransitionList.$size());
    $this.$standardOffsets = $rt_createArray(jt_ZoneOffset, $standardOffsetTransitionList.$size() + 1 | 0);
    $this.$standardOffsets.data[0] = $baseStandardOffset;
    $i = 0;
    while ($i < $standardOffsetTransitionList.$size()) {
        $this.$standardTransitions.data[$i] = jtz_ZoneOffsetTransition_toEpochSecond($standardOffsetTransitionList.$get($i));
        var$7 = $this.$standardOffsets.data;
        $i_0 = $i + 1 | 0;
        var$7[$i_0] = jtz_ZoneOffsetTransition_getOffsetAfter($standardOffsetTransitionList.$get($i));
        $i = $i_0;
    }
    $localTransitionList = ju_ArrayList__init_();
    $localTransitionOffsetList = ju_ArrayList__init_();
    $localTransitionOffsetList.$add1($baseWallOffset);
    var$11 = $transitionList.$iterator();
    while (var$11.$hasNext()) {
        $trans = var$11.$next();
        if (!jtz_ZoneOffsetTransition_isGap($trans)) {
            $localTransitionList.$add1(jtz_ZoneOffsetTransition_getDateTimeAfter($trans));
            $localTransitionList.$add1(jtz_ZoneOffsetTransition_getDateTimeBefore($trans));
        } else {
            $localTransitionList.$add1(jtz_ZoneOffsetTransition_getDateTimeBefore($trans));
            $localTransitionList.$add1(jtz_ZoneOffsetTransition_getDateTimeAfter($trans));
        }
        $localTransitionOffsetList.$add1(jtz_ZoneOffsetTransition_getOffsetAfter($trans));
    }
    $this.$savingsLocalTransitions = $localTransitionList.$toArray($rt_createArray(jt_LocalDateTime, $localTransitionList.$size()));
    $this.$wallOffsets = $localTransitionOffsetList.$toArray($rt_createArray(jt_ZoneOffset, $localTransitionOffsetList.$size()));
    $this.$savingsInstantTransitions = $rt_createLongArray($transitionList.$size());
    $i = 0;
    while ($i < $transitionList.$size()) {
        $this.$savingsInstantTransitions.data[$i] = jt_Instant_getEpochSecond(jtz_ZoneOffsetTransition_getInstant($transitionList.$get($i)));
        $i = $i + 1 | 0;
    }
    if ($lastRules.$size() > 15)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(611)));
    $this.$lastRules = $lastRules.$toArray($rt_createArray(jtz_ZoneOffsetTransitionRule, $lastRules.$size()));
},
jtz_StandardZoneRules__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jtz_StandardZoneRules();
    jtz_StandardZoneRules__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jtz_StandardZoneRules_isFixedOffset = $this => {
    return $this.$savingsInstantTransitions.data.length ? 0 : 1;
},
jtz_StandardZoneRules_getOffset = ($this, $instant) => {
    let $epochSec, $year, $transArray, $trans, $i, var$7, $index;
    $epochSec = jt_Instant_getEpochSecond($instant);
    if ($this.$lastRules.data.length > 0 && Long_gt($epochSec, $this.$savingsInstantTransitions.data[$this.$savingsInstantTransitions.data.length - 1 | 0])) {
        $year = jtz_StandardZoneRules_findYear($this, $epochSec, $this.$wallOffsets.data[$this.$wallOffsets.data.length - 1 | 0]);
        $transArray = jtz_StandardZoneRules_findTransitionArray($this, $year);
        $trans = null;
        $i = 0;
        while (true) {
            var$7 = $transArray.data;
            if ($i >= var$7.length)
                break;
            $trans = var$7[$i];
            if (Long_lt($epochSec, jtz_ZoneOffsetTransition_toEpochSecond($trans)))
                return jtz_ZoneOffsetTransition_getOffsetBefore($trans);
            $i = $i + 1 | 0;
        }
        return jtz_ZoneOffsetTransition_getOffsetAfter($trans);
    }
    $index = ju_Arrays_binarySearch($this.$savingsInstantTransitions, $epochSec);
    if ($index < 0)
        $index = ( -$index | 0) - 2 | 0;
    return $this.$wallOffsets.data[$index + 1 | 0];
},
jtz_StandardZoneRules_getValidOffsets = ($this, $localDateTime) => {
    let $info;
    $info = jtz_StandardZoneRules_getOffsetInfo($this, $localDateTime);
    if (!($info instanceof jtz_ZoneOffsetTransition))
        return ju_Collections_singletonList($info);
    return jtz_ZoneOffsetTransition_getValidOffsets($info);
},
jtz_StandardZoneRules_getTransition = ($this, $localDateTime) => {
    let $info;
    $info = jtz_StandardZoneRules_getOffsetInfo($this, $localDateTime);
    return !($info instanceof jtz_ZoneOffsetTransition) ? null : $info;
},
jtz_StandardZoneRules_getOffsetInfo = ($this, $dt) => {
    let $transArray, var$3, $info, var$5, var$6, $trans, $index, var$9, var$10, $dtBefore, $dtAfter, $offsetBefore, $offsetAfter;
    if ($this.$lastRules.data.length > 0 && jt_LocalDateTime_isAfter($dt, $this.$savingsLocalTransitions.data[$this.$savingsLocalTransitions.data.length - 1 | 0])) {
        $transArray = jtz_StandardZoneRules_findTransitionArray($this, jt_LocalDateTime_getYear($dt));
        var$3 = $transArray.data;
        $info = null;
        var$5 = var$3.length;
        var$6 = 0;
        a: {
            while (var$6 < var$5) {
                $trans = var$3[var$6];
                $info = jtz_StandardZoneRules_findOffsetInfo($this, $dt, $trans);
                if ($info instanceof jtz_ZoneOffsetTransition)
                    break a;
                if ($info.$equals(jtz_ZoneOffsetTransition_getOffsetBefore($trans)))
                    break a;
                var$6 = var$6 + 1 | 0;
            }
            return $info;
        }
        return $info;
    }
    $index = ju_Arrays_binarySearch1($this.$savingsLocalTransitions, $dt);
    if ($index == (-1))
        return $this.$wallOffsets.data[0];
    if ($index < 0)
        var$5 = ( -$index | 0) - 2 | 0;
    else if ($index >= ($this.$savingsLocalTransitions.data.length - 1 | 0))
        var$5 = $index;
    else {
        var$9 = $this.$savingsLocalTransitions.data[$index];
        var$3 = $this.$savingsLocalTransitions.data;
        var$5 = $index + 1 | 0;
        var$10 = var$3[var$5];
        if (!jt_LocalDateTime_equals(var$9, var$10))
            var$5 = $index;
    }
    if (var$5 & 1)
        return $this.$wallOffsets.data[(var$5 / 2 | 0) + 1 | 0];
    $dtBefore = $this.$savingsLocalTransitions.data[var$5];
    $dtAfter = $this.$savingsLocalTransitions.data[var$5 + 1 | 0];
    var$3 = $this.$wallOffsets.data;
    var$5 = var$5 / 2 | 0;
    $offsetBefore = var$3[var$5];
    $offsetAfter = $this.$wallOffsets.data[var$5 + 1 | 0];
    if (jt_ZoneOffset_getTotalSeconds($offsetAfter) <= jt_ZoneOffset_getTotalSeconds($offsetBefore))
        return jtz_ZoneOffsetTransition__init_($dtAfter, $offsetBefore, $offsetAfter);
    return jtz_ZoneOffsetTransition__init_($dtBefore, $offsetBefore, $offsetAfter);
},
jtz_StandardZoneRules_findOffsetInfo = ($this, $dt, $trans) => {
    let $localTransition;
    $localTransition = jtz_ZoneOffsetTransition_getDateTimeBefore($trans);
    if (!jtz_ZoneOffsetTransition_isGap($trans)) {
        if (!jt_LocalDateTime_isBefore($dt, $localTransition))
            return jtz_ZoneOffsetTransition_getOffsetAfter($trans);
        if (!jt_LocalDateTime_isBefore($dt, jtz_ZoneOffsetTransition_getDateTimeAfter($trans)))
            return $trans;
        return jtz_ZoneOffsetTransition_getOffsetBefore($trans);
    }
    if (jt_LocalDateTime_isBefore($dt, $localTransition))
        return jtz_ZoneOffsetTransition_getOffsetBefore($trans);
    if (jt_LocalDateTime_isBefore($dt, jtz_ZoneOffsetTransition_getDateTimeAfter($trans)))
        return $trans;
    return jtz_ZoneOffsetTransition_getOffsetAfter($trans);
},
jtz_StandardZoneRules_findTransitionArray = ($this, $year) => {
    let $yearObj, $transArray, $ruleArray, var$5, var$6, var$7, $i;
    $yearObj = jl_Integer_valueOf($year);
    $transArray = $this.$lastRulesCache.$get1($yearObj);
    if ($transArray !== null)
        return $transArray;
    $ruleArray = $this.$lastRules;
    var$5 = $ruleArray.data;
    var$6 = var$5.length;
    var$7 = $rt_createArray(jtz_ZoneOffsetTransition, var$6);
    $i = 0;
    while ($i < var$6) {
        var$7.data[$i] = jtz_ZoneOffsetTransitionRule_createTransition(var$5[$i], $year);
        $i = $i + 1 | 0;
    }
    if ($year < 2100)
        $this.$lastRulesCache.$putIfAbsent($yearObj, var$7);
    return var$7;
},
jtz_StandardZoneRules_findYear = ($this, $epochSecond, $offset) => {
    let $localSecond, $localEpochDay;
    $localSecond = Long_add($epochSecond, Long_fromInt(jt_ZoneOffset_getTotalSeconds($offset)));
    $localEpochDay = jl_Math_floorDiv($localSecond, 86400);
    return jt_LocalDate_getYear(jt_LocalDate_ofEpochDay($localEpochDay));
},
jtz_StandardZoneRules_equals = ($this, $obj) => {
    let var$2, $other, var$4, var$5;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jtz_StandardZoneRules)) {
        if (!($obj instanceof jtz_ZoneRules$Fixed))
            return 0;
        a: {
            if (jtz_StandardZoneRules_isFixedOffset($this)) {
                jt_Instant_$callClinit();
                if (jt_ZoneOffset_equals(jtz_StandardZoneRules_getOffset($this, jt_Instant_EPOCH), jtz_ZoneRules$Fixed_getOffset($obj, jt_Instant_EPOCH))) {
                    var$2 = 1;
                    break a;
                }
            }
            var$2 = 0;
        }
        return var$2;
    }
    b: {
        $other = $obj;
        if (ju_Arrays_equals0($this.$standardTransitions, $other.$standardTransitions)) {
            var$4 = $this.$standardOffsets;
            var$5 = $other.$standardOffsets;
            if (ju_Arrays_equals(var$4, var$5)) {
                var$4 = $this.$savingsInstantTransitions;
                var$5 = $other.$savingsInstantTransitions;
                if (ju_Arrays_equals0(var$4, var$5)) {
                    var$4 = $this.$wallOffsets;
                    var$5 = $other.$wallOffsets;
                    if (ju_Arrays_equals(var$4, var$5)) {
                        var$4 = $this.$lastRules;
                        var$5 = $other.$lastRules;
                        if (ju_Arrays_equals(var$4, var$5)) {
                            var$2 = 1;
                            break b;
                        }
                    }
                }
            }
        }
        var$2 = 0;
    }
    return var$2;
},
jtz_StandardZoneRules_hashCode = $this => {
    let var$1, var$2;
    var$1 = ju_Arrays_hashCode0($this.$standardTransitions);
    var$2 = $this.$standardOffsets;
    var$1 = var$1 ^ ju_Arrays_hashCode(var$2);
    var$2 = $this.$savingsInstantTransitions;
    var$1 = var$1 ^ ju_Arrays_hashCode0(var$2);
    var$2 = $this.$wallOffsets;
    var$1 = var$1 ^ ju_Arrays_hashCode(var$2);
    var$2 = $this.$lastRules;
    var$1 = var$1 ^ ju_Arrays_hashCode(var$2);
    return var$1;
},
jtz_StandardZoneRules_toString = $this => {
    let var$1, var$2;
    var$1 = jl_String_valueOf($this.$standardOffsets.data[$this.$standardOffsets.data.length - 1 | 0]);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(612)), var$1), 93);
    return jl_StringBuilder_toString(var$2);
};
function onnr_NostrRTCSocket$emitCandidates$lambda$_7_0() {
    jl_Object.call(this);
    this.$_0 = null;
}
let onnr_NostrRTCSocket$emitCandidates$lambda$_7_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0 = var$1;
},
onnr_NostrRTCSocket$emitCandidates$lambda$_7_0__init_0 = var_0 => {
    let var_1 = new onnr_NostrRTCSocket$emitCandidates$lambda$_7_0();
    onnr_NostrRTCSocket$emitCandidates$lambda$_7_0__init_(var_1, var_0);
    return var_1;
},
onnr_NostrRTCSocket$emitCandidates$lambda$_7_0_call0 = var$0 => {
    return onnr_NostrRTCSocket$emitCandidates$lambda$_7_0_call(var$0);
},
onnr_NostrRTCSocket$emitCandidates$lambda$_7_0_call = var$0 => {
    return onnr_NostrRTCSocket_lambda$emitCandidates$0(var$0.$_0);
},
onnrs_NostrRTCSignaling$Listener = $rt_classWithoutFields(0),
onnrl_NostrRTCSocketListener = $rt_classWithoutFields(0),
onnr_NostrRTCRoom$Listener = $rt_classWithoutFields(0);
function jur_CharClass() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
let jur_CharClass__init_1 = $this => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_1();
},
jur_CharClass__init_ = () => {
    let var_0 = new jur_CharClass();
    jur_CharClass__init_1(var_0);
    return var_0;
},
jur_CharClass__init_0 = ($this, $ci, $uci) => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_1();
    $this.$ci = $ci;
    $this.$uci = $uci;
},
jur_CharClass__init_4 = (var_0, var_1) => {
    let var_2 = new jur_CharClass();
    jur_CharClass__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass__init_2 = ($this, $negative, $ci, $uci) => {
    jur_CharClass__init_0($this, $ci, $uci);
    $this.$setNegative($negative);
},
jur_CharClass__init_3 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass();
    jur_CharClass__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass_add = ($this, $ch) => {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    $this.$bits.$clear0(jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                $this.$bits.$set2(jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            $this.$lowHighSurrogates.$clear0($ch - 55296 | 0);
        else
            $this.$lowHighSurrogates.$set2($ch - 55296 | 0);
    }
    if ($this.$inverted)
        $this.$bits.$clear0($ch);
    else
        $this.$bits.$set2($ch);
    if (!$this.$mayContainSupplCodepoints0 && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints0 = 1;
    return $this;
},
jur_CharClass_add1 = ($this, $cc) => {
    let $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $cc.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            $this.$lowHighSurrogates.$andNot($cc.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        $this.$lowHighSurrogates.$or($cc.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($cc.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$isNegative())
                $this.$bits.$andNot($cc.$getBits());
            else
                $this.$bits.$and($cc.$getBits());
        } else if (!$cc.$isNegative())
            $this.$bits.$or($cc.$getBits());
        else {
            $this.$bits.$xor($cc.$getBits());
            $this.$bits.$and($cc.$getBits());
            $this.$alt = $this.$alt ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$5__init_0($this, $curAlt, $nb, $cc);
            else
                $this.$nonBitSet = jur_CharClass$4__init_0($this, $curAlt, $nb, $cc);
        } else {
            if ($curAlt && !$this.$inverted && $this.$bits.$isEmpty())
                $this.$nonBitSet = jur_CharClass$1__init_0($this, $cc);
            else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$3__init_0($this, $curAlt, $cc);
            else
                $this.$nonBitSet = jur_CharClass$2__init_0($this, $curAlt, $cc);
            $this.$hideBits = 1;
        }
    }
    return $this;
},
jur_CharClass_add0 = ($this, $i, $end) => {
    if ($i > $end)
        $rt_throw(jl_IllegalArgumentException__init_0());
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            while (true) {
                if ($i >= ($end + 1 | 0))
                    break a;
                $this.$add($i);
                $i = $i + 1 | 0;
            }
        }
        if ($this.$inverted)
            $this.$bits.$clear1($i, $end + 1 | 0);
        else
            $this.$bits.$set($i, $end + 1 | 0);
    }
    return $this;
},
jur_CharClass_union = ($this, $clazz) => {
    let $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $clazz.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($clazz.$hasUCI())
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
    } else if ($this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt ^ $clazz.$isNegative())) {
            if (!$this.$alt)
                $this.$bits.$or($clazz.$getBits());
            else
                $this.$bits.$and($clazz.$getBits());
        } else if ($this.$alt)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt = 1;
        }
    } else {
        $curAlt = $this.$alt;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$11__init_0($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$10__init_0($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$7__init_0($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$6__init_0($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$9__init_0($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$8__init_0($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_intersection = ($this, $clazz) => {
    let $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $clazz.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($clazz.$hasUCI())
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
    } else if (!$this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt ^ $clazz.$isNegative())) {
            if (!$this.$alt)
                $this.$bits.$and($clazz.$getBits());
            else
                $this.$bits.$or($clazz.$getBits());
        } else if (!$this.$alt)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt = 0;
        }
    } else {
        $curAlt = $this.$alt;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$17__init_0($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$16__init_0($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$13__init_0($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$12__init_0($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$15__init_0($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$14__init_0($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_contains = ($this, $ch) => {
    if ($this.$nonBitSet !== null)
        return $this.$alt ^ $this.$nonBitSet.$contains0($ch);
    return $this.$alt ^ $this.$bits.$get13($ch);
},
jur_CharClass_getBits = $this => {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
},
jur_CharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_CharClass_getInstance = $this => {
    let $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = $this.$getBits();
    $res = jur_CharClass$18__init_0($this, $bs);
    return $res.$setNegative($this.$isNegative());
},
jur_CharClass_toString = $this => {
    let $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$bits.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append11(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$bits.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
},
jur_CharClass_hasUCI = $this => {
    return $this.$hasUCI0;
},
jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
jn_BufferUnderflowException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jn_BufferUnderflowException__init_ = () => {
    let var_0 = new jn_BufferUnderflowException();
    jn_BufferUnderflowException__init_0(var_0);
    return var_0;
};
function juc_TimeUnit() {
    jl_Enum.call(this);
    this.$nanoseconds = Long_ZERO;
}
let juc_TimeUnit_NANOSECONDS = null,
juc_TimeUnit_MICROSECONDS = null,
juc_TimeUnit_MILLISECONDS = null,
juc_TimeUnit_SECONDS = null,
juc_TimeUnit_MINUTES = null,
juc_TimeUnit_HOURS = null,
juc_TimeUnit_DAYS = null,
juc_TimeUnit_$VALUES = null,
juc_TimeUnit_$callClinit = () => {
    juc_TimeUnit_$callClinit = $rt_eraseClinit(juc_TimeUnit);
    juc_TimeUnit__clinit_();
},
juc_TimeUnit_values = () => {
    juc_TimeUnit_$callClinit();
    return juc_TimeUnit_$VALUES.$clone0();
},
juc_TimeUnit__init_0 = ($this, var$1, var$2, $nanoseconds) => {
    juc_TimeUnit_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$nanoseconds = $nanoseconds;
},
juc_TimeUnit__init_ = (var_0, var_1, var_2) => {
    let var_3 = new juc_TimeUnit();
    juc_TimeUnit__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
juc_TimeUnit_convert = ($this, $sourceDuration, $sourceUnit) => {
    let $sourceNanos, $targetNanos;
    $sourceNanos = $sourceUnit.$nanoseconds;
    $targetNanos = $this.$nanoseconds;
    if (Long_ge($sourceNanos, $targetNanos))
        return Long_mul($sourceDuration, Long_div($sourceNanos, $targetNanos));
    return Long_div($sourceDuration, Long_div($targetNanos, $sourceNanos));
},
juc_TimeUnit_toMillis = ($this, $duration) => {
    juc_TimeUnit_$callClinit();
    return juc_TimeUnit_convert(juc_TimeUnit_MILLISECONDS, $duration, $this);
},
juc_TimeUnit_toSeconds = ($this, $duration) => {
    juc_TimeUnit_$callClinit();
    return juc_TimeUnit_convert(juc_TimeUnit_SECONDS, $duration, $this);
},
juc_TimeUnit_$values = () => {
    let var$1, var$2;
    juc_TimeUnit_$callClinit();
    var$1 = $rt_createArray(juc_TimeUnit, 7);
    var$2 = var$1.data;
    var$2[0] = juc_TimeUnit_NANOSECONDS;
    var$2[1] = juc_TimeUnit_MICROSECONDS;
    var$2[2] = juc_TimeUnit_MILLISECONDS;
    var$2[3] = juc_TimeUnit_SECONDS;
    var$2[4] = juc_TimeUnit_MINUTES;
    var$2[5] = juc_TimeUnit_HOURS;
    var$2[6] = juc_TimeUnit_DAYS;
    return var$1;
},
juc_TimeUnit__clinit_ = () => {
    juc_TimeUnit_NANOSECONDS = juc_TimeUnit__init_($rt_s(613), 0, Long_fromInt(1));
    juc_TimeUnit_MICROSECONDS = juc_TimeUnit__init_($rt_s(614), 1, Long_fromInt(1000));
    juc_TimeUnit_MILLISECONDS = juc_TimeUnit__init_($rt_s(615), 2, Long_fromInt(1000000));
    juc_TimeUnit_SECONDS = juc_TimeUnit__init_($rt_s(558), 3, Long_fromInt(1000000000));
    juc_TimeUnit_MINUTES = juc_TimeUnit__init_($rt_s(560), 4, Long_create(4165425152, 13));
    juc_TimeUnit_HOURS = juc_TimeUnit__init_($rt_s(562), 5, Long_create(817405952, 838));
    juc_TimeUnit_DAYS = juc_TimeUnit__init_($rt_s(566), 6, Long_create(2437873664, 20116));
    juc_TimeUnit_$VALUES = juc_TimeUnit_$values();
};
function onnpi_NostrNoticeMessage() {
    let a = this; onnp_NostrMessage.call(a);
    a.$message3 = null;
    a.$exception = null;
}
let onnpi_NostrNoticeMessage__init_ = ($this, $message, $exception) => {
    onnp_NostrMessage__init_($this);
    $this.$message3 = $message;
    $this.$exception = $exception;
},
onnpi_NostrNoticeMessage__init_2 = (var_0, var_1) => {
    let var_2 = new onnpi_NostrNoticeMessage();
    onnpi_NostrNoticeMessage__init_(var_2, var_0, var_1);
    return var_2;
},
onnpi_NostrNoticeMessage__init_0 = ($this, $message) => {
    onnpi_NostrNoticeMessage__init_($this, $message, null);
},
onnpi_NostrNoticeMessage__init_1 = var_0 => {
    let var_1 = new onnpi_NostrNoticeMessage();
    onnpi_NostrNoticeMessage__init_0(var_1, var_0);
    return var_1;
},
onnpi_NostrNoticeMessage_getMessage = $this => {
    return $this.$message3;
},
onnpi_NostrNoticeMessage_getException = $this => {
    return $this.$exception;
},
onnpi_NostrNoticeMessage_throwException = $this => {
    if ($this.$exception === null)
        return;
    $rt_throw($this.$exception);
},
onnpi_NostrNoticeMessage_getPrefix = $this => {
    return $rt_s(616);
},
onnpi_NostrNoticeMessage_getFragments = $this => {
    return ju_List_of1($this.$message3);
},
onnpi_NostrNoticeMessage_parse = $data => {
    let $prefix, $msg;
    $prefix = onp_NGEUtils_safeString($data.$get(0));
    if ($data.$size() >= 2 && $prefix.$equals($rt_s(616))) {
        $msg = onp_NGEUtils_safeString($data.$get(1));
        return onnpi_NostrNoticeMessage__init_1($msg);
    }
    return null;
},
onnpi_NostrNoticeMessage_getException$exported$0 = var$1 => {
    return var$1.$getException();
},
onnpi_NostrNoticeMessage__init_$exported$1 = (var$1, var$2) => {
    return onnpi_NostrNoticeMessage__init_2($rt_str(var$1), var$2);
},
onnpi_NostrNoticeMessage__init_$exported$2 = var$1 => {
    return onnpi_NostrNoticeMessage__init_1($rt_str(var$1));
},
onnpi_NostrNoticeMessage_getMessage$exported$3 = var$1 => {
    return $rt_ustr(var$1.$getMessage());
},
onnpi_NostrNoticeMessage_throwException$exported$4 = var$1 => {
    var$1.$throwException();
},
onnpi_NostrNoticeMessage_parse$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnpi_NostrNoticeMessage_parse(var$1);
},
onnn_Nip01$fetch$lambda$_3_0 = $rt_classWithoutFields(),
onnn_Nip01$fetch$lambda$_3_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnn_Nip01$fetch$lambda$_3_0__init_0 = () => {
    let var_0 = new onnn_Nip01$fetch$lambda$_3_0();
    onnn_Nip01$fetch$lambda$_3_0__init_(var_0);
    return var_0;
},
onnn_Nip01$fetch$lambda$_3_0_apply0 = (var$0, var$1) => {
    return onnn_Nip01$fetch$lambda$_3_0_apply(var$0, var$1);
},
onnn_Nip01$fetch$lambda$_3_0_apply = (var$0, var$1) => {
    return onnn_Nip01_lambda$fetch$0(var$1);
};
function onn_NostrRelay$1() {
    jl_Object.call(this);
    this.$this$04 = null;
}
let onn_NostrRelay$1__init_ = ($this, $this$0) => {
    $this.$this$04 = $this$0;
    jl_Object__init_($this);
},
onn_NostrRelay$1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$1();
    onn_NostrRelay$1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$1_onConnectionClosedByServer = ($this, $reason) => {
    onn_NostrRelay_onConnectionClosedByServer($this.$this$04, $reason);
},
onn_NostrRelay$1_onConnectionOpen = $this => {
    onn_NostrRelay_onConnectionOpen($this.$this$04);
},
onn_NostrRelay$1_onConnectionMessage = ($this, $msg) => {
    onn_NostrRelay_onConnectionMessage($this.$this$04, $msg);
},
onn_NostrRelay$1_onConnectionClosedByClient = ($this, $reason) => {
    onn_NostrRelay_onConnectionClosedByClient($this.$this$04, $reason);
},
onn_NostrRelay$1_onConnectionError = ($this, $e) => {
    onn_NostrRelay_onConnectionError($this.$this$04, $e);
},
onn_NostrRelay$1_onConnectionMessage$exported$0 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$onConnectionMessage(var$2);
},
onn_NostrRelay$1__init_$exported$1 = var$1 => {
    return onn_NostrRelay$1__init_0(var$1);
},
onn_NostrRelay$1_onConnectionClosedByServer$exported$2 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$onConnectionClosedByServer(var$2);
},
onn_NostrRelay$1_onConnectionOpen$exported$3 = var$1 => {
    var$1.$onConnectionOpen();
},
onn_NostrRelay$1_onConnectionError$exported$4 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onConnectionError(var$2);
},
onn_NostrRelay$1_onConnectionClosedByClient$exported$5 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$onConnectionClosedByClient(var$2);
},
ji_IOException = $rt_classWithoutFields(jl_Exception),
ji_IOException__init_0 = $this => {
    jl_Exception__init_1($this);
},
ji_IOException__init_4 = () => {
    let var_0 = new ji_IOException();
    ji_IOException__init_0(var_0);
    return var_0;
},
ji_IOException__init_2 = ($this, $message, $cause) => {
    jl_Exception__init_3($this, $message, $cause);
},
ji_IOException__init_3 = (var_0, var_1) => {
    let var_2 = new ji_IOException();
    ji_IOException__init_2(var_2, var_0, var_1);
    return var_2;
},
ji_IOException__init_ = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
ji_IOException__init_1 = var_0 => {
    let var_1 = new ji_IOException();
    ji_IOException__init_(var_1, var_0);
    return var_1;
},
jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException),
jnc_CharacterCodingException__init_ = $this => {
    ji_IOException__init_0($this);
},
jnc_CharacterCodingException__init_0 = () => {
    let var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_(var_0);
    return var_0;
};
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length5 = 0;
}
let jnc_MalformedInputException__init_ = ($this, $length) => {
    jnc_CharacterCodingException__init_($this);
    $this.$length5 = $length;
},
jnc_MalformedInputException__init_0 = var_0 => {
    let var_1 = new jnc_MalformedInputException();
    jnc_MalformedInputException__init_(var_1, var_0);
    return var_1;
},
jnc_MalformedInputException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length5;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(617)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function cjj_StaticTree() {
    let a = this; jl_Object.call(a);
    a.$static_tree = null;
    a.$extra_bits = null;
    a.$extra_base = 0;
    a.$elems = 0;
    a.$max_length = 0;
}
let cjj_StaticTree_static_ltree = null,
cjj_StaticTree_static_dtree = null,
cjj_StaticTree_static_l_desc = null,
cjj_StaticTree_static_d_desc = null,
cjj_StaticTree_static_bl_desc = null,
cjj_StaticTree_$callClinit = () => {
    cjj_StaticTree_$callClinit = $rt_eraseClinit(cjj_StaticTree);
    cjj_StaticTree__clinit_();
},
cjj_StaticTree__init_ = ($this, $static_tree, $extra_bits, $extra_base, $elems, $max_length) => {
    cjj_StaticTree_$callClinit();
    jl_Object__init_($this);
    $this.$static_tree = $static_tree;
    $this.$extra_bits = $extra_bits;
    $this.$extra_base = $extra_base;
    $this.$elems = $elems;
    $this.$max_length = $max_length;
},
cjj_StaticTree__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cjj_StaticTree();
    cjj_StaticTree__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cjj_StaticTree__clinit_ = () => {
    let var$1, var$2;
    cjj_StaticTree_static_ltree = $rt_createShortArrayFromData([12, 8, 140, 8, 76, 8, 204, 8, 44, 8, 172, 8, 108, 8, 236, 8, 28, 8, 156, 8, 92, 8, 220, 8, 60, 8, 188, 8, 124, 8, 252, 8, 2, 8, 130, 8, 66, 8, 194, 8, 34, 8, 162, 8, 98, 8, 226, 8, 18, 8, 146, 8, 82, 8, 210, 8, 50, 8, 178, 8, 114, 8, 242, 8, 10, 8, 138, 8, 74, 8, 202, 8, 42, 8, 170, 8, 106, 8, 234, 8, 26, 8, 154, 8, 90, 8, 218, 8, 58, 8, 186, 8, 122, 8, 250, 8, 6, 8, 134, 8, 70, 8, 198, 8, 38, 8, 166, 8, 102, 8, 230, 8, 22, 8, 150, 8, 86, 8, 214,
    8, 54, 8, 182, 8, 118, 8, 246, 8, 14, 8, 142, 8, 78, 8, 206, 8, 46, 8, 174, 8, 110, 8, 238, 8, 30, 8, 158, 8, 94, 8, 222, 8, 62, 8, 190, 8, 126, 8, 254, 8, 1, 8, 129, 8, 65, 8, 193, 8, 33, 8, 161, 8, 97, 8, 225, 8, 17, 8, 145, 8, 81, 8, 209, 8, 49, 8, 177, 8, 113, 8, 241, 8, 9, 8, 137, 8, 73, 8, 201, 8, 41, 8, 169, 8, 105, 8, 233, 8, 25, 8, 153, 8, 89, 8, 217, 8, 57, 8, 185, 8, 121, 8, 249, 8, 5, 8, 133, 8, 69, 8, 197, 8, 37, 8, 165, 8, 101, 8, 229, 8, 21, 8, 149, 8, 85, 8, 213, 8, 53, 8, 181, 8, 117, 8,
    245, 8, 13, 8, 141, 8, 77, 8, 205, 8, 45, 8, 173, 8, 109, 8, 237, 8, 29, 8, 157, 8, 93, 8, 221, 8, 61, 8, 189, 8, 125, 8, 253, 8, 19, 9, 275, 9, 147, 9, 403, 9, 83, 9, 339, 9, 211, 9, 467, 9, 51, 9, 307, 9, 179, 9, 435, 9, 115, 9, 371, 9, 243, 9, 499, 9, 11, 9, 267, 9, 139, 9, 395, 9, 75, 9, 331, 9, 203, 9, 459, 9, 43, 9, 299, 9, 171, 9, 427, 9, 107, 9, 363, 9, 235, 9, 491, 9, 27, 9, 283, 9, 155, 9, 411, 9, 91, 9, 347, 9, 219, 9, 475, 9, 59, 9, 315, 9, 187, 9, 443, 9, 123, 9, 379, 9, 251, 9, 507, 9, 7, 9,
    263, 9, 135, 9, 391, 9, 71, 9, 327, 9, 199, 9, 455, 9, 39, 9, 295, 9, 167, 9, 423, 9, 103, 9, 359, 9, 231, 9, 487, 9, 23, 9, 279, 9, 151, 9, 407, 9, 87, 9, 343, 9, 215, 9, 471, 9, 55, 9, 311, 9, 183, 9, 439, 9, 119, 9, 375, 9, 247, 9, 503, 9, 15, 9, 271, 9, 143, 9, 399, 9, 79, 9, 335, 9, 207, 9, 463, 9, 47, 9, 303, 9, 175, 9, 431, 9, 111, 9, 367, 9, 239, 9, 495, 9, 31, 9, 287, 9, 159, 9, 415, 9, 95, 9, 351, 9, 223, 9, 479, 9, 63, 9, 319, 9, 191, 9, 447, 9, 127, 9, 383, 9, 255, 9, 511, 9, 0, 7, 64, 7, 32,
    7, 96, 7, 16, 7, 80, 7, 48, 7, 112, 7, 8, 7, 72, 7, 40, 7, 104, 7, 24, 7, 88, 7, 56, 7, 120, 7, 4, 7, 68, 7, 36, 7, 100, 7, 20, 7, 84, 7, 52, 7, 116, 7, 3, 8, 131, 8, 67, 8, 195, 8, 35, 8, 163, 8, 99, 8, 227, 8]);
    cjj_StaticTree_static_dtree = $rt_createShortArrayFromData([0, 5, 16, 5, 8, 5, 24, 5, 4, 5, 20, 5, 12, 5, 28, 5, 2, 5, 18, 5, 10, 5, 26, 5, 6, 5, 22, 5, 14, 5, 30, 5, 1, 5, 17, 5, 9, 5, 25, 5, 5, 5, 21, 5, 13, 5, 29, 5, 3, 5, 19, 5, 11, 5, 27, 5, 7, 5, 23, 5]);
    var$1 = new cjj_StaticTree;
    var$2 = cjj_StaticTree_static_ltree;
    cjj_Tree_$callClinit();
    cjj_StaticTree__init_(var$1, var$2, cjj_Tree_extra_lbits, 257, 286, 15);
    cjj_StaticTree_static_l_desc = var$1;
    cjj_StaticTree_static_d_desc = cjj_StaticTree__init_0(cjj_StaticTree_static_dtree, cjj_Tree_extra_dbits, 0, 30, 15);
    cjj_StaticTree_static_bl_desc = cjj_StaticTree__init_0(null, cjj_Tree_extra_blbits, 0, 19, 7);
},
jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception),
jl_CloneNotSupportedException__init_0 = $this => {
    jl_Exception__init_1($this);
},
jl_CloneNotSupportedException__init_ = () => {
    let var_0 = new jl_CloneNotSupportedException();
    jl_CloneNotSupportedException__init_0(var_0);
    return var_0;
},
jtt_TemporalAmount = $rt_classWithoutFields(0);
function jt_Duration() {
    let a = this; jl_Object.call(a);
    a.$seconds = Long_ZERO;
    a.$nanos = 0;
}
let jt_Duration_ZERO = null,
jt_Duration_$callClinit = () => {
    jt_Duration_$callClinit = $rt_eraseClinit(jt_Duration);
    jt_Duration__clinit_();
},
jt_Duration_ofMinutes = $minutes => {
    jt_Duration_$callClinit();
    return jt_Duration_create(jl_Math_multiplyExact($minutes, 60), 0);
},
jt_Duration_ofSeconds = $seconds => {
    jt_Duration_$callClinit();
    return jt_Duration_create($seconds, 0);
},
jt_Duration_ofSeconds0 = ($seconds, $nanoAdjustment) => {
    let $secs, $nos;
    jt_Duration_$callClinit();
    $secs = jl_Math_addExact($seconds, jl_Math_floorDiv($nanoAdjustment, 1000000000));
    $nos = jl_Math_floorMod($nanoAdjustment, 1000000000);
    return jt_Duration_create($secs, $nos);
},
jt_Duration_ofMillis = $millis => {
    let $secs, $mos;
    jt_Duration_$callClinit();
    $secs = Long_div($millis, Long_fromInt(1000));
    $mos = Long_lo(Long_rem($millis, Long_fromInt(1000)));
    if ($mos < 0) {
        $mos = $mos + 1000 | 0;
        $secs = Long_sub($secs, Long_fromInt(1));
    }
    return jt_Duration_create($secs, $rt_imul($mos, 1000000));
},
jt_Duration_ofNanos = $nanos => {
    let $secs, $nos;
    jt_Duration_$callClinit();
    $secs = Long_div($nanos, Long_fromInt(1000000000));
    $nos = Long_lo(Long_rem($nanos, Long_fromInt(1000000000)));
    if ($nos < 0) {
        $nos = $nos + 1000000000 | 0;
        $secs = Long_sub($secs, Long_fromInt(1));
    }
    return jt_Duration_create($secs, $nos);
},
jt_Duration_create = ($seconds, $nanoAdjustment) => {
    jt_Duration_$callClinit();
    if (Long_eq(Long_or($seconds, Long_fromInt($nanoAdjustment)), Long_ZERO))
        return jt_Duration_ZERO;
    return jt_Duration__init_($seconds, $nanoAdjustment);
},
jt_Duration__init_0 = ($this, $seconds, $nanos) => {
    jt_Duration_$callClinit();
    jl_Object__init_($this);
    $this.$seconds = $seconds;
    $this.$nanos = $nanos;
},
jt_Duration__init_ = (var_0, var_1) => {
    let var_2 = new jt_Duration();
    jt_Duration__init_0(var_2, var_0, var_1);
    return var_2;
},
jt_Duration_getSeconds = $this => {
    return $this.$seconds;
},
jt_Duration_addTo = ($this, $temporal) => {
    let var$2;
    if (Long_ne($this.$seconds, Long_ZERO)) {
        var$2 = $this.$seconds;
        jtt_ChronoUnit_$callClinit();
        $temporal = $temporal.$plus2(var$2, jtt_ChronoUnit_SECONDS);
    }
    if ($this.$nanos) {
        var$2 = Long_fromInt($this.$nanos);
        jtt_ChronoUnit_$callClinit();
        $temporal = $temporal.$plus2(var$2, jtt_ChronoUnit_NANOS);
    }
    return $temporal;
},
jt_Duration_toMillis = $this => {
    let $result, var$2;
    $result = jl_Math_multiplyExact($this.$seconds, 1000);
    var$2 = jl_Math_addExact($result, Long_fromInt($this.$nanos / 1000000 | 0));
    return var$2;
},
jt_Duration_compareTo = ($this, $otherDuration) => {
    let $cmp;
    $cmp = jl_Long_compare($this.$seconds, $otherDuration.$seconds);
    if ($cmp)
        return $cmp;
    return $this.$nanos - $otherDuration.$nanos | 0;
},
jt_Duration_equals = ($this, $otherDuration) => {
    let $other;
    if ($this === $otherDuration)
        return 1;
    if (!($otherDuration instanceof jt_Duration))
        return 0;
    $other = $otherDuration;
    return Long_eq($this.$seconds, $other.$seconds) && $this.$nanos == $other.$nanos ? 1 : 0;
},
jt_Duration_hashCode = $this => {
    return Long_lo(Long_xor($this.$seconds, Long_shru($this.$seconds, 32))) + (51 * $this.$nanos | 0) | 0;
},
jt_Duration_toString = $this => {
    let $hours, $minutes, $secs, $buf, $pos;
    jt_Duration_$callClinit();
    if ($this === jt_Duration_ZERO)
        return $rt_s(618);
    $hours = Long_div($this.$seconds, Long_fromInt(3600));
    $minutes = Long_lo(Long_div(Long_rem($this.$seconds, Long_fromInt(3600)), Long_fromInt(60)));
    $secs = Long_lo(Long_rem($this.$seconds, Long_fromInt(60)));
    $buf = jl_StringBuilder__init_0(24);
    $buf.$append1($rt_s(619));
    if (Long_ne($hours, Long_ZERO))
        ($buf.$append13($hours)).$append0(72);
    if ($minutes)
        ($buf.$append3($minutes)).$append0(77);
    if (!$secs && !$this.$nanos && $buf.$length() > 2)
        return $buf.$toString();
    if ($secs < 0 && $this.$nanos > 0) {
        if ($secs == (-1))
            $buf.$append1($rt_s(368));
        else
            $buf.$append3($secs + 1 | 0);
    } else
        $buf.$append3($secs);
    if ($this.$nanos > 0) {
        $pos = $buf.$length();
        if ($secs >= 0)
            $buf.$append3($this.$nanos + 1000000000 | 0);
        else
            $buf.$append3(2000000000 - $this.$nanos | 0);
        while ($buf.$charAt($buf.$length() - 1 | 0) == 48) {
            $buf.$setLength($buf.$length() - 1 | 0);
        }
        $buf.$setCharAt($pos, 46);
    }
    $buf.$append0(83);
    return $buf.$toString();
},
jt_Duration_compareTo0 = ($this, var$1) => {
    return jt_Duration_compareTo($this, var$1);
},
jt_Duration__clinit_ = () => {
    jt_Duration_ZERO = jt_Duration__init_(Long_ZERO, 0);
},
ju_Map$Entry = $rt_classWithoutFields(0);
function juc_MapEntry() {
    let a = this; jl_Object.call(a);
    a.$key0 = null;
    a.$value4 = null;
}
let juc_MapEntry__init_ = ($this, $theKey, $theValue) => {
    jl_Object__init_($this);
    $this.$key0 = $theKey;
    $this.$value4 = $theValue;
},
juc_MapEntry__init_0 = (var_0, var_1) => {
    let var_2 = new juc_MapEntry();
    juc_MapEntry__init_(var_2, var_0, var_1);
    return var_2;
},
juc_MapEntry_getKey = $this => {
    return $this.$key0;
},
juc_MapEntry_getValue = $this => {
    return $this.$value4;
},
juc_MapEntry_setValue = ($this, $object) => {
    let $result;
    $result = $this.$value4;
    $this.$value4 = $object;
    return $result;
};
function juc_ConcurrentHashMap$HashEntry() {
    let a = this; juc_MapEntry.call(a);
    a.$origKeyHash0 = 0;
    a.$next7 = null;
    a.$removed = 0;
}
let juc_ConcurrentHashMap$HashEntry__init_ = ($this, $theKey, $hash) => {
    juc_MapEntry__init_($this, $theKey, null);
    $this.$origKeyHash0 = $hash;
},
juc_ConcurrentHashMap$HashEntry__init_0 = (var_0, var_1) => {
    let var_2 = new juc_ConcurrentHashMap$HashEntry();
    juc_ConcurrentHashMap$HashEntry__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0 = $rt_classWithoutFields(),
onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0__init_0 = () => {
    let var_0 = new onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0();
    onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0__init_(var_0);
    return var_0;
},
onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0_apply0 = (var$0, var$1) => {
    return onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0_apply(var$0, var$1);
},
onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0_apply = (var$0, var$1) => {
    return onn_NostrRelaySubManager_lambda$onRelayBeforeSend$0(var$1);
};
function jm_BigInteger() {
    let a = this; jl_Number.call(a);
    a.$digits0 = null;
    a.$numberLength = 0;
    a.$sign1 = 0;
    a.$firstNonzeroDigit = 0;
}
let jm_BigInteger_ZERO = null,
jm_BigInteger_ONE = null,
jm_BigInteger_TWO = null,
jm_BigInteger_TEN = null,
jm_BigInteger_MINUS_ONE = null,
jm_BigInteger_SMALL_VALUES = null,
jm_BigInteger_TWO_POWS = null,
jm_BigInteger_$callClinit = () => {
    jm_BigInteger_$callClinit = $rt_eraseClinit(jm_BigInteger);
    jm_BigInteger__clinit_();
},
jm_BigInteger__init_3 = ($this, $sign, $value) => {
    let var$3;
    jm_BigInteger_$callClinit();
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    $this.$numberLength = 1;
    var$3 = $rt_createIntArray(1);
    var$3.data[0] = $value;
    $this.$digits0 = var$3;
},
jm_BigInteger__init_0 = (var_0, var_1) => {
    let var_2 = new jm_BigInteger();
    jm_BigInteger__init_3(var_2, var_0, var_1);
    return var_2;
},
jm_BigInteger__init_4 = ($this, $sign, $numberLength, $digits) => {
    jm_BigInteger_$callClinit();
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    $this.$numberLength = $numberLength;
    $this.$digits0 = $digits;
},
jm_BigInteger__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jm_BigInteger();
    jm_BigInteger__init_4(var_3, var_0, var_1, var_2);
    return var_3;
},
jm_BigInteger__init_2 = ($this, $sign, $val) => {
    let var$3;
    jm_BigInteger_$callClinit();
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    if (Long_eq(Long_and($val, Long_create(0, 4294967295)), Long_ZERO)) {
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = Long_lo($val);
        $this.$digits0 = var$3;
    } else {
        $this.$numberLength = 2;
        $this.$digits0 = $rt_createIntArrayFromData([Long_lo($val), Long_hi($val)]);
    }
},
jm_BigInteger__init_1 = (var_0, var_1) => {
    let var_2 = new jm_BigInteger();
    jm_BigInteger__init_2(var_2, var_0, var_1);
    return var_2;
},
jm_BigInteger__init_5 = ($this, $signum, $digits) => {
    let var$3, var$4;
    jm_BigInteger_$callClinit();
    var$3 = $digits.data;
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    var$4 = var$3.length;
    if (var$4) {
        $this.$sign1 = $signum;
        $this.$numberLength = var$4;
        $this.$digits0 = $digits;
        jm_BigInteger_cutOffLeadingZeroes($this);
    } else {
        $this.$sign1 = 0;
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = 0;
        $this.$digits0 = var$3;
    }
},
jm_BigInteger__init_6 = (var_0, var_1) => {
    let var_2 = new jm_BigInteger();
    jm_BigInteger__init_5(var_2, var_0, var_1);
    return var_2;
},
jm_BigInteger_valueOf = $val => {
    jm_BigInteger_$callClinit();
    if (Long_lt($val, Long_ZERO)) {
        if (Long_eq($val, Long_fromInt(-1)))
            return jm_BigInteger_MINUS_ONE;
        return jm_BigInteger__init_1((-1), Long_neg($val));
    }
    if (Long_gt($val, Long_fromInt(10)))
        return jm_BigInteger__init_1(1, $val);
    return jm_BigInteger_SMALL_VALUES.data[Long_lo($val)];
},
jm_BigInteger_abs = $this => {
    if ($this.$sign1 < 0)
        $this = jm_BigInteger__init_(1, $this.$numberLength, $this.$digits0);
    return $this;
},
jm_BigInteger_negate = $this => {
    return !$this.$sign1 ? $this : jm_BigInteger__init_( -$this.$sign1 | 0, $this.$numberLength, $this.$digits0);
},
jm_BigInteger_add = ($this, $val) => {
    return jm_Elementary_add0($this, $val);
},
jm_BigInteger_subtract = ($this, $val) => {
    return jm_Elementary_subtract1($this, $val);
},
jm_BigInteger_signum = $this => {
    return $this.$sign1;
},
jm_BigInteger_shiftRight = ($this, $n) => {
    if ($n && $this.$sign1)
        return $n > 0 ? jm_BitLevel_shiftRight0($this, $n) : jm_BitLevel_shiftLeft0($this,  -$n | 0);
    return $this;
},
jm_BigInteger_shiftLeft = ($this, $n) => {
    if ($n && $this.$sign1)
        return $n > 0 ? jm_BitLevel_shiftLeft0($this, $n) : jm_BitLevel_shiftRight0($this,  -$n | 0);
    return $this;
},
jm_BigInteger_shiftLeftOneBit = $this => {
    if ($this.$sign1)
        $this = jm_BitLevel_shiftLeftOneBit0($this);
    return $this;
},
jm_BigInteger_bitLength = $this => {
    return jm_BitLevel_bitLength($this);
},
jm_BigInteger_testBit = ($this, $n) => {
    let $intCount, $digit, var$4, $firstNonZeroDigit;
    if (!$n)
        return !($this.$digits0.data[0] & 1) ? 0 : 1;
    if ($n < 0)
        $rt_throw(jl_ArithmeticException__init_($rt_s(620)));
    $intCount = $n >> 5;
    if ($intCount >= $this.$numberLength)
        return $this.$sign1 >= 0 ? 0 : 1;
    $digit = $this.$digits0.data[$intCount];
    var$4 = 1 << ($n & 31);
    if ($this.$sign1 < 0) {
        $firstNonZeroDigit = $this.$getFirstNonzeroDigit();
        if ($intCount < $firstNonZeroDigit)
            return 0;
        $digit = $firstNonZeroDigit == $intCount ?  -$digit | 0 : $digit ^ (-1);
    }
    return !($digit & var$4) ? 0 : 1;
},
jm_BigInteger_getLowestSetBit = $this => {
    let $i;
    if (!$this.$sign1)
        return (-1);
    $i = $this.$getFirstNonzeroDigit();
    return ($i << 5) + jl_Integer_numberOfTrailingZeros($this.$digits0.data[$i]) | 0;
},
jm_BigInteger_longValue = $this => {
    let $value;
    $value = $this.$numberLength <= 1 ? Long_and(Long_fromInt($this.$digits0.data[0]), Long_create(4294967295, 0)) : Long_or(Long_shl(Long_fromInt($this.$digits0.data[1]), 32), Long_and(Long_fromInt($this.$digits0.data[0]), Long_create(4294967295, 0)));
    return Long_mul(Long_fromInt($this.$sign1), $value);
},
jm_BigInteger_compareTo = ($this, $val) => {
    if ($this.$sign1 > $val.$sign1)
        return 1;
    if ($this.$sign1 < $val.$sign1)
        return (-1);
    if ($this.$numberLength > $val.$numberLength)
        return $this.$sign1;
    if ($this.$numberLength < $val.$numberLength)
        return  -$val.$sign1 | 0;
    return $rt_imul($this.$sign1, jm_Elementary_compareArrays($this.$digits0, $val.$digits0, $this.$numberLength));
},
jm_BigInteger_equals = ($this, $x) => {
    let $x1;
    if ($this === $x)
        return 1;
    if (!($x instanceof jm_BigInteger))
        return 0;
    $x1 = $x;
    return $this.$sign1 == $x1.$sign1 && $this.$numberLength == $x1.$numberLength && $this.$equalsArrays($x1.$digits0) ? 1 : 0;
},
jm_BigInteger_equalsArrays = ($this, $b) => {
    let $i, var$3;
    $i = $this.$numberLength - 1 | 0;
    while ($i >= 0) {
        var$3 = $b.data;
        if ($this.$digits0.data[$i] != var$3[$i])
            break;
        $i = $i + (-1) | 0;
    }
    return $i >= 0 ? 0 : 1;
},
jm_BigInteger_multiply = ($this, $val) => {
    if (!$val.$sign1) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ZERO;
    }
    if ($this.$sign1)
        return jm_Multiplication_multiply($this, $val);
    jm_BigInteger_$callClinit();
    return jm_BigInteger_ZERO;
},
jm_BigInteger_pow = ($this, $exp) => {
    let $x;
    if ($exp < 0)
        $rt_throw(jl_ArithmeticException__init_($rt_s(621)));
    if (!$exp) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ONE;
    }
    if ($exp != 1) {
        jm_BigInteger_$callClinit();
        if (!$this.$equals(jm_BigInteger_ONE) && !$this.$equals(jm_BigInteger_ZERO)) {
            if ($this.$testBit(0))
                return jm_Multiplication_pow($this, $exp);
            $x = 1;
            while (!$this.$testBit($x)) {
                $x = $x + 1 | 0;
            }
            return (jm_BigInteger_getPowerOfTwo($rt_imul($x, $exp))).$multiply(($this.$shiftRight1($x)).$pow0($exp));
        }
    }
    return $this;
},
jm_BigInteger_divideAndRemainder = ($this, $divisor) => {
    let $divisorSign, $divisorLen, $divisorDigits, $thisDigits, $thisLen, var$7, $cmp, var$9, var$10, $thisSign, $quotientLength, $quotientSign, $quotientDigits, $remainderDigits, $result0, $result1;
    $divisorSign = $divisor.$sign1;
    if (!$divisorSign)
        $rt_throw(jl_ArithmeticException__init_($rt_s(622)));
    $divisorLen = $divisor.$numberLength;
    $divisorDigits = $divisor.$digits0;
    if ($divisorLen == 1)
        return jm_Division_divideAndRemainderByInteger($this, $divisorDigits.data[0], $divisorSign);
    $thisDigits = $this.$digits0;
    $thisLen = $this.$numberLength;
    var$7 = $rt_compare($thisLen, $divisorLen);
    $cmp = !var$7 ? jm_Elementary_compareArrays($thisDigits, $divisorDigits, $thisLen) : var$7 <= 0 ? (-1) : 1;
    if ($cmp < 0) {
        var$9 = $rt_createArray(jm_BigInteger, 2);
        var$10 = var$9.data;
        jm_BigInteger_$callClinit();
        var$10[0] = jm_BigInteger_ZERO;
        var$10[1] = $this;
        return var$9;
    }
    $thisSign = $this.$sign1;
    $quotientLength = ($thisLen - $divisorLen | 0) + 1 | 0;
    $quotientSign = $thisSign != $divisorSign ? (-1) : 1;
    $quotientDigits = $rt_createIntArray($quotientLength);
    $remainderDigits = jm_Division_divide($quotientDigits, $quotientLength, $thisDigits, $thisLen, $divisorDigits, $divisorLen);
    $result0 = jm_BigInteger__init_($quotientSign, $quotientLength, $quotientDigits);
    $result1 = jm_BigInteger__init_($thisSign, $divisorLen, $remainderDigits);
    jm_BigInteger_cutOffLeadingZeroes($result0);
    jm_BigInteger_cutOffLeadingZeroes($result1);
    return $rt_wrapArray(jm_BigInteger, [$result0, $result1]);
},
jm_BigInteger_divide = ($this, $divisor) => {
    let $divisorSign, $thisSign, $thisLen, $divisorLen, $val, var$7, $cmp, $resLength, $resDigits, $resSign, $result;
    if (!$divisor.$sign1)
        $rt_throw(jl_ArithmeticException__init_($rt_s(622)));
    $divisorSign = $divisor.$sign1;
    if ($divisor.$isOne()) {
        if ($divisor.$sign1 <= 0)
            $this = $this.$negate();
        return $this;
    }
    $thisSign = $this.$sign1;
    $thisLen = $this.$numberLength;
    $divisorLen = $divisor.$numberLength;
    if (($thisLen + $divisorLen | 0) == 2) {
        $val = Long_div(Long_and(Long_fromInt($this.$digits0.data[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($divisor.$digits0.data[0]), Long_create(4294967295, 0)));
        if ($thisSign != $divisorSign)
            $val = Long_neg($val);
        return jm_BigInteger_valueOf($val);
    }
    var$7 = $rt_compare($thisLen, $divisorLen);
    $cmp = !var$7 ? jm_Elementary_compareArrays($this.$digits0, $divisor.$digits0, $thisLen) : var$7 <= 0 ? (-1) : 1;
    if (!$cmp)
        return $thisSign != $divisorSign ? jm_BigInteger_MINUS_ONE : jm_BigInteger_ONE;
    if ($cmp == (-1))
        return jm_BigInteger_ZERO;
    $resLength = ($thisLen - $divisorLen | 0) + 1 | 0;
    $resDigits = $rt_createIntArray($resLength);
    $resSign = $thisSign != $divisorSign ? (-1) : 1;
    if ($divisorLen != 1)
        jm_Division_divide($resDigits, $resLength, $this.$digits0, $thisLen, $divisor.$digits0, $divisorLen);
    else
        jm_Division_divideArrayByInt($resDigits, $this.$digits0, $thisLen, $divisor.$digits0.data[0]);
    $result = jm_BigInteger__init_($resSign, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_BigInteger_cutOffLeadingZeroes = $this => {
    let var$1, var$2, var$3;
    while ($this.$numberLength > 0) {
        var$1 = $this.$digits0.data;
        var$2 = $this.$numberLength - 1 | 0;
        $this.$numberLength = var$2;
        if (var$1[var$2])
            break;
    }
    var$1 = $this.$digits0.data;
    var$3 = $this.$numberLength;
    $this.$numberLength = var$3 + 1 | 0;
    if (!var$1[var$3])
        $this.$sign1 = 0;
},
jm_BigInteger_isOne = $this => {
    return $this.$numberLength == 1 && $this.$digits0.data[0] == 1 ? 1 : 0;
},
jm_BigInteger_getFirstNonzeroDigit = $this => {
    let $i;
    if ($this.$firstNonzeroDigit == (-2)) {
        if (!$this.$sign1)
            $i = (-1);
        else {
            $i = 0;
            while (!$this.$digits0.data[$i]) {
                $i = $i + 1 | 0;
            }
        }
        $this.$firstNonzeroDigit = $i;
    }
    return $this.$firstNonzeroDigit;
},
jm_BigInteger_getPowerOfTwo = $exp => {
    let $intCount, $bitN, var$4, $resDigits, var$6;
    jm_BigInteger_$callClinit();
    if ($exp < jm_BigInteger_TWO_POWS.data.length)
        return jm_BigInteger_TWO_POWS.data[$exp];
    $intCount = $exp >> 5;
    $bitN = $exp & 31;
    var$4 = $intCount + 1 | 0;
    $resDigits = $rt_createIntArray(var$4);
    var$6 = $resDigits.data;
    var$6[$intCount] = 1 << $bitN;
    return jm_BigInteger__init_(1, var$4, $resDigits);
},
jm_BigInteger__clinit_ = () => {
    let var$1, var$2, $i;
    jm_BigInteger_ZERO = jm_BigInteger__init_0(0, 0);
    jm_BigInteger_ONE = jm_BigInteger__init_0(1, 1);
    jm_BigInteger_TWO = jm_BigInteger__init_0(1, 2);
    jm_BigInteger_TEN = jm_BigInteger__init_0(1, 10);
    jm_BigInteger_MINUS_ONE = jm_BigInteger__init_0((-1), 1);
    var$1 = $rt_createArray(jm_BigInteger, 11);
    var$2 = var$1.data;
    var$2[0] = jm_BigInteger_ZERO;
    var$2[1] = jm_BigInteger_ONE;
    var$2[2] = jm_BigInteger_TWO;
    var$2[3] = jm_BigInteger__init_0(1, 3);
    var$2[4] = jm_BigInteger__init_0(1, 4);
    var$2[5] = jm_BigInteger__init_0(1, 5);
    var$2[6] = jm_BigInteger__init_0(1, 6);
    var$2[7] = jm_BigInteger__init_0(1, 7);
    var$2[8] = jm_BigInteger__init_0(1, 8);
    var$2[9] = jm_BigInteger__init_0(1, 9);
    var$2[10] = jm_BigInteger_TEN;
    jm_BigInteger_SMALL_VALUES = var$1;
    jm_BigInteger_TWO_POWS = $rt_createArray(jm_BigInteger, 32);
    $i = 0;
    while ($i < jm_BigInteger_TWO_POWS.data.length) {
        jm_BigInteger_TWO_POWS.data[$i] = jm_BigInteger_valueOf(Long_shl(Long_fromInt(1), $i));
        $i = $i + 1 | 0;
    }
},
jt_ZoneId = $rt_classWithoutFields(),
jt_ZoneId_FROM = null,
jt_ZoneId_SHORT_IDS = null,
jt_ZoneId_$callClinit = () => {
    jt_ZoneId_$callClinit = $rt_eraseClinit(jt_ZoneId);
    jt_ZoneId__clinit_();
},
jt_ZoneId_of = $zoneId => {
    let var$2, var$3, $offset, var$5, var$6;
    jt_ZoneId_$callClinit();
    ju_Objects_requireNonNull($zoneId, $rt_s(623));
    if ($zoneId.$equals($rt_s(442))) {
        jt_ZoneOffset_$callClinit();
        return jt_ZoneOffset_UTC;
    }
    if ($zoneId.$length() == 1) {
        var$2 = new jt_DateTimeException;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(624)), $zoneId);
        jt_DateTimeException__init_(var$2, jl_StringBuilder_toString(var$3));
        $rt_throw(var$2);
    }
    if (!$zoneId.$startsWith($rt_s(625)) && !$zoneId.$startsWith($rt_s(367))) {
        if (!$zoneId.$equals($rt_s(626)) && !$zoneId.$equals($rt_s(463)) && !$zoneId.$equals($rt_s(627))) {
            if (!$zoneId.$startsWith($rt_s(628)) && !$zoneId.$startsWith($rt_s(629)) && !$zoneId.$startsWith($rt_s(630)) && !$zoneId.$startsWith($rt_s(631))) {
                if (!$zoneId.$startsWith($rt_s(632)) && !$zoneId.$startsWith($rt_s(633)))
                    return jt_ZoneRegion_ofId($zoneId, 1);
                $offset = jt_ZoneOffset_of($zoneId.$substring0(2));
                if (!jt_ZoneOffset_getTotalSeconds($offset))
                    return jt_ZoneRegion__init_0($rt_s(627), jt_ZoneOffset_getRules($offset));
                var$2 = new jt_ZoneRegion;
                var$3 = jt_ZoneOffset_getId($offset);
                var$5 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(627)), var$3);
                jt_ZoneRegion__init_(var$2, jl_StringBuilder_toString(var$5), jt_ZoneOffset_getRules($offset));
                return var$2;
            }
            $offset = jt_ZoneOffset_of($zoneId.$substring0(3));
            if (!jt_ZoneOffset_getTotalSeconds($offset))
                return jt_ZoneRegion__init_0($zoneId.$substring(0, 3), jt_ZoneOffset_getRules($offset));
            var$2 = new jt_ZoneRegion;
            var$3 = $zoneId.$substring(0, 3);
            var$5 = jt_ZoneOffset_getId($offset);
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$3), var$5);
            jt_ZoneRegion__init_(var$2, jl_StringBuilder_toString(var$6), jt_ZoneOffset_getRules($offset));
            return var$2;
        }
        var$3 = new jt_ZoneRegion;
        jt_ZoneOffset_$callClinit();
        jt_ZoneRegion__init_(var$3, $zoneId, jt_ZoneOffset_getRules(jt_ZoneOffset_UTC));
        return var$3;
    }
    return jt_ZoneOffset_of($zoneId);
},
jt_ZoneId_ofOffset = ($prefix, $offset) => {
    let var$3, var$4, var$5;
    jt_ZoneId_$callClinit();
    ju_Objects_requireNonNull($prefix, $rt_s(634));
    ju_Objects_requireNonNull($offset, $rt_s(52));
    if (!$prefix.$length())
        return $offset;
    if (!$prefix.$equals($rt_s(463)) && !$prefix.$equals($rt_s(626)) && !$prefix.$equals($rt_s(627))) {
        var$3 = new jl_IllegalArgumentException;
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(635)), $prefix);
        jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$4));
        $rt_throw(var$3);
    }
    if (!jt_ZoneOffset_getTotalSeconds($offset))
        return jt_ZoneRegion__init_0($prefix, jt_ZoneOffset_getRules($offset));
    var$3 = new jt_ZoneRegion;
    var$4 = jt_ZoneOffset_getId($offset);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $prefix), var$4);
    jt_ZoneRegion__init_(var$3, jl_StringBuilder_toString(var$5), jt_ZoneOffset_getRules($offset));
    return var$3;
},
jt_ZoneId__init_ = $this => {
    jt_ZoneId_$callClinit();
    jl_Object__init_($this);
    if (jl_Object_getClass($this) !== $rt_cls(jt_ZoneOffset) && jl_Object_getClass($this) !== $rt_cls(jt_ZoneRegion))
        $rt_throw(jl_AssertionError__init_0($rt_s(636)));
},
jt_ZoneId_equals = ($this, $obj) => {
    let $other;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jt_ZoneId))
        return 0;
    $other = $obj;
    return ($this.$getId()).$equals($other.$getId());
},
jt_ZoneId_toString = $this => {
    return $this.$getId();
};
let jt_ZoneId__clinit_ = () => {
    let $base;
    jt_ZoneId_FROM = jt_ZoneId$1__init_0();
    $base = ju_HashMap__init_();
    $base.$put1($rt_s(637), $rt_s(638));
    $base.$put1($rt_s(639), $rt_s(640));
    $base.$put1($rt_s(641), $rt_s(642));
    $base.$put1($rt_s(643), $rt_s(644));
    $base.$put1($rt_s(645), $rt_s(646));
    $base.$put1($rt_s(647), $rt_s(648));
    $base.$put1($rt_s(649), $rt_s(650));
    $base.$put1($rt_s(651), $rt_s(652));
    $base.$put1($rt_s(653), $rt_s(654));
    $base.$put1($rt_s(655), $rt_s(656));
    $base.$put1($rt_s(657), $rt_s(658));
    $base.$put1($rt_s(659), $rt_s(660));
    $base.$put1($rt_s(661), $rt_s(662));
    $base.$put1($rt_s(663), $rt_s(664));
    $base.$put1($rt_s(665), $rt_s(666));
    $base.$put1($rt_s(667), $rt_s(668));
    $base.$put1($rt_s(669), $rt_s(670));
    $base.$put1($rt_s(671), $rt_s(672));
    $base.$put1($rt_s(673), $rt_s(674));
    $base.$put1($rt_s(675), $rt_s(676));
    $base.$put1($rt_s(677), $rt_s(678));
    $base.$put1($rt_s(679), $rt_s(680));
    $base.$put1($rt_s(681), $rt_s(682));
    $base.$put1($rt_s(683), $rt_s(684));
    $base.$put1($rt_s(685), $rt_s(686));
    $base.$put1($rt_s(687), $rt_s(688));
    $base.$put1($rt_s(689), $rt_s(690));
    $base.$put1($rt_s(691), $rt_s(692));
    jt_ZoneId_SHORT_IDS = ju_Collections_unmodifiableMap($base);
};
function jt_ZoneOffset() {
    let a = this; jt_ZoneId.call(a);
    a.$totalSeconds0 = 0;
    a.$id6 = null;
}
let jt_ZoneOffset_SECONDS_CACHE = null,
jt_ZoneOffset_ID_CACHE = null,
jt_ZoneOffset_UTC = null,
jt_ZoneOffset_MIN = null,
jt_ZoneOffset_MAX = null,
jt_ZoneOffset_$callClinit = () => {
    jt_ZoneOffset_$callClinit = $rt_eraseClinit(jt_ZoneOffset);
    jt_ZoneOffset__clinit_();
},
jt_ZoneOffset_of = $offsetId => {
    let $offset, var$3, var$4, var$5, $hours, $minutes, $seconds, var$9, $first;
    jt_ZoneOffset_$callClinit();
    ju_Objects_requireNonNull($offsetId, $rt_s(693));
    $offset = jt_ZoneOffset_ID_CACHE.$get1($offsetId);
    if ($offset !== null)
        return $offset;
    a: {
        b: {
            switch ($offsetId.$length()) {
                case 2:
                    var$3 = $offsetId.$charAt(0);
                    var$4 = $offsetId.$charAt(1);
                    var$5 = jl_StringBuilder__init_();
                    jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append0(var$5, var$3), 48), var$4);
                    $offsetId = jl_StringBuilder_toString(var$5);
                    break b;
                case 4:
                case 8:
                    break;
                case 5:
                    $hours = jt_ZoneOffset_parseNumber($offsetId, 1, 0);
                    $minutes = jt_ZoneOffset_parseNumber($offsetId, 3, 0);
                    $seconds = 0;
                    break a;
                case 6:
                    $hours = jt_ZoneOffset_parseNumber($offsetId, 1, 0);
                    $minutes = jt_ZoneOffset_parseNumber($offsetId, 4, 1);
                    $seconds = 0;
                    break a;
                case 7:
                    $hours = jt_ZoneOffset_parseNumber($offsetId, 1, 0);
                    $minutes = jt_ZoneOffset_parseNumber($offsetId, 3, 0);
                    $seconds = jt_ZoneOffset_parseNumber($offsetId, 5, 0);
                    break a;
                case 9:
                    $hours = jt_ZoneOffset_parseNumber($offsetId, 1, 0);
                    $minutes = jt_ZoneOffset_parseNumber($offsetId, 4, 1);
                    $seconds = jt_ZoneOffset_parseNumber($offsetId, 7, 1);
                    break a;
                case 3:
                    break b;
                default:
            }
            var$5 = new jt_DateTimeException;
            var$9 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(694)), $offsetId);
            jt_DateTimeException__init_(var$5, jl_StringBuilder_toString(var$9));
            $rt_throw(var$5);
        }
        $hours = jt_ZoneOffset_parseNumber($offsetId, 1, 0);
        $minutes = 0;
        $seconds = 0;
    }
    $first = $offsetId.$charAt(0);
    if ($first != 43 && $first != 45) {
        var$5 = new jt_DateTimeException;
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(695)), $offsetId);
        jt_DateTimeException__init_(var$5, jl_StringBuilder_toString(var$9));
        $rt_throw(var$5);
    }
    if ($first != 45)
        return jt_ZoneOffset_ofHoursMinutesSeconds($hours, $minutes, $seconds);
    return jt_ZoneOffset_ofHoursMinutesSeconds( -$hours | 0,  -$minutes | 0,  -$seconds | 0);
},
jt_ZoneOffset_parseNumber = ($offsetId, $pos, $precededByColon) => {
    let var$4, var$5, var$6, $ch1, $ch2;
    jt_ZoneOffset_$callClinit();
    if ($precededByColon && $offsetId.$charAt($pos - 1 | 0) != 58) {
        var$4 = new jt_DateTimeException;
        var$5 = jl_String_valueOf($offsetId);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(696)), var$5);
        jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$6));
        $rt_throw(var$4);
    }
    $ch1 = $offsetId.$charAt($pos);
    $ch2 = $offsetId.$charAt($pos + 1 | 0);
    if ($ch1 >= 48 && $ch1 <= 57 && $ch2 >= 48 && $ch2 <= 57)
        return (($ch1 - 48 | 0) * 10 | 0) + ($ch2 - 48 | 0) | 0;
    var$4 = new jt_DateTimeException;
    var$5 = jl_String_valueOf($offsetId);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(697)), var$5);
    jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$6));
    $rt_throw(var$4);
},
jt_ZoneOffset_ofHoursMinutesSeconds = ($hours, $minutes, $seconds) => {
    let $totalSeconds;
    jt_ZoneOffset_$callClinit();
    jt_ZoneOffset_validate($hours, $minutes, $seconds);
    $totalSeconds = jt_ZoneOffset_totalSeconds($hours, $minutes, $seconds);
    return jt_ZoneOffset_ofTotalSeconds($totalSeconds);
},
jt_ZoneOffset_validate = ($hours, $minutes, $seconds) => {
    let var$4, var$5, var$6;
    jt_ZoneOffset_$callClinit();
    if ($hours >= (-18) && $hours <= 18) {
        a: {
            if ($hours > 0) {
                if ($minutes >= 0 && $seconds >= 0)
                    break a;
                $rt_throw(jt_DateTimeException__init_0($rt_s(698)));
            }
            if ($hours < 0) {
                if ($minutes <= 0 && $seconds <= 0)
                    break a;
                $rt_throw(jt_DateTimeException__init_0($rt_s(699)));
            }
            if (!($minutes > 0 && $seconds < 0)) {
                if ($minutes >= 0)
                    break a;
                if ($seconds <= 0)
                    break a;
            }
            $rt_throw(jt_DateTimeException__init_0($rt_s(700)));
        }
        if (jl_Math_abs($minutes) > 59) {
            var$4 = new jt_DateTimeException;
            var$5 = jl_Math_abs($minutes);
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(701)), var$5), $rt_s(702));
            jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$6));
            $rt_throw(var$4);
        }
        if (jl_Math_abs($seconds) > 59) {
            var$4 = new jt_DateTimeException;
            var$5 = jl_Math_abs($seconds);
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(703)), var$5), $rt_s(702));
            jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$6));
            $rt_throw(var$4);
        }
        b: {
            if (jl_Math_abs($hours) == 18) {
                if (jl_Math_abs($minutes) > 0)
                    break b;
                if (jl_Math_abs($seconds) > 0)
                    break b;
            }
            return;
        }
        $rt_throw(jt_DateTimeException__init_0($rt_s(704)));
    }
    var$4 = new jt_DateTimeException;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(705)), $hours), $rt_s(706));
    jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$6));
    $rt_throw(var$4);
},
jt_ZoneOffset_totalSeconds = ($hours, $minutes, $seconds) => {
    jt_ZoneOffset_$callClinit();
    return (($hours * 3600 | 0) + ($minutes * 60 | 0) | 0) + $seconds | 0;
},
jt_ZoneOffset_ofTotalSeconds = $totalSeconds => {
    let $totalSecs, $result, var$4;
    jt_ZoneOffset_$callClinit();
    if (jl_Math_abs($totalSeconds) > 64800)
        $rt_throw(jt_DateTimeException__init_0($rt_s(704)));
    if ($totalSeconds % 900 | 0)
        return jt_ZoneOffset__init_($totalSeconds);
    $totalSecs = jl_Integer_valueOf($totalSeconds);
    $result = jt_ZoneOffset_SECONDS_CACHE.$get1($totalSecs);
    if ($result === null) {
        var$4 = jt_ZoneOffset__init_($totalSeconds);
        jt_ZoneOffset_SECONDS_CACHE.$putIfAbsent($totalSecs, var$4);
        $result = jt_ZoneOffset_SECONDS_CACHE.$get1($totalSecs);
        jt_ZoneOffset_ID_CACHE.$putIfAbsent(jt_ZoneOffset_getId($result), $result);
    }
    return $result;
},
jt_ZoneOffset__init_0 = ($this, $totalSeconds) => {
    jt_ZoneOffset_$callClinit();
    jt_ZoneId__init_($this);
    $this.$totalSeconds0 = $totalSeconds;
    $this.$id6 = jt_ZoneOffset_buildId($totalSeconds);
},
jt_ZoneOffset__init_ = var_0 => {
    let var_1 = new jt_ZoneOffset();
    jt_ZoneOffset__init_0(var_1, var_0);
    return var_1;
},
jt_ZoneOffset_buildId = $totalSeconds => {
    let $absTotalSeconds, $buf, $absHours, $absMinutes, var$6, var$7, $absSeconds;
    jt_ZoneOffset_$callClinit();
    if (!$totalSeconds)
        return $rt_s(442);
    $absTotalSeconds = jl_Math_abs($totalSeconds);
    $buf = jl_StringBuilder__init_();
    $absHours = $absTotalSeconds / 3600 | 0;
    $absMinutes = ($absTotalSeconds / 60 | 0) % 60 | 0;
    var$6 = $buf.$append1($totalSeconds >= 0 ? $rt_s(625) : $rt_s(367));
    var$7 = $absHours >= 10 ? $rt_s(23) : $rt_s(707);
    var$6 = (var$6.$append1(var$7)).$append3($absHours);
    var$7 = $absMinutes >= 10 ? $rt_s(708) : $rt_s(709);
    (var$6.$append1(var$7)).$append3($absMinutes);
    $absSeconds = $absTotalSeconds % 60 | 0;
    if ($absSeconds)
        ($buf.$append1($absSeconds >= 10 ? $rt_s(708) : $rt_s(709))).$append3($absSeconds);
    return $buf.$toString();
},
jt_ZoneOffset_getTotalSeconds = $this => {
    return $this.$totalSeconds0;
},
jt_ZoneOffset_getId = $this => {
    return $this.$id6;
},
jt_ZoneOffset_getRules = $this => {
    return jtz_ZoneRules_of($this);
},
jt_ZoneOffset_compareTo = ($this, $other) => {
    return $other.$totalSeconds0 - $this.$totalSeconds0 | 0;
},
jt_ZoneOffset_equals = ($this, $obj) => {
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jt_ZoneOffset))
        return 0;
    return $this.$totalSeconds0 != $obj.$totalSeconds0 ? 0 : 1;
},
jt_ZoneOffset_hashCode = $this => {
    return $this.$totalSeconds0;
},
jt_ZoneOffset_toString = $this => {
    return $this.$id6;
},
jt_ZoneOffset_compareTo0 = ($this, var$1) => {
    return jt_ZoneOffset_compareTo($this, var$1);
},
jt_ZoneOffset__clinit_ = () => {
    jt_ZoneOffset_SECONDS_CACHE = ju_HashMap__init_();
    jt_ZoneOffset_ID_CACHE = ju_HashMap__init_();
    jt_ZoneOffset_UTC = jt_ZoneOffset_ofTotalSeconds(0);
    jt_ZoneOffset_MIN = jt_ZoneOffset_ofTotalSeconds((-64800));
    jt_ZoneOffset_MAX = jt_ZoneOffset_ofTotalSeconds(64800);
},
jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit),
jur_AbstractCharClass$LazyNonDigit__init_ = $this => {
    jur_AbstractCharClass$LazyDigit__init_($this);
},
jur_AbstractCharClass$LazyNonDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonDigit_computeValue = $this => {
    let $chCl;
    $chCl = (jur_AbstractCharClass$LazyDigit_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function onpt_TeaVMPlatform$signAsync$lambda$_25_0() {
    let a = this; jl_Object.call(a);
    a.$_0150 = null;
    a.$_175 = null;
    a.$_239 = null;
}
let onpt_TeaVMPlatform$signAsync$lambda$_25_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0150 = var$1;
    var$0.$_175 = var$2;
    var$0.$_239 = var$3;
},
onpt_TeaVMPlatform$signAsync$lambda$_25_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$signAsync$lambda$_25_0();
    onpt_TeaVMPlatform$signAsync$lambda$_25_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$signAsync$lambda$_25_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$signAsync$lambda$_25_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$signAsync$lambda$_25_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform_lambda$signAsync$3(var$0.$_0150, var$0.$_175, var$0.$_239, var$1, var$2);
},
ju_EnumSet = $rt_classWithoutFields(ju_AbstractSet),
ju_EnumSet__init_ = $this => {
    ju_AbstractSet__init_($this);
},
ju_EnumSet_noneOf = $elementType => {
    return ju_GenericEnumSet__init_0($elementType);
};
function jur_CIBackReferenceSet() {
    let a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter1 = 0;
}
let jur_CIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_JointSet__init_($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter1 = $consCounter;
},
jur_CIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter1, $group.$length());
                return $this.$next5.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = $group.$charAt($i);
            var$7 = $stringIndex + $i | 0;
            if (var$6 != $testString.$charAt(var$7) && jur_Pattern_getSupplement($group.$charAt($i)) != $testString.$charAt(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_CIBackReferenceSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_CIBackReferenceSet_getString = ($this, $matchResult) => {
    let $res;
    $res = $matchResult.$getGroupNoCheck($this.$referencedGroup);
    return $res;
},
jur_CIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(710)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_CIBackReferenceSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter1) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter1, (-1));
    return $res;
};
function jur_AbstractCharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$048 = null;
}
let jur_AbstractCharClass$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$048 = $this$0;
    $this.$val$lHS = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$1();
    jur_AbstractCharClass$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$1_contains = ($this, $ch) => {
    let $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS.$get13($index) : 0;
};
function jur_AbstractCharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$031 = null;
}
let jur_AbstractCharClass$2__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$031 = $this$0;
    $this.$val$lHS0 = var$2;
    $this.$val$thisClass = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$2__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$2();
    jur_AbstractCharClass$2__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$2_contains = ($this, $ch) => {
    let $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS0.$get13($index) : 0;
    return $this.$val$thisClass.$contains0($ch) && !$containslHS ? 1 : 0;
},
jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_PossessiveCompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_CompositeQuantifierSet__init_($this, $quant, $innerSet, $next, $type);
},
jur_PossessiveCompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_PossessiveCompositeQuantifierSet();
    jur_PossessiveCompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_PossessiveCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $min, $max, $i, $shift;
    $min = $this.$quantifier0.$min0();
    $max = $this.$quantifier0.$max0();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next5.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
};
function ju_GregorianCalendar() {
    let a = this; ju_Calendar.call(a);
    a.$gregorianCutover = Long_ZERO;
    a.$changeYear = 0;
    a.$julianSkew = 0;
    a.$isCached = 0;
    a.$cachedFields = null;
    a.$nextMidnightMillis = Long_ZERO;
    a.$lastMidnightMillis = Long_ZERO;
    a.$currentYearSkew = 0;
    a.$lastYearSkew = 0;
}
let ju_GregorianCalendar_daysInMonth0 = null,
ju_GregorianCalendar_daysInYear0 = null,
ju_GregorianCalendar_maximums = null,
ju_GregorianCalendar_minimums = null,
ju_GregorianCalendar_leastMaximums = null,
ju_GregorianCalendar_$callClinit = () => {
    ju_GregorianCalendar_$callClinit = $rt_eraseClinit(ju_GregorianCalendar);
    ju_GregorianCalendar__clinit_();
},
ju_GregorianCalendar__init_2 = $this => {
    ju_GregorianCalendar_$callClinit();
    ju_GregorianCalendar__init_1($this, ju_Locale_getDefault());
},
ju_GregorianCalendar__init_4 = () => {
    let var_0 = new ju_GregorianCalendar();
    ju_GregorianCalendar__init_2(var_0);
    return var_0;
},
ju_GregorianCalendar__init_1 = ($this, $locale) => {
    ju_GregorianCalendar_$callClinit();
    ju_GregorianCalendar__init_($this, ju_TimeZone_getDefault(), $locale);
},
ju_GregorianCalendar__init_5 = var_0 => {
    let var_1 = new ju_GregorianCalendar();
    ju_GregorianCalendar__init_1(var_1, var_0);
    return var_1;
},
ju_GregorianCalendar__init_3 = ($this, $zone) => {
    ju_GregorianCalendar_$callClinit();
    ju_GregorianCalendar__init_($this, $zone, ju_Locale_getDefault());
},
ju_GregorianCalendar__init_0 = var_0 => {
    let var_1 = new ju_GregorianCalendar();
    ju_GregorianCalendar__init_3(var_1, var_0);
    return var_1;
},
ju_GregorianCalendar__init_ = ($this, $timezone, $locale) => {
    ju_GregorianCalendar_$callClinit();
    ju_Calendar__init_($this, $timezone, $locale);
    $this.$gregorianCutover = Long_create(4184124416, 4294964450);
    $this.$changeYear = 1582;
    $this.$julianSkew = ((($this.$changeYear - 2000 | 0) / 400 | 0) + ju_GregorianCalendar_julianError($this) | 0) - (($this.$changeYear - 2000 | 0) / 100 | 0) | 0;
    $this.$cachedFields = $rt_createIntArrayFromData([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    $this.$currentYearSkew = 10;
    $this.$setTimeInMillis(jl_System_currentTimeMillis());
},
ju_GregorianCalendar__init_6 = (var_0, var_1) => {
    let var_2 = new ju_GregorianCalendar();
    ju_GregorianCalendar__init_(var_2, var_0, var_1);
    return var_2;
},
ju_GregorianCalendar_add = ($this, $field, $value) => {
    let $multiplier, $offset, $newOffset, $month, $days;
    if (!$value)
        return;
    if ($field >= 0 && $field < 15) {
        $this.$isCached = 0;
        if (!$field) {
            $this.$complete0();
            if ($this.$fields.data[0] != 1) {
                if ($value <= 0)
                    return;
                $this.$set(0, 1);
            } else {
                if ($value >= 0)
                    return;
                $this.$set(0, 0);
            }
            $this.$complete0();
            return;
        }
        if ($field != 1 && $field != 2) {
            a: {
                $multiplier = Long_ZERO;
                $this.$getTimeInMillis();
                switch ($field) {
                    case 3:
                    case 4:
                    case 8:
                        $multiplier = Long_fromInt(604800000);
                        break a;
                    case 5:
                    case 6:
                    case 7:
                        $multiplier = Long_fromInt(86400000);
                        break a;
                    case 9:
                        $multiplier = Long_fromInt(43200000);
                        break a;
                    case 10:
                    case 11:
                        $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), Long_fromInt(3600000)));
                        break a;
                    case 12:
                        $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), Long_fromInt(60000)));
                        break a;
                    case 13:
                        $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), Long_fromInt(1000)));
                        break a;
                    case 14:
                        $this.$time = Long_add($this.$time, Long_fromInt($value));
                        break a;
                    default:
                }
            }
            if (Long_gt($multiplier, Long_ZERO)) {
                $offset = $this.$getTimeZoneOffset($this.$time);
                $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), $multiplier));
                $newOffset = $this.$getTimeZoneOffset($this.$time);
                if ($newOffset != $offset)
                    $this.$time = Long_add($this.$time, Long_fromInt($offset - $newOffset | 0));
            }
            $this.$areFieldsSet = 0;
            $this.$complete0();
            return;
        }
        $this.$complete0();
        if ($field == 2) {
            $month = $this.$fields.data[2] + $value | 0;
            if ($month >= 0)
                $value = $month / 12 | 0;
            else {
                $value = ($month - 11 | 0) / 12 | 0;
                $month = 12 + ($month % 12 | 0) | 0;
            }
            $this.$set(2, $month % 12 | 0);
        }
        $this.$set(1, $this.$fields.data[1] + $value | 0);
        $days = ju_GregorianCalendar_daysInMonth($this, $this.$isLeapYear1($this.$fields.data[1]), $this.$fields.data[2]);
        if ($this.$fields.data[5] > $days)
            $this.$set(5, $days);
        $this.$complete0();
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
ju_GregorianCalendar_fullFieldsCalc = ($this, $timeVal, $millis, $zoneOffset) => {
    let $days, var$5, var$6, var$7, $dayOfYear, $month, $leapYear, $date, $dstOffset, var$13, var$14, $daysFromStart, $week, var$17;
    $days = Long_div($timeVal, Long_fromInt(86400000));
    if ($millis < 0) {
        $millis = $millis + 86400000 | 0;
        $days = Long_sub($days, Long_fromInt(1));
    }
    var$5 = $millis + $zoneOffset | 0;
    while (var$5 < 0) {
        var$5 = var$5 + 86400000 | 0;
        $days = Long_sub($days, Long_fromInt(1));
    }
    while (var$5 >= 86400000) {
        var$5 = var$5 - 86400000 | 0;
        $days = Long_add($days, Long_fromInt(1));
    }
    var$6 = Long_fromInt($zoneOffset);
    var$7 = Long_add($timeVal, var$6);
    $dayOfYear = ju_GregorianCalendar_computeYearAndDay($this, $days, var$7);
    $this.$fields.data[6] = $dayOfYear;
    if ($this.$fields.data[1] == $this.$changeYear && Long_le($this.$gregorianCutover, var$7))
        $dayOfYear = $dayOfYear + $this.$currentYearSkew | 0;
    $month = $dayOfYear / 32 | 0;
    $leapYear = $this.$isLeapYear1($this.$fields.data[1]);
    $date = $dayOfYear - ju_GregorianCalendar_daysInYear($this, $leapYear, $month) | 0;
    if ($date > ju_GregorianCalendar_daysInMonth($this, $leapYear, $month)) {
        $date = $date - ju_GregorianCalendar_daysInMonth($this, $leapYear, $month) | 0;
        $month = $month + 1 | 0;
    }
    $this.$fields.data[7] = ju_GregorianCalendar_mod7($this, Long_sub($days, Long_fromInt(3))) + 1 | 0;
    $dstOffset = $this.$getTimeZoneOffset($timeVal);
    if ($this.$fields.data[1] > 0)
        $dstOffset = $dstOffset - $zoneOffset | 0;
    $this.$fields.data[16] = $dstOffset;
    if (!$dstOffset)
        var$7 = $days;
    else {
        var$5 = var$5 + $dstOffset | 0;
        if (var$5 < 0) {
            var$5 = var$5 + 86400000 | 0;
            var$7 = Long_sub($days, Long_fromInt(1));
        } else if (var$5 < 86400000)
            var$7 = $days;
        else {
            var$5 = var$5 - 86400000 | 0;
            var$7 = Long_add($days, Long_fromInt(1));
        }
        if (Long_ne($days, var$7)) {
            var$6 = Long_add(Long_sub($timeVal, var$6), Long_fromInt($dstOffset));
            var$13 = ju_GregorianCalendar_computeYearAndDay($this, var$7, var$6);
            $this.$fields.data[6] = var$13;
            if ($this.$fields.data[1] == $this.$changeYear && Long_le($this.$gregorianCutover, var$6))
                var$13 = var$13 + $this.$currentYearSkew | 0;
            $month = var$13 / 32 | 0;
            $leapYear = $this.$isLeapYear1($this.$fields.data[1]);
            $date = var$13 - ju_GregorianCalendar_daysInYear($this, $leapYear, $month) | 0;
            if ($date > ju_GregorianCalendar_daysInMonth($this, $leapYear, $month)) {
                $date = $date - ju_GregorianCalendar_daysInMonth($this, $leapYear, $month) | 0;
                $month = $month + 1 | 0;
            }
            $this.$fields.data[7] = ju_GregorianCalendar_mod7($this, Long_sub(var$7, Long_fromInt(3))) + 1 | 0;
        }
    }
    $this.$fields.data[14] = var$5 % 1000 | 0;
    var$5 = var$5 / 1000 | 0;
    $this.$fields.data[13] = var$5 % 60 | 0;
    var$5 = var$5 / 60 | 0;
    $this.$fields.data[12] = var$5 % 60 | 0;
    var$13 = var$5 / 60 | 0;
    $this.$fields.data[11] = var$13 % 24 | 0;
    var$14 = $this.$fields;
    var$14.data[9] = $this.$fields.data[11] <= 11 ? 0 : 1;
    $this.$fields.data[10] = $this.$fields.data[11] % 12 | 0;
    if ($this.$fields.data[1] > 0)
        $this.$fields.data[0] = 1;
    else {
        $this.$fields.data[0] = 0;
        $this.$fields.data[1] = ( -$this.$fields.data[1] | 0) + 1 | 0;
    }
    $this.$fields.data[2] = $month;
    $this.$fields.data[5] = $date;
    var$14 = $this.$fields.data;
    var$13 = $date - 1 | 0;
    var$14[8] = (var$13 / 7 | 0) + 1 | 0;
    $this.$fields.data[4] = ((var$13 + ju_GregorianCalendar_mod7($this, Long_sub(Long_sub(Long_sub(var$7, Long_fromInt($date)), Long_fromInt(2)), Long_fromInt($this.$getFirstDayOfWeek0() - 1 | 0))) | 0) / 7 | 0) + 1 | 0;
    $daysFromStart = ju_GregorianCalendar_mod7($this, Long_sub(Long_sub(Long_sub(var$7, Long_fromInt(3)), Long_fromInt($this.$fields.data[6] - 1 | 0)), Long_fromInt($this.$getFirstDayOfWeek0() - 1 | 0)));
    var$5 = (($this.$fields.data[6] - 1 | 0) + $daysFromStart | 0) / 7 | 0;
    $week = var$5 + ((7 - $daysFromStart | 0) < $this.$getMinimalDaysInFirstWeek0() ? 0 : 1) | 0;
    if (!$week) {
        var$14 = $this.$fields;
        var$17 = !$this.$isLeapYear1($this.$fields.data[1] - 1 | 0) ? 1 : 2;
        var$13 = 7 - ju_GregorianCalendar_mod7($this, Long_fromInt($daysFromStart - var$17 | 0)) | 0;
        var$14.data[3] = var$13 < $this.$getMinimalDaysInFirstWeek0() ? 52 : 53;
    } else {
        var$5 = $this.$fields.data[6];
        var$13 = !$leapYear ? 366 : 367;
        var$17 = !$leapYear ? 1 : 2;
        if (var$5 < (var$13 - ju_GregorianCalendar_mod7($this, Long_fromInt($daysFromStart + var$17 | 0)) | 0))
            $this.$fields.data[3] = $week;
        else {
            var$14 = $this.$fields;
            var$17 = !$leapYear ? 1 : 2;
            if ((7 - ju_GregorianCalendar_mod7($this, Long_fromInt($daysFromStart + var$17 | 0)) | 0) >= $this.$getMinimalDaysInFirstWeek0())
                $week = 1;
            var$14.data[3] = $week;
        }
    }
},
ju_GregorianCalendar_cachedFieldsCheckAndGet = ($this, $timeVal, $newTimeMillis, $newTimeMillisAdjusted, $millis, $zoneOffset) => {
    let $dstOffset;
    a: {
        b: {
            $dstOffset = $this.$fields.data[16];
            if ($this.$isCached && Long_lt($newTimeMillis, $this.$nextMidnightMillis) && Long_gt($newTimeMillis, $this.$lastMidnightMillis) && $this.$cachedFields.data[4] == $zoneOffset && !(!$dstOffset && Long_ge($newTimeMillisAdjusted, $this.$nextMidnightMillis))) {
                if (!$dstOffset)
                    break b;
                if (Long_gt($newTimeMillisAdjusted, $this.$lastMidnightMillis))
                    break b;
            }
            ju_GregorianCalendar_fullFieldsCalc($this, $timeVal, $millis, $zoneOffset);
            $this.$isCached = 0;
            break a;
        }
        $this.$fields.data[1] = $this.$cachedFields.data[0];
        $this.$fields.data[2] = $this.$cachedFields.data[1];
        $this.$fields.data[5] = $this.$cachedFields.data[2];
        $this.$fields.data[7] = $this.$cachedFields.data[3];
        $this.$fields.data[0] = $this.$cachedFields.data[5];
        $this.$fields.data[3] = $this.$cachedFields.data[6];
        $this.$fields.data[4] = $this.$cachedFields.data[7];
        $this.$fields.data[6] = $this.$cachedFields.data[8];
        $this.$fields.data[8] = $this.$cachedFields.data[9];
    }
},
ju_GregorianCalendar_getTimeZoneOffset = ($this, $localTime) => {
    return ($this.$getTimeZone()).$getOffset($localTime);
},
ju_GregorianCalendar_computeFields = $this => {
    let $zoneOffset, $millis, $dstOffset, $offset, $newTime, var$6, var$7, var$8, var$9, $i, $cacheMillis;
    $zoneOffset = $this.$getTimeZoneOffset($this.$time);
    if (!$this.$isSet.data[15])
        $this.$fields.data[15] = $zoneOffset;
    $millis = Long_lo(Long_rem($this.$time, Long_fromInt(86400000)));
    $dstOffset = $this.$fields.data[16];
    $offset = $zoneOffset + $dstOffset | 0;
    $newTime = Long_add($this.$time, Long_fromInt($offset));
    if (Long_gt($this.$time, Long_ZERO) && Long_lt($newTime, Long_ZERO) && $offset > 0)
        $newTime = Long_create(4294967295, 2147483647);
    else if (Long_lt($this.$time, Long_ZERO) && Long_gt($newTime, Long_ZERO) && $offset < 0)
        $newTime = Long_create(0, 2147483648);
    if (!$this.$isCached)
        ju_GregorianCalendar_fullFieldsCalc($this, $this.$time, $millis, $zoneOffset);
    else {
        var$6 = $millis >= 0 ? $millis : $millis + 86400000 | 0;
        var$6 = var$6 + $zoneOffset | 0;
        var$6 = var$6 + $dstOffset | 0;
        if (var$6 < 0)
            var$6 = var$6 + 86400000 | 0;
        else if (var$6 >= 86400000)
            var$6 = var$6 - 86400000 | 0;
        $this.$fields.data[14] = var$6 % 1000 | 0;
        var$6 = var$6 / 1000 | 0;
        $this.$fields.data[13] = var$6 % 60 | 0;
        var$7 = var$6 / 60 | 0;
        $this.$fields.data[12] = var$7 % 60 | 0;
        var$6 = var$7 / 60 | 0;
        $this.$fields.data[11] = var$6 % 24 | 0;
        var$8 = $this.$fields;
        var$8.data[9] = $this.$fields.data[11] <= 11 ? 0 : 1;
        $this.$fields.data[10] = $this.$fields.data[11] % 12 | 0;
        var$6 = Long_compare($newTime, Long_ZERO);
        var$9 = var$6 > 0 && var$6 < 0 && !$dstOffset ? Long_create(4294967295, 2147483647) : var$6 >= 0 ? $newTime : var$6 <= 0 ? $newTime : $dstOffset ? Long_create(0, 2147483648) : $newTime;
        ju_GregorianCalendar_cachedFieldsCheckAndGet($this, $this.$time, $newTime, var$9, $millis, $zoneOffset);
    }
    $i = 0;
    while ($i < 17) {
        $this.$isSet.data[$i] = 1;
        $i = $i + 1 | 0;
    }
    if (!$this.$isCached && Long_ne($newTime, Long_create(4294967295, 2147483647)) && Long_ne($newTime, Long_create(0, 2147483648))) {
        $cacheMillis = 0;
        $this.$cachedFields.data[0] = $this.$fields.data[1];
        $this.$cachedFields.data[1] = $this.$fields.data[2];
        $this.$cachedFields.data[2] = $this.$fields.data[5];
        $this.$cachedFields.data[3] = $this.$fields.data[7];
        $this.$cachedFields.data[4] = $zoneOffset;
        $this.$cachedFields.data[5] = $this.$fields.data[0];
        $this.$cachedFields.data[6] = $this.$fields.data[3];
        $this.$cachedFields.data[7] = $this.$fields.data[4];
        $this.$cachedFields.data[8] = $this.$fields.data[6];
        $this.$cachedFields.data[9] = $this.$fields.data[8];
        var$6 = $cacheMillis + ((((23 - $this.$fields.data[11] | 0) * 60 | 0) * 60 | 0) * 1000 | 0) | 0;
        var$6 = var$6 + (((59 - $this.$fields.data[12] | 0) * 60 | 0) * 1000 | 0) | 0;
        var$6 = var$6 + ((59 - $this.$fields.data[13] | 0) * 1000 | 0) | 0;
        $this.$nextMidnightMillis = Long_add($newTime, Long_fromInt(var$6));
        var$6 = (($this.$fields.data[11] * 60 | 0) * 60 | 0) * 1000 | 0;
        var$6 = var$6 + (($this.$fields.data[12] * 60 | 0) * 1000 | 0) | 0;
        var$6 = var$6 + ($this.$fields.data[13] * 1000 | 0) | 0;
        $this.$lastMidnightMillis = Long_sub($newTime, Long_fromInt(var$6));
        $this.$isCached = 1;
    }
},
ju_GregorianCalendar_computeTime = $this => {
    let $hour, $timeVal, $year, $weekMonthSet, $useMonth, $useWeekYear, $days, $dayOfWeek, var$9, $skew, var$11, $month, $leapYear, $useDate, var$15;
    a: {
        b: {
            c: {
                d: {
                    e: {
                        if (!$this.$isLenient()) {
                            f: {
                                if ($this.$isSet.data[11]) {
                                    if ($this.$fields.data[11] >= 0 && $this.$fields.data[11] <= 23)
                                        break f;
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                                }
                                if ($this.$isSet.data[10]) {
                                    if ($this.$fields.data[10] < 0)
                                        break a;
                                    if ($this.$fields.data[10] > 11)
                                        break a;
                                }
                            }
                            if ($this.$isSet.data[12] && !($this.$fields.data[12] >= 0 && $this.$fields.data[12] <= 59))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[13]) {
                                if ($this.$fields.data[13] < 0)
                                    break b;
                                if ($this.$fields.data[13] > 59)
                                    break b;
                            }
                            if ($this.$isSet.data[14]) {
                                if ($this.$fields.data[14] < 0)
                                    break c;
                                if ($this.$fields.data[14] > 999)
                                    break c;
                            }
                            if ($this.$isSet.data[3] && !($this.$fields.data[3] >= 1 && $this.$fields.data[3] <= 53))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[7] && !($this.$fields.data[7] >= 1 && $this.$fields.data[7] <= 7))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[8] && !($this.$fields.data[8] >= 1 && $this.$fields.data[8] <= 6))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[4]) {
                                if ($this.$fields.data[4] < 1)
                                    break d;
                                if ($this.$fields.data[4] > 6)
                                    break d;
                            }
                            if ($this.$isSet.data[9] && $this.$fields.data[9] && $this.$fields.data[9] != 1)
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[10] && !($this.$fields.data[10] >= 0 && $this.$fields.data[10] <= 11))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[1]) {
                                if ($this.$isSet.data[0] && !$this.$fields.data[0] && !($this.$fields.data[1] >= 1 && $this.$fields.data[1] <= 292269054))
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                                if (!($this.$fields.data[1] >= 1 && $this.$fields.data[1] <= 292278994))
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                            }
                            if ($this.$isSet.data[2]) {
                                if ($this.$fields.data[2] < 0)
                                    break e;
                                if ($this.$fields.data[2] > 11)
                                    break e;
                            }
                        }
                        $hour = Long_ZERO;
                        if ($this.$isSet.data[11] && $this.$lastTimeFieldSet != 10)
                            $hour = Long_fromInt($this.$fields.data[11]);
                        else if ($this.$isSet.data[10])
                            $hour = Long_fromInt(($this.$fields.data[9] * 12 | 0) + $this.$fields.data[10] | 0);
                        $timeVal = Long_mul($hour, Long_fromInt(3600000));
                        if ($this.$isSet.data[12])
                            $timeVal = Long_add($timeVal, Long_mul(Long_fromInt($this.$fields.data[12]), Long_fromInt(60000)));
                        if ($this.$isSet.data[13])
                            $timeVal = Long_add($timeVal, Long_mul(Long_fromInt($this.$fields.data[13]), Long_fromInt(1000)));
                        if ($this.$isSet.data[14])
                            $timeVal = Long_add($timeVal, Long_fromInt($this.$fields.data[14]));
                        $year = !$this.$isSet.data[1] ? 1970 : $this.$fields.data[1];
                        if ($this.$isSet.data[0]) {
                            if ($this.$fields.data[0] && $this.$fields.data[0] != 1)
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if (!$this.$fields.data[0])
                                $year = 1 - $year | 0;
                        }
                        $weekMonthSet = !$this.$isSet.data[4] && !$this.$isSet.data[8] ? 0 : 1;
                        $useMonth = !(!$this.$isSet.data[5] && !$this.$isSet.data[2] && !$weekMonthSet) && $this.$lastDateFieldSet != 6 ? 1 : 0;
                        if ($useMonth && !($this.$lastDateFieldSet != 7 && $this.$lastDateFieldSet != 3)) {
                            if ($this.$isSet.data[3] && $this.$isSet.data[7])
                                $useMonth = $this.$lastDateFieldSet != 3 && $weekMonthSet && $this.$isSet.data[7] ? 1 : 0;
                            else if ($this.$isSet.data[6])
                                $useMonth = $this.$isSet.data[5] && $this.$isSet.data[2] ? 1 : 0;
                        }
                        if (!$useMonth) {
                            $useWeekYear = $this.$isSet.data[3] && $this.$lastDateFieldSet != 6 ? 1 : 0;
                            if ($useWeekYear && $this.$isSet.data[6])
                                $useWeekYear = $this.$isSet.data[7];
                            $days = ju_GregorianCalendar_daysFromBaseYear($this, $year);
                            if ($useWeekYear) {
                                $dayOfWeek = !$this.$isSet.data[7] ? $this.$getFirstDayOfWeek0() - 1 | 0 : $this.$fields.data[7] - 1 | 0;
                                var$9 = Long_sub($days, Long_fromInt(3));
                                $skew = ju_GregorianCalendar_mod7($this, Long_sub(var$9, Long_fromInt($this.$getFirstDayOfWeek0() - 1 | 0)));
                                $days = Long_add($days, Long_fromInt(((($this.$fields.data[3] - 1 | 0) * 7 | 0) + ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($skew + $dayOfWeek | 0), var$9)) | 0) - $skew | 0));
                                if ((7 - $skew | 0) < $this.$getMinimalDaysInFirstWeek0())
                                    $days = Long_add($days, Long_fromInt(7));
                            } else if ($this.$isSet.data[6]) {
                                g: {
                                    if (!$this.$isLenient()) {
                                        if ($this.$fields.data[6] >= 1) {
                                            var$11 = $this.$fields.data[6];
                                            if (var$11 <= (365 + (!$this.$isLeapYear1($year) ? 0 : 1) | 0))
                                                break g;
                                        }
                                        $rt_throw(jl_IllegalArgumentException__init_0());
                                    }
                                }
                                $days = Long_add($days, Long_fromInt($this.$fields.data[6] - 1 | 0));
                            } else if ($this.$isSet.data[7])
                                $days = Long_add($days, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($this.$fields.data[7] - 1 | 0), Long_sub($days, Long_fromInt(3))))));
                        } else {
                            $month = $this.$fields.data[2];
                            $year = $year + ($month / 12 | 0) | 0;
                            var$11 = $month % 12 | 0;
                            if (var$11 < 0) {
                                $year = $year + (-1) | 0;
                                var$11 = var$11 + 12 | 0;
                            }
                            $leapYear = $this.$isLeapYear1($year);
                            $days = Long_add(ju_GregorianCalendar_daysFromBaseYear($this, $year), Long_fromInt(ju_GregorianCalendar_daysInYear($this, $leapYear, var$11)));
                            $useDate = $this.$isSet.data[5];
                            if ($useDate && !($this.$lastDateFieldSet != 7 && $this.$lastDateFieldSet != 4 && $this.$lastDateFieldSet != 8))
                                $useDate = $this.$isSet.data[7] && $weekMonthSet ? 0 : 1;
                            if ($useDate) {
                                if (!$this.$isLenient() && !($this.$fields.data[5] >= 1 && $this.$fields.data[5] <= ju_GregorianCalendar_daysInMonth($this, $leapYear, var$11)))
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                                $days = Long_add($days, Long_fromInt($this.$fields.data[5] - 1 | 0));
                            } else {
                                $dayOfWeek = !$this.$isSet.data[7] ? $this.$getFirstDayOfWeek0() - 1 | 0 : $this.$fields.data[7] - 1 | 0;
                                if ($this.$isSet.data[4] && $this.$lastDateFieldSet != 8) {
                                    $skew = ju_GregorianCalendar_mod7($this, Long_sub(Long_sub($days, Long_fromInt(3)), Long_fromInt($this.$getFirstDayOfWeek0() - 1 | 0)));
                                    $days = Long_add($days, Long_fromInt(((($this.$fields.data[4] - 1 | 0) * 7 | 0) + ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($skew + $dayOfWeek | 0), Long_sub($days, Long_fromInt(2)))) | 0) - $skew | 0));
                                } else if (!$this.$isSet.data[8]) {
                                    if ($this.$isSet.data[7]) {
                                        var$9 = Long_sub($days, Long_fromInt(3));
                                        $skew = ju_GregorianCalendar_mod7($this, Long_sub(var$9, Long_fromInt($this.$getFirstDayOfWeek0() - 1 | 0)));
                                        $days = Long_add($days, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($skew + $dayOfWeek | 0), var$9)) - $skew | 0))));
                                    }
                                } else if ($this.$fields.data[8] >= 0)
                                    $days = Long_add($days, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($dayOfWeek), Long_sub($days, Long_fromInt(3)))) + (($this.$fields.data[8] - 1 | 0) * 7 | 0) | 0));
                                else {
                                    var$15 = ju_GregorianCalendar_daysInMonth($this, $leapYear, var$11);
                                    var$9 = Long_fromInt($dayOfWeek);
                                    $days = Long_add($days, Long_fromInt((var$15 + ju_GregorianCalendar_mod7($this, Long_sub(var$9, Long_sub(Long_add($days, Long_fromInt(ju_GregorianCalendar_daysInMonth($this, $leapYear, var$11))), Long_fromInt(3)))) | 0) + ($this.$fields.data[8] * 7 | 0) | 0));
                                }
                            }
                        }
                        $this.$lastDateFieldSet = 0;
                        var$9 = Long_add($timeVal, Long_mul($days, Long_fromInt(86400000)));
                        if ($year == $this.$changeYear && Long_ge(var$9, Long_add($this.$gregorianCutover, Long_mul(Long_fromInt(ju_GregorianCalendar_julianError($this)), Long_fromInt(86400000)))))
                            var$9 = Long_sub(var$9, Long_mul(Long_fromInt(ju_GregorianCalendar_julianError($this)), Long_fromInt(86400000)));
                        $this.$time = Long_sub(var$9, Long_fromInt($this.$getTimeZoneOffset(var$9)));
                        return;
                    }
                    $rt_throw(jl_IllegalArgumentException__init_0());
                }
                $rt_throw(jl_IllegalArgumentException__init_0());
            }
            $rt_throw(jl_IllegalArgumentException__init_0());
        }
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
ju_GregorianCalendar_computeYearAndDay = ($this, $dayCount, $localTime) => {
    let $year, var$4, var$5;
    $year = 1970;
    var$4 = Long_ge($localTime, $this.$gregorianCutover) ? $dayCount : Long_sub($dayCount, Long_fromInt($this.$julianSkew));
    while (true) {
        var$5 = Long_lo(Long_div(var$4, Long_fromInt(365)));
        if (!var$5)
            break;
        $year = $year + var$5 | 0;
        var$4 = Long_sub($dayCount, ju_GregorianCalendar_daysFromBaseYear($this, $year));
    }
    if (Long_lt(var$4, Long_ZERO)) {
        $year = $year - 1 | 0;
        var$4 = Long_add(var$4, Long_fromInt(ju_GregorianCalendar_daysInYear1($this, $year)));
    }
    $this.$fields.data[1] = $year;
    return Long_lo(var$4) + 1 | 0;
},
ju_GregorianCalendar_daysFromBaseYear = ($this, $iyear) => {
    let $year, var$3, var$4, $days;
    $year = Long_fromInt($iyear);
    if (Long_lt($year, Long_fromInt(1970))) {
        if (Long_le($year, Long_fromInt($this.$changeYear)))
            return Long_add(Long_add(Long_mul(Long_sub($year, Long_fromInt(1970)), Long_fromInt(365)), Long_div(Long_sub($year, Long_fromInt(1972)), Long_fromInt(4))), Long_fromInt($this.$julianSkew));
        var$3 = Long_add(Long_mul(Long_sub($year, Long_fromInt(1970)), Long_fromInt(365)), Long_div(Long_sub($year, Long_fromInt(1972)), Long_fromInt(4)));
        var$4 = Long_sub($year, Long_fromInt(2000));
        return Long_add(Long_sub(var$3, Long_div(var$4, Long_fromInt(100))), Long_div(var$4, Long_fromInt(400)));
    }
    $days = Long_add(Long_mul(Long_sub($year, Long_fromInt(1970)), Long_fromInt(365)), Long_div(Long_sub($year, Long_fromInt(1969)), Long_fromInt(4)));
    var$3 = Long_gt($year, Long_fromInt($this.$changeYear)) ? Long_sub($days, Long_sub(Long_div(Long_sub($year, Long_fromInt(1901)), Long_fromInt(100)), Long_div(Long_sub($year, Long_fromInt(1601)), Long_fromInt(400)))) : Long_eq($year, Long_fromInt($this.$changeYear)) ? Long_add($days, Long_fromInt($this.$currentYearSkew)) : Long_ne($year, Long_fromInt($this.$changeYear - 1 | 0)) ? Long_add($days, Long_fromInt($this.$julianSkew)) : Long_add($days, Long_fromInt($this.$lastYearSkew));
    return var$3;
},
ju_GregorianCalendar_daysInMonth = ($this, $leapYear, $month) => {
    if ($leapYear && $month == 1) {
        ju_GregorianCalendar_$callClinit();
        return ju_GregorianCalendar_daysInMonth0.data[$month] + 1 | 0;
    }
    ju_GregorianCalendar_$callClinit();
    return ju_GregorianCalendar_daysInMonth0.data[$month];
},
ju_GregorianCalendar_daysInYear1 = ($this, $year) => {
    let $daysInYear;
    $daysInYear = !$this.$isLeapYear1($year) ? 365 : 366;
    if ($year == $this.$changeYear)
        $daysInYear = $daysInYear - $this.$currentYearSkew | 0;
    if ($year == ($this.$changeYear - 1 | 0))
        $daysInYear = $daysInYear - $this.$lastYearSkew | 0;
    return $daysInYear;
},
ju_GregorianCalendar_daysInYear = ($this, $leapYear, $month) => {
    if ($leapYear && $month > 1) {
        ju_GregorianCalendar_$callClinit();
        return ju_GregorianCalendar_daysInYear0.data[$month] + 1 | 0;
    }
    ju_GregorianCalendar_$callClinit();
    return ju_GregorianCalendar_daysInYear0.data[$month];
},
ju_GregorianCalendar_isLeapYear = ($this, $year) => {
    let var$2;
    if ($year <= $this.$changeYear)
        return $year % 4 | 0 ? 0 : 1;
    a: {
        b: {
            if (!($year % 4 | 0)) {
                if ($year % 100 | 0)
                    break b;
                if (!($year % 400 | 0))
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
},
ju_GregorianCalendar_julianError = $this => {
    return (($this.$changeYear / 100 | 0) - ($this.$changeYear / 400 | 0) | 0) - 2 | 0;
},
ju_GregorianCalendar_mod7 = ($this, $num1) => {
    let $rem;
    $rem = Long_lo(Long_rem($num1, Long_fromInt(7)));
    if (Long_lt($num1, Long_ZERO) && $rem < 0)
        return $rem + 7 | 0;
    return $rem;
},
ju_GregorianCalendar_setFirstDayOfWeek = ($this, $value) => {
    ju_Calendar_setFirstDayOfWeek($this, $value);
    $this.$isCached = 0;
},
ju_GregorianCalendar_setMinimalDaysInFirstWeek = ($this, $value) => {
    ju_Calendar_setMinimalDaysInFirstWeek($this, $value);
    $this.$isCached = 0;
},
ju_GregorianCalendar__clinit_ = () => {
    ju_GregorianCalendar_daysInMonth0 = $rt_createByteArrayFromData([31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]);
    ju_GregorianCalendar_daysInYear0 = $rt_createIntArrayFromData([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
    ju_GregorianCalendar_maximums = $rt_createIntArrayFromData([1, 292278994, 11, 53, 6, 31, 366, 7, 6, 1, 11, 23, 59, 59, 999, 50400000, 7200000]);
    ju_GregorianCalendar_minimums = $rt_createIntArrayFromData([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, (-46800000), 0]);
    ju_GregorianCalendar_leastMaximums = $rt_createIntArrayFromData([1, 292269054, 11, 50, 3, 28, 355, 7, 3, 1, 11, 23, 59, 59, 999, 50400000, 1200000]);
};
function onn_NostrRelay$disconnect$lambda$_21_0() {
    let a = this; jl_Object.call(a);
    a.$_0180 = null;
    a.$_188 = null;
    a.$_243 = null;
}
let onn_NostrRelay$disconnect$lambda$_21_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0180 = var$1;
    var$0.$_188 = var$2;
    var$0.$_243 = var$3;
},
onn_NostrRelay$disconnect$lambda$_21_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$disconnect$lambda$_21_0();
    onn_NostrRelay$disconnect$lambda$_21_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$disconnect$lambda$_21_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$disconnect$lambda$_21_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$disconnect$lambda$_21_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$disconnect$21(var$0.$_0180, var$0.$_188, var$0.$_243, var$1, var$2);
};
function juc_ConcurrentHashMap$AbstractMapIterator() {
    let a = this; jl_Object.call(a);
    a.$position6 = 0;
    a.$expectedModCount = 0;
    a.$futureEntry = null;
    a.$currentEntry0 = null;
    a.$prevEntry1 = null;
    a.$associatedMap = null;
}
let juc_ConcurrentHashMap$AbstractMapIterator__init_ = ($this, $hm) => {
    jl_Object__init_($this);
    $this.$associatedMap = $hm;
    $this.$expectedModCount = $hm.$modCount1;
    $this.$futureEntry = null;
},
juc_ConcurrentHashMap$AbstractMapIterator__init_0 = var_0 => {
    let var_1 = new juc_ConcurrentHashMap$AbstractMapIterator();
    juc_ConcurrentHashMap$AbstractMapIterator__init_(var_1, var_0);
    return var_1;
},
juc_ConcurrentHashMap$AbstractMapIterator_hasNext = $this => {
    if ($this.$futureEntry !== null)
        return 1;
    while ($this.$position6 < $this.$associatedMap.$elementData0.data.length) {
        if ($this.$associatedMap.$elementData0.data[$this.$position6] !== null)
            return 1;
        $this.$position6 = $this.$position6 + 1 | 0;
    }
    return 0;
},
juc_ConcurrentHashMap$AbstractMapIterator_checkConcurrentMod = $this => {
    if ($this.$expectedModCount == $this.$associatedMap.$modCount1)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
},
juc_ConcurrentHashMap$AbstractMapIterator_makeNext = $this => {
    let var$1, var$2;
    juc_ConcurrentHashMap$AbstractMapIterator_checkConcurrentMod($this);
    if (!$this.$hasNext())
        $rt_throw(ju_NoSuchElementException__init_());
    if ($this.$futureEntry === null) {
        var$1 = $this.$associatedMap.$elementData0.data;
        var$2 = $this.$position6;
        $this.$position6 = var$2 + 1 | 0;
        $this.$currentEntry0 = var$1[var$2];
        $this.$futureEntry = $this.$currentEntry0.$next7;
        $this.$prevEntry1 = null;
    } else {
        if ($this.$currentEntry0 !== null)
            $this.$prevEntry1 = $this.$currentEntry0;
        $this.$currentEntry0 = $this.$futureEntry;
        $this.$futureEntry = $this.$futureEntry.$next7;
    }
},
juc_ConcurrentHashMap$AbstractMapIterator_remove = $this => {
    let $index, var$2;
    juc_ConcurrentHashMap$AbstractMapIterator_checkConcurrentMod($this);
    if ($this.$currentEntry0 === null)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($this.$prevEntry1 !== null)
        $this.$prevEntry1.$next7 = $this.$currentEntry0.$next7;
    else {
        $index = $this.$currentEntry0.$origKeyHash0 & ($this.$associatedMap.$elementData0.data.length - 1 | 0);
        $this.$associatedMap.$elementData0.data[$index] = $this.$associatedMap.$elementData0.data[$index].$next7;
    }
    $this.$currentEntry0 = null;
    $this.$expectedModCount = $this.$expectedModCount + 1 | 0;
    var$2 = $this.$associatedMap;
    var$2.$modCount1 = var$2.$modCount1 + 1 | 0;
    var$2 = $this.$associatedMap;
    var$2.$elementCount0 = var$2.$elementCount0 - 1 | 0;
},
juc_ConcurrentHashMap$EntryIterator = $rt_classWithoutFields(juc_ConcurrentHashMap$AbstractMapIterator),
juc_ConcurrentHashMap$EntryIterator__init_ = ($this, $map) => {
    juc_ConcurrentHashMap$AbstractMapIterator__init_($this, $map);
},
juc_ConcurrentHashMap$EntryIterator__init_0 = var_0 => {
    let var_1 = new juc_ConcurrentHashMap$EntryIterator();
    juc_ConcurrentHashMap$EntryIterator__init_(var_1, var_0);
    return var_1;
},
juc_ConcurrentHashMap$EntryIterator_next = $this => {
    juc_ConcurrentHashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry0;
},
juc_ConcurrentHashMap$EntryIterator_next0 = $this => {
    return $this.$next3();
},
otci_Base46 = $rt_classWithoutFields(),
otci_Base46_decodeUnsigned = $seq => {
    let $number, $pos, var$4, var$5, $digit, $hasMore;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters.data;
        var$5 = $seq.$pointer;
        $seq.$pointer = var$5 + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[var$5]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
},
otci_Base46_decode = $seq => {
    let $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result | 0;
    return $result;
},
otci_Base46_decodeUnsignedLong = $seq => {
    let $number, $pos, var$4, var$5, $digit, $hasMore;
    $number = Long_ZERO;
    $pos = Long_fromInt(1);
    while (true) {
        var$4 = $seq.$characters.data;
        var$5 = $seq.$pointer;
        $seq.$pointer = var$5 + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[var$5]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = Long_add($number, Long_mul($pos, Long_fromInt($digit / 2 | 0)));
        $pos = Long_mul($pos, Long_fromInt(46));
        if (!$hasMore)
            break;
    }
    return $number;
},
otci_Base46_decodeLong = $seq => {
    let $number, $result;
    $number = Long_fromInt(otci_Base46_decodeUnsigned($seq));
    $result = Long_div($number, Long_fromInt(2));
    if (Long_ne(Long_rem($number, Long_fromInt(2)), Long_ZERO))
        $result = Long_neg($result);
    return $result;
},
otci_Base46_decodeDigit = $c => {
    if ($c < 34)
        return $c - 32 | 0;
    if ($c >= 92)
        return ($c - 32 | 0) - 2 | 0;
    return ($c - 32 | 0) - 1 | 0;
},
jt_Instant$1 = $rt_classWithoutFields(),
jt_Instant$1__init_ = $this => {
    jl_Object__init_($this);
},
jt_Instant$1__init_0 = () => {
    let var_0 = new jt_Instant$1();
    jt_Instant$1__init_(var_0);
    return var_0;
},
jt_Instant$1_queryFrom0 = ($this, $temporal) => {
    return jt_Instant_from($temporal);
},
jt_Instant$1_queryFrom = ($this, var$1) => {
    return $this.$queryFrom0(var$1);
};
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string3 = null;
}
let jur_UCISequenceSet__init_ = ($this, $substring) => {
    let $res, $i;
    jur_LeafSet__init_($this);
    $res = jl_StringBuilder__init_();
    $i = 0;
    while ($i < $substring.$length()) {
        $res.$append0(jl_Character_toLowerCase(jl_Character_toUpperCase($substring.$charAt($i))));
        $i = $i + 1 | 0;
    }
    $this.$string3 = $res.$toString();
    $this.$charCount0 = $res.$length();
},
jur_UCISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i;
    $i = 0;
    while (true) {
        if ($i >= $this.$string3.$length())
            return $this.$string3.$length();
        if ($this.$string3.$charAt($i) != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_UCISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string3;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(711)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$034 = null;
}
let jur_AbstractCharClass$LazyJavaDefined$1__init_ = ($this, $this$0) => {
    $this.$this$034 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDefined$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaDefined$1();
    jur_AbstractCharClass$LazyJavaDefined$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaDefined$1_contains = ($this, $ch) => {
    return jl_Character_isDefined($ch);
},
otjt_Int8Array = $rt_classWithoutFields(otjt_TypedArray);
function onnrs_NostrRTCSignaling$start$lambda$_7_0() {
    let a = this; jl_Object.call(a);
    a.$_049 = null;
    a.$_128 = null;
}
let onnrs_NostrRTCSignaling$start$lambda$_7_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_049 = var$1;
    var$0.$_128 = var$2;
},
onnrs_NostrRTCSignaling$start$lambda$_7_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCSignaling$start$lambda$_7_0();
    onnrs_NostrRTCSignaling$start$lambda$_7_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCSignaling$start$lambda$_7_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$start$lambda$_7_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$start$lambda$_7_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$start$7(var$0.$_049, var$0.$_128, var$1);
},
jt_Instant$2 = $rt_classWithoutFields(),
jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoField = null,
jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit = null,
jt_Instant$2_$callClinit = () => {
    jt_Instant$2_$callClinit = $rt_eraseClinit(jt_Instant$2);
    jt_Instant$2__clinit_();
},
jt_Instant$2__clinit_ = () => {
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit = $rt_createIntArray((jtt_ChronoUnit_values()).data.length);
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_NANOS)] = 1;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MICROS)] = 2;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MILLIS)] = 3;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_SECONDS)] = 4;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MINUTES)] = 5;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_HOURS)] = 6;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_HALF_DAYS)] = 7;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_DAYS)] = 8;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoField = $rt_createIntArray((jtt_ChronoField_values()).data.length);
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_NANO_OF_SECOND)] = 1;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MICRO_OF_SECOND)] = 2;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MILLI_OF_SECOND)] = 3;
    jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_INSTANT_SECONDS)] = 4;
},
onn_NostrSubscription$close$lambda$_7_0 = $rt_classWithoutFields(),
onn_NostrSubscription$close$lambda$_7_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onn_NostrSubscription$close$lambda$_7_0__init_0 = () => {
    let var_0 = new onn_NostrSubscription$close$lambda$_7_0();
    onn_NostrSubscription$close$lambda$_7_0__init_(var_0);
    return var_0;
},
onn_NostrSubscription$close$lambda$_7_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrSubscription$close$lambda$_7_0_accept(var$0, var$1, var$2);
},
onn_NostrSubscription$close$lambda$_7_0_accept = (var$0, var$1, var$2) => {
    onn_NostrSubscription_lambda$close$0(var$1, var$2);
};
function jur_CompositeRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
let jur_CompositeRangeSet__init_0 = ($this, $withoutSurrogates, $withSurrogates) => {
    jur_JointSet__init_($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
},
jur_CompositeRangeSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_CompositeRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$withSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
},
jur_CompositeRangeSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
    $this.$withSurrogates.$setNext($next);
    $this.$withoutSurrogates.$setNext($next);
},
jur_CompositeRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$withoutSurrogates);
    var$2 = jl_String_valueOf($this.$withSurrogates);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(712)), var$1), $rt_s(713)), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_CompositeRangeSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_CompositeRangeSet_first = ($this, $set) => {
    return 1;
};
function juc_CopyOnWriteArrayList() {
    jl_Object.call(this);
    this.$array2 = null;
}
let juc_CopyOnWriteArrayList__init_0 = $this => {
    jl_Object__init_($this);
    $this.$array2 = juc_CopyOnWriteArrayList_newElementArray($this, 0);
},
juc_CopyOnWriteArrayList__init_ = () => {
    let var_0 = new juc_CopyOnWriteArrayList();
    juc_CopyOnWriteArrayList__init_0(var_0);
    return var_0;
},
juc_CopyOnWriteArrayList_add = ($this, $e) => {
    let $copy, var$3;
    $copy = ju_Arrays_copyOf0($this.$array2, $this.$array2.data.length + 1 | 0);
    var$3 = $copy.data;
    var$3[$this.$array2.data.length] = $e;
    $this.$array2 = $copy;
    return 1;
},
juc_CopyOnWriteArrayList_addIfAbsent = ($this, $e) => {
    if (!$this.$isEmpty() && $this.$indexOf2($e) >= 0)
        return 0;
    $this.$add1($e);
    return 1;
},
juc_CopyOnWriteArrayList_clear = $this => {
    if (!$this.$isEmpty())
        $this.$array2 = juc_CopyOnWriteArrayList_newElementArray($this, 0);
},
juc_CopyOnWriteArrayList_contains = ($this, $o) => {
    return $this.$indexOf2($o) < 0 ? 0 : 1;
},
juc_CopyOnWriteArrayList_get = ($this, $index) => {
    return $this.$array2.data[$index];
},
juc_CopyOnWriteArrayList_indexOf = ($this, $e, $index) => {
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    return juc_CopyOnWriteArrayList_indexOf0($e, $this.$array2, $index, $this.$array2.data.length - $index | 0);
},
juc_CopyOnWriteArrayList_indexOf1 = ($this, $o) => {
    return $this.$indexOf4($o, 0);
},
juc_CopyOnWriteArrayList_isEmpty = $this => {
    return $this.$array2.data.length ? 0 : 1;
},
juc_CopyOnWriteArrayList_iterator = $this => {
    return $this.$listIterator();
},
juc_CopyOnWriteArrayList_listIterator = $this => {
    return juc_CopyOnWriteArrayList$ListIteratorImpl__init_0($this.$array2, 0);
},
juc_CopyOnWriteArrayList_remove = ($this, $index) => {
    return juc_CopyOnWriteArrayList_removeRange($this, $index, 1);
},
juc_CopyOnWriteArrayList_remove0 = ($this, $o) => {
    let $currentArray, $index;
    while (true) {
        $currentArray = $this.$array2;
        $index = $this.$indexOf2($o);
        if ($currentArray !== $this.$array2)
            continue;
        else
            break;
    }
    if ($index < 0)
        return 0;
    $this.$remove0($index);
    return 1;
},
juc_CopyOnWriteArrayList_size = $this => {
    return $this.$array2.data.length;
},
juc_CopyOnWriteArrayList_toString = $this => {
    let $sb, $it;
    $sb = jl_StringBuilder__init_1($rt_s(714));
    $it = $this.$listIterator();
    while ($it.$hasNext()) {
        $sb.$append($it.$next());
        $sb.$append1($rt_s(12));
    }
    if ($sb.$length() > 1)
        $sb.$setLength($sb.$length() - 2 | 0);
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
juc_CopyOnWriteArrayList_newElementArray = ($this, $size) => {
    return $rt_createArray(jl_Object, $size);
},
juc_CopyOnWriteArrayList_removeRange = ($this, $start, $size) => {
    let $sizeArr, var$4, $copy, $old;
    $sizeArr = $this.$size();
    juc_CopyOnWriteArrayList_checkIndexExclusive($start, $sizeArr);
    var$4 = $start + $size | 0;
    juc_CopyOnWriteArrayList_checkIndexInclusive(var$4, $sizeArr);
    $copy = juc_CopyOnWriteArrayList_newElementArray($this, $sizeArr - $size | 0);
    jl_System_fastArraycopy($this.$array2, 0, $copy, 0, $start);
    $old = $this.$array2.data[$start];
    if ($sizeArr > var$4)
        jl_System_fastArraycopy($this.$array2, var$4, $copy, $start, $sizeArr - var$4 | 0);
    $this.$array2 = $copy;
    return $old;
},
juc_CopyOnWriteArrayList_indexOf0 = ($o, $data, $start, $size) => {
    let $i;
    if (!$size)
        return (-1);
    a: {
        if ($o !== null) {
            $i = $start;
            while (true) {
                if ($i >= ($start + $size | 0))
                    break a;
                if ($o.$equals($data.data[$i]))
                    break;
                $i = $i + 1 | 0;
            }
            return $i;
        }
        $i = $start;
        while (true) {
            if ($i >= ($start + $size | 0))
                break a;
            if ($data.data[$i] === null)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    return (-1);
},
juc_CopyOnWriteArrayList_checkIndexInclusive = ($index, $size) => {
    if ($index >= 0 && $index <= $size)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
juc_CopyOnWriteArrayList_checkIndexExclusive = ($index, $size) => {
    let var$3, var$4;
    if ($index >= 0 && $index < $size)
        return;
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(715)), $index), $rt_s(716)), $size);
    jl_IndexOutOfBoundsException__init_1(var$3, jl_StringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jur_FinalSet = $rt_classWithoutFields(jur_FSet),
jur_FinalSet__init_ = $this => {
    jur_FSet__init_($this, 0);
},
jur_FinalSet__init_0 = () => {
    let var_0 = new jur_FinalSet();
    jur_FinalSet__init_(var_0);
    return var_0;
},
jur_FinalSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($matchResult.$mode() != 1 && $stringIndex != $matchResult.$getRightBound())
        return (-1);
    $matchResult.$setValid();
    $matchResult.$setEnd(0, $stringIndex);
    return $stringIndex;
},
jur_FinalSet_getName = $this => {
    return $rt_s(717);
},
jur_EmptySet = $rt_classWithoutFields(jur_LeafSet),
jur_EmptySet__init_0 = ($this, $next) => {
    jur_LeafSet__init_0($this, $next);
    $this.$charCount0 = 0;
},
jur_EmptySet__init_ = var_0 => {
    let var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
},
jur_EmptySet_accepts = ($this, $stringIndex, $testString) => {
    return 0;
},
jur_EmptySet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startStr, var$6, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        var$6 = $rt_compare($stringIndex, $strLength);
        if (var$6 > 0)
            return (-1);
        if (var$6 < 0) {
            $low = $testString.$charAt($stringIndex);
            if (jl_Character_isLowSurrogate($low) && $stringIndex > $startStr) {
                $high = $testString.$charAt($stringIndex - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $stringIndex = $stringIndex + 1 | 0;
                    continue;
                }
            }
        }
        if ($this.$next5.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_EmptySet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $strLength, $startStr, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength) {
            $low = $testString.$charAt($startSearch);
            if (jl_Character_isLowSurrogate($low) && $startSearch > $startStr) {
                $high = $testString.$charAt($startSearch - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $startSearch = $startSearch + (-1) | 0;
                    continue;
                }
            }
        }
        if ($this.$next5.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_EmptySet_getName = $this => {
    return $rt_s(718);
},
jur_EmptySet_hasConsumed = ($this, $mr) => {
    return 0;
},
ju_Enumeration = $rt_classWithoutFields(0);
function ju_StringTokenizer() {
    let a = this; jl_Object.call(a);
    a.$string0 = null;
    a.$delimiters = null;
    a.$returnDelimiters = 0;
    a.$position4 = 0;
}
let ju_StringTokenizer__init_1 = ($this, $string, $delimiters) => {
    ju_StringTokenizer__init_0($this, $string, $delimiters, 0);
},
ju_StringTokenizer__init_ = (var_0, var_1) => {
    let var_2 = new ju_StringTokenizer();
    ju_StringTokenizer__init_1(var_2, var_0, var_1);
    return var_2;
},
ju_StringTokenizer__init_0 = ($this, $string, $delimiters, $returnDelimiters) => {
    jl_Object__init_($this);
    if ($string === null)
        $rt_throw(jl_NullPointerException__init_());
    $this.$string0 = $string;
    $this.$delimiters = $delimiters;
    $this.$returnDelimiters = $returnDelimiters;
    $this.$position4 = 0;
},
ju_StringTokenizer__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new ju_StringTokenizer();
    ju_StringTokenizer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
ju_StringTokenizer_hasMoreTokens = $this => {
    let $length, $i;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    a: {
        $length = $this.$string0.$length();
        if ($this.$position4 < $length) {
            if ($this.$returnDelimiters)
                return 1;
            $i = $this.$position4;
            while (true) {
                if ($i >= $length)
                    break a;
                if ($this.$delimiters.$indexOf0($this.$string0.$charAt($i), 0) == (-1))
                    return 1;
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
},
ju_StringTokenizer_nextToken = $this => {
    let $i, $length, var$3, var$4, var$5;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    $i = $this.$position4;
    $length = $this.$string0.$length();
    if ($i < $length) {
        if ($this.$returnDelimiters) {
            if ($this.$delimiters.$indexOf0($this.$string0.$charAt($this.$position4), 0) >= 0) {
                var$3 = $this.$string0;
                var$4 = $this.$position4;
                $this.$position4 = var$4 + 1 | 0;
                return jl_String_valueOf2(var$3.$charAt(var$4));
            }
            $this.$position4 = $this.$position4 + 1 | 0;
            while ($this.$position4 < $length) {
                if ($this.$delimiters.$indexOf0($this.$string0.$charAt($this.$position4), 0) >= 0)
                    return $this.$string0.$substring($i, $this.$position4);
                $this.$position4 = $this.$position4 + 1 | 0;
            }
            return $this.$string0.$substring0($i);
        }
        while (true) {
            var$5 = $rt_compare($i, $length);
            if (var$5 >= 0)
                break;
            if ($this.$delimiters.$indexOf0($this.$string0.$charAt($i), 0) < 0)
                break;
            $i = $i + 1 | 0;
        }
        $this.$position4 = $i;
        if (var$5 < 0) {
            $this.$position4 = $this.$position4 + 1 | 0;
            while ($this.$position4 < $length) {
                if ($this.$delimiters.$indexOf0($this.$string0.$charAt($this.$position4), 0) >= 0)
                    return $this.$string0.$substring($i, $this.$position4);
                $this.$position4 = $this.$position4 + 1 | 0;
            }
            return $this.$string0.$substring0($i);
        }
    }
    $rt_throw(ju_NoSuchElementException__init_());
};
function otcit_DateTimeZoneBuilder$Transition() {
    let a = this; jl_Object.call(a);
    a.$iMillis = Long_ZERO;
    a.$iWallOffset = 0;
    a.$iStandardOffset1 = 0;
}
let otcit_DateTimeZoneBuilder$Transition__init_ = ($this, $millis, $tr) => {
    jl_Object__init_($this);
    $this.$iMillis = $millis;
    $this.$iWallOffset = $tr.$iWallOffset;
    $this.$iStandardOffset1 = $tr.$iStandardOffset1;
},
otcit_DateTimeZoneBuilder$Transition__init_0 = (var_0, var_1) => {
    let var_2 = new otcit_DateTimeZoneBuilder$Transition();
    otcit_DateTimeZoneBuilder$Transition__init_(var_2, var_0, var_1);
    return var_2;
},
otcit_DateTimeZoneBuilder$Transition__init_2 = ($this, $millis, $rule, $standardOffset) => {
    jl_Object__init_($this);
    $this.$iMillis = $millis;
    $this.$iWallOffset = $standardOffset + otcit_DateTimeZoneBuilder$Rule_getSaveMillis($rule) | 0;
    $this.$iStandardOffset1 = $standardOffset;
},
otcit_DateTimeZoneBuilder$Transition__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new otcit_DateTimeZoneBuilder$Transition();
    otcit_DateTimeZoneBuilder$Transition__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
otcit_DateTimeZoneBuilder$Transition__init_3 = ($this, $millis, $wallOffset, $standardOffset) => {
    jl_Object__init_($this);
    $this.$iMillis = $millis;
    $this.$iWallOffset = $wallOffset;
    $this.$iStandardOffset1 = $standardOffset;
},
otcit_DateTimeZoneBuilder$Transition__init_1 = (var_0, var_1, var_2) => {
    let var_3 = new otcit_DateTimeZoneBuilder$Transition();
    otcit_DateTimeZoneBuilder$Transition__init_3(var_3, var_0, var_1, var_2);
    return var_3;
},
otcit_DateTimeZoneBuilder$Transition_getMillis = $this => {
    return $this.$iMillis;
},
otcit_DateTimeZoneBuilder$Transition_getWallOffset = $this => {
    return $this.$iWallOffset;
},
otcit_DateTimeZoneBuilder$Transition_getStandardOffset = $this => {
    return $this.$iStandardOffset1;
},
otcit_DateTimeZoneBuilder$Transition_getSaveMillis = $this => {
    return $this.$iWallOffset - $this.$iStandardOffset1 | 0;
},
otcit_DateTimeZoneBuilder$Transition_isTransitionFrom = ($this, $other) => {
    let var$2;
    if ($other === null)
        return 1;
    a: {
        b: {
            if (Long_gt($this.$iMillis, $other.$iMillis)) {
                if ($this.$iWallOffset != $other.$iWallOffset)
                    break b;
                if ($this.$iStandardOffset1 != $other.$iStandardOffset1)
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
},
jl_StackTraceElement = $rt_classWithoutFields(),
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0 = $rt_classWithoutFields(),
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0__init_0 = () => {
    let var_0 = new jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0();
    jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0__init_(var_0);
    return var_0;
};
function onnrt_NostrTURN$Chunk() {
    let a = this; jl_Object.call(a);
    a.$data4 = null;
    a.$ack1 = 0;
    a.$sent0 = 0;
    a.$lastAttempt = null;
}
let onnrt_NostrTURN$Chunk__init_0 = ($this, $data) => {
    jl_Object__init_($this);
    $this.$data4 = $data;
},
onnrt_NostrTURN$Chunk__init_ = var_0 => {
    let var_1 = new onnrt_NostrTURN$Chunk();
    onnrt_NostrTURN$Chunk__init_0(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$Chunk__init_$exported$0 = var$1 => {
    return onnrt_NostrTURN$Chunk__init_($rt_str(var$1));
};
function ju_MapEntry() {
    let a = this; jl_Object.call(a);
    a.$key = null;
    a.$value = null;
}
let ju_MapEntry__init_ = ($this, $theKey, $theValue) => {
    jl_Object__init_($this);
    $this.$key = $theKey;
    $this.$value = $theValue;
},
ju_MapEntry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_MapEntry();
    ju_MapEntry__init_(var_2, var_0, var_1);
    return var_2;
},
ju_MapEntry_equals = ($this, $object) => {
    let $entry;
    if ($this === $object)
        return 1;
    if (!$rt_isInstance($object, ju_Map$Entry))
        return 0;
    $entry = $object;
    return ju_Objects_equals($this.$key, $entry.$getKey()) && ju_Objects_equals($this.$value, $entry.$getValue()) ? 1 : 0;
},
ju_MapEntry_getKey = $this => {
    return $this.$key;
},
ju_MapEntry_getValue = $this => {
    return $this.$value;
},
ju_MapEntry_hashCode = $this => {
    return ju_Objects_hashCode($this.$key) ^ ju_Objects_hashCode($this.$value);
},
ju_MapEntry_setValue = ($this, $object) => {
    let $result;
    $result = $this.$value;
    $this.$value = $object;
    return $result;
},
ju_MapEntry_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$key);
    var$2 = jl_String_valueOf($this.$value);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, var$1), 61), var$2);
    return jl_StringBuilder_toString(var$3);
};
function ju_HashMap$HashEntry() {
    let a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next6 = null;
}
let ju_HashMap$HashEntry__init_ = ($this, $theKey, $hash) => {
    ju_MapEntry__init_($this, $theKey, null);
    $this.$origKeyHash = $hash;
},
ju_HashMap$HashEntry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_HashMap$HashEntry();
    ju_HashMap$HashEntry__init_(var_2, var_0, var_1);
    return var_2;
};
function ju_LinkedHashMap$LinkedHashMapEntry() {
    let a = this; ju_HashMap$HashEntry.call(a);
    a.$chainForward = null;
    a.$chainBackward = null;
}
let ju_LinkedHashMap$LinkedHashMapEntry__init_ = ($this, $theKey, $hash) => {
    ju_HashMap$HashEntry__init_($this, $theKey, $hash);
    $this.$chainForward = null;
    $this.$chainBackward = null;
},
ju_LinkedHashMap$LinkedHashMapEntry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_LinkedHashMap$LinkedHashMapEntry();
    ju_LinkedHashMap$LinkedHashMapEntry__init_(var_2, var_0, var_1);
    return var_2;
},
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1 = $rt_classWithoutFields(),
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1__init_0 = () => {
    let var_0 = new jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1();
    jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1__init_(var_0);
    return var_0;
};
function onnn_Nip44$encrypt$lambda$_13_0() {
    let a = this; jl_Object.call(a);
    a.$_020 = null;
    a.$_111 = null;
}
let onnn_Nip44$encrypt$lambda$_13_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_020 = var$1;
    var$0.$_111 = var$2;
},
onnn_Nip44$encrypt$lambda$_13_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnn_Nip44$encrypt$lambda$_13_0();
    onnn_Nip44$encrypt$lambda$_13_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnn_Nip44$encrypt$lambda$_13_0_call0 = var$0 => {
    return onnn_Nip44$encrypt$lambda$_13_0_call(var$0);
},
onnn_Nip44$encrypt$lambda$_13_0_call = var$0 => {
    return onnn_Nip44_lambda$encrypt$1(var$0.$_020, var$0.$_111);
};
function jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser() {
    let a = this; jl_Object.call(a);
    a.$noOffsetText = null;
    a.$type1 = 0;
}
let jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_PATTERNS = null,
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_INSTANCE_ID = null,
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit = () => {
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit = $rt_eraseClinit(jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser);
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__clinit_();
},
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__init_ = ($this, $noOffsetText, $pattern) => {
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit();
    jl_Object__init_($this);
    ju_Objects_requireNonNull($noOffsetText, $rt_s(719));
    ju_Objects_requireNonNull($pattern, $rt_s(720));
    $this.$noOffsetText = $noOffsetText;
    $this.$type1 = jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_checkPattern($this, $pattern);
},
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__init_0 = (var_0, var_1) => {
    let var_2 = new jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser();
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__init_(var_2, var_0, var_1);
    return var_2;
},
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_checkPattern = ($this, $pattern) => {
    let $i, var$3, var$4;
    $i = 0;
    while (true) {
        jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit();
        if ($i >= jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_PATTERNS.data.length) {
            var$3 = new jl_IllegalArgumentException;
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(721)), $pattern);
            jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$4));
            $rt_throw(var$3);
        }
        if (jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_PATTERNS.data[$i].$equals($pattern))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parse = ($this, $context, $text, $position) => {
    let $length, $noOffsetLen, $sign, $negative, $array, var$9, var$10, $offsetSecs;
    a: {
        $length = $text.$length();
        $noOffsetLen = $this.$noOffsetText.$length();
        if (!$noOffsetLen) {
            if ($position != $length)
                break a;
            jtt_ChronoField_$callClinit();
            return jtf_DateTimeParseContext_setParsedField($context, jtt_ChronoField_OFFSET_SECONDS, Long_ZERO, $position, $position);
        }
        if ($position == $length)
            return $position ^ (-1);
        if (jtf_DateTimeParseContext_subSequenceEquals($context, $text, $position, $this.$noOffsetText, 0, $noOffsetLen)) {
            jtt_ChronoField_$callClinit();
            return jtf_DateTimeParseContext_setParsedField($context, jtt_ChronoField_OFFSET_SECONDS, Long_ZERO, $position, $position + $noOffsetLen | 0);
        }
    }
    $sign = $text.$charAt($position);
    if (!($sign != 43 && $sign != 45)) {
        $negative = $sign != 45 ? 1 : (-1);
        $array = $rt_createIntArray(4);
        var$9 = $array.data;
        var$9[0] = $position + 1 | 0;
        if (!jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parseNumber($this, $array, 1, $text, 1)) {
            var$10 = $this.$type1 < 3 ? 0 : 1;
            if (!jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parseNumber($this, $array, 2, $text, var$10) && !jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parseNumber($this, $array, 3, $text, 0)) {
                $offsetSecs = Long_mul(Long_fromInt($negative), Long_add(Long_add(Long_mul(Long_fromInt(var$9[1]), Long_fromInt(3600)), Long_mul(Long_fromInt(var$9[2]), Long_fromInt(60))), Long_fromInt(var$9[3])));
                jtt_ChronoField_$callClinit();
                return jtf_DateTimeParseContext_setParsedField($context, jtt_ChronoField_OFFSET_SECONDS, $offsetSecs, $position, var$9[0]);
            }
        }
    }
    if ($noOffsetLen)
        return $position ^ (-1);
    jtt_ChronoField_$callClinit();
    return jtf_DateTimeParseContext_setParsedField($context, jtt_ChronoField_OFFSET_SECONDS, Long_ZERO, $position, $position + $noOffsetLen | 0);
},
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parseNumber = ($this, $array, $arrayIndex, $parseText, $required) => {
    let var$5, $pos, var$7, var$8, $ch1, $ch2, $value;
    if ((($this.$type1 + 3 | 0) / 2 | 0) < $arrayIndex)
        return 0;
    var$5 = $array.data;
    $pos = var$5[0];
    if ($this.$type1 % 2 | 0)
        var$7 = $pos;
    else if ($arrayIndex <= 1)
        var$7 = $pos;
    else {
        var$7 = $pos + 1 | 0;
        if (!(var$7 <= $parseText.$length() && $parseText.$charAt($pos) == 58))
            return $required;
    }
    if ((var$7 + 2 | 0) > $parseText.$length())
        return $required;
    var$8 = var$7 + 1 | 0;
    $ch1 = $parseText.$charAt(var$7);
    var$7 = var$8 + 1 | 0;
    $ch2 = $parseText.$charAt(var$8);
    if ($ch1 >= 48 && $ch1 <= 57 && $ch2 >= 48 && $ch2 <= 57) {
        $value = (($ch1 - 48 | 0) * 10 | 0) + ($ch2 - 48 | 0) | 0;
        if ($value >= 0 && $value <= 59) {
            var$5[$arrayIndex] = $value;
            var$5[0] = var$7;
            return 0;
        }
        return $required;
    }
    return $required;
},
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_toString = $this => {
    let $converted, var$2, var$3;
    $converted = $this.$noOffsetText.$replace($rt_s(472), $rt_s(473));
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit();
    var$2 = jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_PATTERNS.data[$this.$type1];
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(722)), var$2), $rt_s(723)), $converted), $rt_s(724));
    return jl_StringBuilder_toString(var$3);
},
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__clinit_ = () => {
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_PATTERNS = $rt_wrapArray(jl_String, [$rt_s(725), $rt_s(726), $rt_s(727), $rt_s(462), $rt_s(728), $rt_s(441), $rt_s(729), $rt_s(730), $rt_s(731)]);
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_INSTANCE_ID = jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__init_0($rt_s(442), $rt_s(729));
};
function jus_Collectors$joining$lambda$_8_3() {
    let a = this; jl_Object.call(a);
    a.$_019 = null;
    a.$_110 = null;
}
let jus_Collectors$joining$lambda$_8_3__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_019 = var$1;
    var$0.$_110 = var$2;
},
jus_Collectors$joining$lambda$_8_3__init_0 = (var_0, var_1) => {
    let var_2 = new jus_Collectors$joining$lambda$_8_3();
    jus_Collectors$joining$lambda$_8_3__init_(var_2, var_0, var_1);
    return var_2;
},
jus_Collectors$joining$lambda$_8_3_apply0 = (var$0, var$1) => {
    return jus_Collectors$joining$lambda$_8_3_apply(var$0, var$1);
},
jus_Collectors$joining$lambda$_8_3_apply = (var$0, var$1) => {
    return jus_Collectors_lambda$joining$3(var$0.$_019, var$0.$_110, var$1);
},
jus_Collectors$joining$lambda$_8_2 = $rt_classWithoutFields(),
jus_Collectors$joining$lambda$_8_2__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jus_Collectors$joining$lambda$_8_2__init_0 = () => {
    let var_0 = new jus_Collectors$joining$lambda$_8_2();
    jus_Collectors$joining$lambda$_8_2__init_(var_0);
    return var_0;
},
jus_Collectors$joining$lambda$_8_2_get0 = var$0 => {
    return jus_Collectors$joining$lambda$_8_2_get(var$0);
},
jus_Collectors$joining$lambda$_8_2_get = var$0 => {
    return jl_StringBuilder__init_();
},
juf_BiFunction = $rt_classWithoutFields(0),
juf_BinaryOperator = $rt_classWithoutFields(0);
function jus_Collectors$joining$lambda$_8_1() {
    jl_Object.call(this);
    this.$_0190 = null;
}
let jus_Collectors$joining$lambda$_8_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0190 = var$1;
},
jus_Collectors$joining$lambda$_8_1__init_0 = var_0 => {
    let var_1 = new jus_Collectors$joining$lambda$_8_1();
    jus_Collectors$joining$lambda$_8_1__init_(var_1, var_0);
    return var_1;
},
jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException),
jl_IndexOutOfBoundsException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IndexOutOfBoundsException__init_ = () => {
    let var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_0(var_0);
    return var_0;
},
jl_IndexOutOfBoundsException__init_1 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_IndexOutOfBoundsException__init_2 = var_0 => {
    let var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_1(var_1, var_0);
    return var_1;
},
jl_ArrayIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException),
jl_ArrayIndexOutOfBoundsException__init_0 = $this => {
    jl_IndexOutOfBoundsException__init_0($this);
},
jl_ArrayIndexOutOfBoundsException__init_ = () => {
    let var_0 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_0(var_0);
    return var_0;
};
function jus_Collectors$joining$lambda$_8_0() {
    jl_Object.call(this);
    this.$_0168 = null;
}
let jus_Collectors$joining$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0168 = var$1;
},
jus_Collectors$joining$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new jus_Collectors$joining$lambda$_8_0();
    jus_Collectors$joining$lambda$_8_0__init_(var_1, var_0);
    return var_1;
},
jus_Collectors$joining$lambda$_8_0_accept0 = (var$0, var$1, var$2) => {
    jus_Collectors$joining$lambda$_8_0_accept(var$0, var$1, var$2);
},
jus_Collectors$joining$lambda$_8_0_accept = (var$0, var$1, var$2) => {
    jus_Collectors_lambda$joining$1(var$0.$_0168, var$1, var$2);
},
onp_NGEPlatform = $rt_classWithoutFields(),
onp_NGEPlatform_platform = null,
onp_NGEPlatform_logger = null,
onp_NGEPlatform_$callClinit = () => {
    onp_NGEPlatform_$callClinit = $rt_eraseClinit(onp_NGEPlatform);
    onp_NGEPlatform__clinit_();
},
onp_NGEPlatform__init_ = $this => {
    onp_NGEPlatform_$callClinit();
    jl_Object__init_($this);
},
onp_NGEPlatform_set = $platform => {
    onp_NGEPlatform_$callClinit();
    onp_NGEPlatform_platform = $platform;
},
onp_NGEPlatform_get = () => {
    let var$1, $defaultPlatformClass, $e, var$4, $$je;
    onp_NGEPlatform_$callClinit();
    a: {
        b: {
            c: {
                if (onp_NGEPlatform_platform === null) {
                    jl_Object_monitorEnterSync($rt_cls(onp_NGEPlatform));
                    try {
                        if (onp_NGEPlatform_platform === null)
                            break b;
                        jl_Object_monitorExitSync($rt_cls(onp_NGEPlatform));
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;
                        break a;

                    }
                }
            }
            return onp_NGEPlatform_platform;
        }
        try {
            onp_NGEPlatform_logger.$warning($rt_s(732));
            $defaultPlatformClass = $rt_s(733);
            try {
                $rt_throw(jl_ClassNotFoundException__init_0());
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            var$1 = new jl_RuntimeException;
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(734)), $defaultPlatformClass);
            jl_RuntimeException__init_2(var$1, jl_StringBuilder_toString(var$4), $e);
            $rt_throw(var$1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$1 = $$je;

        }
    }
    jl_Object_monitorExitSync($rt_cls(onp_NGEPlatform));
    $rt_throw(var$1);
},
onp_NGEPlatform_newRelayExecutor = $this => {
    return $this.$newAsyncExecutor($rt_s(314));
},
onp_NGEPlatform_newSubscriptionExecutor = $this => {
    return $this.$newAsyncExecutor($rt_s(735));
},
onp_NGEPlatform_newSignerExecutor = $this => {
    return $this.$newAsyncExecutor($rt_s(736));
},
onp_NGEPlatform_newPoolExecutor = $this => {
    return $this.$newAsyncExecutor($rt_s(737));
},
onp_NGEPlatform__clinit_ = () => {
    onp_NGEPlatform_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onp_NGEPlatform)));
},
onne_NostrEvent = $rt_classWithoutFields(0),
onne_NostrEvent_$callClinit = () => {
    onne_NostrEvent_$callClinit = $rt_eraseClinit(onne_NostrEvent);
    onne_NostrEvent__clinit_();
},
onne_NostrEvent_computeEventId = ($pubkey, $event) => {
    let $serial, $json, $id, $$je;
    onne_NostrEvent_$callClinit();
    a: {
        try {
            $serial = ju_Arrays_asList($rt_wrapArray(jl_Object, [jl_Integer_valueOf(0), $pubkey, jl_Long_valueOf(jt_Instant_getEpochSecond($event.$getCreatedAt())), jl_Integer_valueOf($event.$getKind()), $event.$getTagRows(), $event.$getContent()]));
            onne_NostrEvent$1_$callClinit();
            if (!onne_NostrEvent$1_$assertionsDisabled && !onp_NGEUtils_dbg(onne_NostrEvent$computeEventId$lambda$_8_0__init_0($serial)))
                $rt_throw(jl_AssertionError__init_());
            $json = (onp_NGEUtils_getPlatform()).$toJSON($serial);
            if (!onne_NostrEvent$1_$assertionsDisabled && !onp_NGEUtils_dbg(onne_NostrEvent$computeEventId$lambda$_8_1__init_0($json)))
                $rt_throw(jl_AssertionError__init_());
            $id = (onp_NGEUtils_getPlatform()).$sha256($json);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return $id;
    }
    return null;
},
onne_NostrEvent_getExpiration = $this => {
    let $tag, var$2, $expires;
    $tag = ($this.$getFirstTag($rt_s(738))).$get15(0);
    if ($tag === null)
        var$2 = jt_Instant_plusSeconds(jt_Instant_now(), Long_fromInt(1801090560));
    else {
        $expires = onp_NGEUtils_safeLong($tag);
        var$2 = jt_Instant_ofEpochSecond($expires);
    }
    return var$2;
},
onne_NostrEvent_isReplaceable = $this => {
    return onne_NostrEvent_isReplaceable0($this);
},
onne_NostrEvent_isAddressable = $this => {
    return onne_NostrEvent_isAddressable0($this);
},
onne_NostrEvent_isEphemeral = $this => {
    return onne_NostrEvent_isEphemeral0($this);
},
onne_NostrEvent_isRegular = $this => {
    return onne_NostrEvent_isRegular0($this);
},
onne_NostrEvent_isReplaceable0 = $event => {
    let $n;
    onne_NostrEvent_$callClinit();
    if ($event === null)
        return 0;
    $n = $event.$getKind();
    return !($n >= 10000 && $n < 20000) && $n && $n != 3 ? 0 : 1;
},
onne_NostrEvent_isAddressable0 = $event => {
    let $n;
    onne_NostrEvent_$callClinit();
    if ($event === null)
        return 0;
    $n = $event.$getKind();
    return $n >= 30000 && $n < 40000 ? 1 : 0;
},
onne_NostrEvent_isEphemeral0 = $event => {
    let $n;
    onne_NostrEvent_$callClinit();
    if ($event === null)
        return 0;
    $n = $event.$getKind();
    return $n >= 20000 && $n < 30000 ? 1 : 0;
},
onne_NostrEvent_isRegular0 = $event => {
    let $n;
    onne_NostrEvent_$callClinit();
    if ($event === null)
        return 0;
    $n = $event.$getKind();
    return !($n >= 1000 && $n < 10000) && !($n >= 4 && $n < 45) && $n != 1 && $n != 2 ? 0 : 1;
},
onne_NostrEvent_lambda$computeEventId$1 = $json => {
    let $logger, var$3;
    onne_NostrEvent_$callClinit();
    $logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onne_NostrEvent)));
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(739)), $json);
    $logger.$finest(jl_StringBuilder_toString(var$3));
},
onne_NostrEvent_lambda$computeEventId$0 = $serial => {
    let $logger, var$3, var$4;
    onne_NostrEvent_$callClinit();
    $logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onne_NostrEvent)));
    var$3 = jl_String_valueOf($serial);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(740)), var$3);
    $logger.$finest(jl_StringBuilder_toString(var$4));
},
onne_NostrEvent__clinit_ = () => {
    onne_NostrEvent$1_$callClinit();
},
onne_NostrEvent_computeEventId$exported$0 = (var$1, var$2) => {
    onne_NostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onne_NostrEvent_computeEventId($rt_str(var$1), var$2));
},
onne_NostrEvent_isReplaceable$exported$1 = var$1 => {
    onne_NostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onne_NostrEvent_isReplaceable0(var$1);
},
onne_NostrEvent_isAddressable$exported$2 = var$1 => {
    onne_NostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onne_NostrEvent_isAddressable0(var$1);
},
onne_NostrEvent_isEphemeral$exported$3 = var$1 => {
    onne_NostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onne_NostrEvent_isEphemeral0(var$1);
},
onne_NostrEvent_isRegular$exported$4 = var$1 => {
    onne_NostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onne_NostrEvent_isRegular0(var$1);
},
onne_NostrEvent_lambda$computeEventId$1$exported$5 = var$1 => {
    onne_NostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onne_NostrEvent_lambda$computeEventId$1($rt_str(var$1));
},
onne_NostrEvent_lambda$computeEventId$0$exported$6 = var$1 => {
    onne_NostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onne_NostrEvent_lambda$computeEventId$0(var$1);
};
function onne_SignedNostrEvent() {
    let a = this; onnp_NostrMessage.call(a);
    a.$kind4 = 0;
    a.$content0 = null;
    a.$tags1 = null;
    a.$tagRows0 = null;
    a.$signature = null;
    a.$pubkey1 = null;
    a.$identifier = null;
    a.$bech32Id = null;
    a.$parsedPublicKey = null;
    a.$expiresAt = null;
    a.$cachedFragment = null;
    a.$thisFragment = null;
}
let onne_SignedNostrEvent_BECH32_PREVIX = null,
onne_SignedNostrEvent_$assertionsDisabled = 0,
onne_SignedNostrEvent_$callClinit = () => {
    onne_SignedNostrEvent_$callClinit = $rt_eraseClinit(onne_SignedNostrEvent);
    onne_SignedNostrEvent__clinit_();
},
onne_SignedNostrEvent__init_ = ($this, $id, $pubkey, $kind, $content, $created_at, $signature, $tags) => {
    let var$8, $tagsMap, var$10, $tag, $values, $i, $tagValue, $tagValues, $entry;
    onne_SignedNostrEvent_$callClinit();
    onnp_NostrMessage__init_($this);
    var$8 = $rt_createArray(jl_Object, 1);
    var$8.data[0] = $this;
    $this.$thisFragment = ju_Arrays_asList(var$8);
    $this.$kind4 = $kind;
    $this.$content0 = $content;
    $this.$signature = $signature;
    $this.$pubkey1 = onnk_NostrPublicKey_asHex($pubkey);
    $this.$identifier = onne_SignedNostrEvent$Identifier__init_($id, $created_at);
    $tagsMap = ju_LinkedHashMap__init_();
    var$10 = $tags.$iterator();
    while (var$10.$hasNext()) {
        $tag = var$10.$next();
        $values = ju_ArrayList__init_();
        $i = 1;
        while ($i < $tag.$size()) {
            $values.$add1($tag.$get($i));
            $i = $i + 1 | 0;
        }
        $tagValue = onne_NostrEvent$TagValue__init_($values);
        $tagValues = $tagsMap.$computeIfAbsent($tag.$get(0), onne_SignedNostrEvent$_init_$lambda$_0_0__init_0());
        $tagValues.$add1($tagValue);
    }
    var$10 = ($tagsMap.$entrySet()).$iterator();
    while (var$10.$hasNext()) {
        $entry = var$10.$next();
        $entry.$setValue0(ju_Collections_unmodifiableList($entry.$getValue()));
    }
    $this.$tags1 = ju_Collections_unmodifiableMap($tagsMap);
    $this.$tagRows0 = ju_Collections_unmodifiableList($tags);
},
onne_SignedNostrEvent__init_2 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6) => {
    let var_7 = new onne_SignedNostrEvent();
    onne_SignedNostrEvent__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
},
onne_SignedNostrEvent__init_0 = ($this, $map) => {
    let var$2, $id, $createdAt, var$5, var$6, $tags, $tagsMap, $tagRows, $tag, var$11, $values, $i, $tagValue, $tagValues;
    onne_SignedNostrEvent_$callClinit();
    onnp_NostrMessage__init_($this);
    var$2 = $rt_createArray(jl_Object, 1);
    var$2.data[0] = $this;
    $this.$thisFragment = ju_Arrays_asList(var$2);
    $this.$kind4 = onp_NGEUtils_safeInt($map.$get1($rt_s(741)));
    $this.$content0 = onp_NGEUtils_safeString($map.$get1($rt_s(742)));
    $this.$signature = onp_NGEUtils_safeString($map.$get1($rt_s(743)));
    $this.$pubkey1 = onp_NGEUtils_safeString($map.$get1($rt_s(744)));
    $id = onp_NGEUtils_safeString($map.$get1($rt_s(745)));
    $createdAt = onp_NGEUtils_safeSecondsInstant($map.$get1($rt_s(746)));
    $this.$identifier = onne_SignedNostrEvent$Identifier__init_($id, $createdAt);
    var$5 = ju_ArrayList__init_();
    var$6 = $map.$getOrDefault($rt_s(747), var$5);
    $tags = onp_NGEUtils_safeCollectionOfStringArray(var$6);
    $tagsMap = ju_LinkedHashMap__init_();
    $tagRows = ju_ArrayList__init_();
    var$6 = $tags.$iterator();
    while (var$6.$hasNext()) {
        $tag = var$6.$next();
        var$2 = $tag.data;
        var$11 = var$2.length;
        if (!var$11)
            continue;
        $values = ju_ArrayList__init_();
        $i = 1;
        while ($i < var$11) {
            $values.$add1(var$2[$i]);
            $i = $i + 1 | 0;
        }
        $tagValue = onne_NostrEvent$TagValue__init_($values);
        $tagValues = $tagsMap.$computeIfAbsent(var$2[0], onne_SignedNostrEvent$_init_$lambda$_1_0__init_0());
        $tagValues.$add1($tagValue);
        $tagRows.$add1(ju_Arrays_asList($tag));
    }
    $this.$tags1 = ju_Collections_unmodifiableMap($tagsMap);
    $this.$tagRows0 = ju_Collections_unmodifiableList($tagRows);
},
onne_SignedNostrEvent__init_1 = var_0 => {
    let var_1 = new onne_SignedNostrEvent();
    onne_SignedNostrEvent__init_0(var_1, var_0);
    return var_1;
},
onne_SignedNostrEvent_getCreatedAt = $this => {
    return $this.$identifier.$createdAtInstant;
},
onne_SignedNostrEvent_getKind = $this => {
    return $this.$kind4;
},
onne_SignedNostrEvent_getContent = $this => {
    return $this.$content0;
},
onne_SignedNostrEvent_getSignature = $this => {
    return $this.$signature;
},
onne_SignedNostrEvent_getId = $this => {
    return $this.$identifier.$id2;
},
onne_SignedNostrEvent_getPubkey = $this => {
    if ($this.$parsedPublicKey === null)
        $this.$parsedPublicKey = onnk_NostrPublicKey_fromHex($this.$pubkey1);
    return $this.$parsedPublicKey;
},
onne_SignedNostrEvent_getAuthor = $this => {
    return $this.$getPubkey();
},
onne_SignedNostrEvent_toMap = $this => {
    if ($this.$cachedFragment !== null)
        return $this.$cachedFragment;
    $this.$cachedFragment = ju_HashMap__init_();
    $this.$cachedFragment.$put1($rt_s(745), $this.$identifier.$id2);
    $this.$cachedFragment.$put1($rt_s(744), $this.$pubkey1);
    $this.$cachedFragment.$put1($rt_s(741), jl_Integer_valueOf($this.$kind4));
    $this.$cachedFragment.$put1($rt_s(742), $this.$content0);
    $this.$cachedFragment.$put1($rt_s(746), jl_Long_valueOf($this.$identifier.$createdAt0));
    $this.$cachedFragment.$put1($rt_s(743), $this.$signature);
    $this.$cachedFragment.$put1($rt_s(747), $this.$getTagRows());
    return $this.$cachedFragment;
},
onne_SignedNostrEvent_equals = ($this, $obj) => {
    let $e;
    if ($obj !== null && $obj instanceof onne_SignedNostrEvent) {
        if ($obj === $this)
            return 1;
        $e = $obj;
        return $e.$identifier.$id2.$equals($this.$identifier.$id2);
    }
    return 0;
},
onne_SignedNostrEvent_hashCode = $this => {
    return $this.$identifier.$id2.$hashCode();
},
onne_SignedNostrEvent_clone = $this => {
    let var$1, $e, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(jl_RuntimeException__init_1($rt_s(424), $e));
},
onne_SignedNostrEvent_verify = $this => {
    return (onp_NGEUtils_getPlatform()).$verify0($this.$identifier.$id2, $this.$signature, onnk_NostrPublicKey__array($this.$getPubkey()));
},
onne_SignedNostrEvent_verifyAsync = $this => {
    return (onp_NGEUtils_getPlatform()).$verifyAsync0($this.$identifier.$id2, $this.$signature, onnk_NostrPublicKey__array($this.$getPubkey()));
},
onne_SignedNostrEvent_getIdBech32 = $this => {
    let var$1, $id, $data, $$je;
    a: {
        b: {
            try {
                if ($this.$bech32Id === null)
                    break b;
                var$1 = $this.$bech32Id;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof onnu_Bech32$Bech32Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        c: {
            try {
                $id = $this.$getId();
                if ($id !== null)
                    break c;
                var$1 = null;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof onnu_Bech32$Bech32Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        d: {
            try {
                $data = onp_NGEUtils_hexToBytes($id);
                $this.$bech32Id = onnu_Bech32_bech32Encode(onne_SignedNostrEvent_BECH32_PREVIX, $data);
                if (!onne_SignedNostrEvent_$assertionsDisabled && jn_Buffer_position($data))
                    break d;
                var$1 = $this.$bech32Id;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof onnu_Bech32$Bech32Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        try {
            $rt_throw(jl_AssertionError__init_0($rt_s(383)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof onnu_Bech32$Bech32Exception) {
            } else {
                throw $$e;
            }
        }
    }
    return null;
},
onne_SignedNostrEvent_getIdentifier = $this => {
    return $this.$identifier;
},
onne_SignedNostrEvent_getPrefix = $this => {
    return $rt_s(748);
},
onne_SignedNostrEvent_getFragments = $this => {
    return $this.$thisFragment;
},
onne_SignedNostrEvent_parse = $doc => {
    let $prefix, $subId, $eventMap, $e;
    onne_SignedNostrEvent_$callClinit();
    $prefix = onp_NGEUtils_safeString($doc.$get(0));
    if ($prefix.$equals($rt_s(748)) && $doc.$size() >= 3) {
        $subId = onp_NGEUtils_safeString($doc.$get(1));
        $eventMap = $doc.$get(2);
        $e = onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_0($subId, $eventMap);
        return $e;
    }
    return null;
},
onne_SignedNostrEvent_getExpiration = $this => {
    let $tag, $expires;
    if ($this.$expiresAt !== null)
        return $this.$expiresAt;
    $tag = ($this.$getFirstTag($rt_s(738))).$get15(0);
    if ($tag === null)
        $this.$expiresAt = jt_Instant_plusSeconds(jt_Instant_now(), Long_fromInt(1801090560));
    else {
        $expires = onp_NGEUtils_safeLong($tag);
        $this.$expiresAt = jt_Instant_ofEpochSecond($expires);
    }
    return $this.$expiresAt;
},
onne_SignedNostrEvent_hasTag = ($this, $tag) => {
    if ($tag === null)
        return 0;
    return $this.$tags1.$get1($tag) === null ? 0 : 1;
},
onne_SignedNostrEvent_getTag = ($this, $key) => {
    let $values;
    $values = $this.$tags1.$get1($key);
    if ($values !== null && $values.$isEmpty())
        return null;
    return $values;
},
onne_SignedNostrEvent_getFirstTag = ($this, $key) => {
    let $values;
    $values = $this.$tags1.$get1($key);
    if ($values !== null && !$values.$isEmpty())
        return $values.$get(0);
    return null;
},
onne_SignedNostrEvent_listTagKeys = $this => {
    return $this.$tags1.$keySet();
},
onne_SignedNostrEvent_getTagRows = $this => {
    return $this.$tagRows0;
},
onne_SignedNostrEvent_getCoordinates = $this => {
    let $kind, $id, $pub, $d, var$5, var$6, $coords;
    $kind = jl_String_valueOf0($this.$getKind());
    if (!$this.$isAddressable0() && !$this.$isReplaceable0()) {
        $id = $this.$getId();
        return onne_NostrEvent$Coordinates__init_($rt_s(749), $kind, $id);
    }
    $pub = onnk_NostrPublicKey_asHex($this.$getPubkey());
    $d = $this.$getFirstTag($rt_s(146));
    var$5 = $d === null ? $rt_s(23) : $d.$get15(0);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$6, $kind), 58), $pub), 58), var$5);
    $coords = jl_StringBuilder_toString(var$6);
    return onne_NostrEvent$Coordinates__init_($rt_s(750), jl_String_valueOf0($this.$getKind()), $coords);
},
onne_SignedNostrEvent_clone0 = $this => {
    return $this.$clone6();
},
onne_SignedNostrEvent_lambda$new$1 = $k => {
    onne_SignedNostrEvent_$callClinit();
    return ju_ArrayList__init_();
},
onne_SignedNostrEvent_lambda$new$0 = $k => {
    onne_SignedNostrEvent_$callClinit();
    return ju_ArrayList__init_();
},
onne_SignedNostrEvent__clinit_ = () => {
    onne_SignedNostrEvent_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onne_SignedNostrEvent)) ? 0 : 1;
    jnc_StandardCharsets_$callClinit();
    onne_SignedNostrEvent_BECH32_PREVIX = $rt_s(751).$getBytes(jnc_StandardCharsets_UTF_8);
},
onne_SignedNostrEvent_getExpiration$exported$0 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getExpiration();
},
onne_SignedNostrEvent__init_$exported$1 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return onne_SignedNostrEvent__init_1(var$1);
},
onne_SignedNostrEvent_getContent$exported$2 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return $rt_ustr(var$1.$getContent());
},
onne_SignedNostrEvent_isEphemeral$exported$3 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return !!var$1.$isEphemeral0();
},
onne_SignedNostrEvent_getKind$exported$4 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getKind();
},
onne_SignedNostrEvent_getTagRows$exported$5 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getTagRows();
},
onne_SignedNostrEvent_getSignature$exported$6 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return $rt_ustr(var$1.$getSignature());
},
onne_SignedNostrEvent_getIdentifier$exported$7 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getIdentifier();
},
onne_SignedNostrEvent_verify$exported$8 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return !!var$1.$verify();
},
onne_SignedNostrEvent_isRegular$exported$9 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return !!var$1.$isRegular0();
},
onne_SignedNostrEvent_hasTag$exported$10 = (var$1, var$2) => {
    onne_SignedNostrEvent_$callClinit();
    var$2 = $rt_str(var$2);
    return !!var$1.$hasTag(var$2);
},
onne_SignedNostrEvent_clone$exported$11 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return otji_JSWrapper_javaToJs(var$1.$clone0());
},
onne_SignedNostrEvent_getCreatedAt$exported$12 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getCreatedAt();
},
onne_SignedNostrEvent_listTagKeys$exported$13 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$listTagKeys();
};
let onne_SignedNostrEvent_isReplaceable$exported$14 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return !!var$1.$isReplaceable0();
},
onne_SignedNostrEvent_isAddressable$exported$15 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return !!var$1.$isAddressable0();
},
onne_SignedNostrEvent_getTag$exported$16 = (var$1, var$2) => {
    onne_SignedNostrEvent_$callClinit();
    var$2 = $rt_str(var$2);
    return var$1.$getTag(var$2);
},
onne_SignedNostrEvent_getAuthor$exported$17 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getAuthor();
},
onne_SignedNostrEvent_getId$exported$18 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return $rt_ustr(var$1.$getId());
},
onne_SignedNostrEvent_getPubkey$exported$19 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getPubkey();
},
onne_SignedNostrEvent__init_$exported$20 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7) => {
    onne_SignedNostrEvent_$callClinit();
    return onne_SignedNostrEvent__init_2($rt_str(var$1), var$2, var$3, $rt_str(var$4), var$5, $rt_str(var$6), var$7);
},
onne_SignedNostrEvent_verifyAsync$exported$21 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$verifyAsync();
},
onne_SignedNostrEvent_getFirstTag$exported$22 = (var$1, var$2) => {
    onne_SignedNostrEvent_$callClinit();
    var$2 = $rt_str(var$2);
    return var$1.$getFirstTag(var$2);
},
onne_SignedNostrEvent_getIdBech32$exported$23 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return $rt_ustr(var$1.$getIdBech32());
},
onne_SignedNostrEvent_clone$exported$24 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$clone6();
},
onne_SignedNostrEvent_getCoordinates$exported$25 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    return var$1.$getCoordinates();
},
onne_SignedNostrEvent_parse$exported$0 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onne_SignedNostrEvent_parse(var$1);
},
onne_SignedNostrEvent_lambda$new$1$exported$1 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onne_SignedNostrEvent_lambda$new$1($rt_str(var$1));
},
onne_SignedNostrEvent_lambda$new$0$exported$2 = var$1 => {
    onne_SignedNostrEvent_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onne_SignedNostrEvent_lambda$new$0($rt_str(var$1));
};
function onne_SignedNostrEvent$ReceivedSignedNostrEvent() {
    onne_SignedNostrEvent.call(this);
    this.$subId2 = null;
}
let onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_ = ($this, $subId, $map) => {
    onne_SignedNostrEvent__init_0($this, $map);
    $this.$subId2 = $subId;
},
onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_0 = (var_0, var_1) => {
    let var_2 = new onne_SignedNostrEvent$ReceivedSignedNostrEvent();
    onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_(var_2, var_0, var_1);
    return var_2;
},
onne_SignedNostrEvent$ReceivedSignedNostrEvent_getSubId = $this => {
    return $this.$subId2;
},
onne_SignedNostrEvent$ReceivedSignedNostrEvent_equals = ($this, $obj) => {
    return onne_SignedNostrEvent_equals($this, $obj);
},
onne_SignedNostrEvent$ReceivedSignedNostrEvent_hashCode = $this => {
    return onne_SignedNostrEvent_hashCode($this);
},
onne_SignedNostrEvent$ReceivedSignedNostrEvent_clone = $this => {
    return onne_SignedNostrEvent_clone($this);
},
onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_$exported$0 = (var$1, var$2) => {
    return onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_0($rt_str(var$1), var$2);
},
onne_SignedNostrEvent$ReceivedSignedNostrEvent_getSubId$exported$1 = var$1 => {
    return $rt_ustr(var$1.$getSubId());
};
function juca_AtomicLong() {
    let a = this; jl_Number.call(a);
    a.$value14 = Long_ZERO;
    a.$version1 = 0;
}
let juca_AtomicLong__init_ = ($this, $value) => {
    jl_Number__init_($this);
    $this.$value14 = $value;
},
juca_AtomicLong__init_0 = var_0 => {
    let var_1 = new juca_AtomicLong();
    juca_AtomicLong__init_(var_1, var_0);
    return var_1;
},
juca_AtomicLong_incrementAndGet = $this => {
    let var$1;
    $this.$version1 = $this.$version1 + 1 | 0;
    var$1 = Long_add($this.$value14, Long_fromInt(1));
    $this.$value14 = var$1;
    return var$1;
};
function ju_AbstractList$1() {
    let a = this; jl_Object.call(a);
    a.$index2 = 0;
    a.$modCount2 = 0;
    a.$size3 = 0;
    a.$removeIndex = 0;
    a.$this$03 = null;
}
let ju_AbstractList$1__init_ = ($this, $this$0) => {
    $this.$this$03 = $this$0;
    jl_Object__init_($this);
    $this.$modCount2 = $this.$this$03.$modCount;
    $this.$size3 = $this.$this$03.$size();
    $this.$removeIndex = (-1);
},
ju_AbstractList$1__init_0 = var_0 => {
    let var_1 = new ju_AbstractList$1();
    ju_AbstractList$1__init_(var_1, var_0);
    return var_1;
},
ju_AbstractList$1_hasNext = $this => {
    return $this.$index2 >= $this.$size3 ? 0 : 1;
},
ju_AbstractList$1_next = $this => {
    let var$1, var$2;
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$removeIndex = $this.$index2;
    var$1 = $this.$this$03;
    var$2 = $this.$index2;
    $this.$index2 = var$2 + 1 | 0;
    return var$1.$get(var$2);
},
ju_AbstractList$1_remove = $this => {
    if ($this.$removeIndex < 0)
        $rt_throw(jl_IllegalStateException__init_0());
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$this$03.$remove0($this.$removeIndex);
    $this.$modCount2 = $this.$this$03.$modCount;
    if ($this.$removeIndex < $this.$index2)
        $this.$index2 = $this.$index2 - 1 | 0;
    $this.$size3 = $this.$size3 - 1 | 0;
    $this.$removeIndex = (-1);
},
ju_AbstractList$1_checkConcurrentModification = $this => {
    if ($this.$modCount2 >= $this.$this$03.$modCount)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
},
jt_DayOfWeek = $rt_classWithoutFields(jl_Enum),
jt_DayOfWeek_MONDAY = null,
jt_DayOfWeek_TUESDAY = null,
jt_DayOfWeek_WEDNESDAY = null,
jt_DayOfWeek_THURSDAY = null,
jt_DayOfWeek_FRIDAY = null,
jt_DayOfWeek_SATURDAY = null,
jt_DayOfWeek_SUNDAY = null,
jt_DayOfWeek_FROM = null,
jt_DayOfWeek_ENUMS = null,
jt_DayOfWeek_$VALUES = null,
jt_DayOfWeek_$callClinit = () => {
    jt_DayOfWeek_$callClinit = $rt_eraseClinit(jt_DayOfWeek);
    jt_DayOfWeek__clinit_();
},
jt_DayOfWeek_values = () => {
    jt_DayOfWeek_$callClinit();
    return jt_DayOfWeek_$VALUES.$clone0();
},
jt_DayOfWeek__init_0 = ($this, var$1, var$2) => {
    jt_DayOfWeek_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jt_DayOfWeek__init_ = (var_0, var_1) => {
    let var_2 = new jt_DayOfWeek();
    jt_DayOfWeek__init_0(var_2, var_0, var_1);
    return var_2;
},
jt_DayOfWeek_of = $dayOfWeek => {
    let var$2, var$3;
    jt_DayOfWeek_$callClinit();
    if ($dayOfWeek >= 1 && $dayOfWeek <= 7)
        return jt_DayOfWeek_ENUMS.data[$dayOfWeek - 1 | 0];
    var$2 = new jt_DateTimeException;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(752)), $dayOfWeek);
    jt_DateTimeException__init_(var$2, jl_StringBuilder_toString(var$3));
    $rt_throw(var$2);
},
jt_DayOfWeek_getValue = $this => {
    return jl_Enum_ordinal($this) + 1 | 0;
},
jt_DayOfWeek_$values = () => {
    let var$1, var$2;
    jt_DayOfWeek_$callClinit();
    var$1 = $rt_createArray(jt_DayOfWeek, 7);
    var$2 = var$1.data;
    var$2[0] = jt_DayOfWeek_MONDAY;
    var$2[1] = jt_DayOfWeek_TUESDAY;
    var$2[2] = jt_DayOfWeek_WEDNESDAY;
    var$2[3] = jt_DayOfWeek_THURSDAY;
    var$2[4] = jt_DayOfWeek_FRIDAY;
    var$2[5] = jt_DayOfWeek_SATURDAY;
    var$2[6] = jt_DayOfWeek_SUNDAY;
    return var$1;
},
jt_DayOfWeek__clinit_ = () => {
    jt_DayOfWeek_MONDAY = jt_DayOfWeek__init_($rt_s(753), 0);
    jt_DayOfWeek_TUESDAY = jt_DayOfWeek__init_($rt_s(754), 1);
    jt_DayOfWeek_WEDNESDAY = jt_DayOfWeek__init_($rt_s(755), 2);
    jt_DayOfWeek_THURSDAY = jt_DayOfWeek__init_($rt_s(756), 3);
    jt_DayOfWeek_FRIDAY = jt_DayOfWeek__init_($rt_s(757), 4);
    jt_DayOfWeek_SATURDAY = jt_DayOfWeek__init_($rt_s(758), 5);
    jt_DayOfWeek_SUNDAY = jt_DayOfWeek__init_($rt_s(759), 6);
    jt_DayOfWeek_$VALUES = jt_DayOfWeek_$values();
    jt_DayOfWeek_FROM = jt_DayOfWeek$1__init_0();
    jt_DayOfWeek_ENUMS = jt_DayOfWeek_values();
};
function cjj_InfBlocks() {
    let a = this; jl_Object.call(a);
    a.$mode1 = 0;
    a.$left = 0;
    a.$table0 = 0;
    a.$index0 = 0;
    a.$blens = null;
    a.$bb = null;
    a.$tb = null;
    a.$bl = null;
    a.$bd = null;
    a.$tl = null;
    a.$td = null;
    a.$tli = null;
    a.$tdi = null;
    a.$codes = null;
    a.$last = 0;
    a.$bitk = 0;
    a.$bitb = 0;
    a.$hufts = null;
    a.$window0 = null;
    a.$end2 = 0;
    a.$read4 = 0;
    a.$write1 = 0;
    a.$check0 = 0;
    a.$inftree = null;
    a.$z = null;
}
let cjj_InfBlocks_inflate_mask = null,
cjj_InfBlocks_border = null,
cjj_InfBlocks_$callClinit = () => {
    cjj_InfBlocks_$callClinit = $rt_eraseClinit(cjj_InfBlocks);
    cjj_InfBlocks__clinit_();
},
cjj_InfBlocks__init_ = ($this, $z, $w) => {
    cjj_InfBlocks_$callClinit();
    jl_Object__init_($this);
    $this.$bb = $rt_createIntArray(1);
    $this.$tb = $rt_createIntArray(1);
    $this.$bl = $rt_createIntArray(1);
    $this.$bd = $rt_createIntArray(1);
    $this.$tl = $rt_createArray($rt_arraycls($rt_intcls), 1);
    $this.$td = $rt_createArray($rt_arraycls($rt_intcls), 1);
    $this.$tli = $rt_createIntArray(1);
    $this.$tdi = $rt_createIntArray(1);
    $this.$inftree = cjj_InfTree__init_0();
    $this.$z = $z;
    $this.$codes = cjj_InfCodes__init_0($this.$z, $this);
    $this.$hufts = $rt_createIntArray(4320);
    $this.$window0 = $rt_createByteArray($w);
    $this.$end2 = $w;
    $this.$check0 = $z.$istate.$wrap9 ? 1 : 0;
    $this.$mode1 = 0;
    cjj_InfBlocks_reset($this);
},
cjj_InfBlocks__init_0 = (var_0, var_1) => {
    let var_2 = new cjj_InfBlocks();
    cjj_InfBlocks__init_(var_2, var_0, var_1);
    return var_2;
},
cjj_InfBlocks_reset = $this => {
    $this.$mode1 != 4 && $this.$mode1 != 5;
    if ($this.$mode1 == 6)
        cjj_InfCodes_free($this.$codes, $this.$z);
    $this.$mode1 = 0;
    $this.$bitk = 0;
    $this.$bitb = 0;
    $this.$write1 = 0;
    $this.$read4 = 0;
    if ($this.$check0)
        $this.$z.$adler.$reset();
},
cjj_InfBlocks_proc = ($this, $r) => {
    let $p, $n, $b, $k, $q, $m, var$8, var$9, var$10, var$11, $i, $t, var$14, var$15, $c, $j, var$18, var$19, var$20;
    $p = $this.$z.$next_in_index;
    $n = $this.$z.$avail_in;
    $b = $this.$bitb;
    $k = $this.$bitk;
    $q = $this.$write1;
    $m = $q >= $this.$read4 ? $this.$end2 - $q | 0 : ($this.$read4 - $q | 0) - 1 | 0;
    a: {
        b: {
            c: {
                d: {
                    e: while (true) {
                        f: {
                            g: {
                                h: {
                                    i: {
                                        j: {
                                            switch ($this.$mode1) {
                                                case 2:
                                                    break f;
                                                case 9:
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z.$avail_in = $n;
                                                    var$8 = $this.$z;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                    $this.$z.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-3));
                                                case 0:
                                                    break j;
                                                case 1:
                                                    break;
                                                case 3:
                                                    while ($k < 14) {
                                                        if (!$n) {
                                                            $this.$bitb = $b;
                                                            $this.$bitk = $k;
                                                            $this.$z.$avail_in = $n;
                                                            var$8 = $this.$z;
                                                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                            $this.$z.$next_in_index = $p;
                                                            $this.$write1 = $q;
                                                            return cjj_InfBlocks_inflate_flush($this, $r);
                                                        }
                                                        $r = 0;
                                                        $n = $n + (-1) | 0;
                                                        var$9 = $this.$z.$next_in.data;
                                                        var$10 = $p + 1 | 0;
                                                        $b = $b | (var$9[$p] & 255) << $k;
                                                        $k = $k + 8 | 0;
                                                        $p = var$10;
                                                    }
                                                    var$10 = $b & 16383;
                                                    $this.$table0 = var$10;
                                                    var$11 = var$10 & 31;
                                                    if (var$11 > 29)
                                                        break d;
                                                    var$10 = var$10 >> 5 & 31;
                                                    if (var$10 > 29)
                                                        break d;
                                                    k: {
                                                        var$10 = (258 + var$11 | 0) + var$10 | 0;
                                                        if (!($this.$blens !== null && $this.$blens.data.length >= var$10))
                                                            $this.$blens = $rt_createIntArray(var$10);
                                                        else {
                                                            $i = 0;
                                                            while (true) {
                                                                if ($i >= var$10)
                                                                    break k;
                                                                $this.$blens.data[$i] = 0;
                                                                $i = $i + 1 | 0;
                                                            }
                                                        }
                                                    }
                                                    $b = $b >>> 14 | 0;
                                                    $k = $k + (-14) | 0;
                                                    $this.$index0 = 0;
                                                    $this.$mode1 = 4;
                                                    break i;
                                                case 4:
                                                    break i;
                                                case 5:
                                                    break h;
                                                case 6:
                                                    break g;
                                                case 7:
                                                    break b;
                                                case 8:
                                                    break a;
                                                default:
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z.$avail_in = $n;
                                                    var$8 = $this.$z;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                    $this.$z.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-2));
                                            }
                                            while ($k < 32) {
                                                if (!$n) {
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z.$avail_in = $n;
                                                    var$8 = $this.$z;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                    $this.$z.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, $r);
                                                }
                                                $r = 0;
                                                $n = $n + (-1) | 0;
                                                var$9 = $this.$z.$next_in.data;
                                                var$10 = $p + 1 | 0;
                                                $b = $b | (var$9[$p] & 255) << $k;
                                                $k = $k + 8 | 0;
                                                $p = var$10;
                                            }
                                            var$10 = (($b ^ (-1)) >>> 16 | 0) & 65535;
                                            var$11 = $b & 65535;
                                            if (var$10 != var$11) {
                                                $this.$mode1 = 9;
                                                $this.$z.$msg = $rt_s(760);
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z.$avail_in = $n;
                                                var$8 = $this.$z;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                $this.$z.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, (-3));
                                            }
                                            $this.$left = var$11;
                                            $k = 0;
                                            $this.$mode1 = $this.$left ? 2 : !$this.$last ? 0 : 7;
                                            $b = $k;
                                            continue e;
                                        }
                                        while ($k < 3) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z.$avail_in = $n;
                                                var$8 = $this.$z;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                $this.$z.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z.$next_in.data;
                                            var$10 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$10;
                                        }
                                        l: {
                                            $t = $b & 7;
                                            $this.$last = $t & 1;
                                            switch ($t >>> 1 | 0) {
                                                case 0:
                                                    var$10 = $b >>> 3 | 0;
                                                    var$11 = $k + (-3) | 0;
                                                    var$14 = var$11 & 7;
                                                    $b = var$10 >>> var$14 | 0;
                                                    $k = var$11 - var$14 | 0;
                                                    $this.$mode1 = 1;
                                                    break l;
                                                case 1:
                                                    cjj_InfTree_inflate_trees_fixed($this.$bl, $this.$bd, $this.$tl, $this.$td, $this.$z);
                                                    cjj_InfCodes_init($this.$codes, $this.$bl.data[0], $this.$bd.data[0], $this.$tl.data[0], 0, $this.$td.data[0], 0);
                                                    $b = $b >>> 3 | 0;
                                                    $k = $k + (-3) | 0;
                                                    $this.$mode1 = 6;
                                                    break l;
                                                case 2:
                                                    $b = $b >>> 3 | 0;
                                                    $k = $k + (-3) | 0;
                                                    $this.$mode1 = 3;
                                                    break l;
                                                case 3:
                                                    var$10 = $b >>> 3 | 0;
                                                    var$11 = $k + (-3) | 0;
                                                    $this.$mode1 = 9;
                                                    $this.$z.$msg = $rt_s(761);
                                                    $this.$bitb = var$10;
                                                    $this.$bitk = var$11;
                                                    $this.$z.$avail_in = $n;
                                                    var$8 = $this.$z;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                    $this.$z.$next_in_index = $p;
                                                    $this.$write1 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-3));
                                                default:
                                            }
                                        }
                                        continue e;
                                    }
                                    while ($this.$index0 < (4 + ($this.$table0 >>> 10 | 0) | 0)) {
                                        while ($k < 3) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z.$avail_in = $n;
                                                var$8 = $this.$z;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                $this.$z.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z.$next_in.data;
                                            var$10 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$10;
                                        }
                                        var$15 = $this.$blens.data;
                                        cjj_InfBlocks_$callClinit();
                                        var$9 = cjj_InfBlocks_border.data;
                                        var$10 = $this.$index0;
                                        $this.$index0 = var$10 + 1 | 0;
                                        var$15[var$9[var$10]] = $b & 7;
                                        $b = $b >>> 3 | 0;
                                        $k = $k + (-3) | 0;
                                    }
                                    while ($this.$index0 < 19) {
                                        var$15 = $this.$blens.data;
                                        cjj_InfBlocks_$callClinit();
                                        var$9 = cjj_InfBlocks_border.data;
                                        var$10 = $this.$index0;
                                        $this.$index0 = var$10 + 1 | 0;
                                        var$15[var$9[var$10]] = 0;
                                    }
                                    $this.$bb.data[0] = 7;
                                    var$10 = cjj_InfTree_inflate_trees_bits($this.$inftree, $this.$blens, $this.$bb, $this.$tb, $this.$hufts, $this.$z);
                                    if (var$10) {
                                        if (var$10 == (-3)) {
                                            $this.$blens = null;
                                            $this.$mode1 = 9;
                                        }
                                        $this.$bitb = $b;
                                        $this.$bitk = $k;
                                        $this.$z.$avail_in = $n;
                                        var$8 = $this.$z;
                                        var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                        $this.$z.$next_in_index = $p;
                                        $this.$write1 = $q;
                                        return cjj_InfBlocks_inflate_flush($this, var$10);
                                    }
                                    $this.$index0 = 0;
                                    $this.$mode1 = 5;
                                }
                                while (true) {
                                    var$10 = $this.$table0;
                                    if ($this.$index0 >= ((258 + (var$10 & 31) | 0) + (var$10 >> 5 & 31) | 0))
                                        break;
                                    var$10 = $this.$bb.data[0];
                                    while ($k < var$10) {
                                        if (!$n) {
                                            $this.$bitb = $b;
                                            $this.$bitk = $k;
                                            $this.$z.$avail_in = $n;
                                            var$8 = $this.$z;
                                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                            $this.$z.$next_in_index = $p;
                                            $this.$write1 = $q;
                                            return cjj_InfBlocks_inflate_flush($this, $r);
                                        }
                                        $r = 0;
                                        $n = $n + (-1) | 0;
                                        var$9 = $this.$z.$next_in.data;
                                        var$11 = $p + 1 | 0;
                                        $b = $b | (var$9[$p] & 255) << $k;
                                        $k = $k + 8 | 0;
                                        $p = var$11;
                                    }
                                    var$15 = $this.$hufts.data;
                                    var$11 = $this.$tb.data[0];
                                    cjj_InfBlocks_$callClinit();
                                    var$10 = var$15[((var$11 + ($b & cjj_InfBlocks_inflate_mask.data[var$10]) | 0) * 3 | 0) + 1 | 0];
                                    $c = $this.$hufts.data[(($this.$tb.data[0] + ($b & cjj_InfBlocks_inflate_mask.data[var$10]) | 0) * 3 | 0) + 2 | 0];
                                    var$11 = $rt_compare($c, 16);
                                    if (var$11 < 0) {
                                        $b = $b >>> var$10 | 0;
                                        $k = $k - var$10 | 0;
                                        var$9 = $this.$blens.data;
                                        var$10 = $this.$index0;
                                        $this.$index0 = var$10 + 1 | 0;
                                        var$9[var$10] = $c;
                                    } else {
                                        var$14 = $rt_compare($c, 18);
                                        $i = !var$14 ? 7 : $c - 14 | 0;
                                        $j = var$14 ? 3 : 11;
                                        while ($k < (var$10 + $i | 0)) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z.$avail_in = $n;
                                                var$8 = $this.$z;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                                $this.$z.$next_in_index = $p;
                                                $this.$write1 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z.$next_in.data;
                                            var$14 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$14;
                                        }
                                        var$14 = $b >>> var$10 | 0;
                                        var$10 = $k - var$10 | 0;
                                        var$18 = $j + (var$14 & cjj_InfBlocks_inflate_mask.data[$i]) | 0;
                                        $b = var$14 >>> $i | 0;
                                        $k = var$10 - $i | 0;
                                        var$19 = $this.$index0;
                                        var$20 = $this.$table0;
                                        if ((var$19 + var$18 | 0) > ((258 + (var$20 & 31) | 0) + (var$20 >> 5 & 31) | 0))
                                            break c;
                                        if (!var$11 && var$19 < 1)
                                            break c;
                                        var$10 = var$11 ? 0 : $this.$blens.data[var$19 - 1 | 0];
                                        while (true) {
                                            var$9 = $this.$blens.data;
                                            var$11 = var$19 + 1 | 0;
                                            var$9[var$19] = var$10;
                                            var$18 = var$18 + (-1) | 0;
                                            if (!var$18)
                                                break;
                                            var$19 = var$11;
                                        }
                                        $this.$index0 = var$11;
                                    }
                                }
                                $this.$tb.data[0] = (-1);
                                $this.$bl.data[0] = 9;
                                $this.$bd.data[0] = 6;
                                var$10 = $this.$table0;
                                var$10 = cjj_InfTree_inflate_trees_dynamic($this.$inftree, 257 + (var$10 & 31) | 0, 1 + (var$10 >> 5 & 31) | 0, $this.$blens, $this.$bl, $this.$bd, $this.$tli, $this.$tdi, $this.$hufts, $this.$z);
                                if (var$10) {
                                    if (var$10 == (-3)) {
                                        $this.$blens = null;
                                        $this.$mode1 = 9;
                                    }
                                    $this.$bitb = $b;
                                    $this.$bitk = $k;
                                    $this.$z.$avail_in = $n;
                                    var$8 = $this.$z;
                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                    $this.$z.$next_in_index = $p;
                                    $this.$write1 = $q;
                                    return cjj_InfBlocks_inflate_flush($this, var$10);
                                }
                                cjj_InfCodes_init($this.$codes, $this.$bl.data[0], $this.$bd.data[0], $this.$hufts, $this.$tli.data[0], $this.$hufts, $this.$tdi.data[0]);
                                $this.$mode1 = 6;
                            }
                            $this.$bitb = $b;
                            $this.$bitk = $k;
                            $this.$z.$avail_in = $n;
                            var$8 = $this.$z;
                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                            $this.$z.$next_in_index = $p;
                            $this.$write1 = $q;
                            var$10 = cjj_InfCodes_proc($this.$codes, $r);
                            if (var$10 != 1)
                                break e;
                            $r = 0;
                            cjj_InfCodes_free($this.$codes, $this.$z);
                            $p = $this.$z.$next_in_index;
                            $n = $this.$z.$avail_in;
                            $b = $this.$bitb;
                            $k = $this.$bitk;
                            $q = $this.$write1;
                            $m = $q >= $this.$read4 ? $this.$end2 - $q | 0 : ($this.$read4 - $q | 0) - 1 | 0;
                            if ($this.$last) {
                                $this.$mode1 = 7;
                                break b;
                            }
                            $this.$mode1 = 0;
                            continue e;
                        }
                        if (!$n) {
                            $this.$bitb = $b;
                            $this.$bitk = $k;
                            $this.$z.$avail_in = $n;
                            var$8 = $this.$z;
                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                            $this.$z.$next_in_index = $p;
                            $this.$write1 = $q;
                            return cjj_InfBlocks_inflate_flush($this, $r);
                        }
                        if (!$m) {
                            if ($q == $this.$end2 && $this.$read4) {
                                $q = 0;
                                $m = $q >= $this.$read4 ? $this.$end2 - $q | 0 : ($this.$read4 - $q | 0) - 1 | 0;
                            }
                            if (!$m) {
                                $this.$write1 = $q;
                                var$10 = cjj_InfBlocks_inflate_flush($this, $r);
                                $q = $this.$write1;
                                $m = $q >= $this.$read4 ? $this.$end2 - $q | 0 : ($this.$read4 - $q | 0) - 1 | 0;
                                if ($q == $this.$end2 && $this.$read4) {
                                    $q = 0;
                                    $m = $q >= $this.$read4 ? $this.$end2 - $q | 0 : ($this.$read4 - $q | 0) - 1 | 0;
                                }
                                if (!$m) {
                                    $this.$bitb = $b;
                                    $this.$bitk = $k;
                                    $this.$z.$avail_in = $n;
                                    var$8 = $this.$z;
                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                                    $this.$z.$next_in_index = $p;
                                    $this.$write1 = $q;
                                    return cjj_InfBlocks_inflate_flush($this, var$10);
                                }
                            }
                        }
                        $r = 0;
                        var$10 = $this.$left;
                        if (var$10 > $n)
                            var$10 = $n;
                        if (var$10 > $m)
                            var$10 = $m;
                        jl_System_fastArraycopy($this.$z.$next_in, $p, $this.$window0, $q, var$10);
                        $p = $p + var$10 | 0;
                        $n = $n - var$10 | 0;
                        $q = $q + var$10 | 0;
                        $m = $m - var$10 | 0;
                        var$10 = $this.$left - var$10 | 0;
                        $this.$left = var$10;
                        if (var$10)
                            continue;
                        $this.$mode1 = !$this.$last ? 0 : 7;
                    }
                    return cjj_InfBlocks_inflate_flush($this, var$10);
                }
                $this.$mode1 = 9;
                $this.$z.$msg = $rt_s(762);
                $this.$bitb = $b;
                $this.$bitk = $k;
                $this.$z.$avail_in = $n;
                var$8 = $this.$z;
                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
                $this.$z.$next_in_index = $p;
                $this.$write1 = $q;
                return cjj_InfBlocks_inflate_flush($this, (-3));
            }
            $this.$blens = null;
            $this.$mode1 = 9;
            $this.$z.$msg = $rt_s(763);
            $this.$bitb = $b;
            $this.$bitk = $k;
            $this.$z.$avail_in = $n;
            var$8 = $this.$z;
            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
            $this.$z.$next_in_index = $p;
            $this.$write1 = $q;
            return cjj_InfBlocks_inflate_flush($this, (-3));
        }
        $this.$write1 = $q;
        var$10 = cjj_InfBlocks_inflate_flush($this, $r);
        $q = $this.$write1;
        if ($this.$read4 != $this.$write1) {
            $this.$bitb = $b;
            $this.$bitk = $k;
            $this.$z.$avail_in = $n;
            var$8 = $this.$z;
            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
            $this.$z.$next_in_index = $p;
            $this.$write1 = $q;
            return cjj_InfBlocks_inflate_flush($this, var$10);
        }
        $this.$mode1 = 8;
    }
    $this.$bitb = $b;
    $this.$bitk = $k;
    $this.$z.$avail_in = $n;
    var$8 = $this.$z;
    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z.$next_in_index | 0));
    $this.$z.$next_in_index = $p;
    $this.$write1 = $q;
    return cjj_InfBlocks_inflate_flush($this, 1);
},
cjj_InfBlocks_free = $this => {
    cjj_InfBlocks_reset($this);
    $this.$window0 = null;
    $this.$hufts = null;
},
cjj_InfBlocks_inflate_flush = ($this, $r) => {
    let $p, $q, $n, var$5, var$6, var$7, var$8;
    $p = $this.$z.$next_out_index;
    $q = $this.$read4;
    $n = ($q > $this.$write1 ? $this.$end2 : $this.$write1) - $q | 0;
    if ($n > $this.$z.$avail_out)
        $n = $this.$z.$avail_out;
    if ($n && $r == (-5))
        $r = 0;
    var$5 = $this.$z;
    var$5.$avail_out = var$5.$avail_out - $n | 0;
    var$5 = $this.$z;
    var$5.$total_out = Long_add(var$5.$total_out, Long_fromInt($n));
    if ($this.$check0 && $n > 0)
        $this.$z.$adler.$update($this.$window0, $q, $n);
    jl_System_fastArraycopy($this.$window0, $q, $this.$z.$next_out, $p, $n);
    var$6 = $p + $n | 0;
    var$7 = $q + $n | 0;
    if (var$7 == $this.$end2) {
        if ($this.$write1 == $this.$end2)
            $this.$write1 = 0;
        var$8 = $this.$write1 - 0 | 0;
        if (var$8 > $this.$z.$avail_out)
            var$8 = $this.$z.$avail_out;
        if (var$8 && $r == (-5))
            $r = 0;
        var$5 = $this.$z;
        var$5.$avail_out = var$5.$avail_out - var$8 | 0;
        var$5 = $this.$z;
        var$5.$total_out = Long_add(var$5.$total_out, Long_fromInt(var$8));
        if ($this.$check0 && var$8 > 0)
            $this.$z.$adler.$update($this.$window0, 0, var$8);
        jl_System_fastArraycopy($this.$window0, 0, $this.$z.$next_out, var$6, var$8);
        var$6 = var$6 + var$8 | 0;
        var$7 = 0 + var$8 | 0;
    }
    $this.$z.$next_out_index = var$6;
    $this.$read4 = var$7;
    return $r;
},
cjj_InfBlocks__clinit_ = () => {
    cjj_InfBlocks_inflate_mask = $rt_createIntArrayFromData([0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535]);
    cjj_InfBlocks_border = $rt_createIntArrayFromData([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
};
function ju_Date() {
    jl_Object.call(this);
    this.$value0 = Long_ZERO;
}
let ju_Date_$callClinit = () => {
    ju_Date_$callClinit = $rt_eraseClinit(ju_Date);
    ju_Date__clinit_();
},
ju_Date__init_ = ($this, $date) => {
    ju_Date_$callClinit();
    jl_Object__init_($this);
    $this.$value0 = $date;
},
ju_Date__init_0 = var_0 => {
    let var_1 = new ju_Date();
    ju_Date__init_(var_1, var_0);
    return var_1;
},
ju_Date_getTime = $this => {
    return $this.$value0;
},
ju_Date_equals = ($this, $obj) => {
    let $other;
    if (!($obj instanceof ju_Date))
        return 0;
    $other = $obj;
    return Long_ne($this.$value0, $other.$value0) ? 0 : 1;
},
ju_Date_compareTo = ($this, $other) => {
    return jl_Long_compare($this.$value0, $other.$value0);
},
ju_Date_hashCode = $this => {
    return Long_lo($this.$value0) ^ Long_hi($this.$value0);
},
ju_Date_toString = $this => {
    return $rt_str((new Date(Long_toNumber($this.$value0))).toString());
},
ju_Date_compareTo0 = ($this, var$1) => {
    return $this.$compareTo12(var$1);
},
ju_Date__clinit_ = () => {
    return;
};
function jnc_CharsetDecoder() {
    let a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement = null;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$state = 0;
}
let jnc_CharsetDecoder__init_ = ($this, $cs, $averageCharsPerByte, $maxCharsPerByte) => {
    let var$4, var$5;
    jl_Object__init_($this);
    $this.$replacement = $rt_s(764);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction = jnc_CodingErrorAction_REPORT;
    if ($averageCharsPerByte <= 0.0) {
        var$4 = new jl_IllegalArgumentException;
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append4(jl_StringBuilder_append(var$5, $rt_s(765)), $averageCharsPerByte);
        jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
        $rt_throw(var$4);
    }
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append4(jl_StringBuilder_append(var$5, $rt_s(766)), $maxCharsPerByte);
    jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
    $rt_throw(var$4);
},
jnc_CharsetDecoder_onMalformedInput = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(767)));
},
jnc_CharsetDecoder_implOnMalformedInput = ($this, $newAction) => {
    return;
},
jnc_CharsetDecoder_onUnmappableCharacter = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(767)));
},
jnc_CharsetDecoder_implOnUnmappableCharacter = ($this, $newAction) => {
    return;
},
jnc_CharsetDecoder_decode = ($this, $in, $out, $endOfInput) => {
    let $result, $e, var$6, $$je;
    if (!($this.$state == 2 && !$endOfInput) && $this.$state != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        while (true) {
            try {
                $result = $this.$decodeLoop($in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $rt_throw(jnc_CoderMalfunctionError__init_0($e));
                } else {
                    throw $$e;
                }
            }
            if ($result.$isOverflow())
                return $result;
            if ($result.$isUnderflow()) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    var$6 = $this.$malformedAction;
                    jnc_CodingErrorAction_$callClinit();
                    if (var$6 === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= $this.$replacement.$length())
                        return jnc_CoderResult_OVERFLOW;
                    $in.$position1(jn_Buffer_position($in) + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put($out, $this.$replacement);
                }
                return $result;
            }
            if ($result.$isMalformed()) {
                var$6 = $this.$malformedAction;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                $in.$position1(jn_Buffer_position($in) + $result.$length() | 0);
            } else if ($result.$isUnmappable()) {
                var$6 = $this.$unmappableAction;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    break;
                if ($this.$unmappableAction === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                $in.$position1(jn_Buffer_position($in) + $result.$length() | 0);
            }
        }
        return $result;
    }
    $rt_throw(jl_IllegalStateException__init_0());
},
jnc_CharsetDecoder_flush = ($this, $out) => {
    if ($this.$state != 3 && $this.$state != 2)
        $rt_throw(jl_IllegalStateException__init_0());
    $this.$state = 3;
    return $this.$implFlush0($out);
},
jnc_CharsetDecoder_reset = $this => {
    $this.$state = 0;
    $this.$implReset();
    return $this;
},
jnc_CharsetDecoder_decode0 = ($this, $in) => {
    let $out, $result, var$4;
    if ($this.$state && $this.$state != 3)
        $rt_throw(jl_IllegalStateException__init_0());
    if (!jn_Buffer_remaining($in))
        return jn_CharBuffer_allocate(0);
    if ($this.$state)
        jnc_CharsetDecoder_reset($this);
    $out = jn_CharBuffer_allocate(jl_Math_max(8, jn_Buffer_remaining($in) * $this.$averageCharsPerByte | 0));
    while (true) {
        $result = jnc_CharsetDecoder_decode($this, $in, $out, 0);
        if ($result.$isUnderflow())
            break;
        if ($result.$isOverflow())
            $out = jnc_CharsetDecoder_expand($this, $out);
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetDecoder_decode($this, $in, $out, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetDecoder_flush($this, $out);
        if (var$4.$isUnderflow())
            break;
        $out = jnc_CharsetDecoder_expand($this, $out);
    }
    jn_CharBuffer_flip($out);
    return $out;
},
jnc_CharsetDecoder_expand = ($this, $buffer) => {
    let $array, var$3, $result;
    $array = jn_CharBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf1($array, jl_Math_max(8, var$3.length * 2 | 0));
    $result = jn_CharBuffer_wrap(var$3);
    $result.$position(jn_Buffer_position($buffer));
    return $result;
},
jnc_CharsetDecoder_implFlush = ($this, $out) => {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
},
jnc_CharsetDecoder_implReset = $this => {
    return;
};
function jnci_BufferedDecoder() {
    let a = this; jnc_CharsetDecoder.call(a);
    a.$inArray = null;
    a.$outArray0 = null;
}
let jnci_BufferedDecoder__init_ = ($this, $cs, $averageCharsPerByte, $maxCharsPerByte) => {
    jnc_CharsetDecoder__init_($this, $cs, $averageCharsPerByte, $maxCharsPerByte);
    $this.$inArray = $rt_createByteArray(512);
    $this.$outArray0 = $rt_createCharArray(512);
},
jnci_BufferedDecoder_decodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, $result, $outPos, $outSize, $controller;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray0;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get16($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outPos = 0;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedDecoder$Controller__init_0($in, $out);
            $result = $this.$arrayDecode($inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if ($result === null && $outPos == $controller.$outPosition) {
                jnc_CoderResult_$callClinit();
                $result = jnc_CoderResult_UNDERFLOW;
            }
            var$9 = $controller.$outPosition;
            $out.$put6($outArray, 0, var$9);
            if ($result !== null)
                break;
        }
    }
    $in.$position1(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_UTF8Decoder__init_ = ($this, $cs) => {
    jnci_BufferedDecoder__init_($this, $cs, 0.3333333432674408, 0.5);
},
jnci_UTF8Decoder__init_0 = var_0 => {
    let var_1 = new jnci_UTF8Decoder();
    jnci_UTF8Decoder__init_(var_1, var_0);
    return var_1;
},
jnci_UTF8Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b, var$12, var$13, $b2, $b3, $c, $b4, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    var$10 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if (var$10 >= $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = var$13 + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        var$10 = var$13;
                    } else if (($b & 240) == 224) {
                        if ((var$10 + 2 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput(3))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$10 = var$13 + 1 | 0;
                        $b3 = var$9[var$13];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = var$10 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = var$10 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if ((var$10 + 3 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput(4))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreOutput0(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$12 = var$13 + 1 | 0;
                        $b3 = var$9[var$13];
                        var$10 = var$12 + 1 | 0;
                        $b4 = var$9[var$12];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        var$13 = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        var$12 = var$13 + 1 | 0;
                        var$9[var$13] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = var$10;
                    $outPos = var$12;
                }
                break a;
            }
            $inPos = var$10 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = var$10 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
jnci_UTF8Decoder_checkMidByte = ($this, $b) => {
    return ($b & 192) != 128 ? 0 : 1;
},
jtc_IsoChronology = $rt_classWithoutFields(jtc_Chronology),
jtc_IsoChronology_INSTANCE = null,
jtc_IsoChronology_$callClinit = () => {
    jtc_IsoChronology_$callClinit = $rt_eraseClinit(jtc_IsoChronology);
    jtc_IsoChronology__clinit_();
},
jtc_IsoChronology__init_0 = $this => {
    jtc_IsoChronology_$callClinit();
    jtc_Chronology__init_($this);
},
jtc_IsoChronology__init_ = () => {
    let var_0 = new jtc_IsoChronology();
    jtc_IsoChronology__init_0(var_0);
    return var_0;
},
jtc_IsoChronology_getId = $this => {
    return $rt_s(768);
},
jtc_IsoChronology_zonedDateTime = ($this, $instant, $zone) => {
    return jt_ZonedDateTime_ofInstant($instant, $zone);
},
jtc_IsoChronology_isLeapYear = ($this, $prolepticYear) => {
    let var$2;
    a: {
        b: {
            if (Long_eq(Long_and($prolepticYear, Long_fromInt(3)), Long_ZERO)) {
                if (Long_ne(Long_rem($prolepticYear, Long_fromInt(100)), Long_ZERO))
                    break b;
                if (Long_eq(Long_rem($prolepticYear, Long_fromInt(400)), Long_ZERO))
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
},
jtc_IsoChronology_resolveDate = ($this, $fieldValues, $resolverStyle) => {
    let $prolepticMonth, $yoeLong, $era, var$6, var$7, $year, var$9, $y, $moy, $dom, $months, $days, $weeks, $aw, $ad, $date, $dow, $doy;
    jtt_ChronoField_$callClinit();
    if ($fieldValues.$containsKey(jtt_ChronoField_EPOCH_DAY))
        return jt_LocalDate_ofEpochDay(($fieldValues.$remove1(jtt_ChronoField_EPOCH_DAY)).$longValue());
    $prolepticMonth = $fieldValues.$remove1(jtt_ChronoField_PROLEPTIC_MONTH);
    if ($prolepticMonth !== null) {
        jtf_ResolverStyle_$callClinit();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT)
            jtt_ChronoField_checkValidValue(jtt_ChronoField_PROLEPTIC_MONTH, $prolepticMonth.$longValue());
        $this.$updateResolveMap($fieldValues, jtt_ChronoField_MONTH_OF_YEAR, Long_fromInt(jl_Math_floorMod($prolepticMonth.$longValue(), 12) + 1 | 0));
        $this.$updateResolveMap($fieldValues, jtt_ChronoField_YEAR, jl_Math_floorDiv($prolepticMonth.$longValue(), 12));
    }
    $yoeLong = $fieldValues.$remove1(jtt_ChronoField_YEAR_OF_ERA);
    if ($yoeLong !== null) {
        jtf_ResolverStyle_$callClinit();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT)
            jtt_ChronoField_checkValidValue(jtt_ChronoField_YEAR_OF_ERA, $yoeLong.$longValue());
        $era = $fieldValues.$remove1(jtt_ChronoField_ERA);
        if ($era !== null) {
            if (Long_eq($era.$longValue(), Long_fromInt(1)))
                $this.$updateResolveMap($fieldValues, jtt_ChronoField_YEAR, $yoeLong.$longValue());
            else {
                if (Long_ne($era.$longValue(), Long_ZERO)) {
                    var$6 = new jt_DateTimeException;
                    var$7 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(769)), $era);
                    jt_DateTimeException__init_(var$6, jl_StringBuilder_toString(var$7));
                    $rt_throw(var$6);
                }
                $this.$updateResolveMap($fieldValues, jtt_ChronoField_YEAR, jl_Math_subtractExact(Long_fromInt(1), $yoeLong.$longValue()));
            }
        } else {
            $year = $fieldValues.$get1(jtt_ChronoField_YEAR);
            if ($resolverStyle === jtf_ResolverStyle_STRICT) {
                if ($year === null)
                    $fieldValues.$put1(jtt_ChronoField_YEAR_OF_ERA, $yoeLong);
                else
                    $this.$updateResolveMap($fieldValues, jtt_ChronoField_YEAR, Long_gt($year.$longValue(), Long_ZERO) ? $yoeLong.$longValue() : jl_Math_subtractExact(Long_fromInt(1), $yoeLong.$longValue()));
            } else {
                var$6 = jtt_ChronoField_YEAR;
                var$9 = $year !== null && Long_le($year.$longValue(), Long_ZERO) ? jl_Math_subtractExact(Long_fromInt(1), $yoeLong.$longValue()) : $yoeLong.$longValue();
                $this.$updateResolveMap($fieldValues, var$6, var$9);
            }
        }
    } else if ($fieldValues.$containsKey(jtt_ChronoField_ERA))
        jtt_ChronoField_checkValidValue(jtt_ChronoField_ERA, ($fieldValues.$get1(jtt_ChronoField_ERA)).$longValue());
    if ($fieldValues.$containsKey(jtt_ChronoField_YEAR)) {
        if ($fieldValues.$containsKey(jtt_ChronoField_MONTH_OF_YEAR)) {
            if ($fieldValues.$containsKey(jtt_ChronoField_DAY_OF_MONTH)) {
                $y = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, ($fieldValues.$remove1(jtt_ChronoField_YEAR)).$longValue());
                $moy = jl_Math_toIntExact(($fieldValues.$remove1(jtt_ChronoField_MONTH_OF_YEAR)).$longValue());
                $dom = jl_Math_toIntExact(($fieldValues.$remove1(jtt_ChronoField_DAY_OF_MONTH)).$longValue());
                jtf_ResolverStyle_$callClinit();
                if ($resolverStyle === jtf_ResolverStyle_LENIENT) {
                    $months = Long_fromInt(jl_Math_subtractExact0($moy, 1));
                    $days = Long_fromInt(jl_Math_subtractExact0($dom, 1));
                    return jt_LocalDate_plusDays(jt_LocalDate_plusMonths(jt_LocalDate_of($y, 1, 1), $months), $days);
                }
                if ($resolverStyle !== jtf_ResolverStyle_SMART)
                    return jt_LocalDate_of($y, $moy, $dom);
                jtt_ChronoField_checkValidValue(jtt_ChronoField_DAY_OF_MONTH, Long_fromInt($dom));
                if (!($moy != 4 && $moy != 6 && $moy != 9 && $moy != 11))
                    $dom = jl_Math_min($dom, 30);
                else if ($moy == 2) {
                    jt_Month_$callClinit();
                    $dom = jl_Math_min($dom, jt_Month_length(jt_Month_FEBRUARY, jt_Year_isLeap(Long_fromInt($y))));
                }
                return jt_LocalDate_of($y, $moy, $dom);
            }
            if ($fieldValues.$containsKey(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH)) {
                if ($fieldValues.$containsKey(jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH)) {
                    $y = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, ($fieldValues.$remove1(jtt_ChronoField_YEAR)).$longValue());
                    jtf_ResolverStyle_$callClinit();
                    if ($resolverStyle === jtf_ResolverStyle_LENIENT) {
                        $months = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_MONTH_OF_YEAR)).$longValue(), Long_fromInt(1));
                        $weeks = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH)).$longValue(), Long_fromInt(1));
                        $days = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH)).$longValue(), Long_fromInt(1));
                        return jt_LocalDate_plusDays(jt_LocalDate_plusWeeks(jt_LocalDate_plusMonths(jt_LocalDate_of($y, 1, 1), $months), $weeks), $days);
                    }
                    $moy = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_MONTH_OF_YEAR, ($fieldValues.$remove1(jtt_ChronoField_MONTH_OF_YEAR)).$longValue());
                    $aw = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH, ($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH)).$longValue());
                    var$6 = jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH;
                    var$7 = jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH;
                    var$9 = ($fieldValues.$remove1(var$7)).$longValue();
                    $ad = jtt_ChronoField_checkValidIntValue(var$6, var$9);
                    $date = jt_LocalDate_plusDays(jt_LocalDate_of($y, $moy, 1), Long_fromInt((($aw - 1 | 0) * 7 | 0) + ($ad - 1 | 0) | 0));
                    if ($resolverStyle === jtf_ResolverStyle_STRICT && jt_LocalDate_get($date, jtt_ChronoField_MONTH_OF_YEAR) != $moy)
                        $rt_throw(jt_DateTimeException__init_0($rt_s(770)));
                    return $date;
                }
                if ($fieldValues.$containsKey(jtt_ChronoField_DAY_OF_WEEK)) {
                    $y = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, ($fieldValues.$remove1(jtt_ChronoField_YEAR)).$longValue());
                    jtf_ResolverStyle_$callClinit();
                    if ($resolverStyle === jtf_ResolverStyle_LENIENT) {
                        $months = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_MONTH_OF_YEAR)).$longValue(), Long_fromInt(1));
                        $weeks = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH)).$longValue(), Long_fromInt(1));
                        $days = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_DAY_OF_WEEK)).$longValue(), Long_fromInt(1));
                        return jt_LocalDate_plusDays(jt_LocalDate_plusWeeks(jt_LocalDate_plusMonths(jt_LocalDate_of($y, 1, 1), $months), $weeks), $days);
                    }
                    $moy = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_MONTH_OF_YEAR, ($fieldValues.$remove1(jtt_ChronoField_MONTH_OF_YEAR)).$longValue());
                    $aw = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH, ($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH)).$longValue());
                    $dow = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_DAY_OF_WEEK, ($fieldValues.$remove1(jtt_ChronoField_DAY_OF_WEEK)).$longValue());
                    $date = jt_LocalDate_with0(jt_LocalDate_plusWeeks(jt_LocalDate_of($y, $moy, 1), Long_fromInt($aw - 1 | 0)), jtt_TemporalAdjusters_nextOrSame(jt_DayOfWeek_of($dow)));
                    if ($resolverStyle === jtf_ResolverStyle_STRICT && jt_LocalDate_get($date, jtt_ChronoField_MONTH_OF_YEAR) != $moy)
                        $rt_throw(jt_DateTimeException__init_0($rt_s(770)));
                    return $date;
                }
            }
        }
        if ($fieldValues.$containsKey(jtt_ChronoField_DAY_OF_YEAR)) {
            $y = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, ($fieldValues.$remove1(jtt_ChronoField_YEAR)).$longValue());
            jtf_ResolverStyle_$callClinit();
            if ($resolverStyle !== jtf_ResolverStyle_LENIENT) {
                $doy = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_DAY_OF_YEAR, ($fieldValues.$remove1(jtt_ChronoField_DAY_OF_YEAR)).$longValue());
                return jt_LocalDate_ofYearDay($y, $doy);
            }
            $days = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_DAY_OF_YEAR)).$longValue(), Long_fromInt(1));
            return jt_LocalDate_plusDays(jt_LocalDate_ofYearDay($y, 1), $days);
        }
        if ($fieldValues.$containsKey(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR)) {
            if ($fieldValues.$containsKey(jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR)) {
                $y = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, ($fieldValues.$remove1(jtt_ChronoField_YEAR)).$longValue());
                jtf_ResolverStyle_$callClinit();
                if ($resolverStyle === jtf_ResolverStyle_LENIENT) {
                    $weeks = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR)).$longValue(), Long_fromInt(1));
                    $days = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR)).$longValue(), Long_fromInt(1));
                    return jt_LocalDate_plusDays(jt_LocalDate_plusWeeks(jt_LocalDate_of($y, 1, 1), $weeks), $days);
                }
                $aw = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR, ($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR)).$longValue());
                var$6 = jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR;
                var$7 = jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR;
                var$9 = ($fieldValues.$remove1(var$7)).$longValue();
                $ad = jtt_ChronoField_checkValidIntValue(var$6, var$9);
                $date = jt_LocalDate_plusDays(jt_LocalDate_of($y, 1, 1), Long_fromInt((($aw - 1 | 0) * 7 | 0) + ($ad - 1 | 0) | 0));
                if ($resolverStyle === jtf_ResolverStyle_STRICT && jt_LocalDate_get($date, jtt_ChronoField_YEAR) != $y)
                    $rt_throw(jt_DateTimeException__init_0($rt_s(771)));
                return $date;
            }
            if ($fieldValues.$containsKey(jtt_ChronoField_DAY_OF_WEEK)) {
                $y = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, ($fieldValues.$remove1(jtt_ChronoField_YEAR)).$longValue());
                jtf_ResolverStyle_$callClinit();
                if ($resolverStyle === jtf_ResolverStyle_LENIENT) {
                    $weeks = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR)).$longValue(), Long_fromInt(1));
                    $days = jl_Math_subtractExact(($fieldValues.$remove1(jtt_ChronoField_DAY_OF_WEEK)).$longValue(), Long_fromInt(1));
                    return jt_LocalDate_plusDays(jt_LocalDate_plusWeeks(jt_LocalDate_of($y, 1, 1), $weeks), $days);
                }
                $aw = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR, ($fieldValues.$remove1(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR)).$longValue());
                $dow = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_DAY_OF_WEEK, ($fieldValues.$remove1(jtt_ChronoField_DAY_OF_WEEK)).$longValue());
                $date = jt_LocalDate_with0(jt_LocalDate_plusWeeks(jt_LocalDate_of($y, 1, 1), Long_fromInt($aw - 1 | 0)), jtt_TemporalAdjusters_nextOrSame(jt_DayOfWeek_of($dow)));
                if ($resolverStyle === jtf_ResolverStyle_STRICT && jt_LocalDate_get($date, jtt_ChronoField_YEAR) != $y)
                    $rt_throw(jt_DateTimeException__init_0($rt_s(770)));
                return $date;
            }
        }
    }
    return null;
},
jtc_IsoChronology_zonedDateTime0 = ($this, var$1, var$2) => {
    return jtc_IsoChronology_zonedDateTime($this, var$1, var$2);
},
jtc_IsoChronology__clinit_ = () => {
    jtc_IsoChronology_INSTANCE = jtc_IsoChronology__init_();
},
jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_PossessiveQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_PossessiveQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PossessiveQuantifierSet();
    jur_PossessiveQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PossessiveQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
};
function jnci_BufferedDecoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in1 = null;
    a.$out0 = null;
    a.$inPosition0 = 0;
    a.$outPosition = 0;
}
let jnci_BufferedDecoder$Controller__init_ = ($this, $in, $out) => {
    jl_Object__init_($this);
    $this.$in1 = $in;
    $this.$out0 = $out;
},
jnci_BufferedDecoder$Controller__init_0 = (var_0, var_1) => {
    let var_2 = new jnci_BufferedDecoder$Controller();
    jnci_BufferedDecoder$Controller__init_(var_2, var_0, var_1);
    return var_2;
},
jnci_BufferedDecoder$Controller_hasMoreInput0 = $this => {
    return jn_Buffer_hasRemaining($this.$in1);
},
jnci_BufferedDecoder$Controller_hasMoreInput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$in1) < $sz ? 0 : 1;
},
jnci_BufferedDecoder$Controller_hasMoreOutput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$out0) < $sz ? 0 : 1;
},
jnci_BufferedDecoder$Controller_setInPosition = ($this, $inPosition) => {
    $this.$inPosition0 = $inPosition;
},
jnci_BufferedDecoder$Controller_setOutPosition = ($this, $outPosition) => {
    $this.$outPosition = $outPosition;
};
function ju_Locale() {
    let a = this; jl_Object.call(a);
    a.$countryCode = null;
    a.$languageCode = null;
    a.$variantCode = null;
}
let ju_Locale_defaultLocale = null,
ju_Locale_CANADA = null,
ju_Locale_CANADA_FRENCH = null,
ju_Locale_CHINA = null,
ju_Locale_CHINESE = null,
ju_Locale_ENGLISH = null,
ju_Locale_FRANCE = null,
ju_Locale_FRENCH = null,
ju_Locale_GERMAN = null,
ju_Locale_GERMANY = null,
ju_Locale_ITALIAN = null,
ju_Locale_ITALY = null,
ju_Locale_JAPAN = null,
ju_Locale_JAPANESE = null,
ju_Locale_KOREA = null,
ju_Locale_KOREAN = null,
ju_Locale_PRC = null,
ju_Locale_SIMPLIFIED_CHINESE = null,
ju_Locale_TAIWAN = null,
ju_Locale_TRADITIONAL_CHINESE = null,
ju_Locale_UK = null,
ju_Locale_US = null,
ju_Locale_ROOT = null,
ju_Locale_$callClinit = () => {
    ju_Locale_$callClinit = $rt_eraseClinit(ju_Locale);
    ju_Locale__clinit_();
},
ju_Locale__init_1 = ($this, $language, $country) => {
    ju_Locale_$callClinit();
    ju_Locale__init_0($this, $language, $country, $rt_s(23));
},
ju_Locale__init_ = (var_0, var_1) => {
    let var_2 = new ju_Locale();
    ju_Locale__init_1(var_2, var_0, var_1);
    return var_2;
},
ju_Locale__init_0 = ($this, $language, $country, $variant) => {
    ju_Locale_$callClinit();
    jl_Object__init_($this);
    if ($language !== null && $country !== null && $variant !== null) {
        if ($language.$isEmpty() && $country.$isEmpty()) {
            $this.$languageCode = $rt_s(23);
            $this.$countryCode = $rt_s(23);
            $this.$variantCode = $variant;
            return;
        }
        $this.$languageCode = $language;
        $this.$countryCode = $country;
        $this.$variantCode = $variant;
        return;
    }
    $rt_throw(jl_NullPointerException__init_());
},
ju_Locale__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new ju_Locale();
    ju_Locale__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
ju_Locale_getCountry = $this => {
    return $this.$countryCode;
},
ju_Locale_getDefault = () => {
    ju_Locale_$callClinit();
    return ju_Locale_defaultLocale;
},
ju_Locale_getLanguage = $this => {
    return $this.$languageCode;
},
ju_Locale_toLanguageTag = $this => {
    let $result;
    $result = jl_StringBuilder__init_();
    $result.$append1(!$this.$languageCode.$isEmpty() ? $this.$languageCode : $rt_s(772));
    if (!$this.$countryCode.$isEmpty()) {
        $result.$append0(45);
        $result.$append1($this.$countryCode);
    }
    if (!$this.$variantCode.$isEmpty() && $result.$length() > 0) {
        $result.$append0(45);
        $result.$append1($this.$variantCode);
    }
    return jl_String__init_(($result.$toString()).$toCharArray());
},
ju_Locale__clinit_ = () => {
    let $localeName, $countryIndex;
    ju_Locale_CANADA = ju_Locale__init_($rt_s(773), $rt_s(774));
    ju_Locale_CANADA_FRENCH = ju_Locale__init_($rt_s(775), $rt_s(774));
    ju_Locale_CHINA = ju_Locale__init_($rt_s(776), $rt_s(777));
    ju_Locale_CHINESE = ju_Locale__init_($rt_s(776), $rt_s(23));
    ju_Locale_ENGLISH = ju_Locale__init_($rt_s(773), $rt_s(23));
    ju_Locale_FRANCE = ju_Locale__init_($rt_s(775), $rt_s(778));
    ju_Locale_FRENCH = ju_Locale__init_($rt_s(775), $rt_s(23));
    ju_Locale_GERMAN = ju_Locale__init_($rt_s(779), $rt_s(23));
    ju_Locale_GERMANY = ju_Locale__init_($rt_s(779), $rt_s(780));
    ju_Locale_ITALIAN = ju_Locale__init_($rt_s(781), $rt_s(23));
    ju_Locale_ITALY = ju_Locale__init_($rt_s(781), $rt_s(782));
    ju_Locale_JAPAN = ju_Locale__init_($rt_s(783), $rt_s(784));
    ju_Locale_JAPANESE = ju_Locale__init_($rt_s(783), $rt_s(23));
    ju_Locale_KOREA = ju_Locale__init_($rt_s(785), $rt_s(786));
    ju_Locale_KOREAN = ju_Locale__init_($rt_s(785), $rt_s(23));
    ju_Locale_PRC = ju_Locale__init_($rt_s(776), $rt_s(777));
    ju_Locale_SIMPLIFIED_CHINESE = ju_Locale__init_($rt_s(776), $rt_s(777));
    ju_Locale_TAIWAN = ju_Locale__init_($rt_s(776), $rt_s(787));
    ju_Locale_TRADITIONAL_CHINESE = ju_Locale__init_($rt_s(776), $rt_s(787));
    ju_Locale_UK = ju_Locale__init_($rt_s(773), $rt_s(788));
    ju_Locale_US = ju_Locale__init_($rt_s(773), $rt_s(789));
    ju_Locale_ROOT = ju_Locale__init_($rt_s(23), $rt_s(23));
    $localeName = ((otciu_CLDRHelper_getDefaultLocale()).value !== null ? $rt_str((otciu_CLDRHelper_getDefaultLocale()).value) : null);
    $countryIndex = $localeName.$indexOf(95);
    ju_Locale_defaultLocale = ju_Locale__init_2($localeName.$substring(0, $countryIndex), $localeName.$substring0($countryIndex + 1 | 0), $rt_s(23));
},
jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0),
jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields(),
jl_DefaultUncaughtExceptionHandler__init_ = $this => {
    jl_Object__init_($this);
},
jl_DefaultUncaughtExceptionHandler__init_0 = () => {
    let var_0 = new jl_DefaultUncaughtExceptionHandler();
    jl_DefaultUncaughtExceptionHandler__init_(var_0);
    return var_0;
},
jl_InstantiationException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jl_InstantiationException__init_ = $this => {
    jl_ReflectiveOperationException__init_($this);
},
jl_InstantiationException__init_0 = () => {
    let var_0 = new jl_InstantiationException();
    jl_InstantiationException__init_(var_0);
    return var_0;
};
function onn_NostrPool() {
    let a = this; jl_Object.call(a);
    a.$subscriptions = null;
    a.$noticeListener = null;
    a.$relays = null;
    a.$relaysRO = null;
    a.$scheduledActions = null;
    a.$defaultEventTracker = null;
    a.$listener1 = null;
}
let onn_NostrPool_logger = null,
onn_NostrPool_$assertionsDisabled = 0,
onn_NostrPool_$callClinit = () => {
    onn_NostrPool_$callClinit = $rt_eraseClinit(onn_NostrPool);
    onn_NostrPool__clinit_();
},
onn_NostrPool__init_2 = $this => {
    onn_NostrPool_$callClinit();
    onn_NostrPool__init_0($this, $rt_cls(onnet_ForwardSlidingWindowEventTracker));
},
onn_NostrPool__init_1 = () => {
    let var_0 = new onn_NostrPool();
    onn_NostrPool__init_2(var_0);
    return var_0;
},
onn_NostrPool__init_0 = ($this, $defaultEventTracker) => {
    onn_NostrPool_$callClinit();
    jl_Object__init_($this);
    $this.$subscriptions = juc_ConcurrentHashMap__init_();
    $this.$noticeListener = juc_CopyOnWriteArrayList__init_();
    $this.$relays = juc_CopyOnWriteArrayList__init_();
    $this.$relaysRO = ju_Collections_unmodifiableList($this.$relays);
    $this.$scheduledActions = juc_CopyOnWriteArrayList__init_();
    $this.$listener1 = onn_NostrPool$1__init_0($this);
    $this.$defaultEventTracker = $defaultEventTracker;
},
onn_NostrPool__init_ = var_0 => {
    let var_1 = new onn_NostrPool();
    onn_NostrPool__init_0(var_1, var_0);
    return var_1;
},
onn_NostrPool_addNoticeListener = ($this, $listener) => {
    $this.$noticeListener.$add1($listener);
    return $this;
},
onn_NostrPool_removeNoticeListener = ($this, $listener) => {
    $this.$noticeListener.$remove2($listener);
    return $this;
},
onn_NostrPool_publish = ($this, $ev) => {
    return $this.$sendMessage0($ev, onnp_NostrPoolAnyAckPolicy_get());
},
onn_NostrPool_publish0 = ($this, $ev, $ackPolicy) => {
    return $this.$sendMessage0($ev, $ackPolicy);
},
onn_NostrPool_send = ($this, $ev) => {
    return $this.$publish($ev);
},
onn_NostrPool_sendMessage = ($this, $message) => {
    return $this.$sendMessage0($message, onnp_NostrPoolAnyAckPolicy_get());
},
onn_NostrPool_sendMessage0 = ($this, $message, $ackPolicy) => {
    let $promises, var$4, $relay, var$6, $platform;
    $promises = ju_ArrayList__init_();
    var$4 = $this.$relays.$iterator();
    while (var$4.$hasNext()) {
        $relay = var$4.$next();
        onn_NostrRelay_beforeSendMessage($relay, $message);
    }
    var$4 = $this.$relays.$iterator();
    while (true) {
        if (!var$4.$hasNext()) {
            var$6 = $this.$relays.$iterator();
            while (var$6.$hasNext()) {
                $relay = var$6.$next();
                onn_NostrRelay_afterSendMessage($relay, $message);
            }
            $platform = onp_NGEUtils_getPlatform();
            return $platform.$wrapPromise(onn_NostrPool$sendMessage$lambda$_8_1__init_0($promises, $ackPolicy, $message));
        }
        $relay = var$4.$next();
        onn_NostrPool_$callClinit();
        if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$sendMessage$lambda$_8_0__init_0($relay, $message)))
            break;
        $promises.$add1(onn_NostrRelay_sendMessage($relay, $message));
    }
    $rt_throw(jl_AssertionError__init_());
},
onn_NostrPool_connectRelay = ($this, $relay) => {
    if (!$this.$relays.$contains($relay)) {
        $this.$relays.$addIfAbsent($relay);
        if (onn_NostrRelay_getComponent($relay, $rt_cls(onn_NostrRelaySubManager)) === null)
            onn_NostrRelay_addComponent($relay, onn_NostrRelaySubManager__init_0());
        if (onn_NostrRelay_getComponent($relay, $rt_cls(onn_NostrRelayLifecycleManager)) === null)
            onn_NostrRelay_addComponent($relay, onn_NostrRelayLifecycleManager__init_0());
        onn_NostrRelay_addComponent($relay, $this.$listener1);
    }
    return onn_NostrRelay_connect($relay);
},
onn_NostrPool_removeRelay = ($this, $relay) => {
    if (!$this.$relays.$contains($relay))
        return null;
    onn_NostrRelay_removeComponent($relay, $this.$listener1);
    $this.$relays.$remove2($relay);
    return $relay;
},
onn_NostrPool_subscribe0 = ($this, $filter) => {
    let var$2;
    var$2 = $rt_createArray(onn_NostrFilter, 1);
    var$2.data[0] = $filter;
    return $this.$subscribe(ju_Arrays_asList(var$2), $this.$defaultEventTracker);
},
onn_NostrPool_subscribe = ($this, $filter) => {
    return $this.$subscribe($filter, $this.$defaultEventTracker);
},
onn_NostrPool_subscribe2 = ($this, $filter, $eventTracker) => {
    let var$3;
    var$3 = $rt_createArray(onn_NostrFilter, 1);
    var$3.data[0] = $filter;
    return $this.$subscribe(ju_Arrays_asList(var$3), $eventTracker);
},
onn_NostrPool_subscribe1 = ($this, $filters, $eventTracker) => {
    let $subId, $tracker, $e, $sub, $$je;
    $subId = onnu_UniqueId_getNext();
    a: {
        try {
            $tracker = (jl_Class_getDeclaredConstructor($eventTracker, $rt_createArray(jl_Class, 0))).$newInstance0($rt_createArray(jl_Object, 0));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_InstantiationException) {
                $e = $$je;
            } else if ($$je instanceof jl_IllegalAccessException) {
                $e = $$je;
            } else if ($$je instanceof jl_IllegalArgumentException) {
                $e = $$je;
            } else if ($$je instanceof jlr_InvocationTargetException) {
                $e = $$je;
            } else if ($$je instanceof jl_NoSuchMethodException) {
                $e = $$je;
            } else if ($$je instanceof jl_SecurityException) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rt_throw(jl_RuntimeException__init_1($rt_s(790), $e));
    }
    onn_NostrPool_$callClinit();
    if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$subscribe$lambda$_14_2__init_0($subId, $filters)))
        $rt_throw(jl_AssertionError__init_());
    $sub = onn_NostrSubscription__init_($subId, $filters, $tracker, onn_NostrPool$subscribe$lambda$_14_0__init_0($this), onn_NostrPool$subscribe$lambda$_14_1__init_0($this, $subId));
    $tracker.$tuneFor($sub);
    $this.$subscriptions.$put1($subId, $sub);
    return $sub;
},
onn_NostrPool_fetch6 = ($this, $filter) => {
    let var$2;
    var$2 = $rt_createArray(onn_NostrFilter, 1);
    var$2.data[0] = $filter;
    return $this.$fetch2(ju_Arrays_asList(var$2));
},
onn_NostrPool_fetch2 = ($this, $filters) => {
    juc_TimeUnit_$callClinit();
    return $this.$fetch3($filters, Long_fromInt(1), juc_TimeUnit_MINUTES);
},
onn_NostrPool_fetch1 = ($this, $filter, $timeout, $unit) => {
    let var$4;
    var$4 = $rt_createArray(onn_NostrFilter, 1);
    var$4.data[0] = $filter;
    return $this.$fetch3(ju_Arrays_asList(var$4), $timeout, $unit);
},
onn_NostrPool_fetch4 = ($this, $filters, $timeout, $unit) => {
    return $this.$fetch4($filters, $timeout, $unit, $rt_cls(onnet_NaiveEventTracker));
},
onn_NostrPool_fetch0 = ($this, $filter, $eventTracker) => {
    let var$3;
    var$3 = $rt_createArray(onn_NostrFilter, 1);
    var$3.data[0] = $filter;
    return $this.$fetch5(ju_Arrays_asList(var$3), $eventTracker);
},
onn_NostrPool_fetch5 = ($this, $filters, $eventTracker) => {
    juc_TimeUnit_$callClinit();
    return $this.$fetch4($filters, Long_fromInt(1), juc_TimeUnit_MINUTES, $eventTracker);
},
onn_NostrPool_fetch = ($this, $filters, $timeout, $unit, $eventTracker) => {
    let var$5;
    var$5 = $rt_createArray(onn_NostrFilter, 1);
    var$5.data[0] = $filters;
    return $this.$fetch4(ju_Arrays_asList(var$5), $timeout, $unit, $eventTracker);
},
onn_NostrPool_fetch3 = ($this, $filters, $timeout, $unit, $eventTracker) => {
    let $platform, $sub;
    $platform = onp_NGEUtils_getPlatform();
    $sub = $this.$subscribe($filters, $eventTracker);
    return $platform.$wrapPromise(onn_NostrPool$fetch$lambda$_22_0__init_0($this, $filters, $timeout, $unit, $sub, $platform));
},
onn_NostrPool_onRelayMessage = ($this, $relay, $rcv) => {
    let $msg, $subId, $reason, $sub, var$7, var$8, $isClosedEverywhere, $r, $m, var$12, $isEOSEEverywhere, var$14, var$15, $eventMessage, $listener, $e, $stored, $t, $$je;
    onn_NostrPool_$callClinit();
    if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$onRelayMessage$lambda$_23_0__init_0($relay, $rcv)))
        $rt_throw(jl_AssertionError__init_());
    a: {
        try {
            b: {
                if ($rcv instanceof onnpi_NostrClosedMessage) {
                    $msg = $rcv;
                    $subId = $msg.$getSubId();
                    $reason = $msg.$getReason();
                    $sub = $this.$subscriptions.$get1($subId);
                    if ($sub === null) {
                        var$7 = onn_NostrPool_logger;
                        var$8 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(791)), $subId);
                        var$7.$warning(jl_StringBuilder_toString(var$8));
                    } else {
                        $sub.$registerClosure($reason);
                        $isClosedEverywhere = 1;
                        var$7 = $this.$relays.$iterator();
                        c: {
                            while (var$7.$hasNext()) {
                                $r = var$7.$next();
                                $m = onn_NostrRelay_getComponent($r, $rt_cls(onn_NostrRelaySubManager));
                                if ($m !== null && $m.$isActive($sub)) {
                                    $isClosedEverywhere = 0;
                                    break c;
                                }
                            }
                        }
                        var$7 = onn_NostrPool_logger;
                        var$8 = onn_NostrRelay_getUrl($relay);
                        var$12 = jl_StringBuilder__init_();
                        jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(792)), $subId), $rt_s(793)), var$8), $rt_s(794)), $reason), $rt_s(795)), $isClosedEverywhere);
                        var$8 = jl_StringBuilder_toString(var$12);
                        var$7.$fine(var$8);
                        if ($isClosedEverywhere) {
                            $sub.$callCloseListeners();
                            $this.$subscriptions.$remove1($subId);
                        }
                    }
                } else if ($rcv instanceof onnpi_NostrEOSEMessage) {
                    $msg = $rcv;
                    $subId = $msg.$getSubId();
                    $sub = $this.$subscriptions.$get1($subId);
                    if ($sub === null) {
                        var$8 = onn_NostrPool_logger;
                        var$12 = onn_NostrRelay_getUrl($relay);
                        var$7 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(796)), $subId), $rt_s(797)), var$12);
                        var$8.$warning(jl_StringBuilder_toString(var$7));
                    } else {
                        $isEOSEEverywhere = 1;
                        var$7 = $this.$relays.$iterator();
                        d: {
                            while (var$7.$hasNext()) {
                                $r = var$7.$next();
                                $m = onn_NostrRelay_getComponent($r, $rt_cls(onn_NostrRelaySubManager));
                                if ($m !== null && $m.$isActive($sub) && !$m.$isEose($sub)) {
                                    $isEOSEEverywhere = 0;
                                    break d;
                                }
                            }
                        }
                        var$14 = onn_NostrPool_logger;
                        var$15 = onn_NostrRelay_getUrl($relay);
                        var$7 = jl_StringBuilder__init_();
                        jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(798)), $subId), $rt_s(793)), var$15), $rt_s(799)), $isEOSEEverywhere);
                        var$7 = jl_StringBuilder_toString(var$7);
                        var$14.$fine(var$7);
                        $sub.$callEoseListeners($isEOSEEverywhere);
                    }
                } else if ($rcv instanceof onnpi_NostrNoticeMessage) {
                    $msg = $rcv;
                    $eventMessage = $msg.$getMessage();
                    var$7 = onn_NostrPool_logger;
                    var$8 = onn_NostrRelay_getUrl($relay);
                    var$12 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(800)), var$8), $rt_s(17)), $eventMessage);
                    var$7.$info(jl_StringBuilder_toString(var$12));
                    var$8 = $this.$noticeListener.$iterator();
                    while (var$8.$hasNext()) {
                        $listener = var$8.$next();
                        e: {
                            try {
                                $listener.$onNotice($relay, $eventMessage, null);
                                break e;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Exception) {
                                    $e = $$je;
                                } else {
                                    throw $$e;
                                }
                            }
                            var$7 = onn_NostrPool_logger;
                            jul_Level_$callClinit();
                            var$7.$log(jul_Level_WARNING, $rt_s(801), $e);
                        }
                    }
                } else if ($rcv instanceof onne_SignedNostrEvent$ReceivedSignedNostrEvent) {
                    $e = $rcv;
                    $subId = $e.$getSubId();
                    $sub = $this.$subscriptions.$get1($subId);
                    if ($sub === null) {
                        var$7 = onn_NostrPool_logger;
                        var$8 = jl_String_valueOf($rcv);
                        var$12 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(802)), $subId), 32), var$8);
                        var$7.$warning(jl_StringBuilder_toString(var$12));
                    } else {
                        if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$onRelayMessage$lambda$_23_1__init_0($subId)))
                            $rt_throw(jl_AssertionError__init_());
                        if ($sub.$eventTracker.$seen($e)) {
                            if (onn_NostrPool_$assertionsDisabled)
                                break b;
                            if (onp_NGEUtils_dbg(onn_NostrPool$onRelayMessage$lambda$_23_3__init_0($e, $subId)))
                                break b;
                            $rt_throw(jl_AssertionError__init_());
                        }
                        if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$onRelayMessage$lambda$_23_2__init_0($e, $subId)))
                            $rt_throw(jl_AssertionError__init_());
                        $stored = 0;
                        $m = onn_NostrRelay_getComponent($relay, $rt_cls(onn_NostrRelaySubManager));
                        if ($m !== null && $m.$isActive($sub) && !$m.$isEose($sub))
                            $stored = 1;
                        $sub.$callEventListeners($e, $stored);
                    }
                }
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $t = $$je;
            } else {
                throw $$e;
            }
        }
        var$7 = onn_NostrPool_logger;
        jul_Level_$callClinit();
        var$8 = jul_Level_WARNING;
        var$12 = onn_NostrRelay_getUrl($relay);
        var$14 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$14, $rt_s(803)), var$12);
        var$7.$log(var$8, jl_StringBuilder_toString(var$14), $t);
    }
    return 1;
},
onn_NostrPool_close = $this => {
    let var$1, $sub, $closedRelays;
    var$1 = ($this.$subscriptions.$values0()).$iterator();
    while (var$1.$hasNext()) {
        $sub = var$1.$next();
        $sub.$close0();
    }
    $closedRelays = ju_ArrayList__init_();
    $closedRelays.$addAll($this.$relays);
    $this.$relays.$clear();
    return $closedRelays;
},
onn_NostrPool_unsubscribeAll = $this => {
    let var$1, $sub;
    var$1 = ($this.$subscriptions.$values0()).$iterator();
    while (var$1.$hasNext()) {
        $sub = var$1.$next();
        $sub.$close0();
    }
},
onn_NostrPool_getRelays = $this => {
    return $this.$relaysRO;
},
onn_NostrPool_onRelayConnect = ($this, $relay) => {
    let var$2, $sub;
    var$2 = ($this.$subscriptions.$values0()).$iterator();
    while (var$2.$hasNext()) {
        $sub = var$2.$next();
        onn_NostrRelay_sendMessage($relay, $sub);
    }
    return 1;
},
onn_NostrPool_onRelayError = ($this, $relay, $error) => {
    let var$3, $listener, $e, var$6, $$je;
    var$3 = $this.$noticeListener.$iterator();
    while (var$3.$hasNext()) {
        $listener = var$3.$next();
        a: {
            try {
                $listener.$onNotice($relay, $error.$getMessage(), $error);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onn_NostrPool_$callClinit();
            var$6 = onn_NostrPool_logger;
            jul_Level_$callClinit();
            var$6.$log(jul_Level_WARNING, $rt_s(801), $e);
        }
    }
    return 1;
},
onn_NostrPool_onRelayConnectRequest = ($this, $relay) => {
    return 1;
},
onn_NostrPool_onRelayLoop = ($this, $relay, $nowInstant) => {
    return 1;
},
onn_NostrPool_onRelayDisconnect = ($this, $relay, $reason, $byClient) => {
    return 1;
},
onn_NostrPool_onRelaySend = ($this, $relay, $message) => {
    return 1;
},
onn_NostrPool_onRelayDisconnectRequest = ($this, $relay, $reason) => {
    return 1;
},
onn_NostrPool_onBeforeRelaySend = ($this, $relay, $message) => {
    return 1;
},
onn_NostrPool_onAfterRelaySend = ($this, $relay, $message) => {
    return 1;
},
onn_NostrPool_lambda$onRelayMessage$21 = ($e, $subId) => {
    let var$3, var$4, var$5;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = $e.$getId();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(804)), var$4), $rt_s(805)), $subId);
    var$3.$finest(jl_StringBuilder_toString(var$5));
},
onn_NostrPool_lambda$onRelayMessage$20 = ($e, $subId) => {
    let var$3, var$4, var$5;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = $e.$getId();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(806)), var$4), $rt_s(805)), $subId);
    var$3.$finest(jl_StringBuilder_toString(var$5));
},
onn_NostrPool_lambda$onRelayMessage$19 = $subId => {
    let var$2, var$3;
    onn_NostrPool_$callClinit();
    var$2 = onn_NostrPool_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(807)), $subId);
    var$2.$finer(jl_StringBuilder_toString(var$3));
},
onn_NostrPool_lambda$onRelayMessage$18 = ($relay, $rcv) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = onn_NostrRelay_getUrl($relay);
    var$5 = jl_String_valueOf($rcv);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(808)), var$4), $rt_s(413)), var$5);
    var$3.$finer(jl_StringBuilder_toString(var$6));
},
onn_NostrPool_lambda$fetch$17 = ($this, $filters, $timeout, $unit, $sub, $platform, $res, $rej) => {
    let $events, $ended, $scheduled, $done, var$12, var$13;
    $events = ju_ArrayList__init_();
    onn_NostrPool_$callClinit();
    if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$lambda$fetch$17$lambda$_40_5__init_0($filters, $timeout, $unit, $sub)))
        $rt_throw(jl_AssertionError__init_());
    $ended = juca_AtomicBoolean__init_0(0);
    $scheduled = onnu_ScheduledAction__init_0(Long_add($platform.$getTimestampSeconds(), juc_TimeUnit_toSeconds($unit, $timeout)), onn_NostrPool$lambda$fetch$17$lambda$_40_0__init_0($ended, $sub, $rej));
    $done = onn_NostrPool$lambda$fetch$17$lambda$_40_1__init_0($this, $res, $ended, $scheduled);
    $this.$scheduledActions.$add1($scheduled);
    var$12 = onn_NostrPool$lambda$fetch$17$lambda$_40_2__init_0($sub, $events, $done);
    var$12 = $sub.$addEoseListener(var$12);
    var$13 = onn_NostrPool$lambda$fetch$17$lambda$_40_3__init_0($sub, $events);
    var$12 = var$12.$addEventListener(var$13);
    var$13 = onn_NostrPool$lambda$fetch$17$lambda$_40_4__init_0($sub, $ended, $done, $events);
    var$12 = var$12.$addCloseListener(var$13);
    var$12.$open();
},
onn_NostrPool_lambda$fetch$16 = ($sub, $ended, $done, $events, $reason) => {
    onn_NostrPool_$callClinit();
    if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$lambda$fetch$16$lambda$_41_0__init_0($reason, $sub)))
        $rt_throw(jl_AssertionError__init_());
    if (juca_AtomicBoolean_get($ended))
        return;
    $done.$accept0($events);
},
onn_NostrPool_lambda$fetch$15 = ($reason, $sub) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = jl_String_valueOf($reason);
    var$5 = $sub.$getId();
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(809)), var$4), $rt_s(805)), var$5);
    var$3.$fine(jl_StringBuilder_toString(var$6));
},
onn_NostrPool_lambda$fetch$14 = ($sub, $events, $e, $stored) => {
    onn_NostrPool_$callClinit();
    if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$lambda$fetch$14$lambda$_43_0__init_0($e, $sub)))
        $rt_throw(jl_AssertionError__init_());
    $events.$add1($e);
},
onn_NostrPool_lambda$fetch$13 = ($e, $sub) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = jl_String_valueOf($e);
    var$5 = $sub.$getId();
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(810)), var$4), $rt_s(805)), var$5);
    var$3.$finer(jl_StringBuilder_toString(var$6));
};
let onn_NostrPool_lambda$fetch$12 = ($sub, $events, $done, $all) => {
    onn_NostrPool_$callClinit();
    if ($all) {
        if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$lambda$fetch$12$lambda$_45_0__init_0($sub, $events)))
            $rt_throw(jl_AssertionError__init_());
        $done.$accept0($events);
        $sub.$close0();
    }
},
onn_NostrPool_lambda$fetch$11 = ($sub, $events) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = $sub.$getId();
    var$5 = jl_String_valueOf($events);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(811)), var$4), $rt_s(812)), var$5);
    var$3.$fine(jl_StringBuilder_toString(var$6));
},
onn_NostrPool_lambda$fetch$10 = ($this, $res, $ended, $scheduled, $evs) => {
    $res.$accept0($evs);
    juca_AtomicBoolean_set($ended, 1);
    $this.$scheduledActions.$remove2($scheduled);
},
onn_NostrPool_lambda$fetch$9 = ($ended, $sub, $rej) => {
    let var$4, var$5, var$6;
    onn_NostrPool_$callClinit();
    if (juca_AtomicBoolean_get($ended))
        return;
    var$4 = onn_NostrPool_logger;
    var$5 = $sub.$getId();
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(813)), var$5);
    var$4.$warning(jl_StringBuilder_toString(var$6));
    $sub.$close0();
    $rej.$accept0(jl_Exception__init_0($rt_s(814)));
},
onn_NostrPool_lambda$fetch$8 = ($filters, $timeout, $unit, $sub) => {
    let var$5, var$6, var$7, var$8, var$9;
    onn_NostrPool_$callClinit();
    var$5 = onn_NostrPool_logger;
    var$6 = jl_String_valueOf($filters);
    var$7 = jl_String_valueOf($unit);
    var$8 = $sub.$getId();
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(815)), var$6), $rt_s(816)), $timeout), 32), var$7), $rt_s(805)), var$8);
    var$6 = jl_StringBuilder_toString(var$9);
    var$5.$fine(var$6);
},
onn_NostrPool_lambda$subscribe$7 = ($this, $subId, $s, $closeMessage) => {
    onn_NostrPool_$callClinit();
    if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$lambda$subscribe$7$lambda$_50_0__init_0($s, $closeMessage)))
        $rt_throw(jl_AssertionError__init_());
    $this.$subscriptions.$remove1($subId);
    return $this.$sendMessage($closeMessage);
},
onn_NostrPool_lambda$subscribe$6 = ($s, $closeMessage) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = $s.$getId();
    var$5 = jl_String_valueOf($closeMessage);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(817)), var$4), $rt_s(404)), var$5);
    var$3.$fine(jl_StringBuilder_toString(var$6));
},
onn_NostrPool_lambda$subscribe$5 = ($this, $s) => {
    onn_NostrPool_$callClinit();
    if (!onn_NostrPool_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrPool$lambda$subscribe$5$lambda$_52_0__init_0($s)))
        $rt_throw(jl_AssertionError__init_());
    return $this.$sendMessage($s);
},
onn_NostrPool_lambda$subscribe$4 = $s => {
    let var$2, var$3, var$4;
    onn_NostrPool_$callClinit();
    var$2 = onn_NostrPool_logger;
    var$3 = $s.$getId();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(818)), var$3);
    var$2.$fine(jl_StringBuilder_toString(var$4));
},
onn_NostrPool_lambda$subscribe$3 = ($subId, $filters) => {
    let var$3, var$4, var$5;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = jl_String_valueOf($filters);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(819)), $subId), $rt_s(820)), var$4);
    var$3.$fine(jl_StringBuilder_toString(var$5));
},
onn_NostrPool_lambda$sendMessage$2 = ($promises, $ackPolicy, $message, $res, $rej) => {
    let var$6, $ack;
    onn_NostrPool_$callClinit();
    var$6 = $promises.$iterator();
    while (var$6.$hasNext()) {
        $ack = var$6.$next();
        $ack.$then(onn_NostrPool$lambda$sendMessage$2$lambda$_55_0__init_0($ackPolicy, $promises, $res, $message, $rej));
    }
},
onn_NostrPool_lambda$sendMessage$1 = ($ackPolicy, $promises, $res, $message, $rej, $msg) => {
    let $status, var$8, var$9, var$10, var$11, var$12;
    onn_NostrPool_$callClinit();
    $status = $ackPolicy.$apply($promises);
    onnp_NostrMessageAck$Status_$callClinit();
    if ($status === onnp_NostrMessageAck$Status_SUCCESS)
        $res.$accept0($promises);
    else if ($status === onnp_NostrMessageAck$Status_FAILURE) {
        var$8 = onn_NostrPool_logger;
        var$9 = jl_String_valueOf($message);
        var$10 = onn_NostrRelay_getUrl($msg.$getRelay());
        var$11 = $msg.$getMessage();
        var$12 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(821)), var$9), $rt_s(822)), var$10), $rt_s(17)), var$11);
        var$9 = jl_StringBuilder_toString(var$12);
        var$8.$warning(var$9);
        var$9 = new jl_Exception;
        var$8 = $msg.$getMessage();
        var$11 = jl_StringBuilder__init_();
        jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$11, $rt_s(823)), var$8), 41);
        jl_Exception__init_(var$9, jl_StringBuilder_toString(var$11));
        $rej.$accept0(var$9);
    }
    return null;
},
onn_NostrPool_lambda$sendMessage$0 = ($relay, $message) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrPool_$callClinit();
    var$3 = onn_NostrPool_logger;
    var$4 = onn_NostrRelay_getUrl($relay);
    var$5 = jl_String_valueOf($message);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(824)), var$4), 32), var$5);
    var$3.$finer(jl_StringBuilder_toString(var$6));
},
onn_NostrPool__clinit_ = () => {
    onn_NostrPool_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onn_NostrPool)) ? 0 : 1;
    onn_NostrPool_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onn_NostrPool)));
},
onn_NostrPool_fetch$exported$0 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$fetch5(var$2, var$3);
},
onn_NostrPool_addNoticeListener$exported$1 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$addNoticeListener(var$2);
},
onn_NostrPool_onBeforeRelaySend$exported$2 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onBeforeRelaySend(var$2, var$3);
},
onn_NostrPool_fetch$exported$3 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$5 = var$3;
    var$3 = var$4;
    return var$1.$fetch3(var$2, var$5, var$3);
},
onn_NostrPool_fetch$exported$4 = (var$1, var$2, var$3, var$4, var$5) => {
    let var$6;
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$6 = var$3;
    var$3 = var$4;
    var$4 = var$5;
    return var$1.$fetch4(var$2, var$6, var$3, var$4);
},
onn_NostrPool_onRelayMessage$exported$5 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayMessage(var$2, var$3);
},
onn_NostrPool_fetch$exported$6 = (var$1, var$2, var$3, var$4, var$5) => {
    let var$6;
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$6 = var$3;
    var$3 = var$4;
    var$4 = var$5;
    return var$1.$fetch6(var$2, var$6, var$3, var$4);
},
onn_NostrPool_subscribe$exported$7 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$subscribe(var$2, var$3);
},
onn_NostrPool_fetch$exported$8 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$5 = var$3;
    var$3 = var$4;
    return var$1.$fetch7(var$2, var$5, var$3);
},
onn_NostrPool_onRelayError$exported$9 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayError(var$2, var$3);
},
onn_NostrPool_lambda$fetch$10$exported$10 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    var$5 = var$5;
    onn_NostrPool_lambda$fetch$10(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrPool__init_$exported$11 = var$1 => {
    onn_NostrPool_$callClinit();
    return onn_NostrPool__init_(var$1);
},
onn_NostrPool_removeRelay$exported$12 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$removeRelay(var$2);
},
onn_NostrPool_sendMessage$exported$13 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$sendMessage(var$2);
},
onn_NostrPool_fetch$exported$14 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$fetch2(var$2);
},
onn_NostrPool_onRelayDisconnect$exported$15 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$5 = var$4 ? 1 : 0;
    return !!var$1.$onRelayDisconnect(var$2, var$3, var$5);
},
onn_NostrPool_lambda$subscribe$7$exported$16 = (var$1, var$2, var$3, var$4) => {
    onn_NostrPool_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    var$4 = var$4;
    return onn_NostrPool_lambda$subscribe$7(var$1, var$2, var$3, var$4);
},
onn_NostrPool_onRelayDisconnectRequest$exported$17 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return !!var$1.$onRelayDisconnectRequest(var$2, var$3);
},
onn_NostrPool_onRelayLoop$exported$18 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayLoop(var$2, var$3);
},
onn_NostrPool_onRelaySend$exported$19 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelaySend(var$2, var$3);
},
onn_NostrPool_fetch$exported$20 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$fetch8(var$2, var$3);
},
onn_NostrPool__init_$exported$21 = () => {
    onn_NostrPool_$callClinit();
    return onn_NostrPool__init_1();
},
onn_NostrPool_publish$exported$22 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$publish(var$2);
},
onn_NostrPool_send$exported$23 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$send1(var$2);
},
onn_NostrPool_subscribe$exported$24 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$subscribe0(var$2, var$3);
},
onn_NostrPool_removeNoticeListener$exported$25 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$removeNoticeListener(var$2);
},
onn_NostrPool_getRelays$exported$26 = var$1 => {
    onn_NostrPool_$callClinit();
    return var$1.$getRelays();
},
onn_NostrPool_publish$exported$27 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$publish0(var$2, var$3);
},
onn_NostrPool_unsubscribeAll$exported$28 = var$1 => {
    onn_NostrPool_$callClinit();
    var$1.$unsubscribeAll();
},
onn_NostrPool_lambda$fetch$17$exported$29 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) => {
    let var$9;
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$9 = var$3;
    var$3 = var$4;
    var$4 = var$5;
    var$5 = var$6;
    var$6 = var$7;
    var$7 = var$8;
    onn_NostrPool_lambda$fetch$17(var$1, var$2, var$9, var$3, var$4, var$5, var$6, var$7);
},
onn_NostrPool_onAfterRelaySend$exported$30 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onAfterRelaySend(var$2, var$3);
},
onn_NostrPool_connectRelay$exported$31 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$connectRelay(var$2);
},
onn_NostrPool_lambda$subscribe$5$exported$32 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return onn_NostrPool_lambda$subscribe$5(var$1, var$2);
},
onn_NostrPool_close$exported$33 = var$1 => {
    onn_NostrPool_$callClinit();
    return var$1.$close2();
},
onn_NostrPool_subscribe$exported$34 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$subscribe1(var$2);
},
onn_NostrPool_sendMessage$exported$35 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$sendMessage0(var$2, var$3);
};
let onn_NostrPool_onRelayConnectRequest$exported$36 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return !!var$1.$onRelayConnectRequest(var$2);
},
onn_NostrPool_subscribe$exported$37 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$subscribe2(var$2);
},
onn_NostrPool_fetch$exported$38 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return var$1.$fetch0(var$2);
},
onn_NostrPool_onRelayConnect$exported$39 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    var$2 = var$2;
    return !!var$1.$onRelayConnect(var$2);
},
onn_NostrPool_lambda$onRelayMessage$21$exported$0 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$onRelayMessage$21(var$1, $rt_str(var$2));
},
onn_NostrPool_lambda$onRelayMessage$20$exported$1 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$onRelayMessage$20(var$1, $rt_str(var$2));
},
onn_NostrPool_lambda$onRelayMessage$19$exported$2 = var$1 => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$onRelayMessage$19($rt_str(var$1));
},
onn_NostrPool_lambda$onRelayMessage$18$exported$3 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$onRelayMessage$18(var$1, var$2);
},
onn_NostrPool_lambda$fetch$16$exported$4 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$16(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrPool_lambda$fetch$15$exported$5 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$15(var$1, var$2);
},
onn_NostrPool_lambda$fetch$14$exported$6 = (var$1, var$2, var$3, var$4) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$14(var$1, var$2, var$3, var$4 ? 1 : 0);
},
onn_NostrPool_lambda$fetch$13$exported$7 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$13(var$1, var$2);
},
onn_NostrPool_lambda$fetch$12$exported$8 = (var$1, var$2, var$3, var$4) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$12(var$1, var$2, var$3, var$4 ? 1 : 0);
},
onn_NostrPool_lambda$fetch$11$exported$9 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$11(var$1, var$2);
},
onn_NostrPool_lambda$fetch$9$exported$10 = (var$1, var$2, var$3) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$9(var$1, var$2, var$3);
},
onn_NostrPool_lambda$fetch$8$exported$11 = (var$1, var$2, var$3, var$4) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$fetch$8(var$1, var$2, var$3, var$4);
},
onn_NostrPool_lambda$subscribe$6$exported$12 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$subscribe$6(var$1, var$2);
},
onn_NostrPool_lambda$subscribe$4$exported$13 = var$1 => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$subscribe$4(var$1);
},
onn_NostrPool_lambda$subscribe$3$exported$14 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$subscribe$3($rt_str(var$1), var$2);
},
onn_NostrPool_lambda$sendMessage$2$exported$15 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$sendMessage$2(var$1, var$2, var$3, var$4, var$5);
},
onn_NostrPool_lambda$sendMessage$1$exported$16 = (var$1, var$2, var$3, var$4, var$5, var$6) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JSWrapper_javaToJs(onn_NostrPool_lambda$sendMessage$1(var$1, var$2, var$3, var$4, var$5, var$6));
},
onn_NostrPool_lambda$sendMessage$0$exported$17 = (var$1, var$2) => {
    onn_NostrPool_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrPool_lambda$sendMessage$0(var$1, var$2);
};
function onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0() {
    jl_Object.call(this);
    this.$_0192 = null;
}
let onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0192 = var$1;
},
onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0__init_0 = var_0 => {
    let var_1 = new onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0();
    onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0__init_(var_1, var_0);
    return var_1;
};
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$033 = null;
}
let jur_AbstractCharClass$LazyJavaLetter$1__init_ = ($this, $this$0) => {
    $this.$this$033 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetter$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaLetter$1();
    jur_AbstractCharClass$LazyJavaLetter$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaLetter$1_contains = ($this, $ch) => {
    return jl_Character_isLetter($ch);
};
function onns_NostrNIP46Signer$PendingChallenge() {
    let a = this; jl_Object.call(a);
    a.$createdAt2 = null;
    a.$close4 = null;
}
let onns_NostrNIP46Signer$PendingChallenge_close = ($this, $t) => {
    $this.$close4.$accept0($t);
},
onns_NostrNIP46Signer$PendingChallenge__init_ = ($this, $url, $close) => {
    jl_Object__init_($this);
    $this.$createdAt2 = jt_Instant_now();
    $this.$close4 = $close;
},
onns_NostrNIP46Signer$PendingChallenge__init_0 = (var_0, var_1) => {
    let var_2 = new onns_NostrNIP46Signer$PendingChallenge();
    onns_NostrNIP46Signer$PendingChallenge__init_(var_2, var_0, var_1);
    return var_2;
},
onns_NostrNIP46Signer$PendingChallenge_close$exported$0 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$close3(var$2);
},
onns_NostrNIP46Signer$PendingChallenge__init_$exported$1 = (var$1, var$2) => {
    return onns_NostrNIP46Signer$PendingChallenge__init_0($rt_str(var$1), var$2);
};
function cjj_Deflater() {
    cjj_ZStream.call(this);
    this.$finished0 = 0;
}
let cjj_Deflater__init_0 = ($this, $level, $nowrap) => {
    cjj_Deflater__init_($this, $level, 15, $nowrap);
},
cjj_Deflater__init_1 = (var_0, var_1) => {
    let var_2 = new cjj_Deflater();
    cjj_Deflater__init_0(var_2, var_0, var_1);
    return var_2;
},
cjj_Deflater__init_ = ($this, $level, $bits, $nowrap) => {
    let $ret;
    cjj_ZStream__init_($this);
    $this.$finished0 = 0;
    $ret = cjj_Deflater_init($this, $level, $bits, $nowrap);
    if (!$ret)
        return;
    $rt_throw(cjj_GZIPException__init_(((((jl_StringBuilder__init_()).$append3($ret)).$append1($rt_s(17))).$append1($this.$msg)).$toString()));
},
cjj_Deflater__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new cjj_Deflater();
    cjj_Deflater__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cjj_Deflater_init = ($this, $level, $bits, $nowrap) => {
    let var$4;
    $this.$finished0 = 0;
    $this.$dstate = cjj_Deflate__init_0($this);
    var$4 = $this.$dstate;
    if ($nowrap)
        $bits =  -$bits | 0;
    return cjj_Deflate_deflateInit(var$4, $level, $bits);
},
cjj_Deflater_deflate = ($this, $flush) => {
    let $ret;
    if ($this.$dstate === null)
        return (-2);
    $ret = cjj_Deflate_deflate($this.$dstate, $flush);
    if ($ret == 1)
        $this.$finished0 = 1;
    return $ret;
},
jtc_ChronoLocalDate$_clinit_$lambda$_36_0 = $rt_classWithoutFields(),
jtc_ChronoLocalDate$_clinit_$lambda$_36_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtc_ChronoLocalDate$_clinit_$lambda$_36_0__init_0 = () => {
    let var_0 = new jtc_ChronoLocalDate$_clinit_$lambda$_36_0();
    jtc_ChronoLocalDate$_clinit_$lambda$_36_0__init_(var_0);
    return var_0;
};
function ju_TimeZone() {
    jl_Object.call(this);
    this.$id11 = null;
}
let ju_TimeZone_defaultTz = null,
ju_TimeZone_GMT = null,
ju_TimeZone_$callClinit = () => {
    ju_TimeZone_$callClinit = $rt_eraseClinit(ju_TimeZone);
    ju_TimeZone__clinit_();
},
ju_TimeZone__init_ = ($this, $id) => {
    ju_TimeZone_$callClinit();
    jl_Object__init_($this);
    $this.$id11 = $id;
},
ju_TimeZone_clone = $this => {
    let $zone, $$je;
    a: {
        try {
            $zone = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return $zone;
    }
    return null;
},
ju_TimeZone_getDefault = () => {
    ju_TimeZone_$callClinit();
    if (ju_TimeZone_defaultTz === null) {
        ju_TimeZone_defaultTz = ju_TimeZone_detectTimezone();
        if (ju_TimeZone_defaultTz === null)
            ju_TimeZone_defaultTz = ju_TimeZone_GMT;
    }
    return ju_TimeZone_defaultTz.$clone0();
},
ju_TimeZone_detectTimezone = () => {
    ju_TimeZone_$callClinit();
    return null;
},
ju_TimeZone_getTimeZone = $name => {
    let $jodaZone, $sign, $position, $formattedName, $hour, var$7, $index, $raw, $minute;
    ju_TimeZone_$callClinit();
    $jodaZone = otcit_DateTimeZoneProvider_getTimeZone($name);
    if ($jodaZone !== null)
        return ju_IANATimeZone__init_($jodaZone);
    a: {
        if ($name.$startsWith($rt_s(463)) && $name.$length() > 3) {
            $sign = $name.$charAt(3);
            if (!($sign != 43 && $sign != 45)) {
                $position = $rt_createIntArray(1);
                $formattedName = ju_TimeZone_formatTimeZoneName($name, 4);
                $hour = ju_TimeZone_parseNumber($formattedName, 4, $position);
                if ($hour >= 0 && $hour <= 23) {
                    var$7 = $position.data;
                    $index = var$7[0];
                    if ($index == (-1))
                        break a;
                    else {
                        b: {
                            $raw = $rt_imul($hour, 3600000);
                            if ($index < $formattedName.$length() && $formattedName.$charAt($index) == 58) {
                                $minute = ju_TimeZone_parseNumber($formattedName, $index + 1 | 0, $position);
                                if (var$7[0] != (-1) && $minute >= 0 && $minute <= 59) {
                                    $raw = $raw + ($minute * 60000 | 0) | 0;
                                    break b;
                                }
                                return ju_TimeZone_GMT.$clone0();
                            }
                            if ($index > 6)
                                $raw = $hour * 60000 | 0;
                        }
                        if ($sign == 45)
                            $raw =  -$raw | 0;
                        return ju_IANATimeZone__init_(otcit_FixedDateTimeZone__init_($formattedName, $raw, $raw));
                    }
                }
                return ju_TimeZone_GMT.$clone0();
            }
        }
    }
    return ju_TimeZone_GMT.$clone0();
},
ju_TimeZone_formatTimeZoneName = ($name, $offset) => {
    let $buf, $length;
    ju_TimeZone_$callClinit();
    $buf = jl_StringBuilder__init_();
    $length = $name.$length();
    $buf.$append1($name.$substring(0, $offset));
    while ($offset < $length) {
        if (jl_Character_digit($name.$charAt($offset), 10) != (-1)) {
            $buf.$append0($name.$charAt($offset));
            if (($length - ($offset + 1 | 0) | 0) == 2)
                $buf.$append0(58);
        } else if ($name.$charAt($offset) == 58)
            $buf.$append0(58);
        $offset = $offset + 1 | 0;
    }
    if (($buf.$toString()).$indexOf5($rt_s(708)) == (-1)) {
        $buf.$append0(58);
        $buf.$append1($rt_s(825));
    }
    if (($buf.$toString()).$indexOf5($rt_s(708)) == 5)
        $buf.$insert14(4, 48);
    return $buf.$toString();
},
ju_TimeZone_parseNumber = ($string, $offset, $position) => {
    let $length, $result, var$6, $digit;
    ju_TimeZone_$callClinit();
    $length = $string.$length();
    $result = 0;
    var$6 = $offset;
    a: {
        while (true) {
            if (var$6 >= $length)
                break a;
            $digit = jl_Character_digit($string.$charAt(var$6), 10);
            if ($digit == (-1))
                break;
            var$6 = var$6 + 1 | 0;
            $result = ($result * 10 | 0) + $digit | 0;
        }
    }
    if (var$6 == $offset)
        var$6 = (-1);
    $position.data[0] = var$6;
    return $result;
},
ju_TimeZone__clinit_ = () => {
    ju_TimeZone_GMT = ju_IANATimeZone__init_(otcit_FixedDateTimeZone__init_($rt_s(463), 0, 0));
};
function ju_IANATimeZone() {
    let a = this; ju_TimeZone.call(a);
    a.$underlyingZone = null;
    a.$rawOffset = 0;
    a.$diff = 0;
}
let ju_IANATimeZone__init_0 = ($this, $underlyingZone) => {
    ju_TimeZone__init_($this, otcit_DateTimeZone_getID($underlyingZone));
    $this.$underlyingZone = $underlyingZone;
    $this.$rawOffset = $underlyingZone.$getStandardOffset(jl_System_currentTimeMillis());
    $this.$diff =  -$this.$rawOffset | 0;
},
ju_IANATimeZone__init_ = var_0 => {
    let var_1 = new ju_IANATimeZone();
    ju_IANATimeZone__init_0(var_1, var_0);
    return var_1;
},
ju_IANATimeZone_getOffset = ($this, $time) => {
    return ($this.$rawOffset + $this.$diff | 0) + $this.$underlyingZone.$getOffset($time) | 0;
},
ju_IANATimeZone_clone0 = $this => {
    let $copy;
    $copy = ju_TimeZone_clone($this);
    $copy.$rawOffset = $this.$rawOffset;
    $copy.$underlyingZone = $this.$underlyingZone;
    return $copy;
},
ju_IANATimeZone_clone = $this => {
    return $this.$clone7();
},
jnci_Iso8859Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_Iso8859Decoder__init_ = ($this, $cs) => {
    jnci_BufferedDecoder__init_($this, $cs, 1.0, 1.0);
},
jnci_Iso8859Decoder__init_0 = var_0 => {
    let var_1 = new jnci_Iso8859Decoder();
    jnci_Iso8859Decoder__init_(var_1, var_0);
    return var_1;
},
jnci_Iso8859Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, var$11, $b, var$13;
    $result = null;
    while ($inPos < $inSize && $outPos < $outSize) {
        var$9 = $outArray.data;
        var$10 = $inArray.data;
        var$11 = $inPos + 1 | 0;
        $b = var$10[$inPos] & 255;
        var$13 = $outPos + 1 | 0;
        var$9[$outPos] = $b & 65535;
        $inPos = var$11;
        $outPos = var$13;
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
};
function onnrt_NostrTURN$lambda$write$10$lambda$_11_1() {
    jl_Object.call(this);
    this.$_070 = null;
}
let onnrt_NostrTURN$lambda$write$10$lambda$_11_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_070 = var$1;
},
onnrt_NostrTURN$lambda$write$10$lambda$_11_1__init_0 = var_0 => {
    let var_1 = new onnrt_NostrTURN$lambda$write$10$lambda$_11_1();
    onnrt_NostrTURN$lambda$write$10$lambda$_11_1__init_(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$lambda$write$10$lambda$_11_1_accept0 = (var$0, var$1) => {
    onnrt_NostrTURN$lambda$write$10$lambda$_11_1_accept(var$0, var$1);
},
onnrt_NostrTURN$lambda$write$10$lambda$_11_1_accept = (var$0, var$1) => {
    onnrt_NostrTURN_lambda$write$9(var$0.$_070, var$1);
};
function jusi_StreamOverSpliterator() {
    jusi_SimpleStreamImpl.call(this);
    this.$spliterator0 = null;
}
let jusi_StreamOverSpliterator__init_ = ($this, $spliterator) => {
    jusi_SimpleStreamImpl__init_($this);
    $this.$spliterator0 = $spliterator;
},
jusi_StreamOverSpliterator__init_0 = var_0 => {
    let var_1 = new jusi_StreamOverSpliterator();
    jusi_StreamOverSpliterator__init_(var_1, var_0);
    return var_1;
},
jusi_StreamOverSpliterator_next = ($this, $consumer) => {
    let $action;
    $action = jusi_StreamOverSpliterator$AdapterAction__init_0($consumer);
    while ($this.$spliterator0.$tryAdvance($action)) {
        if ($action.$wantsMore)
            continue;
        else
            return 1;
    }
    return 0;
},
jusi_StreamOverSpliterator_estimateSize = $this => {
    return Long_lo(($this.$spliterator0.$estimateSize0()));
};
function onnrt_NostrTURN$lambda$write$10$lambda$_11_0() {
    jl_Object.call(this);
    this.$_0102 = null;
}
let onnrt_NostrTURN$lambda$write$10$lambda$_11_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0102 = var$1;
},
onnrt_NostrTURN$lambda$write$10$lambda$_11_0__init_0 = var_0 => {
    let var_1 = new onnrt_NostrTURN$lambda$write$10$lambda$_11_0();
    onnrt_NostrTURN$lambda$write$10$lambda$_11_0__init_(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$lambda$write$10$lambda$_11_0_run = var$0 => {
    onnrt_NostrTURN_lambda$write$8(var$0.$_0102);
},
ju_Spliterator = $rt_classWithoutFields(0);
function onnr_NostrRTCRoom$1() {
    jl_Object.call(this);
    this.$this$02 = null;
}
let onnr_NostrRTCRoom$1__init_0 = ($this, $this$0) => {
    $this.$this$02 = $this$0;
    jl_Object__init_($this);
},
onnr_NostrRTCRoom$1__init_ = var_0 => {
    let var_1 = new onnr_NostrRTCRoom$1();
    onnr_NostrRTCRoom$1__init_0(var_1, var_0);
    return var_1;
},
onnr_NostrRTCRoom$1_onAddAnnounce = ($this, $announce) => {
    $this.$this$02.$onAddAnnounce($announce);
},
onnr_NostrRTCRoom$1_onUpdateAnnounce = ($this, $announce) => {
    $this.$this$02.$onUpdateAnnounce($announce);
},
onnr_NostrRTCRoom$1_onRTCSocketClose = ($this, $socket) => {
    $this.$this$02.$onRTCSocketClose($socket);
},
onnr_NostrRTCRoom$1_onReceiveOffer = ($this, $offer) => {
    $this.$this$02.$onReceiveOffer($offer);
},
onnr_NostrRTCRoom$1_onReceiveAnswer = ($this, $answer) => {
    $this.$this$02.$onReceiveAnswer($answer);
},
onnr_NostrRTCRoom$1_onReceiveCandidates = ($this, $candidate) => {
    $this.$this$02.$onReceiveCandidates($candidate);
},
onnr_NostrRTCRoom$1_onRTCSocketMessage = ($this, $socket, $bbf, $turn) => {
    $this.$this$02.$onRTCSocketMessage($socket, $bbf, $turn);
},
onnr_NostrRTCRoom$1_onRTCSocketLocalIceCandidate = ($this, $socket, $candidate) => {
    $this.$this$02.$onRTCSocketLocalIceCandidate($socket, $candidate);
},
onnr_NostrRTCRoom$1_onRemoveAnnounce = ($this, $announce, $reason) => {
    $this.$this$02.$onRemoveAnnounce($announce, $reason);
},
onnr_NostrRTCRoom$1_onReceiveAnswer$exported$0 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onReceiveAnswer(var$2);
},
onnr_NostrRTCRoom$1_onReceiveCandidates$exported$1 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onReceiveCandidates(var$2);
},
onnr_NostrRTCRoom$1_onUpdateAnnounce$exported$2 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onUpdateAnnounce(var$2);
},
onnr_NostrRTCRoom$1_onRemoveAnnounce$exported$3 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    var$1.$onRemoveAnnounce(var$2, var$3);
},
onnr_NostrRTCRoom$1_onRTCSocketLocalIceCandidate$exported$4 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    var$1.$onRTCSocketLocalIceCandidate(var$2, var$3);
},
onnr_NostrRTCRoom$1_onRTCSocketMessage$exported$5 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    var$2 = var$2;
    var$3 = var$3;
    var$5 = var$4 ? 1 : 0;
    var$1.$onRTCSocketMessage(var$2, var$3, var$5);
},
onnr_NostrRTCRoom$1_onReceiveOffer$exported$6 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onReceiveOffer(var$2);
},
onnr_NostrRTCRoom$1__init_$exported$7 = var$1 => {
    return onnr_NostrRTCRoom$1__init_(var$1);
},
onnr_NostrRTCRoom$1_onAddAnnounce$exported$8 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onAddAnnounce(var$2);
},
onnr_NostrRTCRoom$1_onRTCSocketClose$exported$9 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$onRTCSocketClose(var$2);
},
jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyUpper__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyUpper__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyUpper_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(65, 90);
},
ju_HashMap$KeyIterator = $rt_classWithoutFields(ju_HashMap$AbstractMapIterator),
ju_HashMap$KeyIterator__init_ = ($this, $map) => {
    ju_HashMap$AbstractMapIterator__init_($this, $map);
},
ju_HashMap$KeyIterator__init_0 = var_0 => {
    let var_1 = new ju_HashMap$KeyIterator();
    ju_HashMap$KeyIterator__init_(var_1, var_0);
    return var_1;
},
ju_HashMap$KeyIterator_next = $this => {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry.$key;
};
function otji_JSWrapper() {
    jl_Object.call(this);
    this.$js = null;
}
let otji_JSWrapper__init_0 = ($this, $js) => {
    jl_Object__init_($this);
    $this.$js = $js;
},
otji_JSWrapper__init_ = var_0 => {
    let var_1 = new otji_JSWrapper();
    otji_JSWrapper__init_0(var_1, var_0);
    return var_1;
},
otji_JSWrapper_wrap = $o => {
    let $type, $isObject, $wrappers, $existingRef, $existing, $wrapper, $jsString, $stringWrappers, $stringFinalizationRegistry, $wrapperAsJs, $jsNumber, $numberWrappers, $numberFinalizationRegistry;
    if ($o === null)
        return null;
    $type = $rt_str(typeof $o);
    $isObject = !$type.$equals($rt_s(826)) && !$type.$equals($rt_s(827)) ? 0 : 1;
    otji_JSWrapper$Helper_$callClinit();
    $wrappers = otji_JSWrapper$Helper_wrappers;
    if ($wrappers !== null) {
        if ($isObject) {
            $existingRef = $wrappers.get($o);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrappers.set($o, new WeakRef($wrapper));
            return $wrapper;
        }
        if ($type.$equals($rt_s(828))) {
            $jsString = $o;
            $stringWrappers = otji_JSWrapper$Helper_stringWrappers;
            $stringFinalizationRegistry = otji_JSWrapper$Helper_stringFinalizationRegistry;
            $existingRef = $stringWrappers.get($jsString);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrapperAsJs = $wrapper;
            $stringWrappers.set($jsString, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($stringFinalizationRegistry, $wrapperAsJs, $jsString);
            return $wrapper;
        }
        if ($type.$equals($rt_s(829))) {
            $jsNumber = $o;
            $numberWrappers = otji_JSWrapper$Helper_numberWrappers;
            $numberFinalizationRegistry = otji_JSWrapper$Helper_numberFinalizationRegistry;
            $existingRef = $numberWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrapperAsJs = $wrapper;
            $numberWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($numberFinalizationRegistry, $wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if ($type.$equals($rt_s(830))) {
            $existingRef = otji_JSWrapper$Helper_undefinedWrapper;
            $existing = $existingRef === null ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrapperAsJs = $wrapper;
            otji_JSWrapper$Helper_undefinedWrapper = new WeakRef($wrapperAsJs);
            return $wrapper;
        }
    }
    return otji_JSWrapper__init_($o);
},
otji_JSWrapper_maybeWrap = $o => {
    if ($o !== null && !($o instanceof $rt_objcls()))
        $o = otji_JSWrapper_wrap($o);
    return $o;
},
otji_JSWrapper_unwrap = $o => {
    if ($o === null)
        return null;
    return !($o instanceof otji_JSWrapper) ? $o : $o.$js;
},
otji_JSWrapper_maybeUnwrap = $o => {
    if ($o === null)
        return null;
    return !($o instanceof $rt_objcls()) ? $o : otji_JSWrapper_unwrap($o);
},
otji_JSWrapper_javaToJs = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() && $o instanceof otji_JSWrapper ? otji_JSWrapper_unwrap($o) : $o;
},
otji_JSWrapper_jsToJava = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() ? $o : otji_JSWrapper_wrap($o);
},
otji_JSWrapper_hashCode = $this => {
    let $type, $s, $hashCode, $i, $code, var$6;
    $type = $rt_str(typeof $this.$js);
    if (!$type.$equals($rt_s(826)) && !$type.$equals($rt_s(831)) && !$type.$equals($rt_s(827))) {
        if ($type.$equals($rt_s(829)))
            return otjc_JSNumber_intValue$static($this.$js);
        if ($type.$equals($rt_s(832)))
            return BigInt.asIntN($this.$js, 32);
        if (!$type.$equals($rt_s(828))) {
            if (!$type.$equals($rt_s(833)))
                return 0;
            return $this.$js !== !!1 ? 0 : 1;
        }
        $s = $this.$js;
        $hashCode = 0;
        $i = 0;
        while ($i < $s.length) {
            $hashCode = (31 * $hashCode | 0) + $s.charCodeAt($i) | 0;
            $i = $i + 1 | 0;
        }
        return $hashCode;
    }
    otji_JSWrapper$Helper_$callClinit();
    $code = otji_JSWrapper_maybeUnwrap(otji_JSWrapper$Helper_hashCodes.get($this.$js));
    if (typeof $code == 'undefined' ? 1 : 0) {
        var$6 = otji_JSWrapper$Helper_hashCodeGen + 1 | 0;
        otji_JSWrapper$Helper_hashCodeGen = var$6;
        $code = var$6;
        otji_JSWrapper$Helper_hashCodes.set($this.$js, $code);
    }
    return $code;
},
otji_JSWrapper_equals = ($this, $obj) => {
    if ($obj === $this)
        return 1;
    if ($obj === null)
        return 0;
    if (!($obj instanceof otji_JSWrapper))
        return 0;
    return $this.$js !== $obj.$js ? 0 : 1;
},
otji_JSWrapper_toString = $this => {
    return (typeof $this.$js == 'undefined' ? 1 : 0) ? $rt_s(830) : $rt_str($this.$js.toString());
},
otji_JSWrapper_register$js_body$_4 = (var$1, var$2, var$3) => {
    return var$1.register(var$2, var$3);
},
juc_ConcurrentMap = $rt_classWithoutFields(0);
function jul_Level() {
    let a = this; jl_Object.call(a);
    a.$name14 = null;
    a.$value15 = 0;
}
let jul_Level_OFF = null,
jul_Level_SEVERE = null,
jul_Level_WARNING = null,
jul_Level_INFO = null,
jul_Level_CONFIG = null,
jul_Level_FINE = null,
jul_Level_FINER = null,
jul_Level_FINEST = null,
jul_Level_ALL = null,
jul_Level_$callClinit = () => {
    jul_Level_$callClinit = $rt_eraseClinit(jul_Level);
    jul_Level__clinit_();
},
jul_Level__init_0 = ($this, var$1, var$2) => {
    jul_Level_$callClinit();
    jl_Object__init_($this);
    $this.$name14 = var$1;
    $this.$value15 = var$2;
},
jul_Level__init_ = (var_0, var_1) => {
    let var_2 = new jul_Level();
    jul_Level__init_0(var_2, var_0, var_1);
    return var_2;
},
jul_Level_intValue = $this => {
    return $this.$value15;
},
jul_Level__clinit_ = () => {
    jul_Level_OFF = jul_Level__init_($rt_s(834), 2147483647);
    jul_Level_SEVERE = jul_Level__init_($rt_s(835), 1000);
    jul_Level_WARNING = jul_Level__init_($rt_s(836), 900);
    jul_Level_INFO = jul_Level__init_($rt_s(837), 800);
    jul_Level_CONFIG = jul_Level__init_($rt_s(838), 700);
    jul_Level_FINE = jul_Level__init_($rt_s(839), 500);
    jul_Level_FINER = jul_Level__init_($rt_s(840), 400);
    jul_Level_FINEST = jul_Level__init_($rt_s(841), 300);
    jul_Level_ALL = jul_Level__init_($rt_s(842), (-2147483648));
};
function ju_HashSet() {
    ju_AbstractSet.call(this);
    this.$backingMap = null;
}
let ju_HashSet__init_0 = $this => {
    ju_HashSet__init_($this, ju_HashMap__init_());
},
ju_HashSet__init_1 = () => {
    let var_0 = new ju_HashSet();
    ju_HashSet__init_0(var_0);
    return var_0;
},
ju_HashSet__init_2 = ($this, $collection) => {
    let $iter;
    ju_HashSet__init_($this, ju_HashMap__init_4($collection.$size() < 6 ? 11 : $collection.$size() * 2 | 0));
    $iter = $collection.$iterator();
    while ($iter.$hasNext()) {
        $this.$add1($iter.$next());
    }
},
ju_HashSet__init_3 = var_0 => {
    let var_1 = new ju_HashSet();
    ju_HashSet__init_2(var_1, var_0);
    return var_1;
},
ju_HashSet__init_ = ($this, $backingMap) => {
    ju_AbstractSet__init_($this);
    $this.$backingMap = $backingMap;
},
ju_HashSet__init_4 = var_0 => {
    let var_1 = new ju_HashSet();
    ju_HashSet__init_(var_1, var_0);
    return var_1;
},
ju_HashSet_add = ($this, $object) => {
    return $this.$backingMap.$put1($object, $this) !== null ? 0 : 1;
},
ju_HashSet_clear = $this => {
    $this.$backingMap.$clear();
},
ju_HashSet_contains = ($this, $object) => {
    return $this.$backingMap.$containsKey($object);
},
ju_HashSet_isEmpty = $this => {
    return $this.$backingMap.$isEmpty();
},
ju_HashSet_iterator = $this => {
    return ($this.$backingMap.$keySet()).$iterator();
},
ju_HashSet_size = $this => {
    return $this.$backingMap.$size();
};
function jusi_MappingToIntStreamImpl$next$lambda$_1_0() {
    let a = this; jl_Object.call(a);
    a.$_0172 = null;
    a.$_186 = null;
}
let jusi_MappingToIntStreamImpl$next$lambda$_1_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0172 = var$1;
    var$0.$_186 = var$2;
},
jusi_MappingToIntStreamImpl$next$lambda$_1_0__init_0 = (var_0, var_1) => {
    let var_2 = new jusi_MappingToIntStreamImpl$next$lambda$_1_0();
    jusi_MappingToIntStreamImpl$next$lambda$_1_0__init_(var_2, var_0, var_1);
    return var_2;
},
jusi_MappingToIntStreamImpl$next$lambda$_1_0_test = (var$0, var$1) => {
    return jusi_MappingToIntStreamImpl_lambda$next$0(var$0.$_0172, var$0.$_186, var$1);
};
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt1 = null;
}
let jur_MultiLineSOLSet__init_ = ($this, $lt) => {
    jur_AbstractSet__init_($this);
    $this.$lt1 = $lt;
},
jur_MultiLineSOLSet__init_0 = var_0 => {
    let var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_(var_1, var_0);
    return var_1;
},
jur_MultiLineSOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let var$4, var$5;
    a: {
        if ($strIndex != $matchResult.$getRightBound()) {
            if (!$strIndex)
                break a;
            if ($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound())
                break a;
            var$4 = $this.$lt1;
            var$5 = $strIndex - 1 | 0;
            if (var$4.$isAfterLineTerminator($testString.$charAt(var$5), $testString.$charAt($strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next5.$matches($strIndex, $testString, $matchResult);
},
jur_MultiLineSOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_MultiLineSOLSet_getName = $this => {
    return $rt_s(843);
};
function jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree() {
    let a = this; jl_Object.call(a);
    a.$length3 = 0;
    a.$substringMap = null;
    a.$substringMapCI = null;
}
let jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree__init_0 = ($this, $length) => {
    jl_Object__init_($this);
    $this.$substringMap = ju_HashMap__init_();
    $this.$substringMapCI = ju_HashMap__init_();
    $this.$length3 = $length;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree__init_ = var_0 => {
    let var_1 = new jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree();
    jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree__init_0(var_1, var_0);
    return var_1;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree_get = ($this, $substring2, $caseSensitive) => {
    let var$3, var$4;
    if ($caseSensitive)
        return $this.$substringMap.$get1($substring2);
    var$3 = $this.$substringMapCI;
    var$4 = $substring2.$toString();
    ju_Locale_$callClinit();
    return var$3.$get1(var$4.$toLowerCase1(ju_Locale_ENGLISH));
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree_add = ($this, $newSubstring) => {
    let $idLen, var$3, $substring, $parserTree;
    $idLen = $newSubstring.$length();
    if ($idLen == $this.$length3) {
        $this.$substringMap.$put1($newSubstring, null);
        var$3 = $this.$substringMapCI;
        ju_Locale_$callClinit();
        var$3.$put1($newSubstring.$toLowerCase1(ju_Locale_ENGLISH), null);
    } else if ($idLen > $this.$length3) {
        $substring = $newSubstring.$substring(0, $this.$length3);
        $parserTree = $this.$substringMap.$get1($substring);
        if ($parserTree === null) {
            $parserTree = jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree__init_($idLen);
            $this.$substringMap.$put1($substring, $parserTree);
            var$3 = $this.$substringMapCI;
            ju_Locale_$callClinit();
            var$3.$put1($substring.$toLowerCase1(ju_Locale_ENGLISH), $parserTree);
        }
        jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree_add($parserTree, $newSubstring);
    }
},
jtz_ZoneOffsetTransitionRule$TimeDefinition = $rt_classWithoutFields(jl_Enum),
jtz_ZoneOffsetTransitionRule$TimeDefinition_UTC = null,
jtz_ZoneOffsetTransitionRule$TimeDefinition_WALL = null,
jtz_ZoneOffsetTransitionRule$TimeDefinition_STANDARD = null,
jtz_ZoneOffsetTransitionRule$TimeDefinition_$VALUES = null,
jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit = () => {
    jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit = $rt_eraseClinit(jtz_ZoneOffsetTransitionRule$TimeDefinition);
    jtz_ZoneOffsetTransitionRule$TimeDefinition__clinit_();
},
jtz_ZoneOffsetTransitionRule$TimeDefinition_values = () => {
    jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit();
    return jtz_ZoneOffsetTransitionRule$TimeDefinition_$VALUES.$clone0();
},
jtz_ZoneOffsetTransitionRule$TimeDefinition__init_0 = ($this, var$1, var$2) => {
    jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jtz_ZoneOffsetTransitionRule$TimeDefinition__init_ = (var_0, var_1) => {
    let var_2 = new jtz_ZoneOffsetTransitionRule$TimeDefinition();
    jtz_ZoneOffsetTransitionRule$TimeDefinition__init_0(var_2, var_0, var_1);
    return var_2;
},
jtz_ZoneOffsetTransitionRule$TimeDefinition_createDateTime = ($this, $dateTime, $standardOffset, $wallOffset) => {
    let $difference;
    switch (jl_Enum_ordinal($this)) {
        case 0:
            $difference = jt_ZoneOffset_getTotalSeconds($wallOffset) - jt_ZoneOffset_getTotalSeconds(jt_ZoneOffset_UTC) | 0;
            return jt_LocalDateTime_plusSeconds($dateTime, Long_fromInt($difference));
        case 2:
            $difference = jt_ZoneOffset_getTotalSeconds($wallOffset) - jt_ZoneOffset_getTotalSeconds($standardOffset) | 0;
            return jt_LocalDateTime_plusSeconds($dateTime, Long_fromInt($difference));
        default:
    }
    return $dateTime;
},
jtz_ZoneOffsetTransitionRule$TimeDefinition_$values = () => {
    let var$1, var$2;
    jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit();
    var$1 = $rt_createArray(jtz_ZoneOffsetTransitionRule$TimeDefinition, 3);
    var$2 = var$1.data;
    var$2[0] = jtz_ZoneOffsetTransitionRule$TimeDefinition_UTC;
    var$2[1] = jtz_ZoneOffsetTransitionRule$TimeDefinition_WALL;
    var$2[2] = jtz_ZoneOffsetTransitionRule$TimeDefinition_STANDARD;
    return var$1;
},
jtz_ZoneOffsetTransitionRule$TimeDefinition__clinit_ = () => {
    jtz_ZoneOffsetTransitionRule$TimeDefinition_UTC = jtz_ZoneOffsetTransitionRule$TimeDefinition__init_($rt_s(626), 0);
    jtz_ZoneOffsetTransitionRule$TimeDefinition_WALL = jtz_ZoneOffsetTransitionRule$TimeDefinition__init_($rt_s(844), 1);
    jtz_ZoneOffsetTransitionRule$TimeDefinition_STANDARD = jtz_ZoneOffsetTransitionRule$TimeDefinition__init_($rt_s(845), 2);
    jtz_ZoneOffsetTransitionRule$TimeDefinition_$VALUES = jtz_ZoneOffsetTransitionRule$TimeDefinition_$values();
},
jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyLower__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyLower__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyLower_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(97, 122);
};
function onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0() {
    let a = this; jl_Object.call(a);
    a.$_09 = null;
    a.$_13 = null;
    a.$_22 = null;
    a.$_30 = null;
}
let onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_09 = var$1;
    var$0.$_13 = var$2;
    var$0.$_22 = var$3;
    var$0.$_30 = var$4;
},
onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0();
    onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$sendCandidates$15(var$0.$_09, var$0.$_13, var$0.$_22, var$0.$_30, var$1);
};
function onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0() {
    let a = this; jl_Object.call(a);
    a.$_0128 = null;
    a.$_167 = null;
}
let onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0128 = var$1;
    var$0.$_167 = var$2;
},
onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0();
    onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0_run = var$0 => {
    onn_NostrRelay_lambda$sendMessage$8(var$0.$_0128, var$0.$_167);
};
function ju_AbstractMap$SimpleImmutableEntry() {
    let a = this; jl_Object.call(a);
    a.$key1 = null;
    a.$value7 = null;
}
let ju_AbstractMap$SimpleImmutableEntry__init_0 = ($this, $key, $value) => {
    jl_Object__init_($this);
    $this.$key1 = $key;
    $this.$value7 = $value;
},
ju_AbstractMap$SimpleImmutableEntry__init_ = (var_0, var_1) => {
    let var_2 = new ju_AbstractMap$SimpleImmutableEntry();
    ju_AbstractMap$SimpleImmutableEntry__init_0(var_2, var_0, var_1);
    return var_2;
},
ju_AbstractMap$SimpleImmutableEntry__init_1 = ($this, $entry) => {
    ju_AbstractMap$SimpleImmutableEntry__init_0($this, $entry.$getKey(), $entry.$getValue());
},
ju_AbstractMap$SimpleImmutableEntry__init_2 = var_0 => {
    let var_1 = new ju_AbstractMap$SimpleImmutableEntry();
    ju_AbstractMap$SimpleImmutableEntry__init_1(var_1, var_0);
    return var_1;
},
ju_AbstractMap$SimpleImmutableEntry_getValue = $this => {
    return $this.$value7;
},
ju_AbstractMap$SimpleImmutableEntry_getKey = $this => {
    return $this.$key1;
},
ju_AbstractMap$SimpleImmutableEntry_equals = ($this, $obj) => {
    let $entry;
    if ($this === $obj)
        return 1;
    if (!$rt_isInstance($obj, ju_Map$Entry))
        return 0;
    $entry = $obj;
    return ju_Objects_equals($this.$key1, $entry.$getKey()) && ju_Objects_equals($this.$value7, $entry.$getValue()) ? 1 : 0;
},
ju_AbstractMap$SimpleImmutableEntry_hashCode = $this => {
    return ju_Objects_hashCode($this.$key1) ^ ju_Objects_hashCode($this.$value7);
},
ju_AbstractMap$SimpleImmutableEntry_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$getKey());
    var$2 = jl_String_valueOf($this.$getValue());
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, var$1), 61), var$2);
    return jl_StringBuilder_toString(var$3);
},
jt_DateTimeException = $rt_classWithoutFields(jl_RuntimeException),
jt_DateTimeException__init_ = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jt_DateTimeException__init_0 = var_0 => {
    let var_1 = new jt_DateTimeException();
    jt_DateTimeException__init_(var_1, var_0);
    return var_1;
},
jt_DateTimeException__init_1 = ($this, $message, $cause) => {
    jl_RuntimeException__init_2($this, $message, $cause);
},
jt_DateTimeException__init_2 = (var_0, var_1) => {
    let var_2 = new jt_DateTimeException();
    jt_DateTimeException__init_1(var_2, var_0, var_1);
    return var_2;
},
jtz_ZoneRulesException = $rt_classWithoutFields(jt_DateTimeException),
jtz_ZoneRulesException__init_ = ($this, $message) => {
    jt_DateTimeException__init_($this, $message);
},
jtz_ZoneRulesException__init_0 = var_0 => {
    let var_1 = new jtz_ZoneRulesException();
    jtz_ZoneRulesException__init_(var_1, var_0);
    return var_1;
};
function otcit_DateTimeZoneBuilder$PrecalculatedZone() {
    let a = this; otcit_StorableDateTimeZone.call(a);
    a.$iTransitions = null;
    a.$iWallOffsets = null;
    a.$iStandardOffsets = null;
    a.$iTailZone = null;
}
let otcit_DateTimeZoneBuilder$PrecalculatedZone_create = ($id, $outputID, $transitions, $tailZone) => {
    let $size, $trans, $wallOffsets, $standardOffsets, $last, $i, var$11, $tr, var$13, var$14;
    $size = $transitions.$size();
    if (!$size)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $trans = $rt_createLongArray($size);
    $wallOffsets = $rt_createIntArray($size);
    $standardOffsets = $rt_createIntArray($size);
    $last = null;
    $i = 0;
    while (true) {
        if ($i >= $size) {
            var$11 = new otcit_DateTimeZoneBuilder$PrecalculatedZone;
            if (!$outputID)
                $id = $rt_s(23);
            otcit_DateTimeZoneBuilder$PrecalculatedZone__init_(var$11, $id, $trans, $wallOffsets, $standardOffsets, $tailZone);
            return var$11;
        }
        $tr = $transitions.$get($i);
        if (!otcit_DateTimeZoneBuilder$Transition_isTransitionFrom($tr, $last))
            break;
        var$13 = $standardOffsets.data;
        var$14 = $wallOffsets.data;
        $trans.data[$i] = otcit_DateTimeZoneBuilder$Transition_getMillis($tr);
        var$14[$i] = otcit_DateTimeZoneBuilder$Transition_getWallOffset($tr);
        var$13[$i] = otcit_DateTimeZoneBuilder$Transition_getStandardOffset($tr);
        $i = $i + 1 | 0;
        $last = $tr;
    }
    $rt_throw(jl_IllegalArgumentException__init_($id));
},
otcit_DateTimeZoneBuilder$PrecalculatedZone__init_ = ($this, $id, $transitions, $wallOffsets, $standardOffsets, $tailZone) => {
    otcit_StorableDateTimeZone__init_($this, $id);
    $this.$iTransitions = $transitions;
    $this.$iWallOffsets = $wallOffsets;
    $this.$iStandardOffsets = $standardOffsets;
    $this.$iTailZone = $tailZone;
},
otcit_DateTimeZoneBuilder$PrecalculatedZone__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new otcit_DateTimeZoneBuilder$PrecalculatedZone();
    otcit_DateTimeZoneBuilder$PrecalculatedZone__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
otcit_DateTimeZoneBuilder$PrecalculatedZone_readZone = ($id, $flow) => {
    let $length, $firstLongIsMin, var$5, $transitions, $wallOffsets, $standardOffsets, var$9, $i, var$11, $tailZone, $result;
    $length = otci_Base46_decodeUnsigned($flow);
    $firstLongIsMin = !($length & 1) ? 0 : 1;
    a: {
        var$5 = $length >>> 1 | 0;
        $transitions = $rt_createLongArray(var$5);
        $wallOffsets = $rt_createIntArray(var$5);
        $standardOffsets = $rt_createIntArray(var$5);
        if (!$firstLongIsMin) {
            var$9 = $transitions.data;
            var$9[0] = otcit_StorableDateTimeZone_readTime($flow);
            $i = 1;
            while (true) {
                if ($i >= var$5)
                    break a;
                var$9[$i] = Long_add(Long_add(var$9[$i - 1 | 0], otcit_StorableDateTimeZone_readTime($flow)), Long_fromInt(657000000));
                $i = $i + 1 | 0;
            }
        }
        var$9 = $transitions.data;
        var$9[0] = Long_create(0, 2147483648);
        if (var$9.length > 1) {
            var$9[1] = otcit_StorableDateTimeZone_readTime($flow);
            $i = 2;
            while ($i < var$5) {
                var$9[$i] = Long_add(Long_add(var$9[$i - 1 | 0], otcit_StorableDateTimeZone_readTime($flow)), Long_fromInt(657000000));
                $i = $i + 1 | 0;
            }
        }
    }
    otcit_StorableDateTimeZone_readTimeArray($flow, $wallOffsets);
    otcit_StorableDateTimeZone_readTimeArray($flow, $standardOffsets);
    var$9 = $flow.$characters.data;
    var$11 = $flow.$pointer;
    $flow.$pointer = var$11 + 1 | 0;
    if (var$9[var$11] != 121)
        $tailZone = null;
    else {
        $flow.$pointer = $flow.$pointer + 1 | 0;
        $tailZone = otcit_DateTimeZoneBuilder$DSTZone_readZone($id, $flow);
    }
    $result = otcit_DateTimeZoneBuilder$PrecalculatedZone__init_0($id, $transitions, $wallOffsets, $standardOffsets, $tailZone);
    if (otcit_DateTimeZoneBuilder$PrecalculatedZone_isCachable($result))
        $result = otcit_CachedDateTimeZone_forZone($result);
    return $result;
},
otcit_DateTimeZoneBuilder$PrecalculatedZone_getOffset = ($this, $instant) => {
    let $transitions, $i, var$4, var$5;
    $transitions = $this.$iTransitions;
    $i = ju_Arrays_binarySearch($transitions, $instant);
    if ($i >= 0)
        return $this.$iWallOffsets.data[$i];
    var$4 = $transitions.data;
    var$5 = $i ^ (-1);
    if (var$5 < var$4.length) {
        if (var$5 <= 0)
            return 0;
        return $this.$iWallOffsets.data[var$5 - 1 | 0];
    }
    if ($this.$iTailZone !== null)
        return otcit_DateTimeZoneBuilder$DSTZone_getOffset($this.$iTailZone, $instant);
    return $this.$iWallOffsets.data[var$5 - 1 | 0];
},
otcit_DateTimeZoneBuilder$PrecalculatedZone_getStandardOffset = ($this, $instant) => {
    let $transitions, $i, var$4, var$5;
    $transitions = $this.$iTransitions;
    $i = ju_Arrays_binarySearch($transitions, $instant);
    if ($i >= 0)
        return $this.$iStandardOffsets.data[$i];
    var$4 = $transitions.data;
    var$5 = $i ^ (-1);
    if (var$5 < var$4.length) {
        if (var$5 <= 0)
            return 0;
        return $this.$iStandardOffsets.data[var$5 - 1 | 0];
    }
    if ($this.$iTailZone !== null)
        return otcit_DateTimeZoneBuilder$DSTZone_getStandardOffset($this.$iTailZone, $instant);
    return $this.$iStandardOffsets.data[var$5 - 1 | 0];
},
otcit_DateTimeZoneBuilder$PrecalculatedZone_nextTransition = ($this, $instant) => {
    let $transitions, $i, var$4, var$5, var$6, $end;
    $transitions = $this.$iTransitions;
    $i = ju_Arrays_binarySearch($transitions, $instant);
    var$4 = $i < 0 ? $i ^ (-1) : $i + 1 | 0;
    var$5 = $transitions.data;
    var$6 = var$5.length;
    if (var$4 < var$6)
        return var$5[var$4];
    if ($this.$iTailZone === null)
        return $instant;
    $end = var$5[var$6 - 1 | 0];
    if (Long_ge($instant, $end))
        $end = $instant;
    return otcit_DateTimeZoneBuilder$DSTZone_nextTransition($this.$iTailZone, $end);
},
otcit_DateTimeZoneBuilder$PrecalculatedZone_isCachable = $this => {
    let $transitions, var$2, var$3, $distances, $count, $i, $diff, $avg, var$9;
    if ($this.$iTailZone !== null)
        return 1;
    $transitions = $this.$iTransitions;
    var$2 = $transitions.data;
    var$3 = var$2.length;
    if (var$3 <= 1)
        return 0;
    $distances = 0.0;
    $count = 0;
    $i = 1;
    while ($i < var$3) {
        $diff = Long_sub(var$2[$i], var$2[$i - 1 | 0]);
        if (Long_lt($diff, Long_create(3028857856, 14))) {
            $distances = $distances + Long_toNumber($diff);
            $count = $count + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    if ($count > 0) {
        $avg = $distances / $count;
        var$9 = $avg / 8.64E7;
        if (var$9 >= 25.0)
            return 1;
    }
    return 0;
},
otcit_DateTimeZoneBuilder$PrecalculatedZone_asZoneRules = $this => {
    let $standardTransitions, $transitions, $firstStandardOffset, $firstOffset, $time, $i, var$7, var$8, $transitionTime, var$10, var$11, var$12, $offset, $offsetInSeconds, $lastOffsetInSeconds, $offset_0, $lastRules, $count, $newOffset, var$20, $tailStandardOffset, $startRecurrenceOffset, $endRecurrenceOffset, $firstRule, $lastRule;
    $standardTransitions = ju_ArrayList__init_();
    $transitions = ju_ArrayList__init_();
    $firstStandardOffset = jt_ZoneOffset_ofTotalSeconds($this.$iStandardOffsets.data[0] / 1000 | 0);
    $firstOffset = jt_ZoneOffset_ofTotalSeconds($this.$iWallOffsets.data[0] / 1000 | 0);
    $time = Long_create(0, 2147483648);
    $i = 1;
    var$7 = $firstStandardOffset;
    var$8 = $firstOffset;
    while ($i < $this.$iTransitions.data.length) {
        $time = $this.$iTransitions.data[$i];
        $transitionTime = jt_LocalDateTime_ofEpochSecond(Long_div($time, Long_fromInt(1000)), 0, jt_ZoneOffset_UTC);
        var$10 = $this.$iStandardOffsets.data[$i];
        var$11 = $this.$iStandardOffsets.data;
        var$12 = $i - 1 | 0;
        if (var$10 == var$11[var$12])
            $offset = var$7;
        else {
            $offsetInSeconds = $this.$iStandardOffsets.data[$i] / 1000 | 0;
            $lastOffsetInSeconds = jt_ZoneOffset_getTotalSeconds(var$7);
            $offset = jt_ZoneOffset_ofTotalSeconds($offsetInSeconds);
            $standardTransitions.$add1(jtz_ZoneOffsetTransition_of(jt_LocalDateTime_plusSeconds($transitionTime, Long_fromInt($lastOffsetInSeconds)), var$7, $offset));
        }
        if ($this.$iWallOffsets.data[$i] != $this.$iWallOffsets.data[var$12]) {
            $offset_0 = jt_ZoneOffset_ofTotalSeconds($this.$iWallOffsets.data[$i] / 1000 | 0);
            $lastOffsetInSeconds = jt_ZoneOffset_getTotalSeconds(var$8);
            $transitions.$add1(jtz_ZoneOffsetTransition_of(jt_LocalDateTime_plusSeconds($transitionTime, Long_fromInt($lastOffsetInSeconds)), var$8, $offset_0));
            var$8 = $offset_0;
        }
        $i = $i + 1 | 0;
        var$7 = $offset;
    }
    if ($this.$iTailZone === null)
        $lastRules = ju_Collections_emptyList();
    else {
        a: {
            if (Long_ne($time, Long_create(0, 2147483648))) {
                $count = 0;
                while (true) {
                    if ($count >= 2)
                        break a;
                    $time = otcit_DateTimeZoneBuilder$DSTZone_nextTransition($this.$iTailZone, $time);
                    $transitionTime = jt_LocalDateTime_ofEpochSecond(Long_div($time, Long_fromInt(1000)), 0, jt_ZoneOffset_UTC);
                    $newOffset = otcit_DateTimeZoneBuilder$DSTZone_getOffset($this.$iTailZone, $time) / 1000 | 0;
                    if ($newOffset != jt_ZoneOffset_getTotalSeconds(var$8)) {
                        var$20 = jt_LocalDateTime_plusSeconds($transitionTime, Long_fromInt(jt_ZoneOffset_getTotalSeconds(var$8)));
                        var$7 = jt_ZoneOffset_ofTotalSeconds($newOffset);
                        $transitions.$add1(jtz_ZoneOffsetTransition_of(var$20, var$8, var$7));
                        $count = $count + 1 | 0;
                        var$8 = jt_ZoneOffset_ofTotalSeconds($newOffset);
                    }
                }
            }
        }
        $tailStandardOffset = jt_ZoneOffset_ofTotalSeconds($this.$iTailZone.$iStandardOffset0 / 1000 | 0);
        $startRecurrenceOffset = jt_ZoneOffset_ofTotalSeconds(($this.$iTailZone.$iStandardOffset0 + $this.$iTailZone.$iStartRecurrence.$iSaveMillis | 0) / 1000 | 0);
        $endRecurrenceOffset = jt_ZoneOffset_ofTotalSeconds(($this.$iTailZone.$iStandardOffset0 + $this.$iTailZone.$iEndRecurrence.$iSaveMillis | 0) / 1000 | 0);
        $firstRule = otcit_DateTimeZoneBuilder$PrecalculatedZone_createRule($this, $this.$iTailZone.$iStartRecurrence.$iOfYear, $tailStandardOffset, $endRecurrenceOffset, $startRecurrenceOffset);
        $lastRule = otcit_DateTimeZoneBuilder$PrecalculatedZone_createRule($this, $this.$iTailZone.$iEndRecurrence.$iOfYear, $tailStandardOffset, $startRecurrenceOffset, $endRecurrenceOffset);
        $lastRules = ju_Arrays_asList($rt_wrapArray(jtz_ZoneOffsetTransitionRule, [$firstRule, $lastRule]));
    }
    return jtz_ZoneRules_of0($firstStandardOffset, $firstOffset, $standardTransitions, $transitions, $lastRules);
},
otcit_DateTimeZoneBuilder$PrecalculatedZone_createRule = ($this, $ofYear, $standardOffset, $offsetBefore, $offsetAfter) => {
    let $millisOfDay, $midnight, $mode, $month, $dayOfMonthIndicator, var$10, var$11, var$12;
    $millisOfDay = $ofYear.$iMillisOfDay;
    $midnight = 0;
    if ($millisOfDay == 86400000) {
        $millisOfDay = 0;
        $midnight = 1;
    }
    a: {
        switch ($ofYear.$iMode) {
            case 115:
                jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit();
                $mode = jtz_ZoneOffsetTransitionRule$TimeDefinition_STANDARD;
                break a;
            case 116:
            case 118:
                break;
            case 117:
                jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit();
                $mode = jtz_ZoneOffsetTransitionRule$TimeDefinition_UTC;
                break a;
            case 119:
                jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit();
                $mode = jtz_ZoneOffsetTransitionRule$TimeDefinition_WALL;
                break a;
            default:
        }
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    $month = jt_Month_of($ofYear.$iMonthOfYear);
    $dayOfMonthIndicator = $ofYear.$iDayOfMonth;
    if ($dayOfMonthIndicator < 0 && $month !== jt_Month_FEBRUARY)
        $dayOfMonthIndicator = jt_Month_maxLength($month) - 6 | 0;
    var$10 = !$ofYear.$iDayOfWeek ? null : jt_DayOfWeek_of($ofYear.$iDayOfWeek);
    var$11 = Long_fromInt($millisOfDay / 1000 | 0);
    var$12 = jt_LocalTime_ofSecondOfDay(var$11);
    return jtz_ZoneOffsetTransitionRule_of($month, $dayOfMonthIndicator, var$10, var$12, $midnight, $mode, $standardOffset, $offsetBefore, $offsetAfter);
};
function onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1() {
    jl_Object.call(this);
    this.$_0103 = null;
}
let onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0103 = var$1;
},
onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1();
    onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1_apply = (var$0, var$1) => {
    return onpt_TeaVMPlatform$1_lambda$compose$3(var$0.$_0103, var$1);
},
jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaTitleCase__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaTitleCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaTitleCase_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaTitleCase$1__init_0($this);
},
jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet),
jur_PreviousMatch__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_PreviousMatch__init_0 = () => {
    let var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_(var_0);
    return var_0;
},
jur_PreviousMatch_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex != $matchResult.$getPreviousMatchEnd())
        return (-1);
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_PreviousMatch_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PreviousMatch_getName = $this => {
    return $rt_s(846);
};
function onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0() {
    jl_Object.call(this);
    this.$_0166 = null;
}
let onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0166 = var$1;
},
onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0();
    onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0_accept0 = (var$0, var$1) => {
    onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0_accept(var$0, var$1);
},
onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0_accept = (var$0, var$1) => {
    onpt_TeaVMPlatform$1_lambda$compose$2(var$0.$_0166, var$1);
},
onnu_Bech32$Bech32InvalidChecksumException = $rt_classWithoutFields(onnu_Bech32$Bech32Exception),
onnu_Bech32$Bech32InvalidChecksumException__init_ = ($this, $message) => {
    onnu_Bech32$Bech32Exception__init_($this, $message);
},
onnu_Bech32$Bech32InvalidChecksumException__init_0 = var_0 => {
    let var_1 = new onnu_Bech32$Bech32InvalidChecksumException();
    onnu_Bech32$Bech32InvalidChecksumException__init_(var_1, var_0);
    return var_1;
};
function onns_SdanActionType() {
    jl_Enum.call(this);
    this.$value11 = null;
}
let onns_SdanActionType_LINK = null,
onns_SdanActionType_VIEW = null,
onns_SdanActionType_CONVERSION = null,
onns_SdanActionType_ATTENTION = null,
onns_SdanActionType_$VALUES = null,
onns_SdanActionType_$callClinit = () => {
    onns_SdanActionType_$callClinit = $rt_eraseClinit(onns_SdanActionType);
    onns_SdanActionType__clinit_();
},
onns_SdanActionType_values = () => {
    onns_SdanActionType_$callClinit();
    return onns_SdanActionType_$VALUES.$clone0();
},
onns_SdanActionType_valueOf = $name => {
    onns_SdanActionType_$callClinit();
    return jl_Enum_valueOf($rt_cls(onns_SdanActionType), $name);
},
onns_SdanActionType__init_0 = ($this, var$1, var$2, $value) => {
    onns_SdanActionType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value11 = $value;
},
onns_SdanActionType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onns_SdanActionType();
    onns_SdanActionType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_SdanActionType_getValue = $this => {
    return $this.$value11;
},
onns_SdanActionType_fromValue = $value => {
    let var$2, var$3, var$4, var$5, var$6, $type;
    onns_SdanActionType_$callClinit();
    var$2 = (onns_SdanActionType_values()).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            var$5 = new jl_IllegalArgumentException;
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(847)), $value);
            jl_IllegalArgumentException__init_1(var$5, jl_StringBuilder_toString(var$6));
            $rt_throw(var$5);
        }
        $type = var$2[var$4];
        if ($type.$value11.$equalsIgnoreCase($value))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $type;
},
onns_SdanActionType_$values = () => {
    let var$1, var$2;
    onns_SdanActionType_$callClinit();
    var$1 = $rt_createArray(onns_SdanActionType, 4);
    var$2 = var$1.data;
    var$2[0] = onns_SdanActionType_LINK;
    var$2[1] = onns_SdanActionType_VIEW;
    var$2[2] = onns_SdanActionType_CONVERSION;
    var$2[3] = onns_SdanActionType_ATTENTION;
    return var$1;
},
onns_SdanActionType__clinit_ = () => {
    onns_SdanActionType_LINK = onns_SdanActionType__init_($rt_s(848), 0, $rt_s(849));
    onns_SdanActionType_VIEW = onns_SdanActionType__init_($rt_s(850), 1, $rt_s(851));
    onns_SdanActionType_CONVERSION = onns_SdanActionType__init_($rt_s(852), 2, $rt_s(853));
    onns_SdanActionType_ATTENTION = onns_SdanActionType__init_($rt_s(854), 3, $rt_s(855));
    onns_SdanActionType_$VALUES = onns_SdanActionType_$values();
},
onns_SdanActionType__init_$exported$0 = (var$1, var$2, var$3) => {
    onns_SdanActionType_$callClinit();
    return onns_SdanActionType__init_($rt_str(var$1), var$2, $rt_str(var$3));
},
onns_SdanActionType_getValue$exported$1 = var$1 => {
    onns_SdanActionType_$callClinit();
    return $rt_ustr(onns_SdanActionType_getValue(var$1));
},
onns_SdanActionType_values$exported$0 = () => {
    onns_SdanActionType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanActionType_values());
},
onns_SdanActionType_valueOf$exported$1 = var$1 => {
    onns_SdanActionType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_SdanActionType_valueOf($rt_str(var$1));
},
onns_SdanActionType_fromValue$exported$2 = var$1 => {
    onns_SdanActionType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_SdanActionType_fromValue($rt_str(var$1));
},
onns_SdanActionType_$values$exported$3 = () => {
    onns_SdanActionType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanActionType_$values());
},
cjj_Checksum = $rt_classWithoutFields(0);
function cjj_Adler32() {
    let a = this; jl_Object.call(a);
    a.$s1 = Long_ZERO;
    a.$s2 = Long_ZERO;
}
let cjj_Adler32__init_ = $this => {
    jl_Object__init_($this);
    $this.$s1 = Long_fromInt(1);
    $this.$s2 = Long_ZERO;
},
cjj_Adler32__init_0 = () => {
    let var_0 = new cjj_Adler32();
    cjj_Adler32__init_(var_0);
    return var_0;
},
cjj_Adler32_reset = ($this, $init) => {
    $this.$s1 = Long_and($init, Long_fromInt(65535));
    $this.$s2 = Long_and(Long_shr($init, 16), Long_fromInt(65535));
},
cjj_Adler32_reset0 = $this => {
    $this.$s1 = Long_fromInt(1);
    $this.$s2 = Long_ZERO;
},
cjj_Adler32_getValue = $this => {
    return Long_or(Long_shl($this.$s2, 16), $this.$s1);
},
cjj_Adler32_update = ($this, $buf, $index, $len) => {
    let var$4, $len1, $len2, var$7, $k, var$9, var$10, var$11;
    if ($len == 1) {
        var$4 = $buf.data;
        $this.$s1 = Long_add($this.$s1, Long_fromInt(var$4[$index] & 255));
        $this.$s2 = Long_add($this.$s2, $this.$s1);
        $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
        $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
        return;
    }
    $len1 = $len / 5552 | 0;
    $len2 = $len % 5552 | 0;
    while (true) {
        var$7 = $len1 + (-1) | 0;
        if ($len1 <= 0)
            break;
        $k = 5552;
        while (true) {
            var$9 = $k + (-1) | 0;
            if ($k <= 0)
                break;
            var$4 = $buf.data;
            var$10 = $this.$s1;
            var$11 = $index + 1 | 0;
            $this.$s1 = Long_add(var$10, Long_fromInt(var$4[$index] & 255));
            $this.$s2 = Long_add($this.$s2, $this.$s1);
            $k = var$9;
            $index = var$11;
        }
        $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
        $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
        $len1 = var$7;
    }
    while (true) {
        var$11 = $len2 + (-1) | 0;
        if ($len2 <= 0)
            break;
        var$4 = $buf.data;
        var$10 = $this.$s1;
        var$7 = $index + 1 | 0;
        $this.$s1 = Long_add(var$10, Long_fromInt(var$4[$index] & 255));
        $this.$s2 = Long_add($this.$s2, $this.$s1);
        $len2 = var$11;
        $index = var$7;
    }
    $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
    $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
},
jur_NonCapFSet = $rt_classWithoutFields(jur_FSet),
jur_NonCapFSet__init_ = ($this, $groupIndex) => {
    jur_FSet__init_($this, $groupIndex);
},
jur_NonCapFSet__init_0 = var_0 => {
    let var_1 = new jur_NonCapFSet();
    jur_NonCapFSet__init_(var_1, var_0);
    return var_1;
},
jur_NonCapFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_NonCapFSet_getName = $this => {
    return $rt_s(856);
},
jur_NonCapFSet_hasConsumed = ($this, $mr) => {
    return 0;
};
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
let jur_UCISupplCharSet__init_ = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$charCount0 = 2;
    $this.$ch2 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
},
jur_UCISupplCharSet__init_0 = var_0 => {
    let var_1 = new jur_UCISupplCharSet();
    jur_UCISupplCharSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$ch2 != jl_Character_toLowerCase0(jl_Character_toUpperCase0(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
},
jur_UCISupplCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jl_String__init_(jl_Character_toChars($this.$ch2));
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(857)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jur_AbstractCharClass$LazyRange() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start7 = 0;
    a.$end5 = 0;
}
let jur_AbstractCharClass$LazyRange__init_0 = ($this, $start, $end) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$start7 = $start;
    $this.$end5 = $end;
},
jur_AbstractCharClass$LazyRange__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyRange_computeValue = $this => {
    let $chCl;
    $chCl = (jur_CharClass__init_()).$add0($this.$start7, $this.$end5);
    return $chCl;
},
jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_AltQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_AltQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AltQuantifierSet();
    jur_AltQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next5.$matches($stringIndex, $testString, $matchResult);
    return $shift;
},
jur_AltQuantifierSet_setNext = ($this, $next) => {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
};
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$042 = null;
}
let jur_AbstractCharClass$LazyJavaLowerCase$1__init_ = ($this, $this$0) => {
    $this.$this$042 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLowerCase$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaLowerCase$1();
    jur_AbstractCharClass$LazyJavaLowerCase$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaLowerCase$1_contains = ($this, $ch) => {
    return jl_Character_isLowerCase($ch);
};
function onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0() {
    let a = this; jl_Object.call(a);
    a.$_080 = null;
    a.$_146 = null;
    a.$_221 = null;
}
let onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_080 = var$1;
    var$0.$_146 = var$2;
    var$0.$_221 = var$3;
},
onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0();
    onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0_accept = (var$0, var$1) => {
    onpt_TeaVMPlatform$1_lambda$then$0(var$0.$_080, var$0.$_146, var$0.$_221, var$1);
};
function otcit_FixedDateTimeZone() {
    let a = this; otcit_StorableDateTimeZone.call(a);
    a.$iWallOffset0 = 0;
    a.$iStandardOffset2 = 0;
}
let otcit_FixedDateTimeZone__init_0 = ($this, $id, $wallOffset, $standardOffset) => {
    otcit_StorableDateTimeZone__init_($this, $id);
    $this.$iWallOffset0 = $wallOffset;
    $this.$iStandardOffset2 = $standardOffset;
},
otcit_FixedDateTimeZone__init_ = (var_0, var_1, var_2) => {
    let var_3 = new otcit_FixedDateTimeZone();
    otcit_FixedDateTimeZone__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
otcit_FixedDateTimeZone_getOffset = ($this, $instant) => {
    return $this.$iWallOffset0;
},
otcit_FixedDateTimeZone_getStandardOffset = ($this, $instant) => {
    return $this.$iStandardOffset2;
},
otcit_FixedDateTimeZone_readZone = ($id, $flow) => {
    let $wallOffset, $standardOffset;
    $wallOffset = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
    $standardOffset = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
    return otcit_FixedDateTimeZone__init_($id, $wallOffset, $standardOffset);
},
otcit_FixedDateTimeZone_asZoneRules = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    if ($this.$iWallOffset0 == $this.$iStandardOffset2)
        return jtz_ZoneRules_of(jt_ZoneOffset_ofTotalSeconds($this.$iStandardOffset2 / 1000 | 0));
    var$1 = $this.$iStandardOffset2 / 1000 | 0;
    var$2 = jt_ZoneOffset_ofTotalSeconds(var$1);
    var$1 = $this.$iWallOffset0 / 1000 | 0;
    var$3 = jt_ZoneOffset_ofTotalSeconds(var$1);
    var$4 = ju_Collections_emptyList();
    var$5 = ju_Collections_emptyList();
    var$6 = ju_Collections_emptyList();
    return jtz_ZoneRules_of0(var$2, var$3, var$4, var$5, var$6);
};
function onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1() {
    jl_Object.call(this);
    this.$_058 = null;
}
let onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_058 = var$1;
},
onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1();
    onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1_accept0 = (var$0, var$1) => {
    onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1_accept(var$0, var$1);
},
onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1_accept = (var$0, var$1) => {
    var$0.$_058.$accept0(var$1);
};
function onnu_ByteBufferList() {
    ju_AbstractList.call(this);
    this.$buffer0 = null;
}
let onnu_ByteBufferList__init_0 = ($this, $buffer) => {
    ju_AbstractList__init_($this);
    $this.$buffer0 = $buffer;
},
onnu_ByteBufferList__init_ = var_0 => {
    let var_1 = new onnu_ByteBufferList();
    onnu_ByteBufferList__init_0(var_1, var_0);
    return var_1;
},
onnu_ByteBufferList_get = ($this, $index) => {
    return jl_Byte_valueOf($this.$buffer0.$get6($index));
},
onnu_ByteBufferList_size = $this => {
    return jn_Buffer_limit($this.$buffer0);
},
onnu_ByteBufferList_get0 = ($this, var$1) => {
    return $this.$get18(var$1);
},
onnu_ByteBufferList_get$exported$0 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return otji_JSWrapper_javaToJs(var$1.$get(var$3));
},
onnu_ByteBufferList_get$exported$1 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return var$1.$get18(var$3);
},
onnu_ByteBufferList_size$exported$2 = var$1 => {
    return var$1.$size();
},
onnu_ByteBufferList__init_$exported$3 = var$1 => {
    return onnu_ByteBufferList__init_(var$1);
};
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_0138 = null;
}
let jl_Object$monitorExit$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0138 = var$1;
},
jl_Object$monitorExit$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new jl_Object$monitorExit$lambda$_8_0();
    jl_Object$monitorExit$lambda$_8_0__init_(var_1, var_0);
    return var_1;
},
jl_Object$monitorExit$lambda$_8_0_run = var$0 => {
    jl_Object_lambda$monitorExit$2(var$0.$_0138);
},
jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet),
jur_UCISupplRangeSet__init_ = ($this, $cc) => {
    jur_SupplRangeSet__init_($this, $cc);
},
jur_UCISupplRangeSet__init_0 = var_0 => {
    let var_1 = new jur_UCISupplRangeSet();
    jur_UCISupplRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars.$contains0(jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch)));
},
jur_UCISupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(858)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
};
function onnn_ExternalIdentity() {
    let a = this; jl_Object.call(a);
    a.$platform = null;
    a.$identity0 = null;
    a.$proof = null;
}
let onnn_ExternalIdentity__init_ = ($this, $platform, $identity, $proof) => {
    let var$4, var$5;
    jl_Object__init_($this);
    if (!onnn_Nip39_isValidPlatform($platform)) {
        var$4 = new jl_IllegalArgumentException;
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(859)), $platform);
        jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
        $rt_throw(var$4);
    }
    $this.$platform = $platform;
    $this.$identity0 = $identity;
    if ($proof === null)
        $proof = ju_List_of();
    $this.$proof = $proof;
},
onnn_ExternalIdentity_getPlatform = $this => {
    return $this.$platform;
},
onnn_ExternalIdentity_getIdentity = $this => {
    return $this.$identity0;
},
onnn_ExternalIdentity_getProof = $this => {
    return $this.$proof;
},
onnn_ExternalIdentity_toString = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$platform;
    var$2 = $this.$identity0;
    var$3 = jl_String_valueOf($this.$proof);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(860)), var$1), $rt_s(861)), var$2), $rt_s(862)), var$3), 125);
    return jl_StringBuilder_toString(var$4);
},
onnn_ExternalIdentity_equals = ($this, $obj) => {
    let $that;
    if ($this === $obj)
        return 1;
    if ($obj !== null && jl_Object_getClass($this) === jl_Object_getClass($obj)) {
        $that = $obj;
        if (!$this.$platform.$equals($that.$platform))
            return 0;
        if (!$this.$identity0.$equals($that.$identity0))
            return 0;
        return $this.$proof.$equals($that.$proof);
    }
    return 0;
},
onnn_ExternalIdentity_hashCode = $this => {
    let $result, var$2;
    $result = $this.$platform.$hashCode();
    var$2 = (31 * $result | 0) + $this.$identity0.$hashCode() | 0;
    var$2 = (31 * var$2 | 0) + $this.$proof.$hashCode() | 0;
    return var$2;
},
onnn_GenericIdentity = $rt_classWithoutFields(onnn_ExternalIdentity),
onnn_GenericIdentity__init_0 = ($this, $platform, $identity, $proof) => {
    onnn_ExternalIdentity__init_($this, $platform, $identity, $proof);
},
onnn_GenericIdentity__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onnn_GenericIdentity();
    onnn_GenericIdentity__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jl_Void = $rt_classWithoutFields(),
onpt_RTCTransportListener = $rt_classWithoutFields(0),
jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyPunct__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyPunct__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPunct_computeValue = $this => {
    return (((jur_CharClass__init_()).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
},
onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0 = $rt_classWithoutFields(),
onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0__init_0 = () => {
    let var_0 = new onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0();
    onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0__init_(var_0);
    return var_0;
},
onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0_accept0 = (var$0, var$1, var$2) => {
    onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0_accept(var$0, var$1, var$2);
},
onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0_accept = (var$0, var$1, var$2) => {
    onnrs_NostrRTCSignaling_lambda$start$6(var$1, var$2);
};
function onn_NostrSubscription$NostrSubCloseMessage() {
    let a = this; onnp_NostrMessage.call(a);
    a.$fragments = null;
    a.$id7 = null;
}
let onn_NostrSubscription$NostrSubCloseMessage__init_ = ($this, $id) => {
    onnp_NostrMessage__init_($this);
    $this.$id7 = $id;
},
onn_NostrSubscription$NostrSubCloseMessage__init_0 = var_0 => {
    let var_1 = new onn_NostrSubscription$NostrSubCloseMessage();
    onn_NostrSubscription$NostrSubCloseMessage__init_(var_1, var_0);
    return var_1;
},
onn_NostrSubscription$NostrSubCloseMessage_getId = $this => {
    return $this.$id7;
},
onn_NostrSubscription$NostrSubCloseMessage_getPrefix = $this => {
    return $rt_s(863);
},
onn_NostrSubscription$NostrSubCloseMessage_getFragments = $this => {
    if ($this.$fragments !== null)
        return $this.$fragments;
    $this.$fragments = ju_ArrayList__init_1(1);
    $this.$fragments.$add1($this.$id7);
    return $this.$fragments;
},
onn_NostrSubscription$NostrSubCloseMessage_getId$exported$0 = var$1 => {
    return $rt_ustr(onn_NostrSubscription$NostrSubCloseMessage_getId(var$1));
},
onn_NostrSubscription$NostrSubCloseMessage__init_$exported$1 = var$1 => {
    return onn_NostrSubscription$NostrSubCloseMessage__init_0($rt_str(var$1));
};
function otcit_CachedDateTimeZone$Info() {
    let a = this; jl_Object.call(a);
    a.$iPeriodStart = Long_ZERO;
    a.$iZoneRef = null;
    a.$iNextInfo = null;
    a.$iOffset = 0;
    a.$iStandardOffset3 = 0;
}
let otcit_CachedDateTimeZone$Info__init_ = ($this, $zone, $periodStart) => {
    jl_Object__init_($this);
    $this.$iOffset = (-2147483648);
    $this.$iStandardOffset3 = (-2147483648);
    $this.$iPeriodStart = $periodStart;
    $this.$iZoneRef = $zone;
},
otcit_CachedDateTimeZone$Info__init_0 = (var_0, var_1) => {
    let var_2 = new otcit_CachedDateTimeZone$Info();
    otcit_CachedDateTimeZone$Info__init_(var_2, var_0, var_1);
    return var_2;
},
otcit_CachedDateTimeZone$Info_getOffset = ($this, $millis) => {
    if ($this.$iNextInfo !== null && Long_ge($millis, $this.$iNextInfo.$iPeriodStart))
        return otcit_CachedDateTimeZone$Info_getOffset($this.$iNextInfo, $millis);
    if ($this.$iOffset == (-2147483648))
        $this.$iOffset = $this.$iZoneRef.$getOffset($this.$iPeriodStart);
    return $this.$iOffset;
},
otcit_CachedDateTimeZone$Info_getStandardOffset = ($this, $millis) => {
    if ($this.$iNextInfo !== null && Long_ge($millis, $this.$iNextInfo.$iPeriodStart))
        return otcit_CachedDateTimeZone$Info_getStandardOffset($this.$iNextInfo, $millis);
    if ($this.$iStandardOffset3 == (-2147483648))
        $this.$iStandardOffset3 = $this.$iZoneRef.$getStandardOffset($this.$iPeriodStart);
    return $this.$iStandardOffset3;
},
jn_URLStreamHandler = $rt_classWithoutFields(),
jn_URLStreamHandler__init_ = $this => {
    jl_Object__init_($this);
},
jn_URLStreamHandler_parseURL = ($this, $u, $str, $start, $end) => {
    let $parseString, var$6, $questionMarkIndex, $host, $port, $ref, $file, $query, $authority, $userInfo, $refIdx, $hostIdx, var$17, var$18, $userIdx, $portIdx, $endOfIPv6Addr, var$22, var$23, $c, $portString, $fileEnd, $queryIdx, $canonicalize, $last, var$30, var$31, var$32, $$je;
    if ($end >= $start && $end >= 0) {
        $parseString = $str.$substring($start, $end);
        var$6 = $end - $start | 0;
        $questionMarkIndex = 0;
        $host = jn_URL_getHost($u);
        $port = jn_URL_getPort($u);
        $ref = jn_URL_getRef($u);
        $file = jn_URL_getPath($u);
        $query = jn_URL_getQuery($u);
        $authority = jn_URL_getAuthority($u);
        $userInfo = jn_URL_getUserInfo($u);
        $refIdx = $parseString.$indexOf0(35, 0);
        if ($parseString.$startsWith($rt_s(864)) && !$parseString.$startsWith($rt_s(865))) {
            $hostIdx = 2;
            $port = (-1);
            var$17 = $parseString.$indexOf0(47, $hostIdx);
            $questionMarkIndex = $parseString.$indexOf0(63, $hostIdx);
            if ($questionMarkIndex == (-1))
                $questionMarkIndex = var$17;
            else if (var$17 != (-1) && var$17 <= $questionMarkIndex)
                $questionMarkIndex = var$17;
            if ($questionMarkIndex == (-1)) {
                $file = $rt_s(23);
                $questionMarkIndex = var$6;
            }
            var$18 = $refIdx == (-1) ? $questionMarkIndex : $refIdx < $questionMarkIndex ? $refIdx : $questionMarkIndex;
            $userIdx = $parseString.$lastIndexOf0(64, var$18);
            $authority = $parseString.$substring($hostIdx, var$18);
            var$17 = $rt_compare($userIdx, (-1));
            if (var$17 > 0) {
                $userInfo = $parseString.$substring($hostIdx, $userIdx);
                $hostIdx = $userIdx + 1 | 0;
            }
            if (!var$17)
                $userIdx = $hostIdx;
            a: {
                $portIdx = $parseString.$indexOf0(58, $userIdx);
                $endOfIPv6Addr = $parseString.$indexOf(93);
                if ($endOfIPv6Addr == (-1))
                    var$22 = $portIdx;
                else {
                    try {
                        var$23 = $portIdx;
                        var$17 = $parseString.$length();
                        var$22 = $endOfIPv6Addr + 1 | 0;
                        if (var$17 <= var$22) {
                            var$23 = $portIdx;
                            var$22 = (-1);
                            var$23 = var$22;
                        } else {
                            var$23 = $portIdx;
                            $c = $parseString.$charAt(var$22);
                            if ($c == 58) {
                                var$23 = var$22;
                                var$23 = $portIdx;
                            } else {
                                var$23 = $portIdx;
                                var$22 = (-1);
                                var$23 = var$22;
                            }
                            var$23 = var$22;
                        }
                        break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                        } else {
                            throw $$e;
                        }
                    }
                    var$22 = var$23;
                }
            }
            if (var$22 != (-1) && var$22 <= $questionMarkIndex) {
                $host = $parseString.$substring($hostIdx, var$22);
                $portString = $parseString.$substring(var$22 + 1 | 0, var$18);
                if (!$portString.$isEmpty())
                    $port = jl_Integer_parseInt($portString);
            } else
                $host = $parseString.$substring($hostIdx, var$18);
        }
        var$17 = $rt_compare($refIdx, (-1));
        if (var$17 > 0)
            $ref = $parseString.$substring($refIdx + 1 | 0, var$6);
        $fileEnd = var$17 ? $refIdx : var$6;
        $queryIdx = $parseString.$lastIndexOf0(63, $fileEnd);
        $canonicalize = 0;
        if ($queryIdx <= (-1)) {
            if (!$refIdx)
                $queryIdx = $fileEnd;
            else {
                $query = null;
                $queryIdx = $fileEnd;
            }
        } else {
            $query = $parseString.$substring($queryIdx + 1 | 0, $fileEnd);
            if (!$queryIdx && $file !== null) {
                if ($file.$equals($rt_s(23)))
                    $file = $rt_s(469);
                else if ($file.$startsWith($rt_s(469)))
                    $canonicalize = 1;
                $last = $file.$lastIndexOf(47) + 1 | 0;
                $file = $file.$substring(0, $last);
            }
        }
        if ($questionMarkIndex > (-1)) {
            if ($questionMarkIndex < var$6 && $parseString.$charAt($questionMarkIndex) == 47)
                $file = $parseString.$substring($questionMarkIndex, $queryIdx);
            else if ($queryIdx > $questionMarkIndex) {
                if ($file === null)
                    $file = $rt_s(23);
                else if ($file.$equals($rt_s(23)))
                    $file = $rt_s(469);
                else if ($file.$startsWith($rt_s(469)))
                    $canonicalize = 1;
                $last = $file.$lastIndexOf(47) + 1 | 0;
                if (!$last)
                    $file = $parseString.$substring($questionMarkIndex, $queryIdx);
                else {
                    var$30 = $file.$substring(0, $last);
                    var$31 = $parseString.$substring($questionMarkIndex, $queryIdx);
                    var$32 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$32, var$30), var$31);
                    $file = jl_StringBuilder_toString(var$32);
                }
            }
        }
        if ($file === null)
            $file = $rt_s(23);
        if ($host === null)
            $host = $rt_s(23);
        if ($canonicalize)
            $file = jn_URLStreamHandler_canonicalizePath($file);
        $this.$setURL($u, jn_URL_getProtocol($u), $host, $port, $authority, $userInfo, $file, $query, $ref);
        return;
    }
    b: {
        if ($end <= (-2147483647)) {
            if ($start >= $str.$length())
                break b;
            if ($start < 0)
                break b;
        }
        if (!($str.$startsWith0($rt_s(864), $start) && $str.$indexOf0(47, $start + 2 | 0) == (-1)))
            return;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_2($end));
},
jn_URLStreamHandler_canonicalizePath = $path => {
    let $dirIndex, var$3, var$4, var$5, var$6;
    while (true) {
        $dirIndex = $path.$indexOf5($rt_s(866));
        if ($dirIndex < 0)
            break;
        var$3 = $path.$substring(0, $dirIndex + 1 | 0);
        var$4 = $path.$substring0($dirIndex + 3 | 0);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$3), var$4);
        $path = jl_StringBuilder_toString(var$5);
    }
    if ($path.$endsWith($rt_s(867)))
        $path = $path.$substring(0, $path.$length() - 1 | 0);
    while (true) {
        var$6 = $path.$indexOf5($rt_s(868));
        if (var$6 < 0)
            break;
        if (!var$6) {
            $path = $path.$substring0(3);
            continue;
        }
        var$3 = $path.$substring(0, $path.$lastIndexOf0(47, var$6 - 1 | 0));
        var$4 = $path.$substring0(var$6 + 3 | 0);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$3), var$4);
        $path = jl_StringBuilder_toString(var$5);
    }
    if ($path.$endsWith($rt_s(869)) && $path.$length() > 3)
        $path = $path.$substring(0, $path.$lastIndexOf0(47, $path.$length() - 4 | 0) + 1 | 0);
    return $path;
},
jn_URLStreamHandler_setURL = ($this, $u, $protocol, $host, $port, $authority, $userInfo, $file, $query, $ref) => {
    jn_URL_set($u, $protocol, $host, $port, $authority, $userInfo, $file, $query, $ref);
};
function jni_DummyStreamHandler() {
    jn_URLStreamHandler.call(this);
    this.$defaultPort = 0;
}
let jni_DummyStreamHandler__init_ = ($this, $defaultPort) => {
    jn_URLStreamHandler__init_($this);
    $this.$defaultPort = $defaultPort;
},
jni_DummyStreamHandler__init_0 = var_0 => {
    let var_1 = new jni_DummyStreamHandler();
    jni_DummyStreamHandler__init_(var_1, var_0);
    return var_1;
},
jtt_TemporalAdjusters = $rt_classWithoutFields(),
jtt_TemporalAdjusters_nextOrSame = $dayOfWeek => {
    return jtt_TemporalAdjusters$RelativeDayOfWeek__init_(0, $dayOfWeek);
},
jtt_TemporalAdjusters_previousOrSame = $dayOfWeek => {
    return jtt_TemporalAdjusters$RelativeDayOfWeek__init_(1, $dayOfWeek);
};
function onn_NostrSubscription$callEoseListeners$lambda$_14_0() {
    let a = this; jl_Object.call(a);
    a.$_00 = null;
    a.$_1 = 0;
}
let onn_NostrSubscription$callEoseListeners$lambda$_14_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_00 = var$1;
    var$0.$_1 = var$2;
},
onn_NostrSubscription$callEoseListeners$lambda$_14_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrSubscription$callEoseListeners$lambda$_14_0();
    onn_NostrSubscription$callEoseListeners$lambda$_14_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrSubscription$callEoseListeners$lambda$_14_0_call = var$0 => {
    return onn_NostrSubscription_lambda$callEoseListeners$1(var$0.$_00, var$0.$_1);
},
otjc_JSBoolean = $rt_classWithoutFields();
function onn_NostrSubscription$callEoseListeners$lambda$_14_1() {
    jl_Object.call(this);
    this.$_0164 = null;
}
let onn_NostrSubscription$callEoseListeners$lambda$_14_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0164 = var$1;
},
onn_NostrSubscription$callEoseListeners$lambda$_14_1__init_0 = var_0 => {
    let var_1 = new onn_NostrSubscription$callEoseListeners$lambda$_14_1();
    onn_NostrSubscription$callEoseListeners$lambda$_14_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrSubscription$callEoseListeners$lambda$_14_1_accept0 = (var$0, var$1) => {
    onn_NostrSubscription$callEoseListeners$lambda$_14_1_accept(var$0, var$1);
},
onn_NostrSubscription$callEoseListeners$lambda$_14_1_accept = (var$0, var$1) => {
    onn_NostrSubscription_lambda$callEoseListeners$2(var$0.$_0164, var$1);
};
function onns_NostrNIP46Signer$loop$lambda$_3_0() {
    jl_Object.call(this);
    this.$_0112 = null;
}
let onns_NostrNIP46Signer$loop$lambda$_3_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0112 = var$1;
},
onns_NostrNIP46Signer$loop$lambda$_3_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$loop$lambda$_3_0();
    onns_NostrNIP46Signer$loop$lambda$_3_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$loop$lambda$_3_0_call = var$0 => {
    return onns_NostrNIP46Signer_lambda$loop$0(var$0.$_0112);
},
jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpace__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazySpace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpace_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(9, 13)).$add(32);
};
function ju_HashMap$1() {
    ju_AbstractSet.call(this);
    this.$this$06 = null;
}
let ju_HashMap$1__init_ = ($this, $this$0) => {
    $this.$this$06 = $this$0;
    ju_AbstractSet__init_($this);
},
ju_HashMap$1__init_0 = var_0 => {
    let var_1 = new ju_HashMap$1();
    ju_HashMap$1__init_(var_1, var_0);
    return var_1;
},
ju_HashMap$1_contains = ($this, $object) => {
    return $this.$this$06.$containsKey($object);
},
ju_HashMap$1_size = $this => {
    return $this.$this$06.$size();
},
ju_HashMap$1_iterator = $this => {
    return ju_HashMap$KeyIterator__init_0($this.$this$06);
};
function ju_HashMap$2() {
    ju_AbstractCollection.call(this);
    this.$this$010 = null;
}
let ju_HashMap$2__init_ = ($this, $this$0) => {
    $this.$this$010 = $this$0;
    ju_AbstractCollection__init_($this);
},
ju_HashMap$2__init_0 = var_0 => {
    let var_1 = new ju_HashMap$2();
    ju_HashMap$2__init_(var_1, var_0);
    return var_1;
},
ju_HashMap$2_size = $this => {
    return $this.$this$010.$size();
},
ju_HashMap$2_iterator = $this => {
    return ju_HashMap$ValueIterator__init_0($this.$this$010);
},
jm_Elementary = $rt_classWithoutFields(),
jm_Elementary_compareArrays = ($a, $b, $size) => {
    let $i, var$5, var$6, var$7;
    $i = $size - 1 | 0;
    while ($i >= 0) {
        var$5 = $b.data;
        if ($a.data[$i] != var$5[$i])
            break;
        $i = $i + (-1) | 0;
    }
    if ($i < 0)
        var$6 = 0;
    else {
        var$7 = $b.data;
        var$6 = Long_ge(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0))) ? 1 : (-1);
    }
    return var$6;
},
jm_Elementary_add0 = ($op1, $op2) => {
    let $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, $res, $valueLo, $valueHi, $resDigits, var$13, $cmp, var$15, $res_0;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op1Sign)
        return $op2;
    if (!$op2Sign)
        return $op1;
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits0.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits0.data[0]), Long_create(4294967295, 0));
        if ($op1Sign != $op2Sign)
            return jm_BigInteger_valueOf($op1Sign >= 0 ? Long_sub($a, $b) : Long_sub($b, $a));
        $res = Long_add($a, $b);
        $valueLo = Long_lo($res);
        $valueHi = Long_hi($res);
        return !$valueHi ? jm_BigInteger__init_0($op1Sign, $valueLo) : jm_BigInteger__init_($op1Sign, 2, $rt_createIntArrayFromData([$valueLo, $valueHi]));
    }
    if ($op1Sign == $op2Sign)
        $resDigits = $op1Len < $op2Len ? jm_Elementary_add($op2.$digits0, $op2Len, $op1.$digits0, $op1Len) : jm_Elementary_add($op1.$digits0, $op1Len, $op2.$digits0, $op2Len);
    else {
        var$13 = $rt_compare($op1Len, $op2Len);
        $cmp = !var$13 ? jm_Elementary_compareArrays($op1.$digits0, $op2.$digits0, $op1Len) : var$13 <= 0 ? (-1) : 1;
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        if ($cmp != 1) {
            $resDigits = jm_Elementary_subtract($op2.$digits0, $op2Len, $op1.$digits0, $op1Len);
            $op1Sign = $op2Sign;
        } else
            $resDigits = jm_Elementary_subtract($op1.$digits0, $op1Len, $op2.$digits0, $op2Len);
    }
    var$15 = $resDigits.data;
    $res_0 = jm_BigInteger__init_($op1Sign, var$15.length, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($res_0);
    return $res_0;
},
jm_Elementary_add1 = ($res, $a, $aSize, $b, $bSize) => {
    let var$6, var$7, var$8, $carry, var$10, $i, var$12;
    var$6 = $res.data;
    var$7 = $b.data;
    var$8 = $a.data;
    $carry = Long_add(Long_and(Long_fromInt(var$8[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[0]), Long_create(4294967295, 0)));
    var$6[0] = Long_lo($carry);
    var$10 = Long_shr($carry, 32);
    if ($aSize < $bSize) {
        $i = 1;
        while ($i < $aSize) {
            var$12 = Long_add(var$10, Long_add(Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $bSize) {
            var$12 = Long_add(var$10, Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
    } else {
        $i = 1;
        while ($i < $bSize) {
            var$12 = Long_add(var$10, Long_add(Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $aSize) {
            var$12 = Long_add(var$10, Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
    }
    if (Long_ne(var$10, Long_ZERO))
        var$6[$i] = Long_lo(var$10);
},
jm_Elementary_subtract1 = ($op1, $op2) => {
    let $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, var$9, $cmp, $resSign, $resDigits, var$13, $res;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op2Sign)
        return $op1;
    if (!$op1Sign)
        return $op2.$negate();
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits0.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits0.data[0]), Long_create(4294967295, 0));
        if ($op1Sign < 0)
            $a = Long_neg($a);
        if ($op2Sign < 0)
            $b = Long_neg($b);
        return jm_BigInteger_valueOf(Long_sub($a, $b));
    }
    var$9 = $rt_compare($op1Len, $op2Len);
    $cmp = !var$9 ? jm_Elementary_compareArrays($op1.$digits0, $op2.$digits0, $op1Len) : var$9 <= 0 ? (-1) : 1;
    if ($cmp == (-1)) {
        $resSign =  -$op2Sign | 0;
        $resDigits = $op1Sign != $op2Sign ? jm_Elementary_add($op2.$digits0, $op2Len, $op1.$digits0, $op1Len) : jm_Elementary_subtract($op2.$digits0, $op2Len, $op1.$digits0, $op1Len);
    } else if ($op1Sign != $op2Sign) {
        $resDigits = jm_Elementary_add($op1.$digits0, $op1Len, $op2.$digits0, $op2Len);
        $resSign = $op1Sign;
    } else {
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        $resDigits = jm_Elementary_subtract($op1.$digits0, $op1Len, $op2.$digits0, $op2Len);
        $resSign = $op1Sign;
    }
    var$13 = $resDigits.data;
    $res = jm_BigInteger__init_($resSign, var$13.length, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($res);
    return $res;
},
jm_Elementary_subtract0 = ($res, $a, $aSize, $b, $bSize) => {
    let $borrow, $i, var$8, var$9, var$10;
    $borrow = Long_ZERO;
    $i = 0;
    while ($i < $bSize) {
        var$8 = $res.data;
        var$9 = $b.data;
        var$10 = Long_add($borrow, Long_sub(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$9[$i]), Long_create(4294967295, 0))));
        var$8[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
    while ($i < $aSize) {
        var$9 = $res.data;
        var$10 = Long_add($borrow, Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)));
        var$9[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
},
jm_Elementary_add = ($a, $aSize, $b, $bSize) => {
    let $res;
    $res = $rt_createIntArray($aSize + 1 | 0);
    jm_Elementary_add1($res, $a, $aSize, $b, $bSize);
    return $res;
},
jm_Elementary_subtract = ($a, $aSize, $b, $bSize) => {
    let $res;
    $res = $rt_createIntArray($aSize);
    jm_Elementary_subtract0($res, $a, $aSize, $b, $bSize);
    return $res;
};
function onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0() {
    jl_Object.call(this);
    this.$_0155 = null;
}
let onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0155 = var$1;
},
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0();
    onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0_run = var$0 => {
    onn_NostrRelayLifecycleManager_lambda$onRelaySend$0(var$0.$_0155);
};
function onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2() {
    jl_Object.call(this);
    this.$_0149 = null;
}
let onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0149 = var$1;
},
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2__init_0 = var_0 => {
    let var_1 = new onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2();
    onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2_run = var$0 => {
    onn_NostrRelayLifecycleManager_lambda$onRelaySend$2(var$0.$_0149);
};
function onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1() {
    jl_Object.call(this);
    this.$_0173 = null;
}
let onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0173 = var$1;
},
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1();
    onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1_run = var$0 => {
    onn_NostrRelayLifecycleManager_lambda$onRelaySend$1(var$0.$_0173);
},
onp_NGEUtils = $rt_classWithoutFields(),
onp_NGEUtils_logger = null,
onp_NGEUtils_HEX_ARRAY = null,
onp_NGEUtils_$assertionsDisabled = 0,
onp_NGEUtils_$callClinit = () => {
    onp_NGEUtils_$callClinit = $rt_eraseClinit(onp_NGEUtils);
    onp_NGEUtils__clinit_();
},
onp_NGEUtils_setPlatform = $platform => {
    onp_NGEUtils_$callClinit();
    onp_NGEPlatform_set($platform);
},
onp_NGEUtils_getPlatform = () => {
    onp_NGEUtils_$callClinit();
    return onp_NGEPlatform_get();
},
onp_NGEUtils_bytesToHex0 = $bbf => {
    let $hexChars, $j, var$4, $v, var$6;
    onp_NGEUtils_$callClinit();
    $hexChars = $rt_createCharArray(jn_Buffer_limit($bbf) * 2 | 0);
    $j = 0;
    while ($j < jn_Buffer_limit($bbf)) {
        var$4 = $hexChars.data;
        $v = $bbf.$get6($j) & 255;
        var$6 = $j * 2 | 0;
        var$4[var$6] = onp_NGEUtils_HEX_ARRAY.data[$v >>> 4 | 0];
        var$4[var$6 + 1 | 0] = onp_NGEUtils_HEX_ARRAY.data[$v & 15];
        $j = $j + 1 | 0;
    }
    return jl_String__init_($hexChars);
},
onp_NGEUtils_bytesToHex = $bbf => {
    let var$2, var$3, $hexChars, $j, var$6, $v, var$8;
    onp_NGEUtils_$callClinit();
    var$2 = $bbf.data;
    var$3 = var$2.length;
    $hexChars = $rt_createCharArray(var$3 * 2 | 0);
    $j = 0;
    while ($j < var$3) {
        var$6 = $hexChars.data;
        $v = var$2[$j] & 255;
        var$8 = $j * 2 | 0;
        var$6[var$8] = onp_NGEUtils_HEX_ARRAY.data[$v >>> 4 | 0];
        var$6[var$8 + 1 | 0] = onp_NGEUtils_HEX_ARRAY.data[$v & 15];
        $j = $j + 1 | 0;
    }
    return jl_String__init_($hexChars);
},
onp_NGEUtils_hexToBytes = $s => {
    let $len, $buf, $i;
    onp_NGEUtils_$callClinit();
    $len = $s.$length();
    $buf = jn_ByteBuffer_allocate($len / 2 | 0);
    $i = 0;
    while ($i < $len) {
        $buf.$put7($i / 2 | 0, ((jl_Character_digit($s.$charAt($i), 16) << 4) + jl_Character_digit($s.$charAt($i + 1 | 0), 16) | 0) << 24 >> 24);
        $i = $i + 2 | 0;
    }
    return $buf;
},
onp_NGEUtils_hexToByteArray = $s => {
    let $len, $data, $i;
    onp_NGEUtils_$callClinit();
    $len = $s.$length();
    $data = $rt_createByteArray($len / 2 | 0);
    $i = 0;
    while ($i < $len) {
        $data.data[$i / 2 | 0] = ((jl_Character_digit($s.$charAt($i), 16) << 4) + jl_Character_digit($s.$charAt($i + 1 | 0), 16) | 0) << 24 >> 24;
        $i = $i + 2 | 0;
    }
    return $data;
},
onp_NGEUtils_allZeroes = $bytes => {
    let var$2, var$3, var$4, $b;
    onp_NGEUtils_$callClinit();
    var$2 = $bytes.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $b = var$2[var$4];
        if ($b)
            return 0;
        var$4 = var$4 + 1 | 0;
    }
    return 1;
},
onp_NGEUtils_safeLong = $input => {
    let $l, var$3, var$4, var$5, var$6, $$je;
    onp_NGEUtils_$callClinit();
    if ($input instanceof jl_Number)
        return $input.$longValue();
    a: {
        try {
            $l = jl_Long_valueOf(jl_Long_parseLong(jl_String_valueOf($input)));
            var$3 = $l.$longValue();
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = jl_String_valueOf($input);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(870)), var$5);
    jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$6));
    $rt_throw(var$4);
},
onp_NGEUtils_safeInt = $input => {
    let $l, var$3, var$4;
    onp_NGEUtils_$callClinit();
    $l = onp_NGEUtils_safeLong($input);
    if (Long_ge($l, Long_fromInt(-2147483648)) && Long_le($l, Long_fromInt(2147483647)))
        return Long_lo($l);
    var$3 = new jl_IllegalArgumentException;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append2(jl_StringBuilder_append(var$4, $rt_s(871)), $l);
    jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$4));
    $rt_throw(var$3);
},
onp_NGEUtils_safeString = $input => {
    onp_NGEUtils_$callClinit();
    if ($input === null)
        return $rt_s(23);
    if (!($input instanceof jl_String))
        return jl_String_valueOf($input);
    return $input;
},
onp_NGEUtils_safeStringArray = $tags => {
    let $c, var$3, var$4, var$5;
    onp_NGEUtils_$callClinit();
    if ($rt_isInstance($tags, ju_Collection)) {
        $c = $tags;
        return $c.$toArray($rt_createArray(jl_String, $c.$size()));
    }
    if ($rt_isInstance($tags, $rt_arraycls(jl_String)))
        return $tags;
    var$3 = new jl_IllegalArgumentException;
    var$4 = jl_String_valueOf($tags);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(872)), var$4);
    jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
onp_NGEUtils_safeStringList = $tags => {
    let var$2, var$3, var$4, var$5, var$6, var$7, $list, $o, $i;
    onp_NGEUtils_$callClinit();
    a: {
        b: {
            var$2 = $rt_isInstance($tags, ju_Collection);
            if (var$2) {
                var$3 = $tags;
                if (var$3.$isEmpty())
                    break b;
            }
            var$4 = $rt_isInstance($tags, $rt_arraycls(jl_String));
            if (!var$4)
                break a;
            if ($tags.data.length)
                break a;
        }
        return ju_List_of();
    }
    var$5 = $rt_isInstance($tags, ju_List);
    if (!var$5 && !var$2) {
        if (!$rt_isInstance($tags, jl_Iterable)) {
            if (var$4)
                return ju_List_of0($tags);
            var$3 = new jl_IllegalArgumentException;
            var$6 = jl_String_valueOf($tags);
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(872)), var$6);
            jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$7));
            $rt_throw(var$3);
        }
        $list = ju_ArrayList__init_();
        var$3 = $tags.$iterator();
        while (var$3.$hasNext()) {
            $o = var$3.$next();
            $list.$add1(onp_NGEUtils_safeString($o));
        }
        return $list;
    }
    var$3 = var$5 ? $tags : ju_ArrayList__init_0($tags);
    $i = 0;
    while (true) {
        var$6 = var$3;
        if ($i >= var$6.$size())
            break;
        var$6.$set0($i, onp_NGEUtils_safeString(var$6.$get($i)));
        $i = $i + 1 | 0;
    }
    return var$6;
},
onp_NGEUtils_safeIntList = $tags => {
    let var$2, var$3, var$4, var$5, var$6, $list, $o, var$9, var$10, $arr, var$12, $o_0, $i;
    onp_NGEUtils_$callClinit();
    a: {
        b: {
            var$2 = $rt_isInstance($tags, ju_Collection);
            if (var$2) {
                var$3 = $tags;
                if (var$3.$isEmpty())
                    break b;
            }
            var$4 = $rt_isInstance($tags, $rt_arraycls(jl_Integer));
            if (!(var$4 && !$tags.data.length)) {
                var$5 = $rt_isInstance($tags, $rt_arraycls($rt_intcls));
                if (!var$5)
                    break a;
                if ($tags.data.length)
                    break a;
            }
        }
        return ju_List_of();
    }
    var$6 = $rt_isInstance($tags, ju_List);
    if (!var$6 && !var$2) {
        if ($rt_isInstance($tags, jl_Iterable)) {
            $list = ju_ArrayList__init_();
            var$3 = $tags.$iterator();
            while (var$3.$hasNext()) {
                $o = var$3.$next();
                $list.$add1(jl_Integer_valueOf(onp_NGEUtils_safeInt($o)));
            }
            return $list;
        }
        if (var$4)
            return ju_List_of0($tags);
        if (!var$5) {
            var$3 = new jl_IllegalArgumentException;
            var$9 = jl_String_valueOf($tags);
            var$10 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(872)), var$9);
            jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$10));
            $rt_throw(var$3);
        }
        $arr = $tags;
        var$12 = $arr.data;
        $list = ju_ArrayList__init_();
        var$2 = var$12.length;
        var$4 = 0;
        while (var$4 < var$2) {
            $o_0 = var$12[var$4];
            $list.$add1(jl_Integer_valueOf($o_0));
            var$4 = var$4 + 1 | 0;
        }
        return $list;
    }
    var$3 = var$6 ? $tags : ju_ArrayList__init_0($tags);
    $i = 0;
    while (true) {
        var$9 = var$3;
        if ($i >= var$9.$size())
            break;
        var$9.$set0($i, jl_Integer_valueOf(onp_NGEUtils_safeInt(var$9.$get($i))));
        $i = $i + 1 | 0;
    }
    return var$9;
},
onp_NGEUtils_safeCollectionOfStringArray = $tags => {
    let var$2, $c, $list, $o, var$6, var$7, $arr, var$9, var$10, var$11, $o_0;
    onp_NGEUtils_$callClinit();
    var$2 = !$rt_isInstance($tags, ju_Collection) ? $tags : $rt_isInstance($tags, ju_List) ? $tags : ju_ArrayList__init_0($tags);
    if ($rt_isInstance(var$2, ju_List)) {
        $c = var$2;
        if ($c.$isEmpty())
            return $c;
        if ($rt_isInstance($c.$get(0), $rt_arraycls(jl_String)))
            return $c;
        $list = ju_ArrayList__init_();
        var$2 = $c.$iterator();
        while (var$2.$hasNext()) {
            $o = var$2.$next();
            $list.$add1(onp_NGEUtils_safeStringArray($o));
        }
        return $list;
    }
    if (!$rt_isInstance(var$2, $rt_arraycls($rt_arraycls(jl_String)))) {
        var$6 = new jl_IllegalArgumentException;
        var$2 = jl_String_valueOf(var$2);
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(872)), var$2);
        jl_IllegalArgumentException__init_1(var$6, jl_StringBuilder_toString(var$7));
        $rt_throw(var$6);
    }
    $arr = var$2;
    var$9 = $arr.data;
    $list = ju_ArrayList__init_();
    var$10 = var$9.length;
    var$11 = 0;
    while (var$11 < var$10) {
        $o_0 = var$9[var$11];
        $list.$add1($o_0);
        var$11 = var$11 + 1 | 0;
    }
    return $list;
},
onp_NGEUtils_safeBool = $v => {
    let var$2, var$3, var$4;
    onp_NGEUtils_$callClinit();
    if ($v instanceof jl_Boolean)
        return $v.$booleanValue();
    if ($v instanceof jl_Number)
        return !$v.$intValue() ? 0 : 1;
    if ($v instanceof jl_String)
        return jl_Boolean_parseBoolean($v);
    var$2 = new jl_IllegalArgumentException;
    var$3 = jl_String_valueOf($v);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(873)), var$3);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
onp_NGEUtils_safeSecondsInstant = $object => {
    let var$2, $$je;
    onp_NGEUtils_$callClinit();
    if ($object instanceof jt_Instant)
        return $object;
    if (!($object instanceof jl_String))
        return jt_Instant_ofEpochSecond(onp_NGEUtils_safeLong($object));
    a: {
        try {
            var$2 = jt_Instant_parse($object);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    return jt_Instant_ofEpochSecond(onp_NGEUtils_safeLong($object));
},
onp_NGEUtils_dbg = $r => {
    let $s;
    onp_NGEUtils_$callClinit();
    $s = onp_NGEUtils$dbg$lambda$_17_0__init_0($r);
    if (!onp_NGEUtils_$assertionsDisabled && !($s.$get8()).$booleanValue())
        $rt_throw(jl_AssertionError__init_0($rt_s(874)));
    return 1;
},
onp_NGEUtils_awaitNoThrow = $task => {
    let var$2, $e, $$je;
    onp_NGEUtils_$callClinit();
    a: {
        try {
            var$2 = $task.$await();
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
},
onp_NGEUtils_lambda$dbg$0 = $r => {
    let var$2, $e, $$je;
    onp_NGEUtils_$callClinit();
    a: {
        try {
            $r.$run();
            var$2 = jl_Boolean_valueOf(1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $e.$printStackTrace0();
    return jl_Boolean_valueOf(0);
},
onp_NGEUtils__clinit_ = () => {
    onp_NGEUtils_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onp_NGEUtils)) ? 0 : 1;
    onp_NGEUtils_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onp_NGEUtils)));
    onp_NGEUtils_HEX_ARRAY = $rt_s(875).$toCharArray();
};
function ju_LinkedList$SequentialListIterator() {
    let a = this; jl_Object.call(a);
    a.$nextEntry = null;
    a.$prevEntry = null;
    a.$currentEntry1 = null;
    a.$index1 = 0;
    a.$version = 0;
    a.$this$01 = null;
}
let ju_LinkedList$SequentialListIterator__init_0 = ($this, var$1, $nextEntry, $prevEntry, $index) => {
    $this.$this$01 = var$1;
    jl_Object__init_($this);
    $this.$version = $this.$this$01.$modCount;
    $this.$nextEntry = $nextEntry;
    $this.$prevEntry = $prevEntry;
    $this.$index1 = $index;
},
ju_LinkedList$SequentialListIterator__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new ju_LinkedList$SequentialListIterator();
    ju_LinkedList$SequentialListIterator__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
ju_LinkedList$SequentialListIterator_hasNext = $this => {
    return $this.$nextEntry === null ? 0 : 1;
},
ju_LinkedList$SequentialListIterator_next = $this => {
    let $result;
    ju_LinkedList$SequentialListIterator_checkConcurrentModification($this);
    if ($this.$nextEntry === null)
        $rt_throw(ju_NoSuchElementException__init_());
    $result = $this.$nextEntry.$item;
    $this.$currentEntry1 = $this.$nextEntry;
    $this.$prevEntry = $this.$nextEntry;
    $this.$nextEntry = $this.$nextEntry.$next8;
    $this.$index1 = $this.$index1 + 1 | 0;
    return $result;
},
ju_LinkedList$SequentialListIterator_remove = $this => {
    if ($this.$currentEntry1 === null)
        $rt_throw(jl_IllegalStateException__init_0());
    ju_LinkedList_removeEntry($this.$this$01, $this.$currentEntry1);
    if ($this.$currentEntry1 === $this.$prevEntry) {
        $this.$prevEntry = !$this.$hasNext() ? null : $this.$nextEntry.$previous0;
        $this.$index1 = $this.$index1 - 1 | 0;
    } else if ($this.$currentEntry1 === $this.$nextEntry)
        $this.$nextEntry = !$this.$hasPrevious() ? null : $this.$prevEntry.$next8;
    $this.$version = $this.$this$01.$modCount;
    $this.$currentEntry1 = null;
},
ju_LinkedList$SequentialListIterator_hasPrevious = $this => {
    return $this.$prevEntry === null ? 0 : 1;
},
ju_LinkedList$SequentialListIterator_previous = $this => {
    let $result;
    ju_LinkedList$SequentialListIterator_checkConcurrentModification($this);
    if ($this.$prevEntry === null)
        $rt_throw(ju_NoSuchElementException__init_());
    $this.$currentEntry1 = $this.$prevEntry;
    $result = $this.$prevEntry.$item;
    $this.$nextEntry = $this.$prevEntry;
    $this.$prevEntry = $this.$prevEntry.$previous0;
    $this.$index1 = $this.$index1 - 1 | 0;
    return $result;
},
ju_LinkedList$SequentialListIterator_add = ($this, $e) => {
    let $newEntry, var$3;
    ju_LinkedList$SequentialListIterator_checkConcurrentModification($this);
    $newEntry = ju_LinkedList$Entry__init_0();
    $newEntry.$item = $e;
    $newEntry.$previous0 = $this.$prevEntry;
    $newEntry.$next8 = $this.$nextEntry;
    if ($this.$prevEntry === null)
        $this.$this$01.$firstEntry = $newEntry;
    else
        $this.$prevEntry.$next8 = $newEntry;
    if ($this.$nextEntry === null)
        $this.$this$01.$lastEntry = $newEntry;
    else
        $this.$nextEntry.$previous0 = $newEntry;
    $this.$prevEntry = $newEntry;
    var$3 = $this.$this$01;
    var$3.$size2 = var$3.$size2 + 1 | 0;
    var$3 = $this.$this$01;
    var$3.$modCount = var$3.$modCount + 1 | 0;
    $this.$version = $this.$this$01.$modCount;
    $this.$currentEntry1 = null;
},
ju_LinkedList$SequentialListIterator_checkConcurrentModification = $this => {
    if ($this.$version >= $this.$this$01.$modCount)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
};
function jt_ZoneRegion() {
    let a = this; jt_ZoneId.call(a);
    a.$id8 = null;
    a.$rules = null;
}
let jt_ZoneRegion_ofId = ($zoneId, $checkAvailable) => {
    let var$3, var$4, $rules, $ex, $$je;
    ju_Objects_requireNonNull($zoneId, $rt_s(623));
    if (!jt_ZoneRegion_isValidId($zoneId)) {
        var$3 = new jt_DateTimeException;
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(876)), $zoneId);
        jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$4));
        $rt_throw(var$3);
    }
    $rules = null;
    a: {
        try {
            var$3 = jtz_ZoneRulesProvider_getRules($zoneId, 1);
            $rules = var$3;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jtz_ZoneRulesException) {
                $ex = $$je;
            } else {
                throw $$e;
            }
        }
        if (!$zoneId.$equals($rt_s(877))) {
            if ($checkAvailable)
                $rt_throw($ex);
            var$3 = $rules;
        } else {
            jt_ZoneOffset_$callClinit();
            var$3 = jt_ZoneOffset_getRules(jt_ZoneOffset_UTC);
        }
    }
    return jt_ZoneRegion__init_0($zoneId, var$3);
},
jt_ZoneRegion_isValidId = $id => {
    let $i;
    if ($id.$length() < 2)
        return 0;
    if (!jt_ZoneRegion_isIdStart($id.$charAt(0)))
        return 0;
    $i = 1;
    while ($i < $id.$length()) {
        if (!jt_ZoneRegion_isIdPart($id.$charAt($i)))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
jt_ZoneRegion_isIdPart = $c => {
    let var$2;
    switch ($c) {
        case 43:
        case 45:
        case 46:
        case 47:
        case 95:
        case 126:
            break;
        default:
            a: {
                b: {
                    if (!jt_ZoneRegion_isIdStart($c)) {
                        if ($c < 48)
                            break b;
                        if ($c > 57)
                            break b;
                    }
                    var$2 = 1;
                    break a;
                }
                var$2 = 0;
            }
            return var$2;
    }
    return 1;
},
jt_ZoneRegion_isIdStart = $c => {
    let var$2;
    a: {
        b: {
            if (!($c >= 65 && $c <= 90)) {
                if ($c < 97)
                    break b;
                if ($c > 122)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
jt_ZoneRegion__init_ = ($this, $id, $rules) => {
    jt_ZoneId__init_($this);
    $this.$id8 = $id;
    $this.$rules = $rules;
},
jt_ZoneRegion__init_0 = (var_0, var_1) => {
    let var_2 = new jt_ZoneRegion();
    jt_ZoneRegion__init_(var_2, var_0, var_1);
    return var_2;
},
jt_ZoneRegion_getId = $this => {
    return $this.$id8;
},
jt_ZoneRegion_getRules = $this => {
    return $this.$rules !== null ? $this.$rules : jtz_ZoneRulesProvider_getRules($this.$id8, 0);
},
otcit_DateTimeZoneProvider = $rt_classWithoutFields(),
otcit_DateTimeZoneProvider_cache = null,
otcit_DateTimeZoneProvider_$$metadata$$0 = null,
otcit_DateTimeZoneProvider_$callClinit = () => {
    otcit_DateTimeZoneProvider_$callClinit = $rt_eraseClinit(otcit_DateTimeZoneProvider);
    otcit_DateTimeZoneProvider__clinit_();
},
otcit_DateTimeZoneProvider_getTimeZone = $id => {
    otcit_DateTimeZoneProvider_$callClinit();
    if (!otcit_DateTimeZoneProvider_cache.$containsKey($id))
        otcit_DateTimeZoneProvider_cache.$put1($id, otcit_DateTimeZoneProvider_createTimeZone($id));
    return otcit_DateTimeZoneProvider_cache.$get1($id);
},
otcit_DateTimeZoneProvider_createTimeZone = $id => {
    let $res, $data, $flow, $aliasId;
    otcit_DateTimeZoneProvider_$callClinit();
    $res = otcit_DateTimeZoneProvider_getTimeZoneResource($id);
    if ($res === null)
        return null;
    $data = ($res.data !== null ? $rt_str($res.data) : null);
    $flow = otci_CharFlow__init_($data.$toCharArray());
    if (otci_Base46_decodeUnsigned($flow) != 4)
        return otcit_StorableDateTimeZone_read($id, $data);
    $aliasId = $data.$substring0($flow.$pointer);
    return otcit_AliasDateTimeZone__init_0($id, otcit_DateTimeZoneProvider_getTimeZone($aliasId));
},
otcit_DateTimeZoneProvider_getIds = () => {
    let $ids, var$2, var$3, var$4, $areaName, $area, var$7, var$8, var$9, $id, var$11;
    otcit_DateTimeZoneProvider_$callClinit();
    $ids = ju_ArrayList__init_();
    var$2 = (otpp_ResourceAccessor_keysToStrings(otpp_ResourceAccessor_keys(otcit_DateTimeZoneProvider_getResource()))).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $areaName = var$2[var$4];
        $area = (otcit_DateTimeZoneProvider_getResource())[$rt_ustr($areaName)];
        var$7 = (otpp_ResourceAccessor_keysToStrings(otpp_ResourceAccessor_keys($area))).data;
        var$8 = var$7.length;
        var$9 = 0;
        while (var$9 < var$8) {
            $id = var$7[var$9];
            if (!$areaName.$isEmpty()) {
                var$11 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$11, $areaName), 47), $id);
                $id = jl_StringBuilder_toString(var$11);
            }
            $ids.$add1($id);
            var$9 = var$9 + 1 | 0;
        }
        var$4 = var$4 + 1 | 0;
    }
    return $ids.$toArray($rt_createArray(jl_String, $ids.$size()));
},
otcit_DateTimeZoneProvider_getTimeZoneResource = $locationName => {
    let $sepIndex, $areaName, $area;
    otcit_DateTimeZoneProvider_$callClinit();
    $sepIndex = $locationName.$indexOf(47);
    if ($sepIndex < 0)
        $areaName = $rt_s(23);
    else {
        $areaName = $locationName.$substring(0, $sepIndex);
        $locationName = $locationName.$substring0($sepIndex + 1 | 0);
    }
    if (!(otcit_DateTimeZoneProvider_getResource()).hasOwnProperty($rt_ustr($areaName)))
        return null;
    $area = (otcit_DateTimeZoneProvider_getResource())[$rt_ustr($areaName)];
    return !$area.hasOwnProperty($rt_ustr($locationName)) ? null : $area[$rt_ustr($locationName)];
},
otcit_DateTimeZoneProvider_getResource = () => {
    otcit_DateTimeZoneProvider_$callClinit();
    if (otcit_DateTimeZoneProvider_$$metadata$$0 === null)
        otcit_DateTimeZoneProvider_$$metadata$$0 = otcit_DateTimeZoneProvider_getResource$$create();
    return otcit_DateTimeZoneProvider_$$metadata$$0;
},
otcit_DateTimeZoneProvider__clinit_ = () => {
    otcit_DateTimeZoneProvider_cache = ju_HashMap__init_();
},
otcit_DateTimeZoneProvider_getResource$$create = () => {
    return {"": {"PRC": {"data" : ")Asia/Shanghai"}, "Singapore": {"data" : ")Asia/Singapore"}, "UTC": {"data" : ")Etc/UTC"}, "Hongkong": {"data" : ")Asia/Hong_Kong"}, "WET": {"data" : ")Europe/Lisbon"}, "UCT": {"data" : ")Etc/UTC"}, "Egypt": {"data" : ")Africa/Cairo"}, "Kwajalein": {"data" : ")Pacific/Kwajalein"}, "NZ": {"data" : ")Pacific/Auckland"}, "Libya": {"data" : ")Africa/Tripoli"}, "Portugal": {"data" : ")Europe/Lisbon"}, "Zulu": {"data" : ")Etc/UTC"}, "Iceland": {"data" : ")Atlantic/Reykjavik"}, "EST5EDT":
    {"data" : ")America/New_York"}, "Iran": {"data" : ")Asia/Tehran"}, "PST8PDT": {"data" : ")America/Los_Angeles"}, "Eire": {"data" : ")Europe/Dublin"}, "Poland": {"data" : ")Europe/Warsaw"}, "GB": {"data" : ")Europe/London"}, "CST6CDT": {"data" : ")America/Chicago"}, "GMT-0": {"data" : ")Etc/GMT"}, "GMT+0": {"data" : ")Etc/GMT"}, "Universal": {"data" : ")Etc/UTC"}, "GMT0": {"data" : ")Etc/GMT"}, "Japan": {"data" : ")Asia/Tokyo"}, "EST": {"data" : ")America/Panama"}, "ROC": {"data" : ")Asia/Taipei"}, "HST":
    {"data" : ")Pacific/Honolulu"}, "NZ-CHAT": {"data" : ")Pacific/Chatham"}, "Navajo": {"data" : ")America/Denver"}, "GMT": {"data" : ")Etc/GMT"}, "ROK": {"data" : ")Asia/Seoul"}, "MST7MDT": {"data" : ")America/Denver"}, "Greenwich": {"data" : ")Etc/GMT"}, "MST": {"data" : ")America/Phoenix"}, "W-SU": {"data" : ")Europe/Moscow"}, "Cuba": {"data" : ")America/Havana"}, "CET": {"data" : ")Europe/Brussels"}, "Turkey": {"data" : ")Europe/Istanbul"}, "EET": {"data" : ")Europe/Athens"}, "Israel": {"data" : ")Asia/Jerusalem"}
    , "GB-Eire": {"data" : ")Europe/London"}, "Jamaica": {"data" : ")America/Jamaica"}, "MET": {"data" : ")Europe/Brussels"}}, "Europe": {"Saratov": {"data" : "+3 :XHs3#Lm# /%  Q#O)-v  bAG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11z1\'2#1 Q-?/))% 1 O53\'=1 K,#5\'\'=11n1\'B#1 b#\'1\':#1 Q1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 b#/15.#1 Q#+1911 b# "}, "Belgrade": {"data" : "+/ .V2F)#yi#)#%  1#P%))j!% 1=\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 %#13b1 #)#%  1##1+A111##13b1 1#]#)72#  117/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Gibraltar": {"data" : "+) 06i.##ii#)1)   B%V##1+v11 #15%1 %#1)A11 #13f1 %#1\'&#11 #13>#1 %#1\'>#11 #13:#1 %#1\'6#11 #15*#1 %#1)-11 #15-1 %#1\'.#11 #15A1 %#7)b=11 \'73b=1  #7)E=11%\'7)b=11\'W75)=1 O#7)E=11%\'7)b=11%#7)E=11%\'7)b=11%#7)E=11%#7)b=11%#7)E=11%\'7)b=11%#7)E=11%#7)b=11 #77b=1 %#7%!#=11%#7+)=)A +71E=)1\'+7))=)A #73b=)1%#7))%)A #7/E=)1 \'75)=1  #7)E=11%#1\'b11 #1)U)A #11I)1 #17)1 %#1\'Y11 #15B#1 %#1)-11 #15>#1 %+7)Y=11++75v=1 %#7)b=11 ?75)=1 ;#7)E=11%\'7)b=11%#7)E=11#))Y1 1#,#)#%  117/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Bucharest": {"data" : "+/ c4HX+#8k#)5%  c4HX+#i#)/&#  A=%#1+v 1 ?75%=  ;;7))= 1g##)+2# 1 #-3\'=  %#))5!%1 #-3\'=) \'1\':#1 A-3/7)%=11\'d53\'=1 [ 5\'\'=11K)#%  A1O#))5!%1 #-3\'=) M+5\'\'= 1++53\'=  \')#%  A1h//)%= 1\'d-3\'=  [ -\'\'= 1^ -5\'=  \')#%  A-ld%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Dublin": {"data" : "+7 q6PB##ii#)1)  q6PB##X#1+v11q6PB###15%1  Q #1+v11 #15%1 %#1)A11 #13f1 %#1\'&#11 #13>#1 %#1\'>#11 #13:#1 %#1\'6#11 #15*#1 %#1)-11 #15-1 #)99   !#\'#1\'6#11 #15*#1 %#1)-11 #15-1 %#1\'.#11 #15A1 %#7)b=11 \'73b=1  #7)E=11%\'7)b=11\'W75)=1 O#7)E=11%\'7)b=11%#7)E=11%\'7)b=11%#7)E=11%#7)b=11%#7)E=11%\'7)b=11%#7)E=11%#7)b=11 #77b=1 %#7%!#=11#1%*#11 #;1591  #\'1\'b11 ##17)1  #\'1)j1  v\'#1\'b11 #1)U)A #11I)1 #17)1 %#1\'Y11 #15B#1 %#1)-11 #15>#1 %+7)Y=11++75v=1 %#7)b=11 ?75)=1 ;#7)E=11%\'7)b=11%#7)E=11%\'7)b=11%#7)E=11%+5\'\'=11+?75!#=1"
    + " 3/7\'n=11%#1%j11#)52#  1=-# 5B#13%C\'\'b=1 CC\'5!#=13% %\'\'=)  C\'5!#=)3%7\'5z=)3% %5\'=)3 "}, "Zaporozhye": {"data" : ")Europe/Kyiv"}, "Kiev": {"data" : ")Europe/Kyiv"}, "Zurich": {"data" : "+) !L0o##Xg#)/b  F2FX##m#)-%  1)&%\'/+%%)1\'\'/5%%1 e#)#%  113/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Copenhagen": {"data" : ")Europe/Berlin"}, "Rome": {"data" : "+- kP,a%#0i#)9Q  kP,a%#4# 5B#!% 1U!##)-1 1 \')5%   #))% 1%#)\'I 1 #)5=  %#)\') 1 #)55  %#)\'v 1 #)3n  r#)-^ 1)#17)1 %#1\':#11 #1511 #)3I  15\'#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)-1  1>#\'#1\':#11 #1511 %#1))11 #13f1 %#)))11 #)3^) %#1\'f11 #1591 %#1\'b 1 #155  %#1%:#11 #15-1 j+7+z= 1+#)3*#  %+73z=   #1-% 1%#1+B# 1 #53\'=  %\'7+z= 1\'#53\'=  %#15%  %#1-- 1 \'53\'=   #1+.# 1%#1-% 1 +53\'=  \'#1+># 1%+7+z= 1\'#15%  %#13>#  \')#%  15//\')%=)1+# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Belfast": {"data" : ")Europe/London"}, "Zagreb": {"data" : ")Europe/Belgrade"}, "Monaco": {"data" : ")Europe/Paris"}, "Luxembourg": {"data" : ")Europe/Brussels"}, "Tiraspol": {"data" : ")Europe/Chisinau"}, "Kyiv": {"data" : "+3 Z}{R-#ii#)#%  Z}{R-#y#)+)  A#;)-v  Q#O)3r  11\'#1)%11)#17)1 %#1\':#11 #1511 #)79  QA|#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11r)/%11A#\')3:#9 A1[/7)%=11\'d53\'=1 [ 5\'\'=11^ 55\'=1 #)+U  A-hd%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Jersey": {"data" : ")Europe/London"}
    , "Istanbul": {"data" : "+; kia4-#ii#)#%  !i>:-#@#)5%  AV#9#)+% 1 #)5%  1#)\'6# 1 #)5*#  %#))- 1 #)5-  %#)\'.# 1 #)5A  )#)+U 1 \')5%   #)+% 1^#)/% 1 #)59   #)9% 1%#)3v  %#))% 1-#)5A  %#)-% 1 #)5%  %\'/)b= 1\'3/5)=  +#))I 1%#))b 1%#))z 1M#)/^ 1%#)5>#  %#)+^ 1 #)5%  E#)--)1 //5B#=1 +#)\'B#11%#)\'z11%#)\'v11%\'/)%=11\'\'/5^=1  #)-:#  #)-:#  Q=7//5B#=1  #)\'v11%\'/)%=11\'\'/5^=1  #)-:#  5#)/B#11 #)5)1 \')7%1 AE\'#)/B#11 #)5)1 )#1)r)1 #136#) %?5\'\'=)1?G53\'=) \'#1\'r)1%O5\'\'=)1KK55\'=) \')#%  A-8#d%3\'=) [ %\'\'=)1^ %5\'=) ` \'2#) A## \'6#) A-H#d%3\'=) [ %\'\'=)1^ %5\'="
    + ") l \'>#) A## \'B#) A-T#d%3\'=) [ %\'\'=)1^ %5\'=) p 5*#)1A## 7A) A-X#d%3\'=) [ %\'\'=)1^ %5\'=) t)3=  Q# "}, "Ulyanovsk": {"data" : "+3 !HBD5#Lm# /%  Q#O)-v  bAG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#1 Q-C/))% 1 O53\'=1 K,#5\'\'=11n1\'B#1 A-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 Q1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 b#/15.#1 Q#+1\'2#1 b# "}, "Samara": {"data" : "+5 J,{e5#Lm# /%  Q#O)-v  b#7)#2#  bA[#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#1 Q-C/))% 1 O53\'=1 K,#5\'\'=11n1\'B#1 A-K/))% 1 O53\'=1 K,#5\'\'=11n13:#1 Q##)5r9 b1K/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 #1\'6#1 Q-0#O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 b# "}
    , "Sarajevo": {"data" : ")Europe/Belgrade"}, "Nicosia": {"data" : ")Asia/Nicosia"}, "Chisinau": {"data" : "+5 2<D2-#ii#)#%  &NT0-#a#)%^  c4HX+#W)/&#  A-%#1+v 1 ?75%=  ;;7))= 1\')1^ 1A#\')/f  19\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)1&#  QA$##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11r)+91 A-G/))% 1 O53\'=1 K,#5\'\'=11j)#%  A1`//)%= 1\'d-3\'=  [ -\'\'= 1^ -5\'=  \')#%  A)  -\'\'=11  -5\'=9  "}, "Vatican": {"data" : ")Europe/Rome"}, "Brussels": {"data" : "+3 Fs.x#ii#)#%  Fs.x#S)+%4JVK  #|)7A  1#+)+%  11 #))>#!%1 #)5%) %\'7)^%11\'\'73^%1 # 7Mz  :# #1\'E 1 \'75%9!%  #1\'%!%1%#1%Y!%1 #15!#!% %#1\'Y!%1 #15*#!% %#1\'*#!%1 775%9!% 3#1)v!%1%#1\':#!%1%#1)1!%1%#1)f!%1%#1)E!%1%#1)Y!%1 K75)=1 G#1)v11%#1)U11%#1)n11%#1)-11%#1\'.#11%#1)A11%#1\'B#11%#1)n11%#1)111%#1\'2#11%#1)b11 #17n1 %#1%*#11#1+r1 1A$#\'7)^%11\'\'73^%1 z#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)3-  193#1%*#111#13f1 %#1))11 #13b1 %#1+n11 #15=1 D#)#%  19 /\')%=)1/#%3\'=) %# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Oslo": {"data" : ")Europe/Berlin"}, "Warsaw": {"data" : "+3 wF,P)#ii#)#%  wF,P)#T#)15  11%#))>#!%1 #)5%) %\'7)^%11\'\'73^%1 #)3b9 A) \'13b1  #1)^11/)-%  1)3\'13b1  #1)^11x)-!#1 1A$#\'7)^%11\'\'73^%1 z#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)5%  1r0#\'13b1  #1)^11*##1)-11 #)511 %#)):# 1 #)7%  %#1)Y 1 #15=1 %#1+111 +75%=1 \'#1)j11%#1)I11A#1-))1 \'53\'=)  #1\'>#)1%#1+B#)1 +75%=) \'#1)-)1%/5+\'=)1++53\'=) W)#%  15 /7)%=)1/#53\'=) %#15%) %d53\'=) [ 5\'\'=)1?)#%  11O/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Berlin": {"data" : "++ V:oq%#@k#))%  1M!##))>#!%1 #)5%) %\'7)^%11\'\'73^%1 z#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 %#13b1 #)+&#1 1- #)+&#1A #)3&#91 #17j1 \')#%  1A #1)Y11 #15=1 %+75%=1 +#1)991 #1+M1A #)-:#91%#1)j11%#1)I11D#)#%  15//\')%=)1+# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Lisbon": {"data" : "+1 ,8Z{##yi#)#%  ,8Z{##8# #%   Z#1#)-f!%1 #)7%) %3)\'% 133)5^  -#1)b!%1 #151!% )#1)f!%1 /75%9!% +#1)E!%1%#1)Y!%1%#1)r!%1)#1)j!%1 \'75%9!%  #1))!%1)#1)=!%1 375%9!% /#1\'>#!%1%#1)j!%1%#1)-!%1%#1\'.#!%1%#1)^!%1 #17j!% %#1%&#!%1 #15=!% %#1)5!%1 #155!% %/7\'A9!%1/#1)*#w#A #11^w#1 /75&#9!% +#1)fw#A +71*#9w#1\'\'7)v9w#A%#7)%9!%1 #75%9!% %p7)%=11pl75%=1 \'15)1 1#K)3.#)  E<#p7)%=11I#-3\'=) %#5\'\'= 1 #53\'=  %+7)%=)1+#15%) %\'53\'=) %75\'\'= 17353\'=  \')#%   -G/\')%=)1\'d%3\'=) [ %\'\'=)1O 32#) 11`/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=) # \'B#)  -"
    + "hd%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Simferopol": {"data" : "+? 6c>>/#ii#)#%  :@@</#y#)+)  A#;)-v  Q#O)7%  19\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #))U  QA$##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11r)#%  Q##)/%1 A#+)\'r  A-`/7)%=11\'d53\'=1 [ 5\'\'=11W)+%  Q1h/7)%=11\'d53\'=1 [ 5\'\'=11^ 55\'=1 #1\'B# 1Q##152#9 Q#\'%\'\'=) A-ld%3\'=) [ %\'\'=)1^ %5\'=) l)\'>#1 b##15.#1 Q# "}, "San_Marino": {"data" : ")Europe/Rome"}, "Podgorica": {"data" : ")Europe/Belgrade"}, "Athens": {"data"
    : "+- Vwu(+#Hk#)3Y  Vwu(+#x)/6#ec6# A-b#)/= 1 #)3%  E#))= 1#))>#  19G#)/= 1 #)3%  E#))= 1%#)7)9 %#)\'># 1 #)51  \'))1  A^\'#)\'># 1 #)51  E#)/% 1 #)7)  !##1)Q 1 #17.#  %#1)M11 #15I1 %\'7)%=11\'#13.#1 %#)3&#A %#))%j1 #)3:#1 %#))% 1 #)36#  \')#%  A13/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Bratislava": {"data" : ")Europe/Prague"}, "Stockholm": {"data" : ")Europe/Berlin"}, "Prague": {"data" : "+/ J4B*\'#Lg#)#%  J4B*\'#m#)5%  1M*##))>#!%1 #)5%) %\'7)^%11\'\'73^%1 z#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 %#13b1 #)+E  11 #7)%%11 #15%1 %#1+911 /75%=1 -)9%931#\')%!#1 11\'#1+911 /75%=1 +\'7)^=11%#1)E11@#)#%  15+/\')%=)1+# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Uzhgorod": {"data" : ")Europe/Kyiv"}, "Budapest": {"data" : "+- wo4*)#4k#)7%  11.##))>#!%1 #)5%) %\'7)^%11\'\'73^%1 #)#%  1- \'))^11\'+/3^%9  #))511x))=!% 1=\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 %#13b1 #)#%  1j4#+/3^%9  #))511*##)+%!%1 #)7%) %#1\'B#11 #)5=1 %+7)1=11++75%=1 5#)+!# 1 #)5-  %#)+z11 #)5)9 %\'/-%=11\'\'-3\'=9 !##))9 1 #)36#) %+-\'\'= 1++-3\'=) \')#%  11?/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Astrakhan": {"data" : "+3 _Zu<5#am#)+%  Q#;)-v  bAG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#1 Q-C/))% 1 O53\'=1 K,#5\'\'=11n1\'B#1 b#\'1\':#1 Q1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 b#/15.#1 Q#+1\'2#1 b# "}
    , "Madrid": {"data" : "+) T(@j#ak# #%   bf#))^!%1 \'159*%  #))9!%15#))b!%1 #151*% )#))f!%1 /75%9*% +#))E!%1%#))^ 1%#))r!%1A#)-b!%1 #15)*% %#)))!%1 #))>#!%A #)5- 1%#15=*% \')\'b!% 1^\'#15=*% -#)+)!%1 #)3%) %//)U9!%1/\'/5%=) %\'-3\'=) -#))>#!%1 #)5)) *#\'/)Q9!%1\'\'/5%=) %#)\'2#!%1 \'-3\'=)  #)))!%1%#1))11 #15%1 \')#%  15+/\')%=)1+# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Vaduz": {"data" : ")Europe/Zurich"}, "London": {"data" : "++ ei(\'#@g#)9%   Z%!\'#1+v11 #15%1 %#1)A11 #13f1 %#1\'&#11 #13>#1 %#1\'>#11 #13:#1 %#1\'6#11 #15*#1 %#1)-11 #15-1 %#1\'.#11 #15A1 %#7)b=11 \'73b=1  #7)E=11%\'7)b=11\'W75)=1 O#7)E=11%\'7)b=11%#7)E=11%\'7)b=11%#7)E=11%#7)b=11%#7)E=11%\'7)b=11%#7)E=11%#7)b=11 #77b=1 %#7%!#=11%#7+)=)A +71E=)1\'+7))=)A #73b=)1%#7))%)A #7/E=)1 \'75)=1  #7)E=11%#1\'b11 #1)U)A #11I)1 #17)1 %#1\'Y11 #15B#1 %#1)-11 #15>#1 %+7)Y=11++75v=1 %#7)b=11 ?75)=1 ;#7)E=11%\'7)b=11%#7)E=11%\'7)b=11%#7)E=11%+5\'\'=11+?75!#=1 3/7\'n=11%#1%j11#)52#  1#/ 5B#1  =K?75!#"
    + "=1  #1%j111C7\'b=11CC75!#=1 %[%\'\'=)1[C\'5!#=) %7\'5z=) \')#%   -hd%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Vilnius": {"data" : "+? smaH+#ii#)#%  wF,P)#]#)#%  _*e,+#+)5I  1#\')/Q  A##)5E  1#t)1-  Q#\')-&#  19\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)1%  QA$##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#1 A-C/))% 1 O53\'=1 K,#5\'\'=11n13:#1 A1[/7)%=11\'d53\'=1 [ 5\'\'=11^ 55\'=1 +)#%  A## \':#) 1-pd%3\'=) [ %\'\'=)1^ %5\'=) / 5B#) A#3)#%  A-(#d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Isle_of_Man":
    {"data" : ")Europe/London"}, "Sofia": {"data" : "+5 gJ{})#ii#)#%  !i>:-#[)7>#  A#,%)7)9 1=+#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 %#13b1 #)#%  1##)))9 A#P#)\'B#!% A5 #)\'B#!%1 #)5%) %+/)%9!%1+#)3:#) %#)32#1 \')3.#9 A-7/7)%=11\'d53\'=1 [ 5\'\'=11K)#%  A1[//)%= 1\'d-3\'=  [ -\'\'= 1^ -5\'=  \')#%  A-ld%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Kirov": {"data" : "+1 J42_5#Lm# /%  Q#O)-v  bAG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#1 Q-C/))% 1 O53\'=1 K,#5\'\'=11n1\'B#1 b#\'1\':#1 Q1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 b#/15.#1 Q# "}
    , "Tallinn": {"data" : "+; ke*>+#ii#)#%  ke*>+#a#)%%  11+#))>#!%1 #)5%) %\'7)^%11\'\'73^%1 \')/%  ke*>+#+)+%  A#p)19  Q#\')3^  19\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)3z  QA$##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#11A##13&#1 A1S/7)%=11\'d53\'=1 [ 5\'\'=11^ 55\'=1 +)3z  A-pd%3\'=) [ %\'\'=)1^ %5\'=) /)5B#A A#/)%v  A-$#d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Moscow": {"data" : "+7 !DT&1#ii#)#%  !DT&1#X#)/-  >V*,1=%#)/%!%1 #)96#  %#)+B#w#A #)3b)1%#)+B#!%A # /% 1 #)1b  # /%  QE\'#)+B#w#A #)3b)1%#)+B#!%A # /% 1 #)1b  )#)%Y!%1 #)\'r!%A #)3% 1 #)5%  #)5%  Q=+#)+B#!%A # /% 1 #)1b  )#)%Y!%1 #)\'r!%A #)3% 1 #)5%  \')5%  A#C)-v  QAG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 A-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 Q1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 b#/15.#1 Q# "}
    , "Malta": {"data" : "+) V!2,\'#@k#)7)  1N#!##)-1 1 \')5%   #))% 1%#)\'I 1 #)5=  %#)\') 1 #)55  %#)\'v 1 #)3n  r#)-^ 1)#17)1 %#1\':#11 #1511 %#1))11 #13f1 %#)))11 #)3^) %#1\'f11 #1591 %#1\'b 1 #155  %#1%:#11 #15-1 j+7+z= 1+#)3*#  %+73z=   #1-% 1%#1+B# 1 #53\'=  %\'7+z= 1\'#53\'=  %#15%  %#1-- 1 \'53\'=  %)\'B#  1= #1\'B# 1 #13:#  %#1)v 1 #13b  %3/)^=1137/3^=1  #)\'B#11\')#%  113/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Busingen": {"data" : ")Europe/Zurich"}, "Amsterdam": {"data" : ")Europe/Brussels"}, "Andorra":
    {"data" : "+) 6*{=#ak#)#%   #}#)3>#  1#e#)\'B#1 11C/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Riga": {"data" : "+? .g*2+#ii#)#%  .g*2+#a#))^11.g*2+##)3b9 .g*2+#\'))%11.g*2+##)+z9 .g*2+#?)+M  A#[)15  Q#\')/%  19\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)5U  QA$##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v5\'\'=11A##53\'=1 A) ?5\'\'=11??53\'=1 \')#v  A-ld%3\'=) [ %\'\'=)1^ %5\'=) 3)%:#  A#\')#)  A-|d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Vienna": {"data" : "+1 V*.P\'#@k#))%  11!##))>#!%1 #)5%) %\'7)^%11\'\'73^%1 +)#%  1) #1)511 #13U1 t1)%1 1E$#\'7)^%11\'\'73^%1 z#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 %#13b1 #1))111##1)Q1 1#\')#%  1E0##1)511 #13U1 .##1)Y11 #15=1 %\'75%=1 \'#1)911%#1)j11F##))9 1 #)36#  \')#%  113/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Helsinki": {"data" : "+) _B,B+#ai#)+B#  _B,B+#u#)+%  A1v#))- 1 #)51) c#\'-\'\'=11\'\'-3\'=9 \')#%  A1;/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Minsk": {"data" : "+3 FZsu+#ii#)#%  *D6u+#y#)+)  A#;)-v  Q#O)-6#  19\'#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)/-  QA$##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11r)#%  Q#\'1\'B#1 A1K/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 Q# "}, "Kaliningrad": {"data" : "+/ .V2F)#@k#))%  1M!##))>#!%1 #)5%) %\'7)^%11\'\'73^%1 z#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 %#13b1 #))I  A9\'#1)-11 #)511 %#)):# 1 #)7%  %#1)Y 1 #15=1 #))=  QA,##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#1 A1C/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 Q#/15.#1 A# "}
    , "Skopje": {"data" : ")Europe/Belgrade"}, "Mariehamn": {"data" : ")Europe/Helsinki"}, "Ljubljana": {"data" : ")Europe/Belgrade"}, "Tirane": {"data" : "+) *,Z8)#8m#)#%  1#0#)-b  1*# #)-b 1)#)7)9 %#)\':#11 #))I9 B##)+1 1 #)5)  %#)+% 1 #)5)  %#)+) 1 #)5-  %#)+A 1 #)5)  %#)+9 1 #)5%  %#)+5 1 #)3>#  %#)+- 1 #)51  %#)).# 1 #)32#  %#)+) 1 #)5-  %#))j 1 #)5%  %#))% 1#)/%  11?/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Guernsey": {"data" : ")Europe/London"}, "Volgograd": {"data" : "+7 V6(R3#Pm#)#-  Q#K)-v  b#D#)7M  bAi##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11z1\'2#1 Q-?/))% 1 O53\'=1 K,#5\'\'=11n1\'B#1 b#\'1\':#1 Q1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 b#/15.#1 Q#3156#1 b#+192#1 Q# "}
    , "Paris": {"data" : "+/ _N&O#8k#)\'b  _N&O#t)\'M   >#5#1-Y!%1 /75%=!% +#1\'&#!%1%#1\'E!%1%#1\'%!%1%#1%Y!%1 #15!#!% %#1\'Y!%1 #15*#!% %#1\'*#!%1 d75%9!% `#1+.#!%1%#1\':#!%1%#1)1!%1%#1)f!%1%#1)E!%1%#1)Y!%1%#1)r!%1%#1)Q!%1%#1)j!%1%#1))!%1%#1\'*#!%1%#1)=!%1%#1\'>#!%1%#1)j!%1%#1)-!%1%#1\'.#!%1%#1)^!%1 #17j!% %#)%*#11#)-Y!% 1A$#\'7)^%11\'\'73^%1 z#1)%11)#17)1 %#1\':#11 #1511 %\'7)%%11\'#15)1 #)1*#   9\'#)\':#1A #)5191%#))-1A #)5A)1%#)))1A #)3b9 #)3b9 19\'#))-1A #)5A)1%#)))1A #)3b9 B##)\'6#)1 #)3.#) \')#%  19 /\')%=)1/#%3\'=) %# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    }, "Africa": {"Tunis": {"data" : "+\' k$J2%#mi#)+Q  _N&O#@#)\'M  1*#6##1)^!%1 #17j!% %#1%*#!%1%#)59  %#)\'E 1 #)7)9 %#)\':#11 #))f1  #))*#11 #)511 %\'/)%%11\'#)5A  %#)3b  F##1)># 1 #13&#  %#1+% 1 #15%  I#1-% 1 +53\'=  \'#1\'.# 1%#1+% 1^#1+% 1 #13>#) %+5\'\'=11++55\'=1  "}, "Maputo": {"data" : "+% .o:}-#$m#)#%  A# "}, "Casablanca": {"data" : "++ qJkZ##4m#)5.#   ^.##)3Q 1 #)7n  %#)%*# 15#)7j  5#)-M 1 #)5:#  f#)--&#1 #)5%  =#)-&# 1 #)3%  )\')+% 1\'#)1%  %#)36#  %#)-% 1 #)11  ;)\'b  1#+)#%   6#C#)-% 1 #)11  >##)-% 1 #)3%  %#)-% 1 #)1v  %#)+) 1 #)1A  %#))- 1 #)/B#  %\'-)\'=11\'#)/r9  #)1r11 #)3>#9 %#)/=9  #)1I11 7-5\'=9 33-\'\'=113#)-6#9  #)1)11%#)-Y9  #)/n11%#)-59  #)/I11%#)+v9  #)/)11%#)+U9  #)-f11#)56#9 1J-77-5\'=9 33-\'\'=11\'#)+v9  #)/)11%#)+U9  #)-f11%#)+593 #)-E1 %#))n93 #)+B#1 %#))M93 #)+b1 %#)\'2#93 #)+A1 %#)\'n93 #))!#1 %#)\'I93 #))Y1 %#)%!#93 #))91 %#)%^"
    + "93 #)\'z1 %#)%=93 #)\'Y1 %#)#!#93 #)\'51 %#)#Y93 #)%j1  #)9>#93%#)%I1  #)9z93%#)#.#1  #)9Y93%#)#j1  #)76#93%#)#E1  #)7r93 #)9*#1 %#)7593 #)9f1 %#)56#93 #)9E1 %#)5n93 #)7!#1 %#)5193 #)7^1 %#)3.#93 #)5B#1 %#)3j93 #)5!#1 %#)3)93 #)5Y1 %#)1*#93 #)3:#1 %#)1I93 #)3v1 %#)1)93 #)3U1 %#)/&#93 #)16#1 %#)/E93 #)1r1 %#)/%93 #)151 %#)-!#93 #)/6#1 %#)-=93 #)/n1 %#)+>#93 #)/11 %#)+^93 #)-.#1 %#)+=93 #)-j1 %#))6#93 #)-)1 %#))U93 #)+*#1 %#))593 #)+I1 %#)\'6#93 #)+)1 %#)\'Q93 #))!#1 %#)\'193 #))A1 %#)%f93 #)\'B#1 %#)%E93 #)\'!#1 %#)"
    + "%%93 #)\'=1 %#)#b93 #)%2#1 %#)#A93 #)%Q1  #)9B#93%#)%11  #)9b93%#)#2#1  #)9=93%#)#M1  #)7z93%#)#-1  #)7Y93 #)9.#1 %#)7993 #)9M1 %#)5v93 #)9)1 %#)5U93 #)7f1 %#)5593 #)7E1 %#)3r93 #)7%1 %#)3M93 #)5b1 %#)12#93 #)5A1 %#)1n93 #)3>#1 %#)1M93 #)3^1 %#)/.#93 #)391 %#)/j93 #)1z1 %#)/I93 #)1Y1 %#)-*#93 #)191 %#)-b93 #)/v1 %#)-%93 #)/U1 %#)+&#93 #)-6#1 %#)+b93 #)-r1 %#))>#93 #)-M1 %#))z93 #)+2#1 %#))Y93 #)+n1 %#)\'>#93 #)+M1  "}, "Johannesburg": {"data" : "+\' s40!-#<k#)%A  9#O)\'%  A)c#\'/3^=11 \'/\'^=1  "}, "Addis_Ababa":
    {"data" : ")Africa/Nairobi"}, "Lagos": {"data" : "++ Z]Nd#qk#)/%   #/)/%  Z]Nd#;)#%  )#7)3%  1# "}, "Accra": {"data" : ")Africa/Abidjan"}, "Nairobi": {"data" : "+- s4,u/#}k#)+%  I#t)/%  Q#+)#5  I#;)9B#eP<Xn ZToo1#;)1%  Q# "}, "Brazzaville": {"data" : ")Africa/Lagos"}, "Lubumbashi": {"data" : ")Africa/Maputo"}, "Banjul": {"data" : ")Africa/Abidjan"}, "Porto-Novo": {"data" : ")Africa/Lagos"}, "Lusaka": {"data" : ")Africa/Maputo"}, "Kigali": {"data" : ")Africa/Maputo"}, "Ouagadougou": {"data" : ")Africa/Abidjan"}
    , "Freetown": {"data" : ")Africa/Abidjan"}, "Ndjamena": {"data" : "+) !}H6\'#0m#)#%  1#y%)5Y 11#\')\'A  1# "}, "Conakry": {"data" : ")Africa/Abidjan"}, "Niamey": {"data" : ")Africa/Lagos"}, "Maseru": {"data" : ")Africa/Johannesburg"}, "El_Aaiun": {"data" : "+) 8_2o%#,o#)#%  3#q#))Y   J#+#)-&# 1 #)3%  )\')+% 1\'#)1%  %#)36#  %#)-% 1 #)11  >##)-% 1 #)3%  %#)-% 1 #)1v  %#)+) 1 #)1A  %#))- 1 #)/B#  %\'-)\'=11\'#)/r9  #)1r11 #)3>#9 %#)/=9  #)1I11 7-5\'=9 33-\'\'=113#)-6#9  #)1)11%#)-Y9  #)/n11%#)-59  #)/I11%#)+v9  #)/)11%#)+U9  #)-f11#)56#9 1J-77-5\'=9 33-\'\'=11\'#)+v9  #)/)11%#)+U9  #)-f11%#)+593 #)-E1 %#))n93 #)+B#1 %#))M93 #)+b1 %#)\'2#93 #)+A1 %#)\'n93 #))!#1 %#)\'I93 #))Y1 %#)%!#93 #))91 %#)%^93 #)\'z1 %#)%=93 #)\'Y1 %#)#!#93 #)\'51 %#)#Y93 #)%j1  #)9>#93%#)%I1  #)9z93%#)#.#1 "
    + " #)9Y93%#)#j1  #)76#93%#)#E1  #)7r93 #)9*#1 %#)7593 #)9f1 %#)56#93 #)9E1 %#)5n93 #)7!#1 %#)5193 #)7^1 %#)3.#93 #)5B#1 %#)3j93 #)5!#1 %#)3)93 #)5Y1 %#)1*#93 #)3:#1 %#)1I93 #)3v1 %#)1)93 #)3U1 %#)/&#93 #)16#1 %#)/E93 #)1r1 %#)/%93 #)151 %#)-!#93 #)/6#1 %#)-=93 #)/n1 %#)+>#93 #)/11 %#)+^93 #)-.#1 %#)+=93 #)-j1 %#))6#93 #)-)1 %#))U93 #)+*#1 %#))593 #)+I1 %#)\'6#93 #)+)1 %#)\'Q93 #))!#1 %#)\'193 #))A1 %#)%f93 #)\'B#1 %#)%E93 #)\'!#1 %#)%%93 #)\'=1 %#)#b93 #)%2#1 %#)#A93 #)%Q1  #)9B#93%#)%11  #)9b93%#)#2#1  #)9=93%#)#M"
    + "1  #)7z93%#)#-1  #)7Y93 #)9.#1 %#)7993 #)9M1 %#)5v93 #)9)1 %#)5U93 #)7f1 %#)5593 #)7E1 %#)3r93 #)7%1 %#)3M93 #)5b1 %#)12#93 #)5A1 %#)1n93 #)3>#1 %#)1M93 #)3^1 %#)/.#93 #)391 %#)/j93 #)1z1 %#)/I93 #)1Y1 %#)-*#93 #)191 %#)-b93 #)/v1 %#)-%93 #)/U1 %#)+&#93 #)-6#1 %#)+b93 #)-r1 %#))>#93 #)-M1 %#))z93 #)+2#1 %#))Y93 #)+n1 %#)\'>#93 #)+M1  "}, "Sao_Tome": {"data" : "++ kmFJ##yi#)#%  ,8Z{##8# #%   #]))#%) 1#\')#%1  # "}, "Ceuta": {"data" : "+3 P*J.##ak# #%   #h)+9!%1 ##)5=!%  #;)#%   E;\'159*%  #))9!%15#))b!%1 #151*% )#))f!%1 /75%9*% +#))E!%1%#))^ 1%#))r!%1#)#%   #a#)#%   E #)--&#1 #)5%  =#)-&# 1 #)3%  )\')+% 1\'#)1%  %#)36#  %#)-% 1 #)11  ;)\'b  1#+)#%  11G/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Khartoum": {"data" : "+) Vwq{-#}m#)#%  A1c##)+% 1 `)5^  [#))># 1%W-)\'= 1`)#^&# Q#h)7%  A# "}, "Algiers": {"data" : "+5 6g(^#8k#)\'b  _N&O#t)\'M   M5#1-Y!%1 /75%=!% +#1\'&#!%1%#1\'E!%1%#1\'%!%1%#1%Y!%1 #15!#!% %#1\'Y!%1 #1-v!% j#13M!%1 #)7n) \')%*#1 15\'#13M!%1 #)7n) 5\'/)%%11\'#)5A1 %#)3b) \')5=   #K)#:#  1#?))Y   9p\'/)%%11 #)3b) .##1)*#!%1 #13.#!% 9#)+9 1 #)5v  #)5v  19;#1)*#!%1 #13.#!% 9#)+9 1 #)5v  %#)\'&#)1 #)3z9 \')5.#   1\'#)\'&#)1 #)3z9 )#))*# 1 #)5B#1 \')+%  1# "}, "Bujumbura": {"data" : ")Africa/Maputo"}
    , "Bangui": {"data" : ")Africa/Lagos"}, "Gaborone": {"data" : ")Africa/Maputo"}, "Juba": {"data" : "+) .&oi-#}m#)#%  A1c##)+% 1 `)5^  [#))># 1%W-)\'= 1`)#^&# Q#x)%%  A# "}, "Windhoek": {"data" : "+- Z$__\'#<k#)%A  9#O)\'%  A#e#)3r11A#\')\'v1 A#(%)\'v  A-1#)\'v 3 $#/3%=1 ||/)%=13 "}, "Dar_es_Salaam": {"data" : ")Africa/Nairobi"}, "Harare": {"data" : ")Africa/Maputo"}, "Tripoli": {"data" : "+3 N*$o%#Pm#)#%  19B##)5Y11%#)#%  %#)5E11%#)#%  %#)3># 1%#)#%  /)#%  A#$#)#%  1A0##)#%  .#+))% 1+/)5%   #))9 1%#))1 1 #)5-  %+))% 1++)5%  \')+1  A#;)3>#  11G+))% 1++)5%  A#))1 1 #)51  #)51  A#`)7I1 11`#))1 1 #)51  b#-\'\'5)1 #-5\'51 #)5*#1 A# "}
    , "Malabo": {"data" : ")Africa/Lagos"}, "Libreville": {"data" : ")Africa/Lagos"}, "Abidjan": {"data" : "+% uqip#0m#)#%   # "}, "Luanda": {"data" : ")Africa/Lagos"}, "Lome": {"data" : ")Africa/Abidjan"}, "Nouakchott": {"data" : ")Africa/Abidjan"}, "Bissau": {"data" : "+\' Dya@\'#0m# #%) 3#i%)#%   # "}, "Asmara": {"data" : ")Africa/Nairobi"}, "Kinshasa": {"data" : ")Africa/Lagos"}, "Asmera": {"data" : ")Africa/Asmara"}, "Timbuktu": {"data" : ")Africa/Abidjan"}, "Mogadishu": {"data" : ")Africa/Nairobi"}, "Djibouti":
    {"data" : ")Africa/Nairobi"}, "Douala": {"data" : ")Africa/Lagos"}, "Kampala": {"data" : ")Africa/Nairobi"}, "Dakar": {"data" : ")Africa/Abidjan"}, "Cairo": {"data" : "+% VcVc-#]k#)5%  AN#g##)/^ 1 #)5%  %#))^ 1 #)3b  %+))% 1+#)52#  %+)7%   #))b 1Q#)+I 1 \')5%   #)+% 1%|)+%)1|;)3>#9 %8#)5%9 S#)/*#)1%#)/Q)1%3)+%)1%#)+9)1%3)+%)1%`5)\'5 1`K-5%5  %#)3z  %#/3)5  %#-3%5  %#)1v  %#)1M   #)3I 1 #-5%5  1#)+b 1 #)-2#   #)1% 1 #-5%5  E -)\'5 1  -7%5   "}, "Blantyre": {"data" : ")Africa/Maputo"}, "Monrovia": {"data"
    : "+) L8B>%#qi#)#%  L8B>%#]#)\'%  u8eD%#@%)#=   # "}, "Mbabane": {"data" : ")Africa/Johannesburg"}, "Bamako": {"data" : ")Africa/Abidjan"}}, "Canada": {"Yukon": {"data" : ")America/Whitehorse"}, "Mountain": {"data" : ")America/Edmonton"}, "Pacific": {"data" : ")America/Vancouver"}, "Newfoundland": {"data" : ")America/St_Johns"}, "Central": {"data" : ")America/Winnipeg"}, "Eastern": {"data" : ")America/Toronto"}, "Saskatchewan": {"data" : ")America/Regina"}, "Atlantic": {"data" : ")America/Halifax"}}, "Asia":
    {"Tashkent": {"data" : "++ {TJq=#am#)+)  r#;)-v  &#16%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n)\'B#1 r-K/))% 1 O53\'=1 K,#5\'\'=11j)#%  r# "}, "Beirut": {"data" : "+% Zq,Z/#ii#)#%  A&#g##)\'6# 1 #)5*#  %#))- 1 #)5-  %#)\'.# 1 #)5A  %#))z 1 #)3b  N#3)+% 133)5%  M#)-z 1 7)5%  33)+% 1%#))># 1 #)3>#  9/)+% 1/?)5b  /#)-% 1%#)+I 1%+)+% 1 #)51  % -\'\'= 1 7-3\'=  % -5\'=   "}, "Hong_Kong": {"data" : "+- _Z(NQ#mk# 5:#N# F##]#)-^91F###)5%A)F###)9*#  V##3)7j1 F#Y%#))v 1 #19%= %#1)U=1 #17>#= %#1+)=1 3756#== /3/)%==1 O/5B#== KK/\'j==1%O/)b==1OO/5b== /#)9>#=19#)+U=1 #)5v=  "}
    , "Kabul": {"data" : "+\' {(Po=#4k#)#%  b#H%)#%  j# "}, "Chita": {"data" : "+1 &:*@Q#Lm#)9^  F##O)-v  V#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 F#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 V#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 g##/15.#1 F##+)\'2#1 V## "}, "Baku": {"data" : "+/ s8_a5#am#)+)  Q#L#)\'%  b1&#/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 Q-K/))% 1 O53\'=1 K,#5\'\'=11j53\'=1 b#3)#%  b-` %\'\'=)1+d%3\'=) % %5\'=) \')#%  b) l-\'\'=A1ll-5\'=I  "}, "Kathmandu": {"data"
    : "+\' k}J<E#Pm#)#%  z#u%)#%  &J_NE# "}, "Aqtobe": {"data" : "+3 Rem89#am#)+)  b#;)-v  r#8%))% 1r##)5%  &##\'))%  r1\'/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 b-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 r1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 915B#1 r# "}, "Kamchatka": {"data" : "+/ V>e!f#Xm#)7I  w##C)-v  *%AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 w#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 *%1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 #1\'6#1 w#-0#O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 *%# "}, "Istanbul":
    {"data" : ")Europe/Istanbul"}, "Nicosia": {"data" : "+\' s}(0/#Tm#)7Y  AEB%#))U 1 #)5Q  %#)+^ 1 #)5M  %//)%= 1/#)3*#  %#)5)  %l-3\'=  dh-\'\'= 1#)3%  A-h %\'\'=)1+d%3\'=) % %5\'=)  "}, "Pontianak": {"data" : "+3 2$@JO#}k#)+%  2$@JO#(#)7%  >##K)#:#  V##/)3!#  >##/)+%  F##+)+%  >##[)#%  F##(#)#%  6## "}, "Qostanay": {"data" : "+5 6!J];#am#)+)  b#;)-v  r#8%))% 1r##)5%  &##\'))%  r1\'/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 b-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 r1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 915B#1 &##t)\'%  r# "}
    , "Kuala_Lumpur": {"data" : ")Asia/Singapore"}, "Hanoi": {"data" : "+1 Ra{aM#uk#)/%  J<ZqM#7)+%  6##D#)9B#!% F##/)\'Y!% V###)3)  6##+))%  F##?)5%  6## "}, "Novokuznetsk": {"data" : "+/ .J$cE#am#)+%  &##;)-v  6#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 &#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 6#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 #1\'6#1 &#-0#O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 6## "}, "Bahrain": {"data" : ")Asia/Qatar"}, "Bangkok": {"data" : "+\' 2$DTK#ii#)#%  2$DTK#i#))%  6## "}
    , "Srednekolymsk": {"data" : "+/ &.({b#am#)+)  g##;)-v  w#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 g#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 w#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 *%#/15.#1 w## "}, "Karachi": {"data" : "+- F_<D=#yk#)#%  z#T#)3% 1z#/)5^  z#;)3>#  r#t)\'.#  r5B##/))= 1 #/5)=  9#)-% 1 \')7%   #))^ 1 "}, "Aden": {"data" : ")Asia/Riyadh"}, "Irkutsk": {"data" : "+1 !8FBM#ii#)#%  !8FBM#i#)#*#  6##K)-v  F#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 6#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 F#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 V##/15.#1 F## "}
    , "Hovd": {"data" : "+\' c@w]G#qk#)1%  &##4\')#%  6#E5\'))% 1\'#)5%  )W-\'\'= 1[[-3\'=  -#-)\'911 7-3\'91 33-\'\'911E\'-\'\'911\'\'-3\'9   "}, "Katmandu": {"data" : ")Asia/Kathmandu"}, "Ashkhabad": {"data" : ")Asia/Ashgabat"}, "Samarkand": {"data" : "+/ 6gPB=#am#)+)  b#;)-v  r#8%))% 1r##)5%  &##\'))%  r1\'/))% 1/+)5%  %O53\'=1 K,#5\'\'=11j)#%  r# "}, "Thimphu": {"data" : "+\' V{26G#ao#)1^  z#i#)5%  &## "}, "Ujung_Pandang": {"data" : ")Asia/Makassar"}, "Muscat": {"data" : ")Asia/Dubai"}, "Choibalsan": {"data"
    : ")Asia/Ulaanbaatar"}, "Thimbu": {"data" : ")Asia/Thimphu"}, "Amman": {"data" : "+\' *LFc/#}m#)#%  AF#o##)-9 1 +)5%  \'/)+% 1\'#)7%  %#)5%  %#))># 1 #)3>#  =#))% 1 #)5%  %+/)%5 1+3/5%5  \'#)+A 1%#))2# 1%#))f 1 #)32#  %#))I 1 \'/5%5   7/)%5 13#/3^5  %/73^5  %#1/% 1 /53\'5  +\'5\'\'1 1%K-)%5 1G#15&#  %#15^  %#53\'5  %755\'5  )#)9r  %?-)%5 1?C55\'5   #-\'%5 1#156#  Q# "}, "Jayapura": {"data" : "+) s]a0^#$o#)7%  V##S)3%  _##t)#%  V## "}, "Oral": {"data" : "+5 6kJ!7#am#)+)  Q#;)-v  r#8%))% 1r##)5%  &##\'))%  r1\'/))% 1/+)5%  %O53\'=1 K,#5\'\'=11v1\'.#1 b-C/))% 1 O53\'=1 K,#5\'\'=11j1#n1 r-O/))% 1 O53\'=1 K,#5\'\'=11j1\':#1 b1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 915B#1 r# "}
    , "Dubai": {"data" : "+% !qFq7#Pm#)#%  b# "}, "Chungking": {"data" : ")Asia/Chongqing"}, "Yakutsk": {"data" : "+/ 6!ZmW#Lm#)9^  F##O)-v  V#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 F#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 V#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 g##/15.#1 V## "}, "Seoul": {"data" : "+- 2$86W#}k#))%  N##3)#%  V##L#)3A  V#9-#)-% 1 #)3U  %#))- 1 +/3A=  \'#))% 1%#)+9 1/)\'v  N#A7+/3A=   #)+9 11#)+5 1 #)3E  %#)+r 1 #)3>#  %//+%= 1///3j=  \')1I  V#13//+%= 1///3j=  2#\'/+A=11\'\'/5A=9  "}
    , "Hebron": {"data" : "+- oN.R/#]k#)5%  AEg## +B#*%1 # 3>#*%  # 7b*%1)3 5B#*% /\' \'B#*%1%\' )^*%1)# +z*%A # 1B#*%1 \' 5B#*% %)+^  A9E#)+I 1 \')5%   #)+% 1%C)+%)1C;)3>#9 %#)5%9 \')-5  AN#K# )2#*%1 # 3v*% f#)/= 1 #)5U  %#))r 1 #)1B#  5#11)*%1 #13U*% 1#1+5*%1 #11*#*% %#))Y 1 #)3%  %#)+j 1 #)3=  %#))^ 1 #)3U  %#))I 1 #)31  %#))># 1 #)3-  %#)\'*# 1 #)1.#  %#)\'&# 1 #)3%  %#)\':# 1 #)39  %#))) 1 #)35  %#))% 1 #)16#  %#)\'B# 1 #)3-  %#)\'^ 1 #)3b  #)#%  A5/7/)%5 13#/3^5  %/73^5  %#1/% 1 /53\'5  -)#%  Ak) ;/)^5 1;3/5^5  %#)5%) %#)511 %\'))% 1\'#)3z  "
    + "%#)3U1 %\'-\'\'5 1\'#)3%  %#)31) %#)\'.# 1 #)1M  %#))%ec6#1 #)1%   #)1># 1 #)3>#  %+-)%5 1+#)3v) %#)32#  %#)5&#  %#)\'6# 1 #)5!#) %+-\'>#9)1++-5>#9) %#)\':# 1 #-5>#9  %\'-\'>#9 1\'#)5&#) %#)5:#) %#)\'2# 1 W-5>#91 S#)):#11%#))r11%#))Q11%8#-\'>#911l#)5j1 %#)5I1 %#)3*#1 %#)3f1 %#)3%1  #)5r11 4#-5>#91 0##)1&#1  #)5511%#)1b1  #)32#11%#)1%1  #)3n11%#)/!#1  #)3-11%#)/^1  #)1.#11%#)->#1  #)1j11%#)-z1  #)1-11%#)-91  #)/*#11%#)+:#1  #)/I11%#)+v1  #)/)11%#)+91  #)-&#11%#))2#1  #)-A11%#))Q1  #)+B#11%#))11  #)+!#11%#)+A11%#)):#11%#)"
    + ")Y11%#))911% -\'>#911E#)5r1 %#)5Q1 %#)511 %#)3n1 %#)3I1  #)5z11  -5>#91 %#)3)1  #)5Y11%#)1j1  #)5911%#)1I1  #)3v11%#)/*#1  #)3Q11%#)/f1  #)3111%#)/E1  #)1r11%#)-&#1  #)1Q11%#)-^1  #)/2#11%#)-=1  #)/n11%#)+!#1  #)/M11%#)+^1  #)-.#11%#)):#1  #)-f11%#))v1  #)-E11%#))U1  #)+*#11 "}, "Yekaterinburg": {"data" : "+1 >F&!;#@m#)/-  s<}&9#/)/^A b#O)-v  rAG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 b-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 r1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 &##/15.#1 r# "}
    , "Tel_Aviv": {"data" : ")Asia/Jerusalem"}, "Famagusta": {"data" : "++ k]o:/#Tm#)7Y  AEB%#))U 1 #)5Q  %#)+^ 1 #)5M  %//)%= 1/#)3*#  %#)5)  %l-3\'=  dh-\'\'= 1#)3%  A-h %\'\'=)1+d%3\'=) % %5\'=) t)3A  Q#\' 5:#) A-X# %\'\'=)1+d%3\'=) % %5\'=)  "}, "Kuwait": {"data" : ")Asia/Riyadh"}, "Calcutta": {"data" : ")Asia/Kolkata"}, "Urumqi": {"data" : "+% .BmiE#qm#)#%  &## "}, "Shanghai": {"data" : "+\' {eZ$U#ak#)#%  F#Yj#))U 1 #)5%  v#)-% 1 #)5U  %#)\'^ 1 #)7)  %#)#B# 1-#)3)  %#)+^ 1 #)5%  %#))^ 1 #)7%  %\')+% 1\'\')5%  #)+6#  F#-Z##)+111 7/3M=1 33/)M=11 "}
    , "Atyrau": {"data" : "+3 .J4.7#am#)+)  Q#;)-v  r#8%)5%  &##\'))%  r1\'/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 b-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 r1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 M1\'6#1 b-`O53\'=1 K,#5\'\'=11[[55\'=1 915B#1 r# "}, "Tbilisi": {"data" : "+7 Z8mX3#ii#)#%  Z8mX3#y#)+)  Q#L#)\'%  b1&#/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 Q-K/))% 1 O53\'=1 K,#5\'\'=11j)#%  Q)O -\'\'= 1+d-3\'=  %-3\'=  b-W -\'\'= 1+d-3\'=  % -5\'=  #-5\'= 1b#\'-\'\'=  b-d -\'\'= 1+d-3\'=  % -5\'=  C)-2#  Q-tO53\'=1 K,#5\'\'=11[[55\'=1 5-\'\'=1 b# "}
    , "Anadyr": {"data" : "+1 &gL&n#am#)+)  *%#;)-v  :%9G#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %1)%  *%Aa%#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 w#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 *%1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 #1\'6#1 w#-0#O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 *%# "}, "Vientiane": {"data" : ")Asia/Bangkok"}, "Brunei": {"data" : ")Asia/Kuching"}, "Jakarta": {"data" : "+3 Za@uM#4i#)1I  Za@uM#L% 9B#aiokU 6NuVO#G)7%  >##K)\'!#  V##/)3!#  >##/)+%  F##+)+%  >##[)#%  6## "}
    , "Gaza": {"data" : "+9 F&yD/#]k#)5%  AEg## +B#*%1 # 3>#*%  # 7b*%1)3 5B#*% /\' \'B#*%1%\' )^*%1)# +z*%A # 1B#*%1 \' 5B#*% %)+^  A9E#)+I 1 \')5%   #)+% 1%C)+%)1C;)3>#9 %#)5%9 \')-5  AN#K# )2#*%1 # 3v*% f#)/= 1 #)5U  %#))r 1 #)1B#  5#11)*%1 #13U*% 1#1+5*%1 #11*#*% %#))Y 1 #)3%  %#)+j 1 #)3=  %#))^ 1 #)3U  %#))I 1 #)31  %#))># 1 #)3-  %#)\'*# 1 #)1.#  %#)\'&# 1 #)3%  %#)\':# 1 #)39  %#))) 1 #)35  %#))% 1 #)16#  %#)\'B# 1 #)3-  %#)\'^ 1 #)3b  #)#%  A5/7/)%5 13#/3^5  %/73^5  %#1/% 1 /53\'5  -)#%  AE ;/)^5 1;3/5^5  %#)5%) %#)511 %\'))% 1\'#)3z  %"
    + "#)3U1 %\'-\'\'5 1\'#)3%  #)1:#  A##)3%  A=+\'))% 1 #)3U1 %\'-\'\'5 1\'#)3%  %#)31) %#)\'.# 1 #)1M  #)#%  A##)\'2#ec6# AA+\'-\'\'5 1 #)31) %#)\'.# 1 #)1M  %#))%ec6#1 #)1%   #)1># 1 #)3>#  #)1%  A#\')#%  A:)\'#))%ec6#1 #)1%   #)1># 1 #)3>#  %+-)%5 1+#)3v) %#)32#  %#)5&#  %#)\'6# 1 #)5!#) %+-\'>#9)1++-5>#9) %#)\':# 1 #-5>#9  %\'-\'>#9 1\'#)5&#) %#)5:#) %#)\'2# 1 W-5>#91 S#)):#11%#))r11%#))Q11%8#-\'>#911l#)5j1 %#)5I1 %#)3*#1 %#)3f1 %#)3%1  #)5r11 4#-5>#91 0##)1&#1  #)5511%#)1b1  #)32#11%#)1%1  #)3n11%#)/!#1  #)3-11%#)/^1  #)1.#11%#)->#"
    + "1  #)1j11%#)-z1  #)1-11%#)-91  #)/*#11%#)+:#1  #)/I11%#)+v1  #)/)11%#)+91  #)-&#11%#))2#1  #)-A11%#))Q1  #)+B#11%#))11  #)+!#11%#)+A11%#)):#11%#))Y11%#))911% -\'>#911E#)5r1 %#)5Q1 %#)511 %#)3n1 %#)3I1  #)5z11  -5>#91 %#)3)1  #)5Y11%#)1j1  #)5911%#)1I1  #)3v11%#)/*#1  #)3Q11%#)/f1  #)3111%#)/E1  #)1r11%#)-&#1  #)1Q11%#)-^1  #)/2#11%#)-=1  #)/n11%#)+!#1  #)/M11%#)+^1  #)-.#11%#)):#1  #)-f11%#))v1  #)-E11%#))U1  #)+*#11 "}, "Makassar": {"data" : "++ ..ZXS#Pm#)#%  ..ZXS#S)7%  F##K)%E  V##/)3!#  F## "}, "Ulaanbaatar":
    {"data" : "+\' gN0wM#qk#)1%  6##4\')#%  F#E5\'))% 1\'#)5%  )W-\'\'= 1[[-3\'=  -#-)\'911 7-3\'91 33-\'\'911E\'-\'\'911\'\'-3\'9   "}, "Harbin": {"data" : ")Asia/Shanghai"}, "Vladivostok": {"data" : "+/ wga:Y#Xm#)7^  V##C)-v  g#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 V#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 g#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 w##/15.#1 g## "}, "Qyzylorda": {"data" : "+9 w>a$=#am#)+)  b#;)-v  r#8%))% 1r##)5%  &##\'))%  r1\'/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 b-K/))% 1 O53\'=1 K,#5\'\'=11n13:#1 r-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 &#-O/))% 1 O53\'=1 K,#5\'\'=11j1\':#1 r1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 915B#1 &##[)9v  r# "}
    , "Phnom_Penh": {"data" : ")Asia/Bangkok"}, "Riyadh": {"data" : "+% Vcg!5#ao#)\'Y  Q# "}, "Ashgabat": {"data" : "++ ocmP9#am#)+)  b#;)-v  r16%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n)\'B#1 b-K/))% 1 O53\'=1 K,#5\'\'=11j)#n1 r# "}, "Aqtau": {"data" : "+3 R<ii5#am#)+)  b#;)-v  r#8%)5%  &##\'))%  r1\'/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 b-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 r-O/))% 1 O53\'=1 K,#5\'\'=11b13*#1 b1W/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 915B#1 r# "}, "Tokyo": {"data" : "+% og:{[#(k# 9B#># V#1_%#/+)= 1 //3A92% +#/))= 1%\'/+)= 1 "}
    , "Novosibirsk": {"data" : "+3 o.kiC#Lm#)9YQ &##O)-v  6#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 &#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 6#-O/))% 1 O53\'=1 K,#5\'\'=11f)+!#  &#1S/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 6##/15.#1 &##+1/&#1 6## "}, "Barnaul": {"data" : "+3 .6!{C#Lm#)9I  &##O)-v  6#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 &#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 6#-O/))% 1 O53\'=1 K,#5\'\'=11^)+6#  &#1[/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 6##/15.#1 &##+1\'2#1 6## "}
    , "Jerusalem": {"data" : "+\' N*HT/#ii#)#%  *]oR/#a#)#%  Ac\'z# +B#*%1 # 3>#*%  # 7b*%1)3 5B#*% /\' \'B#*%1%\' )^*%1)# +z*%A # 1B#*%1 \' 5B#*%  # )>#*%1%# )^*%1 # 3Y*% %# \'B#*%1 # 7I*% %# )n*%1 # 5j*% %# )M*%1 # 3Q*% %# -Q*%1 # 3M*% %# -M*%1 # 3I*% %# -)*%1 # 3:#*% %# )2#*%1 # 3v*% f#)/= 1 #)5U  %#))r 1 #)1B#  5#11)*%1 #13U*% 1#1+5*%1 #11*#*% %#))Y 1 #)3%  %#)+j 1 #)3=  %#))^ 1 #)3U  %#))I 1 #)31  %#))># 1 #)3-  %#)\'*# 1 #)1.#  %#)\'&# 1 #)3%  %#)\':# 1 #)39  %#))) 1 #)35  %#))% 1 #)16#  %#)\'B# 1 #)3-  %#)\'^ 1 #)3b  %#)\'v 1 #)3Y  %#)\'r 1 #)"
    + "39  %#)))11 #)3-1 %#))Y11 #)59) %#))E)1 #)3&#) %#)\':#)1 #)5=) %#)\'6#)1 #)5-) %#))=)1 #)3z) %?-)%511?#)5E1 %#)5%1 %#)3b1 %#)551 %#)32#1 %#)3Q1 %#)5)1 %#)3!#1 % /\'!#511  -5\'=1  "}, "Kolkata": {"data" : "+1 {eRyE#]g#)-6#  >Z4yE#d)#%  66u4C#X#)#%  z#T#)5% 1z#\')+^  z##)3% 1z#/)5^  z# "}, "Kuching": {"data" : "++ gc2_O#im#)\'%  >##?)#%  F#));)3Y sH>(#;;)9Y  \')%b  V##/)3Q  F## "}, "Dacca": {"data" : ")Asia/Dhaka"}, "Baghdad": {"data" : "+) V6(R3#4k#)#%  g_uP3#8#)#%  Q#m%)+%  QA #)+% 1 +)5%  \'#)\'B# 1%\'))% 1 753\'=) 335\'\'=)1%d1)%91dd15%9  "}
    , "Dhaka": {"data" : "+/ VkgDG#4k#)#%  >Z4yE#8%)5%  .##\')+^  z##)3%  .##G)3>#  &##T%)#%  &#) #)-n!%1 #)9B#eP<Xn  "}, "Yerevan": {"data" : "+/ c$uR3#am#)+)  Q#L#)\'%  b1&#/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 Q-K/))% 1 O53\'=1 K,#5\'\'=11^13&#1 b#+)#%  b-WO53\'=1 K,#5\'\'=11[[55\'=1 \')#%  b) #5\'\'=11 #55\'=1  "}, "Saigon": {"data" : ")Asia/Ho_Chi_Minh"}, "Dili": {"data" : "++ ZHXwU#,m# 9B#F# F##D#)%v!% V##P#)+-  F##(#)3f  V## "}, "Singapore": {"data" : "+3 B4<:M#ak#)#%  B4<:M#3)-%  6##8#)#% sH>(#6##/)#%  6NuVO#7)3%  >##\')%b  V##/)3Q  >##X# 9B#F# F## "}
    , "Rangoon": {"data" : ")Asia/Yangon"}, "Damascus": {"data" : "+\' :m!k/#Pm#)#%  Ak# //)^=11///5%=1 c##)):#11 #)5%1 %+)+%11+#)3>#1 %#)5%1 %#)3>#1 %#))&#11 K)5%1 GO)+%11\'\')3%1 5\'))E11\'\')5%1 )#)%b11 #)5E1 %#)\'%11 \')5B#1  #)\'^11%#)\'B#11 #)5%1 %#))%11 #)3>#1 %#))% 1 \')5%   #))A 1%#)\'.# 1 #)3*#  %+))% 1+O)5%  C\'-\'\'% 1%?))% 1 #)3z  %#-\'\'5 1 #/7%5  %#/)%5 1 #)7%  %#-\'\'5 1%\'/)%5 1%K-\'\'5 1WW-5\'5  #)56#  Q# "}, "Taipei": {"data" : "+) 6s>&U#Lk#)#%  F##m#)5%  V##C)3v) F#^%#)+^ 1 #)5%  %#))^ 1 #)7%  %/)+% 1//)5%  %#)\'% 1 +)7%  \';))% 13;)5%  \'\')-% 1U\'))% 1\'\')5%  1#)/% 1 #)5%   "}
    , "Macau": {"data" : "+) :<o@Q#mk#)5>#  F##]#)9v!% V#-%\'))>#!%1\'#)7f!% %#)3>#!% +)5%  F#.#/\'))>#!%1 #)3>#!% -#1)>#!%1 #13>#!% %#1)n!%1 #17>#!% %#1+)!%1 #15B#!% %\'7)%9!%1\'\'55\'9!% %#1\'B#!%1 #156#!% %\'7)%9!%1\'#17%!% %\'55\'9!%  +7\'f9!%1\'#175!% %C/7%== ??/\'j==1%C/)b==1C\'/5b=5 %G/5b== /#)9>#=1)\'/)b==1-#)+U=1 #/5b==  "}, "Manila": {"data" : "++ (!48,##4g#)9B#  J$FyS#H%)+M  F#)Z##)7% 1%#)%%  7)+%  V##+)7%  F#5?#)%%  f#))Q 1 #)/%  &##)\'z 1 #)3v   "}, "Ulan_Bator": {"data" : ")Asia/Ulaanbaatar"},
    "Kashgar": {"data" : ")Asia/Urumqi"}, "Qatar": {"data" : "+\' >{8&7#Pm#)#%  b#<%)-%  Q# "}, "Chongqing": {"data" : ")Asia/Shanghai"}, "Bishkek": {"data" : "+- Z}g}?#am#)+)  r#;)-v  &#16%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 r-K/))% 1 O53\'=1 K,#5\'\'=11n)1B#1 r1%37)== 133-3\'=  %C-\'\'=51C?-5\'=5 \')1Q  &## "}, "Tomsk": {"data" : "+3 N>{4E#Lm#)9z  &##O)-v  6#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 &#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 6#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 A)+%9 &#-lO53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 6##/15.#1 &##+1+:#1 6## "}
    , "Colombo": {"data" : "+3 ooR,C#ii#)#%  N{q,C#0#)#%  z#X#)#5 )z##)3% 1z#/)5b1 z#8%)+*#  .###)5.#% &##K))^% z# "}, "Khandyga": {"data" : "+3 V&y&[#Lm#)9^  F##O)-v  V#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 F#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 V#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 9)#%  g#-tO53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 w###13U  g##/15.#1 V## "}, "Dushanbe": {"data" : "++ .ZTg=#am#)+)  r#;)-v  &#16%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#11r##13E1 r# "}, "Pyongyang":
    {"data" : "+- s$8{U#}k#))%  N##3)#%  V##L#)1&#  V##(\')1^  N##/)+1&% V## "}, "Magadan": {"data" : "+1 Ns<@b#am#)+)  g##;)-v  w#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 g#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 w#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 *%#/15.#1 g##+1)&#1 w## "}, "Tehran": {"data" : "++ BX:$7#@m#)#%  BX:$7#p)-U  Y-,##)#%  w%#)\'v!%1 #)5v  #)5v  b=y%#)#%  w%#)\'v!%1 #)5v  %#)\'*# 1 #)15) %#)+2# 1 #)3n  #)#%  YZ#\'#)\'*# 1 #)15) %#)+2# 1 #)3n  %#)\'v 1 #)3!#  M#)+- 1%/)\'z 133)3z  %#)\'v 1 #)3v  %+)\'z 1++)3z  %#)\'v 1 #)3v  %+)\'z 1++)3z  %#)\'v 1 #)3v  %#)\'z 1 #)3z  -#)\'v 1 #)3v  %+)\'z 1++)3z  %#)\'v 1 #)3v  %+)\'z 1++)3z  %#)\'v 1 #)3v  %+)\'z 1++)3z  %#)\'v 1 #)3v  %\')\'z 1\'\')3z   "}
    , "Sakhalin": {"data" : "+3 !$HX^#qk#)1!#  V##i#)1*#  w#A(##)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 g#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 w#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 U5\'\'=1 g#-WO53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 w##/15.#1 g##+1\'2#1 w## "}, "Yangon": {"data" : "++ :egZI#ii#)#%  :egZI#i#)#%  .##|)+%  V##/)+-  .## "}, "Almaty": {"data" : "+/ *0yNA#am#)+)  r#;)-v  &#16%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 r-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 &#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 915B#1 &##t)\'%  r# "}
    , "Krasnoyarsk": {"data" : "+/ *TouG#Pm#)#9  &##K)-v  6#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 &#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 6#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 F##/15.#1 6## "}, "Omsk": {"data" : "+/ F6ae?#Lm#)7Y  r#O)-v  &#AG#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 r-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 &#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 6##/15.#1 &## "}, "Macao": {"data" : ")Asia/Macau"}, "Ho_Chi_Minh": {"data"
    : "+5 J<ZqM#uk#)/%  J<ZqM#7)+%  6##D#)9B#!% F##/)\'Y!% V###)3)  6##+))%  F##C)/%) 6##3)9B#!% F##d)-U  6## "}, "Ust-Nera": {"data" : "+3 R4Xc^#Lm#)9^  F##O)-v  V#9G#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  )))%  w#A]%#)%Y!%1 #)\'r!%A #)3% 1 #)5%  Z%/))% 1/+)5%  %O53\'=1 K,#5\'\'=11n1\'B#1 g#-K/))% 1 O53\'=1 K,#5\'\'=11j1#n1 w#1O/))% 1 O53\'=1 K,#5\'\'=11[[55\'=1 \'1\'2#1 *%##13U  w##/15.#1 g## "}}, "Etc": {"UTC": {"data" : "+#  # "}, "UCT": {"data" : ")Etc/UTC"}, "Zulu": {"data" : ")Etc/UTC"}, "GMT+9":
    {"data" : "+# X## "}, "GMT-10": {"data" : "+# g## "}, "GMT-11": {"data" : "+# w## "}, "GMT-7": {"data" : "+# 6## "}, "GMT+5": {"data" : "+# t# "}, "GMT-8": {"data" : "+# F## "}, "GMT+6": {"data" : "+# (## "}, "GMT+12": {"data" : "+# ,%# "}, "GMT-9": {"data" : "+# V## "}, "GMT+7": {"data" : "+# 8## "}, "GMT+11": {"data" : "+# y## "}, "GMT+8": {"data" : "+# H## "}, "GMT+10": {"data" : "+# i## "}, "GMT-3": {"data" : "+# Q# "}, "GMT+1": {"data" : "+# 3# "}, "GMT-4": {"data" : "+# b# "}, "GMT+2": {"data" : "+# C# "}
    , "GMT-5": {"data" : "+# r# "}, "GMT+3": {"data" : "+# S# "}, "GMT-6": {"data" : "+# &## "}, "GMT+4": {"data" : "+# d# "}, "GMT-0": {"data" : ")Etc/GMT"}, "GMT-1": {"data" : "+# 1# "}, "GMT-2": {"data" : "+# A# "}, "GMT+0": {"data" : ")Etc/GMT"}, "Universal": {"data" : ")Etc/UTC"}, "GMT0": {"data" : ")Etc/GMT"}, "GMT-12": {"data" : "+# *%# "}, "GMT-13": {"data" : "+# :%# "}, "GMT-14": {"data" : "+# J%# "}, "GMT": {"data" : "+#  # "}, "Greenwich": {"data" : ")Etc/GMT"}}, "Pacific": {"Easter": {"data" : "+) i._JO#4k#)#%  i._JO#q#)3%  8#M73)3% 1/3))%  V## 7-A1%# \'>#9  # 7!#A1%# \':#9 %# \'Y9 \'+\'5E=A1 [\'\'E=9 W# 3>#A1%W\'5E=A15 \'Y9 (#6#K[\'\'E=9 W# 3>#A1%W\'5E=A1 # )Q9 %+\'\'E=9 +\'\'5E=A1%# 3bA1%7\'\'E=9 7;\'5E=A1 # \'>#9 %#\'\'E=9  # 32#A1%# )19  O\'5E=A1K?\'\'E=9 %# \'>#9 %#\'\'E=9 %#\')%=9 %#\'+)=9  #\'1b=A1%+\')!#=9 ++\'3)=A1)+\'+E=9 ++\'1E=A1% \'))=9  +\'3)=A1%#\'3E=A1% \'3)=A1 "}
    , "Fiji": {"data" : "+% wViBn#<m#)5.#  *%QZ\'\'/7%=11 \'-%\'=9 E#)7:#11%#-\'\'=9  //5v=11+#/\'%=9 %\'/#j=9 %#/#j=1  3/7%=11/;/#Q=9 +#/7A=11%#)9r11 "}, "Port_Moresby": {"data" : "+\' FNLT`#ii#)#%  gB.T`#`)#%  g## "}, "Kiritimati": {"data" : "+) 8{eed#ak#)#%  Hk$>f#H\')5%  i##`)9B#  J%# "}, "Pohnpei": {"data" : ")Pacific/Guadalcanal"}, "Chuuk": {"data" : ")Pacific/Port_Moresby"}, "Yap": {"data" : ")Pacific/Chuuk"}, "Kwajalein": {"data" : "+/ {mBsh#ak#)#%  w##X#)#%  g##3))%  V##/)%9  w##,#)5%  ,%#(#)1v  *%# "}
    , "Kosrae": {"data" : "+5 0g,8v#4g#)9B#  B<Lyf#P%)#%  w##W)5%  V##7)%%  w##l)#%  g##3))%  V##3)1%  w##(#)5%  *%#@#)#%  w## "}, "Auckland": {"data" : "+\' F6aLl#8i#)7)  !%=V%#)7911%#)\'11  7/5A=1)33/\'^=1 %;-)\'=1 ;;-3\'=1)9#)#%  #)#%  *%QS;-)\'=1 ;;-3\'=1)9#)#%  6##77%=11%#5%\'=1  W55\'=11SW7\'%=1  #75A=11%d75%=11dh7\'^=1   53\'=11% 7)%=1  "}, "Johnston": {"data" : ")Pacific/Honolulu"}, "Efate": {"data" : "+% cy&*j#0m#)#U  w#9_%# 9z&#1%# \'>#&# EC/3!#= 1??/\'!#=  %\'/#!#=  \'#/5!#= 1 "}, "Niue": {"data"
    : "+\' yooHj#uo#)5b  (__Jj#S)/%  y## "}, "Majuro": {"data" : ")Pacific/Tarawa"}, "Truk": {"data" : ")Pacific/Chuuk"}, "Ponape": {"data" : ")Pacific/Pohnpei"}, "Guadalcanal": {"data" : "+% !,T<f#0m#)5%  w## "}, "Honolulu": {"data" : "++ i.wod#Lk#)#U&# q##]#))>#11q###)+v&# q#5`\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 +)-A1 i## "}, "Guam": {"data" : "+- uyy.!##4g#)9B#  Z(]$`#P%)#%  g##i#)9I  V##/)/B#  g#Y^#)-2#11)#)#:#1 9#)3%11)#)#.#ec6#  #)-z11 #)1B#1 %\'-)\'=11\'\'/3%=1 )#)9b11%#)%&#1 )#)+.#11 #)1z4!28\' %#))&#11 #)16#1 $#)9!#  g## "}
    , "Chatham": {"data" : "+\' ke>@p#8i#)7)  _o:Fp#H\')#%  FN8!tE6##77%=m:HH)1%#5%\'=m:HH)  W55\'=m:HH)1SW7\'%=m:HH)  #75A=m:HH)1%d75%=m:HH)1dh7\'^=m:HH)   53\'=m:HH)1% 7)%=m:HH)  "}, "Midway": {"data" : ")Pacific/Pago_Pago"}, "Tahiti": {"data" : "+% <@.(b#0m#)5%  i## "}, "Kanton": {"data" : "+)  #8o#)1B#  ,%#q#)5%  y##`)9B#  :%# "}, "Pago_Pago": {"data" : "+\' gk!Xr#<k#)/5  i6VXj#p)#%  y## "}, "Galapagos": {"data" : "+\' $<c4G#}m#)#%  t#H%)#%  (#)9#)76# 1%#)%5   "}, "Funafuti": {"data" : ")Pacific/Tarawa"}
    , "Marquesas": {"data" : "+% @6qu[#0m#)5%  a## "}, "Rarotonga": {"data" : "+) _*qwv#Xk#)9.#  qwe8f#@%)5b  q##0#)7Q  i#- #)7Q )%S/\'%=  SO-5\'= ) "}, "Tarawa": {"data" : "+% _:H*l#ak#)#%  *%# "}, "Saipan": {"data" : ")Pacific/Guam"}, "Gambier": {"data" : "+% my{wY#0m#)5%  X## "}, "Wallis": {"data" : ")Pacific/Tarawa"}, "Tongatapu": {"data" : "+) c4]Zp#Xo#)3I  ZyX_p#d)#%  :%#a#)#%  :%9 #15=11%#1\'n1  \'/7%=11 \'-#\'=1 Y#/7%=11%#/#^=9  "}, "Fakaofo": {"data" : "+\' 44ocj#ak#)#%  y##m))9>#  :%# "}, "Wake": {"data"
    : ")Pacific/Tarawa"}, "Samoa": {"data" : ")Pacific/Pago_Pago"}, "Enderbury": {"data" : ")Pacific/Kanton"}, "Pitcairn": {"data" : "+\' X!}sW#ak#)#%  P##8)))2#  H## "}, "Apia": {"data" : "++ R}mBr#<k#)/5  }$imj#p)#%  $%#e#)#%  y#-Z%#-3\'= 1%#/)%9A  #-3\'991#)9>#  :%5\'#-3\'= 1%#/)%9A  #-3\'991%G/)%=A GC-3\'=91 "}, "Noumea": {"data" : "+% 2(_ah#0m#)#U  w#1o%\'/9%= 1 \')%2#  f#19%11%#1\')1  "}, "Palau": {"data" : "+\' ik4B&##4g#)9B#  g6DoY#P%)#%  V## "}, "Nauru": {"data" : "++ >k8kh#Tm#)#^  !%#x)1:#  V##/)3A  !%#P#)%I1 *%# "}
    , "Bougainville": {"data" : "+- gJ>Bd#ii#)#%  gB.T`#`)#%  g##(%)/%  V##/)1v  g##$\')96#1 w## "}, "Norfolk": {"data" : "+/ B0Z!j#ak#)#%  !<y!j#4%)#%  !%#$#152#11!%#\'1\')1 !%#i#1511 w##3)/%  w#1l;55\'=11 #5\'\'=1 % 7)%=1   75%=11 "}}, "America": {"Belem": {"data" : "+\' (62F5#8m#)#%  Svf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1#)3Q  S# "}, "Guayaquil": {"data" : "+\' y:D,C#4k#)#%  qB6oA#m#)#%  t)_%#)76# 1%#)%5   "}
    , "Costa_Rica": {"data" : "+\' u4!$E#4k#)#%  u4!$E#D#)#^  (#5R%\'-%\'= 1\'\'/-%=  M\'/#^9 1\'#)/%  %#)\'^   "}, "Hermosillo": {"data" : "+1 (&JkO#Xm# #%Y 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (##K))&#  8##D%)#%  8#1$%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %)#%  8## "}, "Argentina/Buenos_Aires": {"data" : "+/ ({LR9#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  SA+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S5\'#/5%= 1%#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1 "}
    , "Punta_Arenas": {"data" : "+= }uH4?#4k#)#%  Dy00?#t)#I  t#;)/%  Dy00?#+)3I  d#\')/%  Dy00?#C)3%  t) 3)3% 1/3))%  #)3%  d#K)-%  t##)1%  d#3)1:# 1t#\'))%  t##)+v!% dB#p3))%  V## 7-A1%# \'>#9  # 7!#A1%# \':#9 %# \'Y9 \'+\'5E=A1 [\'\'E=9 W# 3>#A1%W\'5E=A1 # )Q9 %+\'\'E=9 +\'\'5E=A1%# 3bA1%7\'\'E=9 7;\'5E=A1 # \'>#9 %#\'\'E=9  # 32#A1%# )19  O\'5E=A1K?\'\'E=9 %# \'>#9 %#\'\'E=9 %#\')%=9 %#\'+)=9  #\'1b=A1%+\')!#=9 ++\'3)=A1)+\'+E=9 ++\'1E=A1))91  S# "}, "Iqaluit": {"data" : "+)  #Lo#)1%  tA$##)+*#11 #)7%  !##)%E11-# 1Y!%1 #)3>#1 2#[-)\'=11[P#-5\'=1 pp/)%=11=)5B#1 (#-,#S-)\'=11SH#-5\'=1 pp/)%=119)5:#1 t50#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Godthab": {"data" : ")America/Nuuk"}, "Jujuy": {"data" : ")America/Argentina/Jujuy"}, "El_Salvador": {"data" : "+% 4mg,G#Tm#)#%  (#)s%\'/+%= 1\'\'-3\'=   "}, "Monterrey": {"data" : "+/ 4<FPK#Xm# #%Q 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (##L%)#%  (#-xe#-5\'=1 @#K-)\'=11%p/)%=11f)#%  (#Ae##)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1  "}, "Sao_Paulo": {"data" : "+) T@i}3#8m#)#%  SAf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1#)5!# 1S#\')#%  S2%\'#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1%#)%f   #)5r 1%#)%E   #)5*# 1%#)#B#   +/5M= 1\'\'/%^=  %#)%M   #)59 1%#)%b   #)59 1%#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1 7/%^=  3#)7- 1%#)5n 1%#)7) 1%#)5b 1%#)75 1%#)%*#   #/5A= 1%G/5^= 1G//%^=  %#/%z=  %\'/%^=  %#/%z=  %//%^=  \'#/7%= 1 "}
    , "Bahia": {"data" : "++ (Ns81#8m#)#%  S{#f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1%#)%f   #)5r 1%#)%E   #)5*# 1%#)#B#   +/5M= 1\'\'/%^=  %#)%M   #)59 1%#)%b   #)59 1%#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1 7/%^=  3#)7- 1%#)5n 1#)3&#  S#C)5b  S53#)%*#   #/5A= 1%G/5^= 1G//%^=  %#/%z=  #)5v  S# "}, "Indiana/Winamac": {"data" : "+1 <,0VE#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (#1 [-)\'=11[C-3\'=1 %\'-5\'=1 %/-3\'=1 \'))>#1 t#C)#%  t1(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11))#%  t#T#)))1 (#5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1 #)\'M1 t1i#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Grenada": {"data" : ")America/Puerto_Rico"}, "Grand_Turk": {"data" : "+- e4V8?#4k#)#%  a>DLA#|)%%  t#y%)#%  t9Se#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1 C)\'A1 d#/)\'M9 t18%e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Montserrat": {"data" : ")America/Puerto_Rico"}, "Panama": {"data" : "+\' (2H&C#4k#)#%  8R$.C#l))z  t# "}, "Guadeloupe": {"data" : ")America/Puerto_Rico"}, "Guatemala": {"data" : "+% L0gFG#Hm#)55  (#AF%#)7*# 1%#)%&#  E#)+v 1 #)3z  A#)\'!# 1 #)3=  ^#))># 1 #)5%   "}, "Guyana": {"data"
    : "++ (R]L9#,m#)1%  d#3)\'%  $qi&9#]%)1%  S#h)\':#) d# "}, "Swift_Current": {"data" : "++ iNR,O#qk#)3%  8#5U#))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 \'-)\'=1 8#9\'# 1Y!%1 #-3\'=1 %#/)A=11 #/5A=1 %K-)\'=11KK-3\'=1 =)#%  8#5=#-)\'=11 #-5\'=1 )+-)\'=11+#-5\'=1 %\'-3\'=1 O-)\'=1 (## "}, "Puerto_Rico": {"data" : "+) 4T{0=#Xk#)\'6#&# d#u#)+-  d5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  d# "}, "Moncton": {"data" : "+3 }<ys;#ui#)9E  t#p)-^  d)b#))Y11 #)52#1 `)#%  dA +/-A=)1++/3A=) %+/-%=)1++/3%=) %#)+2#)1 +/3v9) \'#)+n)1%#)+1)1\')#%  d5(##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 \')#%  d5?+/3v9)  #)+1)150#-)\'=110#K-3\'=1 %`-5\'=1 \')#%  d58## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 pp/)%=11U)#%  d1(%0#-)\'=11``-5\'=1 vW/)%=ec6#1WW-5\'=ec6# \')#%  d1L#H#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Danmarkshavn": {"data" : "+) 4m*!)#@m#)/6#  S#m%))91 S5//\')%=)1+# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=) #)#%   # "}, "Fort_Wayne": {"data" : ")America/Indiana/Indianapolis"}, "Nome": {"data" : "+3 RT4et#4i#)5nT**cK }LDLh#L#)1r&# y##q#)#%  y#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  y##x))%  y##+)#%  y#=(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11-)5>#1 X#-de#-5\'=1 D##-%\'=11%K-)\'=11-)7>#  X#9de#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Porto_Velho": {"data" :
    "+\' 4T6c;#8m#)#%  dvf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1#)3Q  d# "}, "Cuiaba": {"data" : "+) i6.$9#8m#)#%  d{#f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1%#)%f   #)5r 1%#)%E   #)5*# 1%#)#B#   +/5M= 1\'\'/%^=  %#)%M   #)59 1%#)%b   #)59 1%#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1 7/%^=  3#)7- 1%#)5n 1#)3&#  d#\')5%  dY/7/%^=  /#)5n 1%#)7) 1%#)5b 1%#)75 1%#)%*#   #/5A= 1%G/5^= 1G//%^=  %#/%z=  %\'/%^=  %#/%z=  %//%^=  \'#/7%= 1 "}
    , "Pangnirtung": {"data" : ")America/Iqaluit"}, "Kralendijk": {"data" : ")America/Curacao"}, "Indiana/Vincennes": {"data" : "+1 ]i:iE#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (#E #-)\'=11 #-3\'=1 =\'-)\'=11\';-3\'=1 3#)+% 1%?-)\'=11/#-5\'=1 %#-3\'=1 %\'-5\'=1 \')).#1 t#7)#%  t1(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11))#%  t#T#)))1 (#5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1 #)711 t1i#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Indiana/Indianapolis": {"data" : "+7 yogLE#ui# 7jV# (#)R#\'-\'\'=11\'\'-5\'=1 \')#%  (#)v#)-z11 W-3\'=1 Q)#%  (#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (#-7#)-z11 W-3\'=1 CC-)\'=11\'))&#1 t#+)3:#1 (##\'))2#1 t#O)#%  t1(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11))#%  t#T#)#%  t5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Belize": {"data" : "+% ],uuE#0m#))%  (#M9$#/5)= )|$#/%E=   #)-6# 1-# 1Y!%1 #)9b  )t/5)= )pt/%E=  5#)95 1%#)%E  A#)9j 1%#)%Q   "}, "Indiana/Marengo": {"data" : "+3 }uXPE#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 ;)#%  (#1 #-)\'=11 #-3\'=1 -;-)\'=11;;-3\'=1 \'))>#1 t#C)#%  t5(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911#)#911(###)52#1 t5?e#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11I)#%  t#@#)#%  t5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Anguilla": {"data" : ")America/Puerto_Rico"}
    , "Argentina/Ushuaia": {"data" : "+5 <iZ]=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  SA+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S#3)+>#  d##)-r  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}, "Santiago": {"data" : "+= Dy00?#4k#)#%  Dy00?#t)#I  t#;)/%  Dy00?#+)3I  d#\')/%  Dy00?#C)3%  t) 3)3% 1/3))%  #)3%  d#K)-%  t##)1%  d#3)/^ 1d##)1:# 1t#\'))%  t##)+v!% dR#p3))%  V## 7-A1%# \'>#9  # 7!#A1%# \':#9 %# \'Y9 \'+\'5E=A1 [\'\'E=9 W# 3>#A1%W\'5E=A1 # )Q9 %+\'\'E=9 +\'\'5E=A1%# 3bA1%7\'\'E=9 7;\'5E=A1 # \'>#9 %#\'\'E=9  # 32#A1%# )19  O\'5E=A1K?\'\'E=9 %# \'>#9 %#\'\'E=9 %#\')%=9 %#\'+)=9  #\'1b=A1%+\')!#=9 ++\'3)=A1)+\'+E=9 ++\'1E=A1% \'))=9  +\'3)=A1%#\'3E=A1% \'3)=A1 "}
    , "Argentina/Catamarca": {"data" : "+9 T}k*=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1%)\'-  d##)5r  S1/#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S#3)-%  d##)-r  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}, "Argentina/ComodRivadavia": {"data" : ")America/Argentina/Catamarca"}, "Boise":
    {"data" : "++ H6*wQ#ui# 7jg# H#)R#\'-\'\'=11\'\'-5\'=1 3)+U1 8#A7\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911#)#%  8###)%-1 8#A?e#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Creston": {"data" : ")America/Phoenix"}, "Miquelon": {"data" : "+) u${$9#,m#)-^  d#$\')+%  S#?)#%  S5WS-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Jamaica": {"data" : "++ a>DLA#4k#)#%  a>DLA#|)%%  t#e%)#%  t5?e#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11))#%  t# "}, "Rankin_Inlet":
    {"data" : "+)  #,q#)#%  (#5S# 1Y!%1 #)3>#1 2#[-)\'=11[P#-5\'=1 pp/)%=119)5:#1 t#\'))%9 (#54#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Buenos_Aires": {"data" : ")America/Argentina/Buenos_Aires"}, "Toronto": {"data" : "+- ],y!C#Hk#)#%  t)!##))Y11 #)52#1 \')#%  tU #)\'>#&%1 #)5.#  %#)+)11 #)3.#  %#)+^11 #)3^1 %\'/+A=11\'3/3^=1 +//+%=11 K/3*#=1 GG/)*#=11%+-)\'=11+\'-3\'=1 /1%E1 t5(##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 \')#%  t9C+-)\'=115/-3\'=1 +4#-)\'=11(#\'-7\'=1 %7-3\'=1 %d-5\'=1 \')#%  t=<## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Eirunepe": {"data" : "+/ yR(}=#8m#)#%  tvf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1#)3Q  t#7)36#  t5\'#)%E   #)5*# 1%#)#B#   +/5M= 1\'\'/%^=  %)3z  t#[)-&#  d#7)7I  t# "}, "Dawson": {"data" : "+- 4H$u[#]k#)1r  X#=j#))Y11 #)52#1 %#)+*#11 #)7%  !##)%E11-# 1Y!%1 #)3>#1 t)#%  X#) #-)\'= A #-5\'=1 C)56#  H##?)#%  H#=T## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1 W)7%  8## "}
    , "Argentina/Mendoza": {"data" : "+A u0eg=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1))\'1  d##)5^ 1d#\')\'%  d##)5^ 1d#\')\'%  d##)5j  S13#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S#3)+!#  d##)3.#  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}, "Nassau": {"data" : ")America/Toronto"}
    , "Vancouver": {"data" : "+\' <@:FU#yi#)#%  H#EN##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 %i#-)\'=11i##)3:#1 %[-3\'=1 %y#-5\'=1 n)#%  H#5WS-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Noronha": {"data" : "+/ e}cy-#8m#)#%  C*#f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1#)3f  C#G)3>#  C9\'#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1%)5^  C#\')3U  C1\'#)%2#   \'/5A= 1 7/%^=  3#)7- 1#)5%  C# "}
    , "Argentina/Cordoba": {"data" : "+3 (_2i;#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1%)\'-  d##)5r  S1/#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S5\'#/5%= 1%#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1 "}, "Argentina/La_Rioja": {"data" : "+9 Hw>@=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1%)\'%  d##)+=  S1/#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S#3)-%  d##)-r  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}
    , "Regina": {"data" : "+\' }8.JM#qk#)3%  8#fU#))Y11 #)52#1 Q3/+%= 133/5%=  -3/)A= 13#/5A=  %#/5%=  %+/5A=  %#)%E11-# 1Y!%1 #-3\'=1 %#/)A=11 #/5A=1 %K-)\'=11KK-3\'=1 )#-)\'=11 #-5\'=1 \'-)\'=1 (## "}, "St_Vincent": {"data" : ")America/Puerto_Rico"}, "Scoresbysund": {"data" : "++ i{]c)#@m#)/6#  C#m%))91 C1//7)%=11+#15%1 %d53\'=1 [ 5\'\'=11#)\':#  313/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=) 8#)\'B#  C-}#d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Louisville": {"data" : ")America/Kentucky/Louisville"}, "Aruba": {"data" : ")America/Puerto_Rico"}
    , "North_Dakota/Center": {"data" : "+\' yF*eK#ui# 7j_# 8#MR#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11Y)5*#1 (#5,#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Thule": {"data" : "+% 8&Fg=#@m#)/6#  d9:\'\'-\'\'=11\'\'-3\'=1 %W/)%=11WW-5\'=1 % /\'A=11  /7%=1  "}, "Argentina/San_Juan": {"data" : "+9 $(ia=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1%)\'%  d##)+=  S1/#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S#3)+B#  d##)/*#  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}
    , "Rio_Branco": {"data" : "++ PwaR=#8m#)#%  tvf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1#)3Q  t#t)-&#  d#7)7I  t# "}, "St_Thomas": {"data" : ")America/Puerto_Rico"}, "Los_Angeles": {"data" : "+) 0Z2BS#ui# 7jg# H#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  H#5)#)\'Y4!28\'1%#)#%1 %d-)\'=)1dO-3\'=1 %3-5\'=1 \')#%  H#I|# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Cordoba": {"data" : ")America/Argentina/Cordoba"}, "Coral_Harbour": {"data" : ")America/Panama"}, "Cancun": {"data" : "+/ XogXE#Xm# #%Q (##X%)9.#1 t#+)#1  (#1L##)%Q 1 #)/>#  !%3/)%=1133-5\'=1 -)5.#1 t1(%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 ))1)1 (#A,%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1 =)%%1 t# "}, "Ensenada": {"data" : ")America/Tijuana"}, "Maceio": {"data" : "+3 <0:_/#8m#)#%  S*#f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1#)3f  S#7)5U  S5+#)#B#   +/5M= 1\'\'/%^=  %#)%M   #)59 1#)31  S#/)3>#  S9\'#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1%)5z  S#\')3U  S1\'#)%2#   \'/5A= 1 7/%^=  3#)7- 1#)5%  S# "}
    , "Sitka": {"data" : "+1 FF,2&##4i#)5nB# ,]L![#L#)1r&# H##q#)#%  H#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  H##$#)#%  H#=(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11-)5>#1 X#-de#-5\'=1 D##-%\'=11%K-)\'=11-)7>#  X#9de#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Denver": {"data" : "+- PNHPM#ui# 7j_# 8#)R#\'-\'\'=11\'\'-5\'=1 \')#%  8#- \'-\'\'=11\'#-5\'=1 %#)+z1 x)#%  8#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  8#10#\'-\'\'=11 #)+z1 w#\'-)\'=11\'\'-5\'=1 \')#%  8#I|# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Porto_Acre": {"data" : ")America/Rio_Branco"}, "Cayman": {"data" : ")America/Panama"}, "Thunder_Bay": {"data" : ")America/Toronto"}, "Nipigon": {"data" : ")America/Toronto"}, "Havana": {"data" : "+\' PZB_C#4k#)#%  0ga_C#T#)/n&# tc#-#)-I 1 #)5I  Q+/-%= 1++/3%=  -\'/-%= 1\'\'/3%=  n#)-% 1 #)3>#  %#)+:# 1 #)5)  %#))A 1 \'/3A=   #))Y 1%C-)\'= 1C+-5\'=  %+)5A  %+-5\'=  %#)+= 1 S/5A=  O\'/\'^= 1%3/+5= 1%//\'Y= 1%?/)%= 1;375A=  %#159  %#15Q  %\'5\'\'= 1\'755\'=  //7)%= 1%#5\'\'= 1)355\'=  /#7\'A= 1%#7\'^= 1%\'7\'A= 1%#7\'^= 1 #17U  %#1)% 1  77%=  % 7\'A= 1 "}
    , "Campo_Grande": {"data" : "+% (o_c7#8m#)#%  dN%f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1%#)%f   #)5r 1%#)%E   #)5*# 1%#)#B#   +/5M= 1\'\'/%^=  %#)%M   #)59 1%#)%b   #)59 1%#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1 7/%^=  3#)7- 1%#)5n 1%#)7) 1%#)5b 1%#)75 1%#)%*#   #/5A= 1%G/5^= 1G//%^=  %#/%z=  %\'/%^=  %#/%z=  %//%^=  \'#/7%= 1 "}, "Rosario": {"data" :
    ")America/Argentina/Cordoba"}, "Cambridge_Bay": {"data" : "+-  #Pm#)#%  8#A\'#)+*#11 #)7%  !##)%E11-# 1Y!%1 #)3>#1 2#[-)\'=11[P#-5\'=1 pp/)%=11=)5B#1 (#-,#S-)\'=11SH#-5\'=1 pp/)%=119)5:#1 t##)75  (##\'))%9 8#54#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Fortaleza": {"data" : "+/ 8wc81#8m#)#%  S*#f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1#)3f  S#G)3>#  S9\'#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1%)5z  S#\')3U  S1\'#)%2#   \'/5A= 1 7/%^=  3#)7- 1#)5%  S# "}
    , "Managua": {"data" : "+3 ]T}NE#4k#)#%  L,0PE#y#)-!#  (##e#)+%  t#+)%b  (#)1\'/\'b= 1\'\'/-!#%  S)#%A t##)3&#  (##\')#%  t#3)#%  (#9l\'/\'b= 1\'\'/-!#%  *##))I 1 #/5%=  %#))>#11 #/5%=)  "}, "Menominee": {"data" : "++ iV*kE#}i#)3j&# (#5J#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (#1 #-)\'=11 #-3\'=1 r#-)\'=11 #-5\'=1 /))2#1 t#3)):#1 (#I8## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Halifax": {"data" : "+/ @J:];#ek#)-^  d)Y#))% 1 #)5%  +)#%  d) #))Y11 #)52#1 \')#%  dJ#/#))% 1 #)5%  1#)+E 1 #)1:#  %#)+9 1 \')35   #))># 1%+/+%= 1+#)31  %#)3^  %#)36#  %#)+b 1 #)3U  %#)+% 1 #)3.#  %//+A= 1/#)3E  %#)3-  %#)3^  %\'/3&#%   #)+% 1%#))># 1 #)5)  %#)+r 1 #)3b  %#)-) 1 #)3>#  %#)-% 1 #)3Y  %\'/+%= 1\'3/3&#%  +#)+6# 1%\'/+%= 1\'1%E1 d5(##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 \')#%  dIG3/3&#%  \'\'/+%= 15/-)\'=11//-3\'=1 )/-)\'=11//-3\'=1 )/-)\'=11//-3\'=1 -O-)\'=11OO-5\'=1 \')#%  d=<## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%"
    + "=1  "}, "Ojinaga": {"data" : "+7 HFoDM#Xm# #%Y 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (##m%)#%  (#1$%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 ))#%  (###/)%=9 8#A,%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1 Q)#%  8#1u#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1 `)5>#1 (###)7>#  (#1H%e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Glace_Bay": {"data" : "+- HN:q9#ek#)-^  d5b#))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 C)#%  d1?/-)\'=11//-3\'=1 )/-)\'=11//-3\'=1 #)#%  d#l)#%  d1d/-)\'=11//-3\'=1 -O-)\'=11OO-5\'=1 \')#%  d=<## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Lower_Princes": {"data" : ")America/Curacao"}, "Argentina/Tucuman": {"data" : "+7 Lu4};#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1%)\'-  d##)5r  S1/#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S#3)-%  d##)-U  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1 "}, "Indiana/Petersburg": {"data" : "+1 8BmcE#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 K)#%  (#1 #)+% 1 7-3\'=1 3C-)\'=11//-5\'=1 \'))*#1 t#\')5>#1 (#=x# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11E)5>#1 t#<#)))1 (#5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1 #)711 t1i#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Montreal": {"data" : ")America/Toronto"}, "Yakutat": {"data" : "+/ VoL6$##4i#)5n(8eJQ y2,{[#L#)1r&# X##q#)#%  X#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  X##$#)#%  X#=(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11-)7>#  X#9de#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Mendoza": {"data" : ")America/Argentina/Mendoza"}, "Detroit": {"data" : "+5 Hg&mC#qk#)#%  (##K)+^1 t#4#)#%  t5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  t))#-)\'=11 #-3\'=1 p)-Yec6# t1|# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=111)#%  t#3)#%  t98## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11#)#%  t##))2#1 t=Ce#-5\'=1 H##)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Santa_Isabel": {"data" : ")America/Tijuana"}, "Merida": {"data" : "+) qoq4G#Xm# #%Q (##X%)9.#1 t#\')7)1 (#AH##)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1  "}, "Bahia_Banderas": {"data" : "+1 eL&VM#Xm# #%Y 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (##K))&#  8##8#)#%  8#At#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1 Q))11 (#1G#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1  "}, "Matamoros": {"data" : "++ 0##Xm# #%Q (##u%)#%  (#-xe#-5\'=1 @#K-)\'=11%p/)%=11f)#%  (#Ae##)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1 Q)#%  (#1u#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Indiana/Vevay": {"data" : "+- @V}6E#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 G))*#1 t#`)#%  t1(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11#)#%  t#L#)#%  t5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "St_Barthelemy": {"data" : ")America/Port_of_Spain"}, "Argentina/San_Luis": {"data" : "+A ](F6=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1))#% 1S##)\'Y  d##)5^ 1d#\')\'%  d##)-%  S#C)5- 1d#\')\'-  S#3)+B#  d##)/*#  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)#v  d) \'/\'A=  +\'/5A= 1\')5M  S# "}
    , "Indiana/Tell_City": {"data" : "+1 ]ycXE#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (#1E#)+% 1 7-3\'=1 3?-)\'=11++-5\'=1 \')).#1 t#/)5:#1 (#1|# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=111))2#1 t1(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11))#%  t#T#)))1 (#5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Boa_Vista": {"data" : "++ yZ@!;#8m#)#%  dvf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1#)3Q  d#O)3>#  d9\'#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1%)5^  d# "}
    , "Metlakatla": {"data" : "+5 N:u{&##4i#)5n${w>S $ia4Y#L#)1r&# H##q#)#%  H#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  H##$#)#%  H#=(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11-)5>#1 H##H#)7%1 X#1,%e#-5\'=1 pp/)%=11% /\'A=11  /7%=1 O)711 H##\')#r1 X#1<%e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Tortola": {"data" : ")America/Puerto_Rico"}, "Nuuk": {"data" : "++ 0c6*7#@m#)/6#  S#m%))91 S5//\')%=)1+# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=) 4# \'.#) C## 5:#) C-y#d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Argentina/Jujuy": {"data" : "+; Xc$!=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1))\'1  d##)56# 1d#\')\'f  d##)59 1S#\')#%  S13#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S5\'#/5%= 1%#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}, "North_Dakota/New_Salem": {"data" : "+\' iJ4gK#ui# 7j_# 8#MR#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11-)5.#1 (#5X#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Inuvik": {"data" : "+)  #yo#)#%  H#1C# 1Y!%1 #)3>#1 2#[-)\'=11[P#-5\'=1 2#-)\'=1 8#1P## 1Y!%1 #)3>#1 2#[-)\'=11[P#-5\'=1 .#)#%  8#=T## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Port_of_Spain": {"data" : ")America/Puerto_Rico"}, "Paramaribo": {"data" : "++ @B*o7#,m#)#%  m$Xo7#(#)#%  Pkwm7#K)5%  [#e#)5%  S# "}, "New_York": {"data" : "+- eTwq?#ui# 7jN# t)R#\'-\'\'=11\'\'-5\'=1 \')#%  t1 #-\'\'=11 #-5\'=1 %}#-)\'=11}#L#-3\'=1 Q)#%  t5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  t50##-\'\'=11 #-5\'=1 %}#-)\'=11}#L#-3\'=1 %O-5\'=1 \')#%  tI|# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Manaus": {"data" : "++ eewq9#8m#)#%  dvf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1#)3Q  d#7)36#  d5\'#)%E   #)5*# 1%#)#B#   +/5M= 1\'\'/%^=  %)3z  d# "}, "Resolute": {"data" : "+-  #ao#)1B#  (#5+# 1Y!%1 #)3>#1 2#[-)\'=11[P#-5\'=1 pp/)%=119)5:#1 t#\'))%9 (#-4#S-)\'=11SH#-5\'=1 pp/)%=11#)5:#1 t#\')\'M9 (#1L#H#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Curacao": {"data" : ")America/Puerto_Rico"}
    , "North_Dakota/Beulah": {"data" : "+\' ykmmK#ui# 7j_# 8#UR#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1 /)7=1 (#1u#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Ciudad_Juarez": {"data" : "+7 q!6oM#Xm# #%Y 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (##m%)#%  (#1$%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 ))#%  (###/)%=9 8#A,%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1 Q)#%  8#1u#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1 `)5>#1 (###)7>#  8#1H%e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Bogota": {"data" : "+\' ,$Ps?#yi#)\'U  ,$Ps?#@#)7!#  t)F\'#)+- 1%#)%=   "}, "Adak": {"data" : "+3 wV8>p#4i#)5n8,ZNI XJ@sl#L#)1r&# y##q#)#%  y#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  y##x))%  y##+)#%  y#=(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11-)5>#1 i#-de#-5\'=1 D##-%\'=11%K-)\'=11-)7>#  i#9de#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Mazatlan": {"data" : "+/ TiTmM#Xm# #%Y 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (##K))&#  8##8#)#%  8#At#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1  "}
    , "Caracas": {"data" : "+- Te.B=#4k#)#%  e0}@=#|)%Q  l#@%)#%  d#q#)9E9 l#G)+%5 d# "}, "St_Kitts": {"data" : ")America/Puerto_Rico"}, "Argentina/Salta": {"data" : "+5 D]2$=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S=+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1%)\'-  d##)5r  S1/#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S5\'#/5%= 1%#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}
    , "Mexico_City": {"data" : "+/ D}s8K#Xm# #%Y 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (#Y\'#))># 1 #)5%  A#)%5 1 #)-*#  %#)9E 1%#))%  )#)9b 1%#)+%  9#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 #)3>#1 (##\')%r  (#1\'#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1  "}, "Edmonton": {"data" : "+\' }8*@Q#uk#)3%  8#UQ\'/)A=11\'#)52#1 %#)+2#1 %/-)\'=11/#-5\'=1 %+-3\'=1 n#)%E11-# 1Y!%1 #-3\'=1 )#-)\'=11 #-3\'=1 *#[-)\'=11[P#-5\'=1 n)#%  8#5WS-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Kentucky/Louisville": {"data" :
    "+3 ,DmDE#ui# 7jV# (#)R#\'-\'\'=11\'\'-5\'=1 +)#%  (#1 #)+%11 #)3%1 r#-)\'=11 #-3\'=1 \')#%  (#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (#=7#-)\'=11 #-3\'=1 5#-)\'=ec6#1 #)-)1 1O-)\'=11O7-3\'=1 %7-5\'=1 #)/!#1 t#?)#%  t5$## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911#)#911(###)52#1 tA?e#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}, "Araguaina": {"data" : "+/ $aD@5#8m#)#%  S*#f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1#)3f  S#7)3Y  Sb+#)#B#   +/5M= 1\'\'/%^=  %#)%M   #)59 1%#)%b   #)59 1%#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1 7/%^=  3#)7- 1%#)5n 1#)3&#  S#G)5v  S13G/5^= 1G//%^=  %#/%z=  %\'/%^=  %)3%  S# "}
    , "Santo_Domingo": {"data" : "+- X_F}=#4k#)#%  T$F!?#u#))%&# t9J##)5># 1%#)%6#  )3-5\'= )/#)%v  %#)#r  %+)#v  #)52#  d#0#)5:#1 t-L#e#-5\'=1 @#K-)\'=11%p/)%=119)9-) d# "}, "Indianapolis": {"data" : ")America/Indiana/Indianapolis"}, "Indiana/Knox": {"data" : "+/ (VBVE#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 +)#%  (#5 [-)\'=11[?-3\'=1 %\'-5\'=1 %\'-3\'=1 %+-5\'=1 \')):#1 t#\')52#1 (#Al# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11^)52#1 t#`)))1 (#5e#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Whitehorse": {"data" : "+- i>{yY#]k#)1r  X#=j#))Y11 #)52#1 %#)+*#11 #)7%  !##)%E11-# 1Y!%1 #)3>#1 t)#%  X#) #-)\'= A #-5\'=1 \')%2#  H##[)#%  H#=T## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1 W)7%  8## "}, "Yellowknife": {"data" : ")America/Edmonton"}, "Kentucky/Monticello": {"data" : "++ X:q2E#ui# 7jV# (#5R#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (##|)#%  (#A$## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=119)5:#1 t5L#e#-5\'=1 @#K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Asuncion": {"data" : "++ 8VgB9#4k#)#%  8VgB9#m#)5I  d#m#)5%  S#+))%  dz%W)5% 1W/)\'%  %S))%  +#)5z 1%#)5% 1%#)59 1%#)\'%   #)55 1%#)\'B#   +)5% 1\'\'-%\'=  %#)\'%   7/5%= 13#-%\'=  %//\'%=  %+/)%=  +\'/3%= 1%7/5^= 133/\'A=  % /5%= 1 +/)A=  % /\'z=   "}, "Santarem": {"data" : "+) 4]Ne7#8m#)#%  dvf#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1#)3Q  d#t)-&#  S# "}, "Antigua": {"data" : ")America/Puerto_Rico"}
    , "Virgin": {"data" : ")America/St_Thomas"}, "Winnipeg": {"data" : "+\' 8Z0oI#(k#)/b  (#&#:##))!# 1 #)3f  )#))Y11 #)52#1 n#)+b11 #)3.#1 5#)%E11-# 1Y!%1 #-3\'=1 %#)+Q11 #)5U1 %+-)\'=11++-3\'=1 %#)+%11 #)3>#1 %G-)\'=11G?-3\'=1 %#-5\'=1 %#-3\'=1 -#-)\'=11 #)3z1 -t5)\'=11te#55\'=1 ll7)%=11\')#%  (#5H#S-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Recife": {"data" : "+/ m]4N/#8m#)#%  S*#f#)5-z1%\'))%  \'#)5- 1f/)9% 1+#))b) %\'))%  %#)\'%  I#)9E 1%#)\'%  %#)#B# 1 #)\'B#   #)9% 1%+)\'%  +\')7% 1j#)7) 1%#)\'^   #)5*# 1%#)%Y   #)5*# 1%#)%=   #)5b 1%#)#:#   #)5^ 1%#)%M   #)5v 1#)3f  S#G)3>#  S9\'#)\'%   #)5M 1%#)%v   #)5- 1%#)%2#   \'/5A= 1%)5^  S#\')3U  S1\'#)%2#   \'/5A= 1 7/%^=  3#)7- 1#)5%  S# "}
    , "Lima": {"data" : "+\' }PwPA#4k#)#%  ysuRA#l)/6#  tI>##)#% 1 #))%   \'-3\'= 1 \'/\'&#=  !%\')#% 1\'\'))%  -#)#% 1 #))%  1#)#% 1 #))%   "}, "Shiprock": {"data" : ")America/Denver"}, "Martinique": {"data" : "++ X_J*;#4k#)#%  X_J*;#x)+%  d#$\'))9 1d##)36#  d# "}, "Phoenix": {"data" : "+/ PsB$Q#ui# 7j_# 8#-R#\'-\'\'=11\'\'-5\'=1 !##)%E11+)#%ec6# 8###))%ec6# 8#%+#)%E11+)5%ec6# 8##$#)#%  8#1|# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=115)\'v  8## "}, "St_Johns": {"data" : "+1 umw<7#yi#)#%  umw<7)J##))A11 #)3f1 \')#%  umw<7) #))Y11 #)52#1 \')#%  umw<79+#))A11 #)3f1 )#)+5!%1 #)1Q!% %`/+%=!%1``-5\'=!% #)\'>#  [9d#)+5!%1 #)1Q!% %`/+%=!%1``-5\'=!% %7/+E% 177/5)%  \')+M  [5(##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 \')#%  [UK7/+E% 177/5)%  53/+A=1133/5)=1 %T#-)\'=11T#C-3\'=1 %0#-5\'=1 %#/)%=ec6#1 p-5\'=ec6# l#/)%=ec6#A%h/)%=ec6#1%3/\'A=ec6#13//7%=ec6# \')7%  [1]#H#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Goose_Bay": {"data" : "+5 T4sy9#yi#)#%  umw<7#P#)#%  umw<7) #))Y11 #)52#1 \')#%  umw<7#d)\'>#  [#\')#%  [1d`/+%=!%1``-5\'=!% %7/+E% 177/5)%  \')+M  [5(##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 \')#%  [=K7/+E% 177/5)%  53/+A=1133/5)=1 %T#-)\'=11T#C-3\'=1 %0#-5\'=1 r)\'^1 dE`T#-)\'=11T#C-3\'=1 %0#-5\'=1 %#/)%=ec6#1 p-5\'=ec6# l#/)%=ec6#A%h/)%=ec6#1%3/\'A=ec6#13//7%=ec6# \')7%  d1]#H#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}, "Montevideo": {"data" : "+7 HoF&9#}k#)-I  HoF&9#S)+%  d#/)5%  [A +)5% )\'+))%  =7-5\'= )3?-)%=  +#)5% )%#)52# )%#)1% )%#)9Y )#)9Y  SAC?-)%=   #)1% )%#)9Y )%#)\'Y  b#)+&# ) #)7^  %#)#f 1 #)\'9  #)#%  SA\'#)+&# ) #)7^  %#)#f 1 #)\'9  5#))1 1 #)3.#  -#)+2# ) #)9%  #)#%  S9/#))1 1 #)3.#  -#)+2# ) #)9%  )#))*# 1 #)-Y  #)#%  SI+#)+2# ) #)9%  )#))*# 1 #)-Y  )#))!# 1 #)/b  )#)#U 9 #)\'I ) #)3%   #)9z 1#)#%  S9+#))!# 1 #)/b  )#)#U 9 #)\'I ) #)3%   #)9z 1#)\'I  S9+#))!# 1 #)/b  )#)#U 9 #)\'I ) #)3%   #)9z 1#)9z  S:#+#))!# 1 #)/b  )#)#U 9 #)\'I ) #)3%  "
    + " #)9z 1%#)\'>#  %#)9n 1%#)\'9   #)91 1%\'/\'%=  \'#)9f 1%#)):# 1%#)\'b  =#)9Y 1%#)%6#   #)9M 1%#)\'5   #)5:# 1%#)%*#   \'/5v= 1 \'/\'%=   #)5j 1%#)%6#  M#)3n 1%#)\'2#1  #)5E11%G/\'A=1 GC/5%=11 "}, "St_Lucia": {"data" : ")America/Puerto_Rico"}, "Knox_IN": {"data" : ")America/Indiana/Knox"}, "Chicago": {"data" : "+1 DXLkE#ui# 7jV# (#)R#\'-\'\'=11\'\'-5\'=1 \')#%  (#5 #)-U11 \'-5\'=1  #-\'\'=11%y#-)\'=11y#H#-3\'=1 j)\'%1 t##)7^1 (#1d\'-5\'=1  #-\'\'=11%y#-)\'=11y#H#-3\'=1 Q)#%  (#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  (#50#\'-5\'=1  #-\'\'=11%y#-)\'=11y#H#-3\'=1 %O-5\'=1 \')#%  (#I|# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Chihuahua": {"data" : "+3 $T:gM#Xm# #%Y 8##7)-I  (##/)7^  8#)%#))># 1 #)5%  \'))%  (##m%)#%  (#1$%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 ))#%  (###/)%=9 8#A,%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1 #)5>#1 (## "}, "La_Paz": {"data" : "+) qc.Z=#4k#)#%  qc.Z=#m#)5^ 1qc.Z=#\')\'v  d# "}, "Blanc-Sablon": {"data" : ")America/Puerto_Rico"}, "Catamarca": {"data" : ")America/Argentina/Catamarca"}, "Tijuana": {"data" : "+S yo**S#Xm# #%Y 8##+)#%  H##/)-I  8##/)7^  H##\'))% 1H###)3>#  H##O))&# 1H##/ 1Y!%1H###)7^  H##/))5 1H##\')#Y  H##\')+% 1H###)3&#  H##\')):#11H###)3>#1 H##\'))2#11H###)36#1 H##+)#%  H#-7#)#%1 %d-)\'=)1dO-3\'=1 #)#%  H##`)#%  H#1Ge#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11I)#%  H#9$%#)%Q 1 #)/>#  !%3/)%=1133-5\'=1 %#/+%=11 #-3\'=1 #)#%  H#-P#e#-5\'=1 @#K-)\'=11%p/)%=111)%r  H#1\'#/+%=11 #-3\'=1 %t/)%=11tt-5\'=1 Q)#%  H#1u#e#-5\'=1 pp/)%=11% /\'A=11  /7%=1  "}
    , "Barbados": {"data" : "+) q.$k9#,m#)16#  d9B## )nI1 # 1B#Q %# +)I1 # 35Q %# )II) # 3IQ #)#%  d1\'# +)I1 # 35Q %# )II) # 3IQ \')#%  d=\'# )II) # 3IQ J##)-Q11 \'/5%=1  +/)^=11\'#)3>#1 %#)3*#1  "}, "Atka": {"data" : ")America/Adak"}, "Rainy_River": {"data" : ")America/Winnipeg"}, "Anchorage": {"data" : "+1 cL0&|#4i#)5n]&VBO mTH.b#L#)1r&# i##q#)#%  i#=(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=119))%  i##+)#%  i#=(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=11-)5>#1 X#-de#-5\'=1 D##-%\'=11%K-)\'=11-)7>#  X#9de#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Port-au-Prince": {"data" : "+\' 4]FP?#4k#)#%  (oVN?#4#)#&#&# tMs%#)+A 1%/-)\'= 133-5\'=  %G7)%=)1GG55\'=) A\'/)%= 1\'\'-5\'=  9//\'A=11///7%=1 ) /\'A=11  /7%=1  "}, "Tegucigalpa": {"data" : "+% u}2cE#Tm#))%  (#1s%\'/+%= 1\'\'-3\'=  j#/+%= 1 #/1%%   "}, "Cayenne": {"data" : "+\' uu.67#,m#)/%  d#L%)5%  S# "}, "Marigot": {"data" : ")America/Port_of_Spain"}, "Juneau": {"data" : "+5 20oB&##4i#)5nDFu!S @sgmY#L#)1r&# H##q#)#%  H#5(#\'-\'\'=11\'\'-5\'=1 !##)%E11-# 1Y!%1 #)3>#1 \')#%  H##$#)#%  H#=(## 1Y!%1 #)3>#1 ze#-5\'=1 e#;-)\'=11%#)#911%#-%\'=11%K-)\'=119))2#1 X#-We#-5\'=1 D##-%\'=11%K-)\'=119)5.#1 H#-We#-5\'=1 D##-%\'=11%K-)\'=11-)5>#1 X#-de#-5\'=1 D##-%\'=11%K-)\'=11-)7>#  X#9de#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Atikokan": {"data" : ")America/Panama"}, "Argentina/Rio_Gallegos": {"data" : "+5 e]_o=#Dk#)5B#  (_2i;#0#)+%  d#K)9%  dn #)9% 1%#))%   #)5^ 1%C)\'%  C?)7% 1%#)/% 1%#)-^   #)5^ 1)#)1%   #)5^ 1-#)\'%   #)5% 1f#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  SA+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  Y#)9% 1%3/\'%=  3//5^= 1=#/5%= 1#)5-  d-K3/\'%=  9#/5%= 1%#)\'-  #)\'-  S#3)-%  d##)-r  S13#)\'-  =#)9># 1%\'/\'^=  \'#/5^= 1#)5j  S# "}, "Dawson_Creek": {"data" : "+) D4oiS#yi#)#%  H#5N##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 +)#%  H#1\'i#-)\'=11i##)3:#1 %[-3\'=1 %y#-5\'=1 N#)1>#1 8## "}
    , "Dominica": {"data" : ")America/Puerto_Rico"}, "Fort_Nelson": {"data" : "+- aF,>U#yi#)#%  H#=N##))Y11 #)52#1 &##)%E11-# 1Y!%1 #)3>#1 %i#-)\'=11i##)3:#1 #)#%  H##\')#%  H#1\'i#-)\'=11i##)3:#1 %[-3\'=1 %y#-5\'=1 n)#%  H#5WS-)\'=11SH#-5\'=1 pp/)%=11% /\'A=11  /7%=1 C)\'A1 8## "}}, "Brazil": {"West": {"data" : ")America/Manaus"}, "DeNoronha": {"data" : ")America/Noronha"}, "Acre": {"data" : ")America/Rio_Branco"}, "East": {"data" : ")America/Sao_Paulo"}}, "Indian": {"Reunion": {"data" : ")Asia/Dubai"}, "Maldives":
    {"data" : "+\' *yug?#ii#)#%  *yug?#P\')#%  r# "}, "Christmas": {"data" : ")Asia/Bangkok"}, "Chagos": {"data" : "+\' FJ6R?#yk#)#%  r#u\')#%  &## "}, "Antananarivo": {"data" : ")Africa/Nairobi"}, "Mahe": {"data" : ")Asia/Dubai"}, "Mayotte": {"data" : ")Africa/Nairobi"}, "Kerguelen": {"data" : ")Indian/Maldives"}, "Mauritius": {"data" : "+% &{*@9#yk#)#%  b1:\'#)5I 1%#)\'v  *##-5\'=11%#-\'\'=1  "}, "Comoro": {"data" : ")Africa/Nairobi"}, "Cocos": {"data" : ")Asia/Yangon"}}, "Mexico": {"General": {"data" : ")America/Mexico_City"}
    , "BajaNorte": {"data" : ")America/Tijuana"}, "BajaSur": {"data" : ")America/Mazatlan"}}, "Antarctica": {"Macquarie": {"data" : "+3  #Xk#)7%  g##h)5%11g##\')%%  g#) #1#%11 #5\'\'=1 +1)%   #<#)\'*#  g#%7\'5\'\'=1 $#)#%  g#r0%\'7\'%=1 *%#75%=11%#7\':#=1  h55\'=11d+7\'A=1 %#5%\'=1 %C7\'%=1 %\'5\'\'=1 %+7\'%=1  #75^=11%/7\'^=1 /#75z=11%+55\'=11%C75%=11C[5\'\'=1 7#51\'=11% 75%=115#7)%=1 %#5\'\'=1 % 7)%=1 +)#% 1g##\')#%  g#-K 75%=119#5\'\'=1 % 7)%=1  "}, "Palmer": {"data" : "++  #Lq#)#%  d=+#)5%   #)9^ 1%+)\'%  ++)5^ 1%#)))   \'/5%= 1 \'/)%=  #)55  S1+\'/5%= 1 \'/)%=  5#)#!# 1 #)+%  C)+%  d&#K[\'\'E=9 W# 3>#A1%W\'5E=A1 # )Q9 %+\'\'E=9 +\'\'5E=A1%# 3bA1%7\'\'E=9 7;\'5E=A1 # \'>#9 %#\'\'E=9  # 32#A1%# )19  O\'5E=A1K?\'\'E=9 %# \'>#9 %#\'\'E=9 %#\')%=9 %#\'+)=9  #\'1b=A1%+\')!#=9 ++\'3)=A1)+\'+E=9 ++\'1E=A1))91  S# "}
    , "Troll": {"data" : "+%  #4u#)%Q   )  %\'\'=)A\' %5\'=)  "}, "Casey": {"data" : "+E  #]q#)#%  F##i#)5j1 w##\')\'51 F##\')56#1 w##\' %vN# F##3)5z  w##+)\'MA F###)5=A w##\')\'f9 F###)519 w##\')\'A9 F###)51ec6# w##\')\'Y  F###)5-ec6# w##\')\'U  F###)5)ec6# w##\')\'E9 F## "}, "Vostok": {"data" : "++  #,q#)9b  6##]#)%%   ##)7%  6##<#)9j1 r# "}, "Syowa": {"data" : ")Asia/Riyadh"}, "DumontDUrville": {"data" : ")Pacific/Port_Moresby"}, "South_Pole": {"data" : ")Antarctica/McMurdo"}, "McMurdo": {"data" : ")Pacific/Auckland"}
    , "Mawson": {"data" : "+\'  #}o#)%U  &##H%)5j1 r# "}, "Davis": {"data" : "+1  #,q#)#U  6##?)7%   #7)%%  6##i#)5j1 r#\' \'Ig# 6##\')56#1 r#\' %vg# 6## "}, "Rothera": {"data" : "+%  #yq#)9%  S# "}}, "Australia": {"Lord_Howe": {"data" : "+) &w}*f#Hk#)%%  g##i\')\'%  o#- /-5\'=11+//\'%=1  #-5\'=1)#)/%  o#Y3/-5\'=11+//\'%=1  #-5\'=1)%//\'^=1 /#)5n1)%S-5\'=1)G7/\'%=1 %G-\'\'=1 7#-1\'=1)%;-5\'=1)\'#/)%=1 %#-\'\'=1 % /)%=1   /5%=1) "}, "Lindeman": {"data" : "+) JaDy`#Hk#)#%  g#=z#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-118#)#%  g#1 #55\'=11%#5%\'=1 f+55\'=11\'+7\'%=1 #)/%  g#) \'55\'=11 \'7\'%=1  "}
    , "Tasmania": {"data" : ")Australia/Hobart"}, "Victoria": {"data" : ")Australia/Melbourne"}, "West": {"data" : ")Australia/Perth"}, "Perth": {"data" : "+\' 2TXoQ#Hk#)9%  F#=z#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-11#)/%  F#EB##55\'=11%#7\'%=1 A#55\'=11%#7\'%=1 =#17f11%#7\'%=1 Y#19-11%+5\'\'=1 +\'55\'=11 "}, "Adelaide": {"data" : "+) {@mc[#Hk#)%%  V##3)+%  _#=j#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-118#)#%  _#^ [55\'=11%#15n11%t55\'=11T##1%2#1 %S7\'%=1 %37\'^=1 %#1\'-1 %#1\'z1 %#1\'=1 %#1\'r1 %K5\'\'=1 %#1))1 %#5\'\'=1 % 7)%=1   75%=11 "}
    , "South": {"data" : ")Australia/Adelaide"}, "Eucla": {"data" : "+\' B$}ZW#Hk#)9%  N>N.Y=z#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-11#)/%  N>N.YEB##55\'=11%#7\'%=1 A#55\'=11%#7\'%=1 =#17f11%#7\'%=1 Y#19-11%+5\'\'=1 +\'55\'=11 "}, "LHI": {"data" : ")Australia/Lord_Howe"}, "Melbourne": {"data" : "+\' BDi(`#Hk#)%%  g#=z#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-118#)#%  g#Y [55\'=11W#5%\'=1 %S7\'%=1 %37\'^=1 3\'75^=11%O55\'=11C/7\'%=1 %K5\'\'=1 7#51\'=11%;55\'=11\'#7)%=1 %#5\'\'=1 % 7)%=1   75%=11 "}
    , "Hobart": {"data" : "+) oRyV`#Hk#)3%  g#1v#75%=11%#5\'\'=1  \'75z=11 \'7\'%=1 #)5&#  g#=+#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-11(#)#%  g#r0%\'7\'%=1 *%#75%=11%#7\':#=1  h55\'=11d+7\'A=1 %#5%\'=1 %C7\'%=1 %\'5\'\'=1 %+7\'%=1  #75^=11%/7\'^=1 /#75z=11%+55\'=11%C75%=11C[5\'\'=1 7#51\'=11% 75%=115#7)%=1 %#5\'\'=1 % 7)%=1  "}, "Broken_Hill": {"data" : "+- &w(@^#Hk#)%%  g##\')1!#  V##/)+%  _#=j#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-118#)#%  _#M [55\'=11W#1%2#1 %C7\'%=1 %#7)%=1 %+7\'%=1 %/7\'^=1 /#15n11%S55\'=11G77\'%=1 %G5\'\'=1 7#51\'=11#)#%  _#=Wt55\'=11W#1\'r1 %K5\'\'=1 %#1))1 %#5\'\'=1 % 7)%=1   75%=11 "}
    , "Darwin": {"data" : "+\' o:D&Y#Hk#)%%  V##3)+%  _#=j#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-11 "}, "ACT": {"data" : ")Australia/Sydney"}, "NSW": {"data" : ")Australia/Sydney"}, "Brisbane": {"data" : "+\' 2,@mb#Hk#)#%  g#=z#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-118#)#%  g#1 #55\'=11%#5%\'=1 f+55\'=11\'+7\'%=1  "}, "Currie": {"data" : ")Australia/Hobart"}, "Yancowinna": {"data" : ")Australia/Broken_Hill"}, "North": {"data" : ")Australia/Darwin"}, "Canberra": {"data"
    : ")Australia/Sydney"}, "Sydney": {"data" : "+\' .wFHb#Hk#)%%  g#=z#1#%11 #5\'\'=1 *##1#%11 #5\'\'=1  #132#11%\'5\'\'=1 \'#15-118#)#%  g#b [55\'=11W#1%2#1 %C7\'%=1 %#7)%=1 %+7\'%=1 %/7\'^=1 /#15n11%S55\'=11G77\'%=1 %G5\'\'=1 7#51\'=11%;55\'=11\'#7)%=1 %#5\'\'=1 % 7)%=1   75%=11 "}, "Queensland": {"data" : ")Australia/Brisbane"}}, "Chile": {"EasterIsland": {"data" : ")Pacific/Easter"}, "Continental": {"data" : ")America/Santiago"}}, "Arctic": {"Longyearbyen": {"data" : ")Europe/Oslo"}}, "Atlantic": {"St_Helena":
    {"data" : ")Africa/Abidjan"}, "Reykjavik": {"data" : ")Africa/Abidjan"}, "Stanley": {"data" : "+- @gTF9#4k#)#%  @gTF9#|)\'Q  d9*#\'-3\'= 1 3/\'n=  /#)5% 1%+-3\'= 1%#)#%  g##-3\'= 1#)+%  S5i##)#%  g##-3\'= 1%\'-)\'=  \'#)3b 1%`/3E= 1^)3^  d9\'\'-)\'=  \'#)3b 1%`/3E= 1[[/)b=  %G/)^=1 GG/3%=11#)351 S# "}, "Faroe": {"data" : "+\' DyeJ##}k#)#M   #4\')#%   13/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Madeira": {"data" : "+- ]<aZ\'#yi#)#%  ]<aZ\'#8# #%) 3Z#1#)-f!%1 #)7%) %3)\'% 133)5^  -#1)b!%1 #151!% )#1)f!%1 /75%9!% +#1)E!%1%#1)Y!%1%#1)r!%1)#1)j!%1 \'75%9!%  #1))!%1)#1)=!%1 375%9!% /#1\'>#!%1%#1)j!%1%#1)-!%1%#1\'.#!%1%#1)^!%1 #17j!% %#1%&#!%1 #15=!% %#1)5!%1 #155!% %/7\'A9!%1/#1)*#w#A #11^w#1 /75&#9!% +#1)fw#A +71*#9w#1\'\'7)v9w#A%#7)%9!%1 #75%9!% %p7)%=11pl75%=1 \'15)1  #d))1   13+7)%=)1\'\'53\'=) %75\'\'= 17353\'=  \')/B#   1G/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "Faeroe": {"data" : ")Atlantic/Faroe"}, "Canary": {"data" : "++ <is<\'#Xm#)\'%  3#(#)3>#)  #P#1)9 1 ## 36#)  5//\')%=)1+# 5%) %d%3\'=) [ %\'\'=)1^ %5\'=)  "}, "Jan_Mayen": {"data" : ")Europe/Berlin"}, "Bermuda": {"data" : "++ T4Bu;#4k#)#%  T4Bu;12##))9 1 #)5%  %#))Y 1 #)3b  S)#%1 dYS#))Y 1 #)3b  &##)#M11 #)5j1 %#)\'v11 #)5B#1 %\'/\'A=11\'\'/7%=1 )#/+^=11 #/3A=1 %3/+z=1133/3%=1 1#/+z=11 #-5\'=1 l))6#1 d1<## 1Y!%1 #)3>#1 :#S-)\'=11SH#-5\'=1 >#)#%  d9Ge#-5\'=1 D##-%\'=11%K-)\'=11%p/)%=11% /\'A=11  /7%=1  "}
    , "Azores": {"data" : "+1 0Z.P+#yi#)#%  4TF.-#8# #%1 CZ#1#)-f!%1 #)7%) %3)\'% 133)5^  -#1)b!%1 #151!% )#1)f!%1 /75%9!% +#1)E!%1%#1)Y!%1%#1)r!%1)#1)j!%1 \'75%9!%  #1))!%1)#1)=!%1 375%9!% /#1\'>#!%1%#1)j!%1%#1)-!%1%#1\'.#!%1%#1)^!%1 #17j!% %#1%&#!%1 #15=!% %#1)5!%1 #155!% %/7\'A9!%1/#1)*#w#A #11^w#1 /75&#9!% +#1)fw#A +71*#9w#1\'\'7)v9w#A%#7)%9!%1 #75%9!% %p7)%=11pl75%=1 \'15)1 3#d1\'6#  313+7)%=)1\'\'53\'=) %75\'\'= 17353\'=  \')#%  3-G/\')%=)1\'d%3\'=) [ %\'\'=)1O192#)  -`/\')%=)1\'d%3\'=) [ %\'\'=)1S -f) 31d/\')%=)1\'d%3\'=) [ %\'\'=)1^ %5\'=)  "}
    , "South_Georgia": {"data" : "+% i_>o/#4k#)#%  C# "}, "Cape_Verde": {"data" : "++ X2y$+#0m# #%1 C#@#)3% 1C#/)5^  C#@#)7*#1 3# "}}, "US": {"Aleutian": {"data" : ")America/Adak"}, "Mountain": {"data" : ")America/Denver"}, "Pacific": {"data" : ")America/Los_Angeles"}, "East-Indiana": {"data" : ")America/Indiana/Indianapolis"}, "Hawaii": {"data" : ")Pacific/Honolulu"}, "Alaska": {"data" : ")America/Anchorage"}, "Central": {"data" : ")America/Chicago"}, "Eastern": {"data" : ")America/New_York"}, "Indiana-Starke":
    {"data" : ")America/Indiana/Knox"}, "Arizona": {"data" : ")America/Phoenix"}, "Samoa": {"data" : ")Pacific/Pago_Pago"}, "Michigan": {"data" : ")America/Detroit"}}};
};
function onnn_NostrconnectUrl() {
    let a = this; jl_Object.call(a);
    a.$relays2 = null;
    a.$secret0 = null;
    a.$metadata0 = null;
    a.$clientPubKey = null;
}
let onnn_NostrconnectUrl__init_0 = ($this, $clientPubKey, $relays, $secret, $appMetadata) => {
    jl_Object__init_($this);
    $this.$relays2 = $relays;
    $this.$secret0 = $secret;
    $this.$clientPubKey = $clientPubKey;
    $this.$metadata0 = $appMetadata;
},
onnn_NostrconnectUrl__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnn_NostrconnectUrl();
    onnn_NostrconnectUrl__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnn_NostrconnectUrl_toString = $this => {
    let $sb, var$2, $relay;
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(878));
    $sb.$append1(onnk_NostrPublicKey_asHex($this.$clientPubKey));
    $sb.$append1($rt_s(879));
    var$2 = $this.$relays2.$iterator();
    while (var$2.$hasNext()) {
        $relay = var$2.$next();
        $sb.$append1($rt_s(880));
        $sb.$append1(onnn_NostrconnectUrl_urlEncode($relay));
        $sb.$append1($rt_s(312));
    }
    $sb.$append1($rt_s(881));
    $sb.$append1(onnn_NostrconnectUrl_urlEncode($this.$secret0));
    if ($this.$metadata0.$getPerms() !== null) {
        $sb.$append1($rt_s(882));
        $sb.$append1(onnn_NostrconnectUrl_urlEncode(jl_String_join($rt_s(87), $this.$metadata0.$getPerms())));
    }
    if ($this.$metadata0.$getName() !== null) {
        $sb.$append1($rt_s(883));
        $sb.$append1(onnn_NostrconnectUrl_urlEncode($this.$metadata0.$getName()));
    }
    if ($this.$metadata0.$getUrl() !== null) {
        $sb.$append1($rt_s(884));
        $sb.$append1(onnn_NostrconnectUrl_urlEncode($this.$metadata0.$getUrl()));
    }
    if ($this.$metadata0.$getImage() !== null) {
        $sb.$append1($rt_s(885));
        $sb.$append1(onnn_NostrconnectUrl_urlEncode($this.$metadata0.$getImage()));
    }
    return $sb.$toString();
},
onnn_NostrconnectUrl_clone = $this => {
    let var$1, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    return onnn_NostrconnectUrl__init_($this.$clientPubKey, $this.$relays2, $this.$secret0, $this.$metadata0);
},
onnn_NostrconnectUrl_parse = $url => {
    let var$2, $u, $relays, $appPerms, $secret, $appName, $appUrl, $appImage, var$10, $query, $pairs, var$13, var$14, var$15, $pair, $idx, $key, $value;
    var$2 = $url.$replace($rt_s(878), $rt_s(311));
    $u = jn_URI_toURL(jn_URI__init_(var$2));
    $relays = ju_ArrayList__init_();
    $appPerms = null;
    $secret = null;
    $appName = null;
    $appUrl = null;
    $appImage = null;
    var$10 = onnk_NostrPublicKey_fromHex(jn_URL_getHost($u));
    $query = jn_URL_getQuery($u);
    if ($query !== null && !$query.$isEmpty()) {
        $pairs = $query.$split0($rt_s(312));
        var$13 = $pairs.data;
        var$14 = var$13.length;
        var$15 = 0;
        while (var$15 < var$14) {
            $pair = var$13[var$15];
            $idx = $pair.$indexOf(61);
            if ($idx > 0) {
                $key = $pair.$substring(0, $idx);
                $value = jn_URLDecoder_decode($pair.$substring0($idx + 1 | 0), $rt_s(584));
                if ($key.$equals($rt_s(313)))
                    $secret = onnn_NostrconnectUrl_urlDecode($value);
                else if ($key.$equals($rt_s(314)))
                    $relays.$add1(onnn_NostrconnectUrl_urlDecode($value));
                else if ($key.$equals($rt_s(331)))
                    $appName = onnn_NostrconnectUrl_urlDecode($value);
                else if ($key.$equals($rt_s(886)))
                    $appUrl = onnn_NostrconnectUrl_urlDecode($value);
                else if ($key.$equals($rt_s(887)))
                    $appImage = onnn_NostrconnectUrl_urlDecode($value);
                else if ($key.$equals($rt_s(888))) {
                    if ($appPerms === null)
                        $appPerms = ju_ArrayList__init_();
                    $appPerms.$addAll(ju_List_of0((onnn_NostrconnectUrl_urlDecode($value)).$split0($rt_s(87))));
                }
            }
            var$15 = var$15 + 1 | 0;
        }
    }
    if ($relays.$isEmpty())
        $rt_throw(jn_MalformedURLException__init_($rt_s(889)));
    if ($secret === null)
        $rt_throw(jn_MalformedURLException__init_($rt_s(890)));
    if (var$10 === null)
        $rt_throw(jn_MalformedURLException__init_($rt_s(891)));
    return onnn_NostrconnectUrl__init_(var$10, $relays, $secret, onnn_Nip46AppMetadata__init_0($appName, $appUrl, $appImage, $appPerms));
},
onnn_NostrconnectUrl_urlEncode = $value => {
    let var$2, $e, $$je;
    a: {
        try {
            jnc_StandardCharsets_$callClinit();
            var$2 = jn_URLEncoder_encode($value, jnc_StandardCharsets_UTF_8.$toString());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_UnsupportedEncodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
},
onnn_NostrconnectUrl_urlDecode = $value => {
    let var$2, $e, $$je;
    a: {
        try {
            jnc_StandardCharsets_$callClinit();
            var$2 = jn_URLDecoder_decode($value, jnc_StandardCharsets_UTF_8.$toString());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_UnsupportedEncodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
},
onnn_NostrconnectUrl_clone0 = $this => {
    return $this.$clone8();
},
onnn_NostrconnectUrl__init_$exported$0 = (var$1, var$2, var$3, var$4) => {
    return onnn_NostrconnectUrl__init_(var$1, var$2, $rt_str(var$3), var$4);
},
onnn_NostrconnectUrl_toString$exported$1 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnn_NostrconnectUrl_clone$exported$2 = var$1 => {
    return var$1.$clone8();
},
onnn_NostrconnectUrl_clone$exported$3 = var$1 => {
    return otji_JSWrapper_javaToJs(var$1.$clone0());
},
onnn_NostrconnectUrl_parse$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnn_NostrconnectUrl_parse($rt_str(var$1));
},
onnn_NostrconnectUrl_urlEncode$exported$1 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_NostrconnectUrl_urlEncode($rt_str(var$1)));
},
onnn_NostrconnectUrl_urlDecode$exported$2 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnn_NostrconnectUrl_urlDecode($rt_str(var$1)));
},
jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException),
jl_NegativeArraySizeException__init_ = $this => {
    jl_RuntimeException__init_($this);
},
jl_NegativeArraySizeException__init_0 = () => {
    let var_0 = new jl_NegativeArraySizeException();
    jl_NegativeArraySizeException__init_(var_0);
    return var_0;
};
function jusi_ArrayStreamImpl() {
    let a = this; jusi_SimpleStreamImpl.call(a);
    a.$array9 = null;
    a.$index4 = 0;
    a.$end3 = 0;
    a.$size6 = 0;
}
let jusi_ArrayStreamImpl__init_ = ($this, $array, $start, $end) => {
    jusi_SimpleStreamImpl__init_($this);
    $this.$array9 = $array;
    $this.$index4 = $start;
    $this.$end3 = $end;
    $this.$size6 = $end - $start | 0;
},
jusi_ArrayStreamImpl__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jusi_ArrayStreamImpl();
    jusi_ArrayStreamImpl__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jusi_ArrayStreamImpl_next = ($this, $consumer) => {
    let var$2, var$3;
    a: {
        while (true) {
            if ($this.$index4 >= $this.$end3)
                break a;
            var$2 = $this.$array9.data;
            var$3 = $this.$index4;
            $this.$index4 = var$3 + 1 | 0;
            if ($consumer.$test0(var$2[var$3]))
                continue;
            else
                break;
        }
    }
    return $this.$index4 >= $this.$end3 ? 0 : 1;
};
function onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0() {
    jl_Object.call(this);
    this.$_0114 = null;
}
let onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0114 = var$1;
},
onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0();
    onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$sendCandidates$14(var$0.$_0114, var$1);
},
onpt_TeaVMPlatform = $rt_classWithoutFields(onp_NGEPlatform),
onpt_TeaVMPlatform__init_ = $this => {
    onp_NGEPlatform__init_($this);
},
onpt_TeaVMPlatform__init_0 = () => {
    let var_0 = new onpt_TeaVMPlatform();
    onpt_TeaVMPlatform__init_(var_0);
    return var_0;
},
onpt_TeaVMPlatform_generatePrivateKey = $this => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.generatePrivateKey());
},
onpt_TeaVMPlatform_genPubKey = ($this, $secKey) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.genPubKey($secKey.data));
},
onpt_TeaVMPlatform_toJSON = ($this, $obj) => {
    return $rt_str(window.nostr4j_jsBinds.toJSON(otji_JSWrapper_javaToJs($obj)));
},
onpt_TeaVMPlatform_fromJSON = ($this, $json, $claz) => {
    return otji_JSWrapper_maybeWrap(window.nostr4j_jsBinds.fromJSON($rt_ustr($json)));
},
onpt_TeaVMPlatform_secp256k1SharedSecret = ($this, $privKey, $pubKey) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.secp256k1SharedSecret($privKey.data, $pubKey.data));
},
onpt_TeaVMPlatform_hmac = ($this, $key, $data1, $data2) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.hmac($key.data, $data1.data, $data2.data));
},
onpt_TeaVMPlatform_hkdf_extract = ($this, $salt, $ikm) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.hkdf_extract($salt.data, $ikm.data));
},
onpt_TeaVMPlatform_hkdf_expand = ($this, $prk, $info, $length) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.hkdf_expand($prk.data, $info.data, $length));
},
onpt_TeaVMPlatform_base64encode = ($this, $data) => {
    return $rt_str(window.nostr4j_jsBinds.base64encode($data.data));
},
onpt_TeaVMPlatform_base64decode = ($this, $data) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.base64decode($rt_ustr($data)));
},
onpt_TeaVMPlatform_chacha20 = ($this, $key, $nonce, $data, $forEncryption) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.chacha20($key.data, $nonce.data, $data.data));
},
onpt_TeaVMPlatform_sha256 = ($this, $data) => {
    let $bytes, $hash;
    jnc_StandardCharsets_$callClinit();
    $bytes = $data.$getBytes(jnc_StandardCharsets_UTF_8);
    $hash = otji_JS_unwrapByteArray(window.nostr4j_jsBinds.sha256($bytes.data));
    return onp_NGEUtils_bytesToHex($hash);
},
onpt_TeaVMPlatform_sign = ($this, $data, $priv) => {
    let $dataB, $sig;
    $dataB = onp_NGEUtils_hexToByteArray($data);
    $sig = otji_JS_unwrapByteArray(window.nostr4j_jsBinds.sign($dataB.data, $priv.data));
    return onp_NGEUtils_bytesToHex($sig);
},
onpt_TeaVMPlatform_verify = ($this, $data, $sign, $pub) => {
    let $dataB, $sig;
    $dataB = onp_NGEUtils_hexToByteArray($data);
    $sig = onp_NGEUtils_hexToByteArray($sign);
    return window.nostr4j_jsBinds.verify($dataB.data, $pub.data, $sig.data) ? 1 : 0;
},
onpt_TeaVMPlatform_randomBytes = ($this, $n) => {
    return otji_JS_unwrapByteArray(window.nostr4j_jsBinds.randomBytes($n));
},
onpt_TeaVMPlatform_getTimestampSeconds = $this => {
    return Long_div(jl_System_currentTimeMillis(), Long_fromInt(1000));
},
onpt_TeaVMPlatform_promisify = ($this, $func, $executor) => {
    let $promise, var$4;
    $promise = onpt_TeaVMBinds$TeaVMPromise__init_0();
    ju_Objects_requireNonNull0($promise);
    var$4 = onpt_TeaVMPlatform$promisify$lambda$_19_0__init_0($promise);
    ju_Objects_requireNonNull0($promise);
    $func.$accept3(var$4, onpt_TeaVMPlatform$promisify$lambda$_19_1__init_0($promise));
    return onpt_TeaVMPlatform$1__init_0($this, $promise, $executor);
},
onpt_TeaVMPlatform_wrapPromise = ($this, $func) => {
    return $this.$promisify($func, null);
},
onpt_TeaVMPlatform_awaitAll = ($this, $promises) => {
    return $this.$wrapPromise(onpt_TeaVMPlatform$awaitAll$lambda$_21_0__init_0($promises));
},
onpt_TeaVMPlatform_newJsExecutor = $this => {
    return onpt_TeaVMPlatform$2__init_0($this);
},
onpt_TeaVMPlatform_newTransport = $this => {
    return onpt_TeaVMWebsocketTransport__init_0($this);
},
onpt_TeaVMPlatform_newConcurrentQueue = ($this, $claz) => {
    return ju_LinkedList__init_();
},
onpt_TeaVMPlatform_signAsync = ($this, $data, $privKey) => {
    return $this.$promisify(onpt_TeaVMPlatform$signAsync$lambda$_25_0__init_0($this, $data, $privKey), null);
},
onpt_TeaVMPlatform_verifyAsync = ($this, $data, $sign, $pubKey) => {
    return $this.$promisify(onpt_TeaVMPlatform$verifyAsync$lambda$_26_0__init_0($this, $data, $sign, $pubKey), null);
},
onpt_TeaVMPlatform_newAsyncExecutor = ($this, $hint) => {
    return onpt_TeaVMPlatform_newJsExecutor($this);
},
onpt_TeaVMPlatform_awaitAllSettled = ($this, $promises) => {
    return $this.$wrapPromise(onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0__init_0($promises));
},
onpt_TeaVMPlatform_httpGet = ($this, $url, $timeout, $headers) => {
    return $this.$wrapPromise(onpt_TeaVMPlatform$httpGet$lambda$_29_0__init_0($this, $headers, $url));
},
onpt_TeaVMPlatform_newRTCTransport = ($this, $settings, $connId, $stunServers) => {
    $rt_throw(jl_UnsupportedOperationException__init_0($rt_s(892)));
},
onpt_TeaVMPlatform_scrypt = ($this, $P, $S, $N, $r, $p2, $dkLen) => {
    $rt_throw(jl_UnsupportedOperationException__init_0($rt_s(893)));
},
onpt_TeaVMPlatform_xchacha20poly1305 = ($this, $key, $nonce, $data, $associatedData, $forEncryption) => {
    $rt_throw(jl_UnsupportedOperationException__init_0($rt_s(894)));
},
onpt_TeaVMPlatform_nfkc = ($this, $str) => {
    $rt_throw(jl_UnsupportedOperationException__init_0($rt_s(895)));
},
onpt_TeaVMPlatform_lambda$httpGet$8 = ($this, $headers, $url, $res, $rej) => {
    let $xhr, var$6, $entry, $e, $$je;
    a: {
        try {
            $xhr = new XMLHttpRequest();
            var$6 = ($headers.$entrySet()).$iterator();
            while (var$6.$hasNext()) {
                $entry = var$6.$next();
                $xhr.setRequestHeader($rt_ustr($entry.$getKey()), $rt_ustr($entry.$getValue()));
            }
            $xhr.open("GET", $rt_ustr($url));
            $xhr.onreadystatechange = otji_JS_function(otji_JSWrapper_unwrap(onpt_TeaVMPlatform$3__init_0($this, $xhr, $res, $rej)), "stateChanged");
            $xhr.send();
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMPlatform_lambda$awaitAllSettled$7 = ($promises, $res, $rej) => {
    let $count, $i, $promise, var$7, var$8;
    if (!$promises.$size()) {
        $res.$accept0(ju_ArrayList__init_());
        return;
    }
    $count = juca_AtomicInteger__init_0($promises.$size());
    $i = 0;
    while ($i < $promises.$size()) {
        $promise = $promises.$get($i);
        var$7 = onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0__init_0($count, $res, $promises);
        var$7 = $promise.$catchException(var$7);
        var$8 = onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1__init_0($count, $res, $promises);
        var$7.$then(var$8);
        $i = $i + 1 | 0;
    }
},
onpt_TeaVMPlatform_lambda$awaitAllSettled$6 = ($count, $res, $promises, $result) => {
    let $remaining;
    $remaining = juca_AtomicInteger_decrementAndGet($count);
    if (!$remaining)
        $res.$accept0($promises);
    return null;
},
onpt_TeaVMPlatform_lambda$awaitAllSettled$5 = ($count, $res, $promises, $e) => {
    let $remaining;
    $remaining = juca_AtomicInteger_decrementAndGet($count);
    if (!$remaining)
        $res.$accept0($promises);
},
onpt_TeaVMPlatform_lambda$verifyAsync$4 = ($this, $data, $sign, $pubKey, $res, $rej) => {
    let $e, $$je;
    a: {
        try {
            $res.$accept0(jl_Boolean_valueOf($this.$verify0($data, $sign, $pubKey)));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMPlatform_lambda$signAsync$3 = ($this, $data, $privKey, $res, $rej) => {
    let $e, $$je;
    a: {
        try {
            $res.$accept0($this.$sign0($data, $privKey));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onpt_TeaVMPlatform_lambda$awaitAll$2 = ($promises, $res, $rej) => {
    let $count, $results, $i, $p, var$8, var$9;
    if ($promises.$isEmpty()) {
        $res.$accept0(ju_ArrayList__init_());
        return;
    }
    $count = juca_AtomicInteger__init_0($promises.$size());
    $results = ju_ArrayList__init_1(juca_AtomicInteger_get($count));
    $i = 0;
    while ($i < juca_AtomicInteger_get($count)) {
        $results.$add1(null);
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < $promises.$size()) {
        $p = $promises.$get($i);
        var$8 = onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0__init_0($rej);
        var$8 = $p.$catchException(var$8);
        var$9 = onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1__init_0($results, $i, $count, $res);
        var$8.$then(var$9);
        $i = $i + 1 | 0;
    }
},
onpt_TeaVMPlatform_lambda$awaitAll$1 = ($results, $j, $count, $res, $r) => {
    $results.$set0($j, $r);
    if (!juca_AtomicInteger_decrementAndGet($count))
        $res.$accept0($results);
    return null;
},
onpt_TeaVMPlatform_lambda$awaitAll$0 = ($rej, $e) => {
    $rej.$accept0($e);
};
function onnrs_NostrRTCSignaling$decrypt$lambda$_15_0() {
    let a = this; jl_Object.call(a);
    a.$_072 = null;
    a.$_140 = null;
}
let onnrs_NostrRTCSignaling$decrypt$lambda$_15_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_072 = var$1;
    var$0.$_140 = var$2;
},
onnrs_NostrRTCSignaling$decrypt$lambda$_15_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCSignaling$decrypt$lambda$_15_0();
    onnrs_NostrRTCSignaling$decrypt$lambda$_15_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCSignaling$decrypt$lambda$_15_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$decrypt$lambda$_15_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$decrypt$lambda$_15_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$decrypt$18(var$0.$_072, var$0.$_140, var$1);
};
function onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0() {
    jl_Object.call(this);
    this.$_029 = null;
}
let onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_029 = var$1;
},
onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0();
    onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionError$42(var$0.$_029);
},
jtf_DateTimeFormatterBuilder$SettingsParser = $rt_classWithoutFields(jl_Enum),
jtf_DateTimeFormatterBuilder$SettingsParser_SENSITIVE = null,
jtf_DateTimeFormatterBuilder$SettingsParser_INSENSITIVE = null,
jtf_DateTimeFormatterBuilder$SettingsParser_STRICT = null,
jtf_DateTimeFormatterBuilder$SettingsParser_LENIENT = null,
jtf_DateTimeFormatterBuilder$SettingsParser_$VALUES = null,
jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit = () => {
    jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit = $rt_eraseClinit(jtf_DateTimeFormatterBuilder$SettingsParser);
    jtf_DateTimeFormatterBuilder$SettingsParser__clinit_();
},
jtf_DateTimeFormatterBuilder$SettingsParser_values = () => {
    jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit();
    return jtf_DateTimeFormatterBuilder$SettingsParser_$VALUES.$clone0();
},
jtf_DateTimeFormatterBuilder$SettingsParser__init_0 = ($this, var$1, var$2) => {
    jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jtf_DateTimeFormatterBuilder$SettingsParser__init_ = (var_0, var_1) => {
    let var_2 = new jtf_DateTimeFormatterBuilder$SettingsParser();
    jtf_DateTimeFormatterBuilder$SettingsParser__init_0(var_2, var_0, var_1);
    return var_2;
},
jtf_DateTimeFormatterBuilder$SettingsParser_parse = ($this, $context, $text, $position) => {
    a: {
        switch (jl_Enum_ordinal($this)) {
            case 0:
                break;
            case 1:
                jtf_DateTimeParseContext_setCaseSensitive($context, 0);
                break a;
            case 2:
                jtf_DateTimeParseContext_setStrict($context, 1);
                break a;
            case 3:
                jtf_DateTimeParseContext_setStrict($context, 0);
                break a;
            default:
                break a;
        }
        jtf_DateTimeParseContext_setCaseSensitive($context, 1);
    }
    return $position;
},
jtf_DateTimeFormatterBuilder$SettingsParser_toString = $this => {
    switch (jl_Enum_ordinal($this)) {
        case 0:
            break;
        case 1:
            return $rt_s(896);
        case 2:
            return $rt_s(897);
        case 3:
            return $rt_s(898);
        default:
            $rt_throw(jl_IllegalStateException__init_($rt_s(899)));
    }
    return $rt_s(900);
},
jtf_DateTimeFormatterBuilder$SettingsParser_$values = () => {
    let var$1, var$2;
    jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit();
    var$1 = $rt_createArray(jtf_DateTimeFormatterBuilder$SettingsParser, 4);
    var$2 = var$1.data;
    var$2[0] = jtf_DateTimeFormatterBuilder$SettingsParser_SENSITIVE;
    var$2[1] = jtf_DateTimeFormatterBuilder$SettingsParser_INSENSITIVE;
    var$2[2] = jtf_DateTimeFormatterBuilder$SettingsParser_STRICT;
    var$2[3] = jtf_DateTimeFormatterBuilder$SettingsParser_LENIENT;
    return var$1;
},
jtf_DateTimeFormatterBuilder$SettingsParser__clinit_ = () => {
    jtf_DateTimeFormatterBuilder$SettingsParser_SENSITIVE = jtf_DateTimeFormatterBuilder$SettingsParser__init_($rt_s(901), 0);
    jtf_DateTimeFormatterBuilder$SettingsParser_INSENSITIVE = jtf_DateTimeFormatterBuilder$SettingsParser__init_($rt_s(902), 1);
    jtf_DateTimeFormatterBuilder$SettingsParser_STRICT = jtf_DateTimeFormatterBuilder$SettingsParser__init_($rt_s(903), 2);
    jtf_DateTimeFormatterBuilder$SettingsParser_LENIENT = jtf_DateTimeFormatterBuilder$SettingsParser__init_($rt_s(904), 3);
    jtf_DateTimeFormatterBuilder$SettingsParser_$VALUES = jtf_DateTimeFormatterBuilder$SettingsParser_$values();
};
function onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0() {
    let a = this; jl_Object.call(a);
    a.$_0119 = null;
    a.$_163 = null;
}
let onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0119 = var$1;
    var$0.$_163 = var$2;
},
onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0();
    onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$onConnectionClosedByClient$36(var$0.$_0119, var$0.$_163, var$1, var$2);
},
onnp_NostrMessageAck$Status = $rt_classWithoutFields(jl_Enum),
onnp_NostrMessageAck$Status_SUCCESS = null,
onnp_NostrMessageAck$Status_FAILURE = null,
onnp_NostrMessageAck$Status_PENDING = null,
onnp_NostrMessageAck$Status_$VALUES = null,
onnp_NostrMessageAck$Status_$callClinit = () => {
    onnp_NostrMessageAck$Status_$callClinit = $rt_eraseClinit(onnp_NostrMessageAck$Status);
    onnp_NostrMessageAck$Status__clinit_();
},
onnp_NostrMessageAck$Status_values = () => {
    onnp_NostrMessageAck$Status_$callClinit();
    return onnp_NostrMessageAck$Status_$VALUES.$clone0();
},
onnp_NostrMessageAck$Status_valueOf = $name => {
    onnp_NostrMessageAck$Status_$callClinit();
    return jl_Enum_valueOf($rt_cls(onnp_NostrMessageAck$Status), $name);
},
onnp_NostrMessageAck$Status__init_0 = ($this, var$1, var$2) => {
    onnp_NostrMessageAck$Status_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
onnp_NostrMessageAck$Status__init_ = (var_0, var_1) => {
    let var_2 = new onnp_NostrMessageAck$Status();
    onnp_NostrMessageAck$Status__init_0(var_2, var_0, var_1);
    return var_2;
},
onnp_NostrMessageAck$Status_$values = () => {
    let var$1, var$2;
    onnp_NostrMessageAck$Status_$callClinit();
    var$1 = $rt_createArray(onnp_NostrMessageAck$Status, 3);
    var$2 = var$1.data;
    var$2[0] = onnp_NostrMessageAck$Status_SUCCESS;
    var$2[1] = onnp_NostrMessageAck$Status_FAILURE;
    var$2[2] = onnp_NostrMessageAck$Status_PENDING;
    return var$1;
},
onnp_NostrMessageAck$Status__clinit_ = () => {
    onnp_NostrMessageAck$Status_SUCCESS = onnp_NostrMessageAck$Status__init_($rt_s(905), 0);
    onnp_NostrMessageAck$Status_FAILURE = onnp_NostrMessageAck$Status__init_($rt_s(906), 1);
    onnp_NostrMessageAck$Status_PENDING = onnp_NostrMessageAck$Status__init_($rt_s(907), 2);
    onnp_NostrMessageAck$Status_$VALUES = onnp_NostrMessageAck$Status_$values();
},
onnp_NostrMessageAck$Status__init_$exported$0 = (var$1, var$2) => {
    onnp_NostrMessageAck$Status_$callClinit();
    return onnp_NostrMessageAck$Status__init_($rt_str(var$1), var$2);
},
onnp_NostrMessageAck$Status_values$exported$0 = () => {
    onnp_NostrMessageAck$Status_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnp_NostrMessageAck$Status_values());
},
onnp_NostrMessageAck$Status_valueOf$exported$1 = var$1 => {
    onnp_NostrMessageAck$Status_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnp_NostrMessageAck$Status_valueOf($rt_str(var$1));
},
onnp_NostrMessageAck$Status_$values$exported$2 = () => {
    onnp_NostrMessageAck$Status_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnp_NostrMessageAck$Status_$values());
};
function jtf_DecimalStyle() {
    let a = this; jl_Object.call(a);
    a.$zeroDigit = 0;
    a.$positiveSign = 0;
    a.$negativeSign = 0;
    a.$decimalSeparator = 0;
}
let jtf_DecimalStyle_STANDARD = null,
jtf_DecimalStyle_CACHE = null,
jtf_DecimalStyle_$callClinit = () => {
    jtf_DecimalStyle_$callClinit = $rt_eraseClinit(jtf_DecimalStyle);
    jtf_DecimalStyle__clinit_();
},
jtf_DecimalStyle__init_ = ($this, $zeroChar, $positiveSignChar, $negativeSignChar, $decimalPointChar) => {
    jtf_DecimalStyle_$callClinit();
    jl_Object__init_($this);
    $this.$zeroDigit = $zeroChar;
    $this.$positiveSign = $positiveSignChar;
    $this.$negativeSign = $negativeSignChar;
    $this.$decimalSeparator = $decimalPointChar;
},
jtf_DecimalStyle__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jtf_DecimalStyle();
    jtf_DecimalStyle__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jtf_DecimalStyle_getPositiveSign = $this => {
    return $this.$positiveSign;
},
jtf_DecimalStyle_getNegativeSign = $this => {
    return $this.$negativeSign;
},
jtf_DecimalStyle_getDecimalSeparator = $this => {
    return $this.$decimalSeparator;
},
jtf_DecimalStyle_convertToDigit = ($this, $ch) => {
    let $val;
    $val = $ch - $this.$zeroDigit | 0;
    if (!($val >= 0 && $val <= 9))
        $val = (-1);
    return $val;
},
jtf_DecimalStyle__clinit_ = () => {
    jtf_DecimalStyle_STANDARD = jtf_DecimalStyle__init_0(48, 43, 45, 46);
    jtf_DecimalStyle_CACHE = ju_HashMap__init_();
};
function jnci_UTF16Decoder() {
    let a = this; jnci_BufferedDecoder.call(a);
    a.$bom0 = 0;
    a.$littleEndian = 0;
}
let jnci_UTF16Decoder__init_ = ($this, $cs, $bom, $littleEndian) => {
    jnci_BufferedDecoder__init_($this, $cs, 0.5, 0.5);
    $this.$bom0 = $bom;
    $this.$littleEndian = $littleEndian;
},
jnci_UTF16Decoder__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jnci_UTF16Decoder();
    jnci_UTF16Decoder__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jnci_UTF16Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let var$8, var$9, var$10, $b;
    if ($this.$bom0) {
        if (($inPos + 2 | 0) > $inSize) {
            if ($controller.$hasMoreInput0())
                var$8 = null;
            else {
                jnc_CoderResult_$callClinit();
                var$8 = jnc_CoderResult_UNDERFLOW;
            }
            return var$8;
        }
        var$9 = $inArray.data;
        $this.$bom0 = 0;
        var$10 = $inPos + 1 | 0;
        $b = var$9[$inPos];
        if ($b == (-1)) {
            if (var$9[var$10] != (-2))
                $inPos = var$10 + (-1) | 0;
            else {
                $inPos = var$10 + 1 | 0;
                $this.$littleEndian = 1;
            }
        } else if ($b != (-2))
            $inPos = var$10 + (-1) | 0;
        else if (var$9[var$10] != (-1))
            $inPos = var$10 + (-1) | 0;
        else {
            $inPos = var$10 + 1 | 0;
            $this.$littleEndian = 0;
        }
    }
    return !$this.$littleEndian ? jnci_UTF16Decoder_decodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Decoder_decodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
},
jnci_UTF16Decoder_decodeLE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b1, $b2, $c, var$14, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            if (($inPos + 2 | 0) > $inSize) {
                if ($controller.$hasMoreInput(2))
                    break a;
                jnc_CoderResult_$callClinit();
                $result = jnc_CoderResult_UNDERFLOW;
                break a;
            }
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $b1 = var$9[$inPos] & 255;
            $inPos = var$10 + 1 | 0;
            $b2 = var$9[var$10] & 255;
            $c = ($b1 | $b2 << 8) & 65535;
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(2);
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10;
            } else {
                if (($inPos + 2 | 0) >= $inSize) {
                    if (!$controller.$hasMoreInput(4)) {
                        jnc_CoderResult_$callClinit();
                        $result = jnc_CoderResult_UNDERFLOW;
                    }
                    $inPos = $inPos + (-2) | 0;
                    break a;
                }
                var$10 = $inPos + 1 | 0;
                var$14 = var$9[$inPos] & 255;
                $inPos = var$10 + 1 | 0;
                var$10 = var$9[var$10] & 255;
                $next = (var$14 | var$10 << 8) & 65535;
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-4) | 0;
                    $result = jnc_CoderResult_malformedForLength(4);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = $next;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
jnci_UTF16Decoder_decodeBE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b1, $b2, $c, var$14, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            if (($inPos + 2 | 0) > $inSize) {
                if ($controller.$hasMoreInput(2))
                    break a;
                jnc_CoderResult_$callClinit();
                $result = jnc_CoderResult_UNDERFLOW;
                break a;
            }
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $b1 = var$9[$inPos] & 255;
            $inPos = var$10 + 1 | 0;
            $b2 = var$9[var$10] & 255;
            $c = ($b2 | $b1 << 8) & 65535;
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(2);
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10;
            } else {
                if (($inPos + 2 | 0) >= $inSize) {
                    if (!$controller.$hasMoreInput(4)) {
                        jnc_CoderResult_$callClinit();
                        $result = jnc_CoderResult_UNDERFLOW;
                    }
                    $inPos = $inPos + (-2) | 0;
                    break a;
                }
                var$10 = $inPos + 1 | 0;
                var$14 = var$9[$inPos] & 255;
                $inPos = var$10 + 1 | 0;
                var$10 = var$9[var$10] & 255;
                $next = (var$10 | var$14 << 8) & 65535;
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-4) | 0;
                    $result = jnc_CoderResult_malformedForLength(4);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = $next;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
otjde_EventListener = $rt_classWithoutFields(0);
function onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1() {
    jl_Object.call(this);
    this.$_0142 = null;
}
let onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0142 = var$1;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1();
    onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1_handleEvent = (var$0, var$1) => {
    onpt_TeaVMWebsocketTransport_lambda$connect$1(var$0.$_0142, var$1);
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent(var$2);
},
jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalStateException__init_3 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IllegalStateException__init_0 = () => {
    let var_0 = new jl_IllegalStateException();
    jl_IllegalStateException__init_3(var_0);
    return var_0;
},
jl_IllegalStateException__init_2 = ($this, $message, $cause) => {
    jl_RuntimeException__init_2($this, $message, $cause);
},
jl_IllegalStateException__init_4 = (var_0, var_1) => {
    let var_2 = new jl_IllegalStateException();
    jl_IllegalStateException__init_2(var_2, var_0, var_1);
    return var_2;
},
jl_IllegalStateException__init_1 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_IllegalStateException__init_ = var_0 => {
    let var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_1(var_1, var_0);
    return var_1;
};
function onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2() {
    jl_Object.call(this);
    this.$_0156 = null;
}
let onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0156 = var$1;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2();
    onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2_handleEvent = (var$0, var$1) => {
    onpt_TeaVMWebsocketTransport_lambda$connect$2(var$0.$_0156, var$1);
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent(var$2);
};
function onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_074 = null;
    a.$_142 = null;
}
let onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_074 = var$1;
    var$0.$_142 = var$2;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0__init_0 = (var_0, var_1) => {
    let var_2 = new onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0();
    onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0__init_(var_2, var_0, var_1);
    return var_2;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0_handleEvent = (var$0, var$1) => {
    onpt_TeaVMWebsocketTransport_lambda$connect$0(var$0.$_074, var$0.$_142, var$1);
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent(var$2);
},
jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_ReluctantCompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_CompositeQuantifierSet__init_($this, $quant, $innerSet, $next, $type);
},
jur_ReluctantCompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_ReluctantCompositeQuantifierSet();
    jur_ReluctantCompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_ReluctantCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $min, $max, $i, var$7, var$8;
    $min = $this.$quantifier0.$min0();
    $max = $this.$quantifier0.$max0();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$7 = $this.$next5.$matches($stringIndex, $testString, $matchResult);
                    if (var$7 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
                        var$7 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$7 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$7 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$7;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$8 < 1)
            break;
        $stringIndex = $stringIndex + var$8 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
};
function onpt_TeaVMWebsocketTransport$close$lambda$_3_0() {
    let a = this; jl_Object.call(a);
    a.$_059 = null;
    a.$_131 = null;
}
let onpt_TeaVMWebsocketTransport$close$lambda$_3_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_059 = var$1;
    var$0.$_131 = var$2;
},
onpt_TeaVMWebsocketTransport$close$lambda$_3_0__init_0 = (var_0, var_1) => {
    let var_2 = new onpt_TeaVMWebsocketTransport$close$lambda$_3_0();
    onpt_TeaVMWebsocketTransport$close$lambda$_3_0__init_(var_2, var_0, var_1);
    return var_2;
},
onpt_TeaVMWebsocketTransport$close$lambda$_3_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMWebsocketTransport$close$lambda$_3_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMWebsocketTransport$close$lambda$_3_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMWebsocketTransport_lambda$close$5(var$0.$_059, var$0.$_131, var$1, var$2);
},
jtt_TemporalQueries = $rt_classWithoutFields(),
jtt_TemporalQueries_ZONE_ID = null,
jtt_TemporalQueries_CHRONO = null,
jtt_TemporalQueries_PRECISION = null,
jtt_TemporalQueries_ZONE = null,
jtt_TemporalQueries_OFFSET = null,
jtt_TemporalQueries_LOCAL_DATE = null,
jtt_TemporalQueries_LOCAL_TIME = null,
jtt_TemporalQueries_$callClinit = () => {
    jtt_TemporalQueries_$callClinit = $rt_eraseClinit(jtt_TemporalQueries);
    jtt_TemporalQueries__clinit_();
},
jtt_TemporalQueries_zoneId = () => {
    jtt_TemporalQueries_$callClinit();
    return jtt_TemporalQueries_ZONE_ID;
},
jtt_TemporalQueries_chronology = () => {
    jtt_TemporalQueries_$callClinit();
    return jtt_TemporalQueries_CHRONO;
},
jtt_TemporalQueries_precision = () => {
    jtt_TemporalQueries_$callClinit();
    return jtt_TemporalQueries_PRECISION;
},
jtt_TemporalQueries_zone = () => {
    jtt_TemporalQueries_$callClinit();
    return jtt_TemporalQueries_ZONE;
},
jtt_TemporalQueries_offset = () => {
    jtt_TemporalQueries_$callClinit();
    return jtt_TemporalQueries_OFFSET;
},
jtt_TemporalQueries_localDate = () => {
    jtt_TemporalQueries_$callClinit();
    return jtt_TemporalQueries_LOCAL_DATE;
},
jtt_TemporalQueries_localTime = () => {
    jtt_TemporalQueries_$callClinit();
    return jtt_TemporalQueries_LOCAL_TIME;
},
jtt_TemporalQueries_lambda$static$1 = $temporal => {
    jtt_TemporalQueries_$callClinit();
    jtt_ChronoField_$callClinit();
    if (!$temporal.$isSupported(jtt_ChronoField_EPOCH_DAY))
        return null;
    return jt_LocalDate_ofEpochDay($temporal.$getLong(jtt_ChronoField_EPOCH_DAY));
},
jtt_TemporalQueries__clinit_ = () => {
    jtt_TemporalQueries_ZONE_ID = jtt_TemporalQueries$1__init_0();
    jtt_TemporalQueries_CHRONO = jtt_TemporalQueries$2__init_0();
    jtt_TemporalQueries_PRECISION = jtt_TemporalQueries$3__init_0();
    jtt_TemporalQueries_ZONE = jtt_TemporalQueries$4__init_0();
    jtt_TemporalQueries_OFFSET = jtt_TemporalQueries$_clinit_$lambda$_11_0__init_0();
    jtt_TemporalQueries_LOCAL_DATE = jtt_TemporalQueries$_clinit_$lambda$_11_1__init_0();
    jtt_TemporalQueries_LOCAL_TIME = jtt_TemporalQueries$_clinit_$lambda$_11_2__init_0();
};
function jn_ByteBuffer() {
    jn_Buffer.call(this);
    this.$order = null;
}
let jn_ByteBuffer__init_ = $this => {
    jn_Buffer__init_($this);
    jn_ByteOrder_$callClinit();
    $this.$order = jn_ByteOrder_BIG_ENDIAN;
},
jn_ByteBuffer_allocate = $capacity => {
    let var$2, var$3, $array, $result;
    if ($capacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(349)), $capacity);
        jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$3));
        $rt_throw(var$2);
    }
    $array = $rt_createByteArray($capacity);
    $result = jn_ByteBufferJsImpl__init_($array, 0, $array.data, 0, 0);
    $result.$limit2 = $capacity;
    return $result;
},
jn_ByteBuffer_wrap = ($array, $offset, $length) => {
    let var$4, $data, $result;
    ju_Objects_checkFromIndexSize($offset, $length, $array.data.length);
    var$4 = $array.data;
    $data = var$4;
    $result = jn_ByteBufferJsImpl__init_($array, 0, $data, 0, 0);
    $result.$position3 = $offset;
    $result.$limit2 = $offset + $length | 0;
    return $result;
},
jn_ByteBuffer_wrap0 = $array => {
    return jn_ByteBuffer_wrap($array, 0, $array.data.length);
},
jn_ByteBuffer_get0 = ($this, $dst, $offset, $length) => {
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this))
            $rt_throw(jn_BufferUnderflowException__init_());
        $this.$getImpl0($this.$position3, $dst, $offset, $length);
        $this.$position3 = $this.$position3 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ByteBuffer_get = ($this, $dst) => {
    return $this.$get16($dst, 0, $dst.data.length);
},
jn_ByteBuffer_put0 = ($this, $src) => {
    let $bytesToTransfer;
    if ($src === $this)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $bytesToTransfer = jn_Buffer_remaining($src);
    if ($bytesToTransfer > jn_Buffer_remaining($this))
        $rt_throw(jn_BufferOverflowException__init_());
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    $this.$putImpl3(jn_Buffer_position($this), $src, jn_Buffer_position($src), $bytesToTransfer);
    $this.$position3 = $this.$position3 + $bytesToTransfer | 0;
    $src.$position3 = $src.$position3 + $bytesToTransfer | 0;
    return $this;
},
jn_ByteBuffer_put1 = ($this, $src, $offset, $length) => {
    if (!$length)
        return $this;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        if ($length > jn_Buffer_remaining($this))
            $rt_throw(jn_BufferOverflowException__init_());
        $this.$putImpl4($src, $offset, $this.$position3, $length);
        $this.$position3 = $this.$position3 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ByteBuffer_put = ($this, $src) => {
    return $this.$put0($src, 0, $src.data.length);
},
jn_ByteBuffer_hasArray = $this => {
    return $this.$hasArrayImpl();
},
jn_ByteBuffer_array = $this => {
    return $this.$arrayImpl();
},
jn_ByteBuffer_arrayOffset = $this => {
    return $this.$arrayOffsetImpl();
},
jn_ByteBuffer_hashCode = $this => {
    let $hashCode, $pos, $i;
    $hashCode = 0;
    $pos = jn_Buffer_position($this);
    $i = jn_Buffer_position($this);
    while ($i < $this.$limit2) {
        $hashCode = (31 * $hashCode | 0) + $this.$get6($pos) | 0;
        $i = $i + 1 | 0;
    }
    return $hashCode;
},
jn_ByteBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_ByteBuffer_rewind = $this => {
    jn_Buffer_rewind($this);
    return $this;
},
jn_ByteBuffer_position = ($this, $newPosition) => {
    jn_Buffer_position0($this, $newPosition);
    return $this;
};
function onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3() {
    jl_Object.call(this);
    this.$_0171 = null;
}
let onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0171 = var$1;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3();
    onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3_handleEvent = (var$0, var$1) => {
    onpt_TeaVMWebsocketTransport_lambda$connect$3(var$0.$_0171, var$1);
},
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent(var$2);
},
jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet),
jur_SOLSet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_SOLSet__init_0 = () => {
    let var_0 = new jur_SOLSet();
    jur_SOLSet__init_(var_0);
    return var_0;
},
jur_SOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    if ($strIndex && !($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound()))
        return (-1);
    return $this.$next5.$matches($strIndex, $testString, $matchResult);
},
jur_SOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_SOLSet_getName = $this => {
    return $rt_s(908);
};
function onn_NostrRelaySubManager$SubAttachment() {
    jl_Object.call(this);
    this.$eose = 0;
}
let onn_NostrRelaySubManager$SubAttachment__init_0 = $this => {
    jl_Object__init_($this);
},
onn_NostrRelaySubManager$SubAttachment__init_ = () => {
    let var_0 = new onn_NostrRelaySubManager$SubAttachment();
    onn_NostrRelaySubManager$SubAttachment__init_0(var_0);
    return var_0;
},
onn_NostrRelaySubManager$SubAttachment__init_$exported$0 = () => {
    return onn_NostrRelaySubManager$SubAttachment__init_();
};
function ju_HashMap$HashMapEntrySet() {
    ju_AbstractSet.call(this);
    this.$associatedMap1 = null;
}
let ju_HashMap$HashMapEntrySet__init_ = ($this, $hm) => {
    ju_AbstractSet__init_($this);
    $this.$associatedMap1 = $hm;
},
ju_HashMap$HashMapEntrySet__init_0 = var_0 => {
    let var_1 = new ju_HashMap$HashMapEntrySet();
    ju_HashMap$HashMapEntrySet__init_(var_1, var_0);
    return var_1;
},
ju_HashMap$HashMapEntrySet_size = $this => {
    return $this.$associatedMap1.$elementCount;
},
ju_HashMap$HashMapEntrySet_iterator = $this => {
    return ju_HashMap$EntryIterator__init_0($this.$associatedMap1);
};
function jl_Byte() {
    jl_Number.call(this);
    this.$value1 = 0;
}
let jl_Byte_TYPE = null,
jl_Byte_byteCache = null,
jl_Byte_$callClinit = () => {
    jl_Byte_$callClinit = $rt_eraseClinit(jl_Byte);
    jl_Byte__clinit_();
},
jl_Byte__init_ = ($this, $value) => {
    jl_Byte_$callClinit();
    jl_Number__init_($this);
    $this.$value1 = $value;
},
jl_Byte__init_0 = var_0 => {
    let var_1 = new jl_Byte();
    jl_Byte__init_(var_1, var_0);
    return var_1;
},
jl_Byte_intValue = $this => {
    return $this.$value1;
},
jl_Byte_longValue = $this => {
    return Long_fromInt($this.$value1);
},
jl_Byte_valueOf = $i => {
    jl_Byte_$callClinit();
    return jl_Byte_byteCache.data[$i + 128 | 0];
},
jl_Byte_ensureByteCache = () => {
    let $byteCache, $j, var$3;
    jl_Byte_$callClinit();
    $byteCache = $rt_createArray(jl_Byte, 256);
    $j = 0;
    while (true) {
        var$3 = $byteCache.data;
        if ($j >= var$3.length)
            break;
        var$3[$j] = jl_Byte__init_0(($j - 128 | 0) << 24 >> 24);
        $j = $j + 1 | 0;
    }
    return $byteCache;
},
jl_Byte_toString = $value => {
    jl_Byte_$callClinit();
    return ((jl_StringBuilder__init_()).$append3($value)).$toString();
},
jl_Byte_toString0 = $this => {
    return jl_Byte_toString($this.$value1);
},
jl_Byte_equals = ($this, $other) => {
    return $other instanceof jl_Byte && $other.$value1 == $this.$value1 ? 1 : 0;
},
jl_Byte_hashCode0 = $this => {
    return jl_Byte_hashCode($this.$value1);
},
jl_Byte_hashCode = $value => {
    jl_Byte_$callClinit();
    return $value;
},
jl_Byte_compare = ($a, $b) => {
    jl_Byte_$callClinit();
    return $a - $b | 0;
},
jl_Byte_compareTo0 = ($this, $other) => {
    return jl_Byte_compare($this.$value1, $other.$value1);
},
jl_Byte_compareTo = ($this, var$1) => {
    return $this.$compareTo13(var$1);
},
jl_Byte__clinit_ = () => {
    jl_Byte_TYPE = $rt_cls($rt_bytecls);
    jl_Byte_byteCache = jl_Byte_ensureByteCache();
};
function jusi_FindFirstConsumer() {
    jl_Object.call(this);
    this.$result0 = null;
}
let jusi_FindFirstConsumer__init_ = $this => {
    jl_Object__init_($this);
},
jusi_FindFirstConsumer__init_0 = () => {
    let var_0 = new jusi_FindFirstConsumer();
    jusi_FindFirstConsumer__init_(var_0);
    return var_0;
},
jusi_FindFirstConsumer_test = ($this, $t) => {
    $this.$result0 = $t;
    return 0;
};
function jul_Logger() {
    let a = this; jl_Object.call(a);
    a.$name10 = null;
    a.$parent2 = null;
}
let jul_Logger_loggerCache = null,
jul_Logger_$callClinit = () => {
    jul_Logger_$callClinit = $rt_eraseClinit(jul_Logger);
    jul_Logger__clinit_();
},
jul_Logger__init_ = ($this, $name) => {
    jul_Logger_$callClinit();
    jl_Object__init_($this);
    $this.$name10 = $name;
},
jul_Logger__init_0 = var_0 => {
    let var_1 = new jul_Logger();
    jul_Logger__init_(var_1, var_0);
    return var_1;
},
jul_Logger_getLogger = $name => {
    let $logger, $dotIndex, $parentName;
    jul_Logger_$callClinit();
    $logger = jul_Logger_loggerCache.$get1($name);
    if ($logger === null) {
        $logger = jul_Logger__init_0($name);
        $dotIndex = $name.$lastIndexOf(46);
        if ($dotIndex >= 0) {
            $parentName = $name.$substring(0, $dotIndex);
            $logger.$parent2 = jul_Logger_getLogger($parentName);
        } else if (!$name.$isEmpty())
            $logger.$parent2 = jul_Logger_getLogger($rt_s(23));
        jul_Logger_loggerCache.$put1($name, $logger);
    }
    return $logger;
},
jul_Logger_log0 = ($this, $record) => {
    let $message;
    $message = jul_Logger_format($this, $record.$getMessage(), $record.$getParameters());
    if (jul_Level_intValue($record.$getLevel()) >= jul_Level_intValue(jul_Level_SEVERE))
        jul_Logger_error$js_body$_40($rt_ustr($message));
    else if (jul_Level_intValue($record.$getLevel()) < jul_Level_intValue(jul_Level_WARNING))
        jul_Logger_infoImpl$js_body$_38($rt_ustr($message));
    else
        jul_Logger_warn$js_body$_39($rt_ustr($message));
},
jul_Logger_format = ($this, $message, $params) => {
    let $sb, $index, $next, $paramStart, $index_0, var$8, $paramIndex;
    if ($params === null)
        return $message;
    $sb = jl_StringBuilder__init_();
    $index = 0;
    a: {
        while (true) {
            if ($index >= $message.$length())
                break a;
            $next = $message.$indexOf0(123, $index);
            if ($next < 0)
                break a;
            $paramStart = $next + 1 | 0;
            $index_0 = jul_Logger_digits($paramStart, $message);
            if ($index_0 < 0)
                break;
            if ($message.$charAt($index_0) != 125) {
                $sb.$append15($message, $index, $index_0);
                $index = $index_0;
                continue;
            }
            var$8 = $params.data;
            $paramIndex = jl_Integer_parseInt($message.$substring($paramStart, $index_0));
            if ($paramIndex >= var$8.length) {
                $sb.$append15($message, $index, $index_0);
                $index = $index_0;
                continue;
            }
            $sb.$append(var$8[$paramIndex]);
            $index = $index_0 + 1 | 0;
        }
    }
    return $sb.$toString();
},
jul_Logger_digits = ($from, $message) => {
    let $from_0, $c;
    jul_Logger_$callClinit();
    while (true) {
        if ($from >= $message.$length())
            return (-1);
        $from_0 = $from + 1 | 0;
        $c = $message.$charAt($from);
        if ($c <= 48)
            break;
        if ($c >= 57)
            break;
        $from = $from_0;
    }
    return $from_0;
},
jul_Logger_log1 = ($this, $level, $msg) => {
    $this.$log0(jul_LogRecord__init_($level, $msg));
},
jul_Logger_log = ($this, $level, $msg, $thrown) => {
    let $record;
    $record = jul_LogRecord__init_($level, $msg);
    $record.$setThrown($thrown);
    $this.$log0($record);
},
jul_Logger_severe = ($this, $msg) => {
    jul_Level_$callClinit();
    $this.$log1(jul_Level_SEVERE, $msg);
},
jul_Logger_warning = ($this, $msg) => {
    jul_Level_$callClinit();
    $this.$log1(jul_Level_WARNING, $msg);
},
jul_Logger_info = ($this, $msg) => {
    jul_Level_$callClinit();
    $this.$log1(jul_Level_INFO, $msg);
},
jul_Logger_fine = ($this, $msg) => {
    jul_Level_$callClinit();
    $this.$log1(jul_Level_FINE, $msg);
},
jul_Logger_finer = ($this, $msg) => {
    jul_Level_$callClinit();
    $this.$log1(jul_Level_FINER, $msg);
},
jul_Logger_finest = ($this, $msg) => {
    jul_Level_$callClinit();
    $this.$log1(jul_Level_FINEST, $msg);
},
jul_Logger__clinit_ = () => {
    jul_Logger_loggerCache = ju_HashMap__init_();
},
jul_Logger_infoImpl$js_body$_38 = var$1 => {
    if (console) {
        console.info(var$1);
    }
},
jul_Logger_warn$js_body$_39 = var$1 => {
    if (console) {
        console.warn(var$1);
    }
},
jul_Logger_error$js_body$_40 = var$1 => {
    if (console) {
        console.error(var$1);
    }
};
function onn_NostrRelayInfo() {
    let a = this; jl_Object.call(a);
    a.$map0 = null;
    a.$relayUrl = null;
    a.$name3 = null;
    a.$description0 = null;
    a.$banner = null;
    a.$icon = null;
    a.$pubkey3 = null;
    a.$contact = null;
    a.$supportedNips = null;
    a.$software = null;
    a.$version0 = null;
    a.$privacyPolicy = null;
    a.$termsOfService = null;
    a.$mapRO = null;
    a.$toStringCache = null;
    a.$limitation = null;
    a.$relayCountries = null;
    a.$languageTags = null;
    a.$tags2 = null;
    a.$postingPolicy = null;
}
let onn_NostrRelayInfo_logger = null,
onn_NostrRelayInfo_$callClinit = () => {
    onn_NostrRelayInfo_$callClinit = $rt_eraseClinit(onn_NostrRelayInfo);
    onn_NostrRelayInfo__clinit_();
},
onn_NostrRelayInfo__init_ = ($this, var$1, $map) => {
    onn_NostrRelayInfo_$callClinit();
    jl_Object__init_($this);
    $this.$map0 = $map;
    $this.$relayUrl = var$1;
},
onn_NostrRelayInfo__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelayInfo();
    onn_NostrRelayInfo__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelayInfo_get = $relayUrl => {
    let $headers, $platform, $httpUrl, $task;
    onn_NostrRelayInfo_$callClinit();
    $headers = ju_HashMap__init_();
    $headers.$put1($rt_s(909), $rt_s(910));
    $platform = onp_NGEUtils_getPlatform();
    $httpUrl = !$relayUrl.$startsWith($rt_s(911)) ? $relayUrl.$replace($rt_s(912), $rt_s(311)) : $relayUrl.$replace($rt_s(911), $rt_s(913));
    $task = $platform.$httpGet($httpUrl, jt_Duration_ofSeconds(Long_fromInt(30)), $headers);
    return $task.$then(onn_NostrRelayInfo$get$lambda$_1_0__init_0($platform, $relayUrl));
},
onn_NostrRelayInfo_clone = $this => {
    let $clone, $e, var$3, $$je;
    a: {
        try {
            $clone = jl_Object_clone($this);
            $clone.$mapRO = null;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $clone;
    }
    onn_NostrRelayInfo_$callClinit();
    var$3 = onn_NostrRelayInfo_logger;
    jul_Level_$callClinit();
    var$3.$log(jul_Level_SEVERE, $rt_s(914), $e);
    return null;
},
onn_NostrRelayInfo_get0 = $this => {
    if ($this.$mapRO === null)
        $this.$mapRO = ju_Collections_unmodifiableMap($this.$map0);
    return $this.$mapRO;
},
onn_NostrRelayInfo_getName = $this => {
    if ($this.$name3 === null)
        $this.$name3 = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(331)));
    return $this.$name3;
},
onn_NostrRelayInfo_getDescription = $this => {
    if ($this.$description0 === null)
        $this.$description0 = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(915)));
    return $this.$description0;
},
onn_NostrRelayInfo_getBanner = $this => {
    if ($this.$banner === null)
        $this.$banner = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(338)));
    return $this.$banner;
},
onn_NostrRelayInfo_getIcon = $this => {
    if ($this.$icon === null)
        $this.$icon = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(916)));
    return $this.$icon;
},
onn_NostrRelayInfo_getPubkey = $this => {
    let $k;
    if ($this.$pubkey3 === null) {
        $k = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(744)));
        if (!$k.$startsWith($rt_s(917)))
            $this.$pubkey3 = onnk_NostrPublicKey_fromHex($k);
        else
            $this.$pubkey3 = onnk_NostrPublicKey_fromBech32($k);
    }
    return $this.$pubkey3;
},
onn_NostrRelayInfo_getContact = $this => {
    if ($this.$contact === null)
        $this.$contact = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(918)));
    return $this.$contact;
},
onn_NostrRelayInfo_getSupportedNips = $this => {
    if ($this.$supportedNips === null)
        $this.$supportedNips = ju_Collections_unmodifiableList(onp_NGEUtils_safeIntList($this.$map0.$getOrDefault($rt_s(919), ju_List_of())));
    return $this.$supportedNips;
},
onn_NostrRelayInfo_getSoftware = $this => {
    if ($this.$software === null)
        $this.$software = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(920)));
    return $this.$software;
},
onn_NostrRelayInfo_getVersion = $this => {
    if ($this.$version0 === null)
        $this.$version0 = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(921)));
    return $this.$version0;
},
onn_NostrRelayInfo_getPrivacyPolicy = $this => {
    if ($this.$privacyPolicy === null)
        $this.$privacyPolicy = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(922)));
    return $this.$privacyPolicy;
},
onn_NostrRelayInfo_getTermsOfService = $this => {
    if ($this.$termsOfService === null)
        $this.$termsOfService = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(923)));
    return $this.$termsOfService;
},
onn_NostrRelayInfo_getRelayUrl = $this => {
    return $this.$relayUrl;
},
onn_NostrRelayInfo_isNipSupported0 = ($this, $nip) => {
    return ($this.$getSupportedNips()).$contains(jl_Integer_valueOf($nip));
},
onn_NostrRelayInfo_isNipSupported = ($this, $nip) => {
    let var$2, var$3, $$je;
    a: {
        try {
            var$2 = ($nip.$toLowerCase2()).$trim();
            if (var$2.$startsWith($rt_s(924)))
                var$2 = var$2.$substring0(4);
            if (var$2.$startsWith($rt_s(925)))
                var$2 = var$2.$substring0(3);
            var$3 = $this.$isNipSupported(onp_NGEUtils_safeInt(var$2));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    return 0;
},
onn_NostrRelayInfo_getLimitations = $this => {
    if ($this.$limitation === null) {
        $this.$limitation = ju_Collections_unmodifiableMap($this.$map0.$getOrDefault($rt_s(926), ju_Map_of()));
        if ($this.$limitation === null)
            $this.$limitation = ju_Map_of();
    }
    return $this.$limitation;
},
onn_NostrRelayInfo_getLimitation0 = ($this, $key, $defaultValue) => {
    if (!(onn_NostrRelayInfo_getLimitations($this)).$containsKey($key))
        return $defaultValue;
    return onp_NGEUtils_safeInt((onn_NostrRelayInfo_getLimitations($this)).$get1($key));
},
onn_NostrRelayInfo_getLimitation = ($this, $key, $defaultValue) => {
    if (!(onn_NostrRelayInfo_getLimitations($this)).$containsKey($key))
        return $defaultValue;
    return onp_NGEUtils_safeBool((onn_NostrRelayInfo_getLimitations($this)).$get1($key));
},
onn_NostrRelayInfo_getCountries = $this => {
    if ($this.$relayCountries === null)
        $this.$relayCountries = ju_Collections_unmodifiableList(onp_NGEUtils_safeStringList($this.$map0.$getOrDefault($rt_s(927), ju_List_of())));
    return $this.$relayCountries;
},
onn_NostrRelayInfo_getLanguageTags = $this => {
    let $tags;
    if ($this.$languageTags !== null)
        $this.$languageTags = ju_ArrayList__init_();
    else {
        $tags = onp_NGEUtils_safeStringList($this.$map0.$getOrDefault($rt_s(928), ju_List_of()));
        $this.$languageTags = ju_Collections_unmodifiableList($tags);
    }
    return $this.$languageTags;
},
onn_NostrRelayInfo_getTags = $this => {
    if ($this.$tags2 === null)
        $this.$tags2 = ju_Collections_unmodifiableList(onp_NGEUtils_safeStringList($this.$map0.$getOrDefault($rt_s(747), ju_List_of())));
    return $this.$tags2;
},
onn_NostrRelayInfo_getPostingPolicy = $this => {
    if ($this.$postingPolicy === null)
        $this.$postingPolicy = onp_NGEUtils_safeString($this.$map0.$get1($rt_s(929)));
    return $this.$postingPolicy;
},
onn_NostrRelayInfo_toString = $this => {
    if ($this.$toStringCache === null)
        $this.$toStringCache = (onp_NGEUtils_getPlatform()).$toJSON($this.$get20());
    return $this.$toStringCache;
},
onn_NostrRelayInfo_clone0 = $this => {
    return $this.$clone9();
},
onn_NostrRelayInfo_lambda$get$0 = ($platform, $relayUrl, $data) => {
    let $map;
    onn_NostrRelayInfo_$callClinit();
    $map = $platform.$fromJSON($data, $rt_cls(ju_Map));
    return onn_NostrRelayInfo__init_0($relayUrl, $map);
},
onn_NostrRelayInfo__clinit_ = () => {
    onn_NostrRelayInfo_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onn_NostrRelayInfo)));
},
onn_NostrRelayInfo_getVersion$exported$0 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getVersion());
},
onn_NostrRelayInfo__init_$exported$1 = (var$1, var$2) => {
    onn_NostrRelayInfo_$callClinit();
    return onn_NostrRelayInfo__init_0($rt_str(var$1), var$2);
},
onn_NostrRelayInfo_getLimitation$exported$2 = (var$1, var$2, var$3) => {
    let var$4;
    onn_NostrRelayInfo_$callClinit();
    var$2 = $rt_str(var$2);
    var$4 = var$3;
    return var$1.$getLimitation(var$2, var$4);
},
onn_NostrRelayInfo_getLimitation$exported$3 = (var$1, var$2, var$3) => {
    let var$4;
    onn_NostrRelayInfo_$callClinit();
    var$2 = $rt_str(var$2);
    var$4 = var$3 ? 1 : 0;
    return !!var$1.$getLimitation0(var$2, var$4);
},
onn_NostrRelayInfo_toString$exported$4 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$toString());
},
onn_NostrRelayInfo_getDescription$exported$5 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getDescription());
},
onn_NostrRelayInfo_getIcon$exported$6 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getIcon());
},
onn_NostrRelayInfo_getContact$exported$7 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getContact());
},
onn_NostrRelayInfo_getTags$exported$8 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return var$1.$getTags();
},
onn_NostrRelayInfo_getPostingPolicy$exported$9 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getPostingPolicy());
},
onn_NostrRelayInfo_getName$exported$10 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getName());
},
onn_NostrRelayInfo_getLanguageTags$exported$11 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return var$1.$getLanguageTags();
},
onn_NostrRelayInfo_getCountries$exported$12 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return var$1.$getCountries();
},
onn_NostrRelayInfo_clone$exported$13 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return var$1.$clone9();
},
onn_NostrRelayInfo_getSoftware$exported$14 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getSoftware());
},
onn_NostrRelayInfo_get$exported$15 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return var$1.$get20();
},
onn_NostrRelayInfo_clone$exported$16 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return otji_JSWrapper_javaToJs(var$1.$clone0());
},
onn_NostrRelayInfo_isNipSupported$exported$17 = (var$1, var$2) => {
    onn_NostrRelayInfo_$callClinit();
    var$2 = $rt_str(var$2);
    return !!var$1.$isNipSupported0(var$2);
};
let onn_NostrRelayInfo_getSupportedNips$exported$18 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return var$1.$getSupportedNips();
},
onn_NostrRelayInfo_isNipSupported$exported$19 = (var$1, var$2) => {
    let var$3;
    onn_NostrRelayInfo_$callClinit();
    var$3 = var$2;
    return !!var$1.$isNipSupported(var$3);
},
onn_NostrRelayInfo_getRelayUrl$exported$20 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getRelayUrl());
},
onn_NostrRelayInfo_getPubkey$exported$21 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return var$1.$getPubkey();
},
onn_NostrRelayInfo_getBanner$exported$22 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getBanner());
},
onn_NostrRelayInfo_getTermsOfService$exported$23 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getTermsOfService());
},
onn_NostrRelayInfo_getPrivacyPolicy$exported$24 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return $rt_ustr(var$1.$getPrivacyPolicy());
},
onn_NostrRelayInfo_getLimitations$exported$25 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    return onn_NostrRelayInfo_getLimitations(var$1);
},
onn_NostrRelayInfo_get$exported$0 = var$1 => {
    onn_NostrRelayInfo_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onn_NostrRelayInfo_get($rt_str(var$1));
},
onn_NostrRelayInfo_lambda$get$0$exported$1 = (var$1, var$2, var$3) => {
    onn_NostrRelayInfo_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onn_NostrRelayInfo_lambda$get$0(var$1, $rt_str(var$2), $rt_str(var$3));
},
jlr_Modifier = $rt_classWithoutFields(),
jlr_Modifier_modifierNames = null,
jlr_Modifier_canonicalOrder = null,
jlr_Modifier_$callClinit = () => {
    jlr_Modifier_$callClinit = $rt_eraseClinit(jlr_Modifier);
    jlr_Modifier__clinit_();
},
jlr_Modifier_toString0 = $mod => {
    jlr_Modifier_$callClinit();
    return jlr_Modifier_toString($mod, 0);
},
jlr_Modifier_toString = ($mod, $abstractExpected) => {
    let $sb, $modifierNames, $index, var$6, var$7, var$8, $modifier;
    jlr_Modifier_$callClinit();
    $sb = jl_StringBuilder__init_();
    $modifierNames = jlr_Modifier_getModifierNames();
    $index = 0;
    var$6 = jlr_Modifier_canonicalOrder.data;
    var$7 = var$6.length;
    var$8 = 0;
    while (var$8 < var$7) {
        $modifier = var$6[var$8];
        if ($modifier == 1024 && $abstractExpected) {
            if (!($mod & 1024)) {
                if ($sb.$length() > 0)
                    $sb.$append0(32);
                $sb.$append1($rt_s(930));
            }
        } else if ($mod & $modifier) {
            if ($sb.$length() > 0)
                $sb.$append0(32);
            $sb.$append1($modifierNames.data[$index]);
        }
        $index = $index + 1 | 0;
        var$8 = var$8 + 1 | 0;
    }
    return $sb.$toString();
},
jlr_Modifier_getModifierNames = () => {
    jlr_Modifier_$callClinit();
    if (jlr_Modifier_modifierNames === null)
        jlr_Modifier_modifierNames = $rt_wrapArray(jl_String, [$rt_s(931), $rt_s(932), $rt_s(933), $rt_s(934), $rt_s(935), $rt_s(936), $rt_s(937), $rt_s(938), $rt_s(939), $rt_s(940), $rt_s(941), $rt_s(942)]);
    return jlr_Modifier_modifierNames;
},
jlr_Modifier__clinit_ = () => {
    jlr_Modifier_canonicalOrder = $rt_createIntArrayFromData([1, 4, 2, 1024, 8, 16, 128, 64, 32, 256, 2048, 512]);
};
function ju_TemplateCollections$SingleElementList() {
    ju_TemplateCollections$AbstractImmutableList.call(this);
    this.$value18 = null;
}
let ju_TemplateCollections$SingleElementList__init_ = ($this, $value) => {
    ju_TemplateCollections$AbstractImmutableList__init_($this);
    $this.$value18 = $value;
},
ju_TemplateCollections$SingleElementList__init_0 = var_0 => {
    let var_1 = new ju_TemplateCollections$SingleElementList();
    ju_TemplateCollections$SingleElementList__init_(var_1, var_0);
    return var_1;
},
ju_TemplateCollections$SingleElementList_size = $this => {
    return 1;
},
ju_TemplateCollections$SingleElementList_get = ($this, $index) => {
    if (!$index)
        return $this.$value18;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
onnrl_NostrRTCRoomPeerMessageListener = $rt_classWithoutFields(0);
function onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0() {
    let a = this; jl_Object.call(a);
    a.$_0101 = null;
    a.$_155 = null;
    a.$_228 = null;
}
let onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0101 = var$1;
    var$0.$_155 = var$2;
    var$0.$_228 = var$3;
},
onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0();
    onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0_accept = (var$0, var$1) => {
    onpt_TeaVMPlatform$1_lambda$compose$4(var$0.$_0101, var$0.$_155, var$0.$_228, var$1);
};
function onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1() {
    jl_Object.call(this);
    this.$_065 = null;
}
let onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_065 = var$1;
},
onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1();
    onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1_accept0 = (var$0, var$1) => {
    onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1_accept(var$0, var$1);
},
onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1_accept = (var$0, var$1) => {
    var$0.$_065.$accept0(var$1);
};
function jtt_ChronoField() {
    let a = this; jl_Enum.call(a);
    a.$name8 = null;
    a.$baseUnit = null;
    a.$rangeUnit = null;
    a.$range1 = null;
}
let jtt_ChronoField_NANO_OF_SECOND = null,
jtt_ChronoField_NANO_OF_DAY = null,
jtt_ChronoField_MICRO_OF_SECOND = null,
jtt_ChronoField_MICRO_OF_DAY = null,
jtt_ChronoField_MILLI_OF_SECOND = null,
jtt_ChronoField_MILLI_OF_DAY = null,
jtt_ChronoField_SECOND_OF_MINUTE = null,
jtt_ChronoField_SECOND_OF_DAY = null,
jtt_ChronoField_MINUTE_OF_HOUR = null,
jtt_ChronoField_MINUTE_OF_DAY = null,
jtt_ChronoField_HOUR_OF_AMPM = null,
jtt_ChronoField_CLOCK_HOUR_OF_AMPM = null,
jtt_ChronoField_HOUR_OF_DAY = null,
jtt_ChronoField_CLOCK_HOUR_OF_DAY = null,
jtt_ChronoField_AMPM_OF_DAY = null,
jtt_ChronoField_DAY_OF_WEEK = null,
jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH = null,
jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR = null,
jtt_ChronoField_DAY_OF_MONTH = null,
jtt_ChronoField_DAY_OF_YEAR = null,
jtt_ChronoField_EPOCH_DAY = null,
jtt_ChronoField_ALIGNED_WEEK_OF_MONTH = null,
jtt_ChronoField_ALIGNED_WEEK_OF_YEAR = null,
jtt_ChronoField_MONTH_OF_YEAR = null,
jtt_ChronoField_PROLEPTIC_MONTH = null,
jtt_ChronoField_YEAR_OF_ERA = null,
jtt_ChronoField_YEAR = null,
jtt_ChronoField_ERA = null,
jtt_ChronoField_INSTANT_SECONDS = null,
jtt_ChronoField_OFFSET_SECONDS = null,
jtt_ChronoField_$VALUES = null,
jtt_ChronoField_$callClinit = () => {
    jtt_ChronoField_$callClinit = $rt_eraseClinit(jtt_ChronoField);
    jtt_ChronoField__clinit_();
},
jtt_ChronoField_values = () => {
    jtt_ChronoField_$callClinit();
    return jtt_ChronoField_$VALUES.$clone0();
},
jtt_ChronoField__init_0 = ($this, var$1, var$2, $name, $baseUnit, $rangeUnit, $range) => {
    jtt_ChronoField_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$name8 = $name;
    $this.$baseUnit = $baseUnit;
    $this.$rangeUnit = $rangeUnit;
    $this.$range1 = $range;
},
jtt_ChronoField__init_ = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new jtt_ChronoField();
    jtt_ChronoField__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
jtt_ChronoField_range = $this => {
    return $this.$range1;
},
jtt_ChronoField_isDateBased = $this => {
    let var$1;
    var$1 = jl_Enum_ordinal($this);
    jtt_ChronoField_$callClinit();
    return var$1 >= jl_Enum_ordinal(jtt_ChronoField_DAY_OF_WEEK) && jl_Enum_ordinal($this) <= jl_Enum_ordinal(jtt_ChronoField_ERA) ? 1 : 0;
},
jtt_ChronoField_isTimeBased = $this => {
    let var$1;
    var$1 = jl_Enum_ordinal($this);
    jtt_ChronoField_$callClinit();
    return var$1 >= jl_Enum_ordinal(jtt_ChronoField_DAY_OF_WEEK) ? 0 : 1;
},
jtt_ChronoField_checkValidValue = ($this, $value) => {
    return jtt_ValueRange_checkValidValue(jtt_ChronoField_range($this), $value, $this);
},
jtt_ChronoField_checkValidIntValue = ($this, $value) => {
    return jtt_ValueRange_checkValidIntValue(jtt_ChronoField_range($this), $value, $this);
},
jtt_ChronoField_isSupportedBy = ($this, $temporal) => {
    return $temporal.$isSupported($this);
},
jtt_ChronoField_rangeRefinedBy = ($this, $temporal) => {
    return $temporal.$range0($this);
},
jtt_ChronoField_getFrom = ($this, $temporal) => {
    return $temporal.$getLong($this);
},
jtt_ChronoField_adjustInto = ($this, $temporal, $newValue) => {
    return $temporal.$with2($this, $newValue);
},
jtt_ChronoField_resolve = ($this, $fieldValues, $partialTemporal, $resolverStyle) => {
    return null;
},
jtt_ChronoField_toString = $this => {
    return $this.$name8;
},
jtt_ChronoField_$values = () => {
    let var$1, var$2;
    jtt_ChronoField_$callClinit();
    var$1 = $rt_createArray(jtt_ChronoField, 30);
    var$2 = var$1.data;
    var$2[0] = jtt_ChronoField_NANO_OF_SECOND;
    var$2[1] = jtt_ChronoField_NANO_OF_DAY;
    var$2[2] = jtt_ChronoField_MICRO_OF_SECOND;
    var$2[3] = jtt_ChronoField_MICRO_OF_DAY;
    var$2[4] = jtt_ChronoField_MILLI_OF_SECOND;
    var$2[5] = jtt_ChronoField_MILLI_OF_DAY;
    var$2[6] = jtt_ChronoField_SECOND_OF_MINUTE;
    var$2[7] = jtt_ChronoField_SECOND_OF_DAY;
    var$2[8] = jtt_ChronoField_MINUTE_OF_HOUR;
    var$2[9] = jtt_ChronoField_MINUTE_OF_DAY;
    var$2[10] = jtt_ChronoField_HOUR_OF_AMPM;
    var$2[11] = jtt_ChronoField_CLOCK_HOUR_OF_AMPM;
    var$2[12] = jtt_ChronoField_HOUR_OF_DAY;
    var$2[13] = jtt_ChronoField_CLOCK_HOUR_OF_DAY;
    var$2[14] = jtt_ChronoField_AMPM_OF_DAY;
    var$2[15] = jtt_ChronoField_DAY_OF_WEEK;
    var$2[16] = jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH;
    var$2[17] = jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR;
    var$2[18] = jtt_ChronoField_DAY_OF_MONTH;
    var$2[19] = jtt_ChronoField_DAY_OF_YEAR;
    var$2[20] = jtt_ChronoField_EPOCH_DAY;
    var$2[21] = jtt_ChronoField_ALIGNED_WEEK_OF_MONTH;
    var$2[22] = jtt_ChronoField_ALIGNED_WEEK_OF_YEAR;
    var$2[23] = jtt_ChronoField_MONTH_OF_YEAR;
    var$2[24] = jtt_ChronoField_PROLEPTIC_MONTH;
    var$2[25] = jtt_ChronoField_YEAR_OF_ERA;
    var$2[26] = jtt_ChronoField_YEAR;
    var$2[27] = jtt_ChronoField_ERA;
    var$2[28] = jtt_ChronoField_INSTANT_SECONDS;
    var$2[29] = jtt_ChronoField_OFFSET_SECONDS;
    return var$1;
},
jtt_ChronoField__clinit_ = () => {
    let var$1;
    var$1 = new jtt_ChronoField;
    jtt_ChronoUnit_$callClinit();
    jtt_ChronoField__init_0(var$1, $rt_s(943), 0, $rt_s(944), jtt_ChronoUnit_NANOS, jtt_ChronoUnit_SECONDS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(999999999)));
    jtt_ChronoField_NANO_OF_SECOND = var$1;
    jtt_ChronoField_NANO_OF_DAY = jtt_ChronoField__init_($rt_s(945), 1, $rt_s(946), jtt_ChronoUnit_NANOS, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_ZERO, Long_create(2437873663, 20116)));
    jtt_ChronoField_MICRO_OF_SECOND = jtt_ChronoField__init_($rt_s(947), 2, $rt_s(948), jtt_ChronoUnit_MICROS, jtt_ChronoUnit_SECONDS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(999999)));
    jtt_ChronoField_MICRO_OF_DAY = jtt_ChronoField__init_($rt_s(949), 3, $rt_s(950), jtt_ChronoUnit_MICROS, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_ZERO, Long_create(500654079, 20)));
    jtt_ChronoField_MILLI_OF_SECOND = jtt_ChronoField__init_($rt_s(951), 4, $rt_s(952), jtt_ChronoUnit_MILLIS, jtt_ChronoUnit_SECONDS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(999)));
    jtt_ChronoField_MILLI_OF_DAY = jtt_ChronoField__init_($rt_s(953), 5, $rt_s(954), jtt_ChronoUnit_MILLIS, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(86399999)));
    jtt_ChronoField_SECOND_OF_MINUTE = jtt_ChronoField__init_($rt_s(955), 6, $rt_s(956), jtt_ChronoUnit_SECONDS, jtt_ChronoUnit_MINUTES, jtt_ValueRange_of(Long_ZERO, Long_fromInt(59)));
    jtt_ChronoField_SECOND_OF_DAY = jtt_ChronoField__init_($rt_s(957), 7, $rt_s(958), jtt_ChronoUnit_SECONDS, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(86399)));
    jtt_ChronoField_MINUTE_OF_HOUR = jtt_ChronoField__init_($rt_s(959), 8, $rt_s(960), jtt_ChronoUnit_MINUTES, jtt_ChronoUnit_HOURS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(59)));
    jtt_ChronoField_MINUTE_OF_DAY = jtt_ChronoField__init_($rt_s(961), 9, $rt_s(962), jtt_ChronoUnit_MINUTES, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(1439)));
    jtt_ChronoField_HOUR_OF_AMPM = jtt_ChronoField__init_($rt_s(963), 10, $rt_s(964), jtt_ChronoUnit_HOURS, jtt_ChronoUnit_HALF_DAYS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(11)));
    jtt_ChronoField_CLOCK_HOUR_OF_AMPM = jtt_ChronoField__init_($rt_s(965), 11, $rt_s(966), jtt_ChronoUnit_HOURS, jtt_ChronoUnit_HALF_DAYS, jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(12)));
    jtt_ChronoField_HOUR_OF_DAY = jtt_ChronoField__init_($rt_s(78), 12, $rt_s(967), jtt_ChronoUnit_HOURS, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(23)));
    jtt_ChronoField_CLOCK_HOUR_OF_DAY = jtt_ChronoField__init_($rt_s(968), 13, $rt_s(969), jtt_ChronoUnit_HOURS, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(24)));
    jtt_ChronoField_AMPM_OF_DAY = jtt_ChronoField__init_($rt_s(970), 14, $rt_s(971), jtt_ChronoUnit_HALF_DAYS, jtt_ChronoUnit_DAYS, jtt_ValueRange_of(Long_ZERO, Long_fromInt(1)));
    jtt_ChronoField_DAY_OF_WEEK = jtt_ChronoField__init_($rt_s(972), 15, $rt_s(973), jtt_ChronoUnit_DAYS, jtt_ChronoUnit_WEEKS, jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(7)));
    jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH = jtt_ChronoField__init_($rt_s(974), 16, $rt_s(975), jtt_ChronoUnit_DAYS, jtt_ChronoUnit_WEEKS, jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(7)));
    jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR = jtt_ChronoField__init_($rt_s(976), 17, $rt_s(977), jtt_ChronoUnit_DAYS, jtt_ChronoUnit_WEEKS, jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(7)));
    jtt_ChronoField_DAY_OF_MONTH = jtt_ChronoField__init_($rt_s(978), 18, $rt_s(979), jtt_ChronoUnit_DAYS, jtt_ChronoUnit_MONTHS, jtt_ValueRange_of0(Long_fromInt(1), Long_fromInt(28), Long_fromInt(31)));
    jtt_ChronoField_DAY_OF_YEAR = jtt_ChronoField__init_($rt_s(980), 19, $rt_s(981), jtt_ChronoUnit_DAYS, jtt_ChronoUnit_YEARS, jtt_ValueRange_of0(Long_fromInt(1), Long_fromInt(365), Long_fromInt(366)));
    jtt_ChronoField_EPOCH_DAY = jtt_ChronoField__init_($rt_s(982), 20, $rt_s(983), jtt_ChronoUnit_DAYS, jtt_ChronoUnit_FOREVER, jtt_ValueRange_of(Long_create(4123968294, 4294967210), Long_create(169560311, 85)));
    jtt_ChronoField_ALIGNED_WEEK_OF_MONTH = jtt_ChronoField__init_($rt_s(984), 21, $rt_s(985), jtt_ChronoUnit_WEEKS, jtt_ChronoUnit_MONTHS, jtt_ValueRange_of0(Long_fromInt(1), Long_fromInt(4), Long_fromInt(5)));
    jtt_ChronoField_ALIGNED_WEEK_OF_YEAR = jtt_ChronoField__init_($rt_s(986), 22, $rt_s(987), jtt_ChronoUnit_WEEKS, jtt_ChronoUnit_YEARS, jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(53)));
    jtt_ChronoField_MONTH_OF_YEAR = jtt_ChronoField__init_($rt_s(988), 23, $rt_s(989), jtt_ChronoUnit_MONTHS, jtt_ChronoUnit_YEARS, jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(12)));
    jtt_ChronoField_PROLEPTIC_MONTH = jtt_ChronoField__init_($rt_s(990), 24, $rt_s(991), jtt_ChronoUnit_MONTHS, jtt_ChronoUnit_FOREVER, jtt_ValueRange_of(Long_create(884901900, 4294967293), Long_create(3410065407, 2)));
    jtt_ChronoField_YEAR_OF_ERA = jtt_ChronoField__init_($rt_s(992), 25, $rt_s(993), jtt_ChronoUnit_YEARS, jtt_ChronoUnit_FOREVER, jtt_ValueRange_of0(Long_fromInt(1), Long_fromInt(999999999), Long_fromInt(1000000000)));
    jtt_ChronoField_YEAR = jtt_ChronoField__init_($rt_s(994), 26, $rt_s(995), jtt_ChronoUnit_YEARS, jtt_ChronoUnit_FOREVER, jtt_ValueRange_of(Long_fromInt(-999999999), Long_fromInt(999999999)));
    jtt_ChronoField_ERA = jtt_ChronoField__init_($rt_s(996), 27, $rt_s(997), jtt_ChronoUnit_ERAS, jtt_ChronoUnit_FOREVER, jtt_ValueRange_of(Long_ZERO, Long_fromInt(1)));
    jtt_ChronoField_INSTANT_SECONDS = jtt_ChronoField__init_($rt_s(998), 28, $rt_s(999), jtt_ChronoUnit_SECONDS, jtt_ChronoUnit_FOREVER, jtt_ValueRange_of(Long_create(0, 2147483648), Long_create(4294967295, 2147483647)));
    jtt_ChronoField_OFFSET_SECONDS = jtt_ChronoField__init_($rt_s(1000), 29, $rt_s(1001), jtt_ChronoUnit_SECONDS, jtt_ChronoUnit_FOREVER, jtt_ValueRange_of(Long_fromInt(-64800), Long_fromInt(64800)));
    jtt_ChronoField_$VALUES = jtt_ChronoField_$values();
};
function onnn_Nip46AppMetadata() {
    let a = this; jl_Object.call(a);
    a.$name2 = null;
    a.$url0 = null;
    a.$image = null;
    a.$perms = null;
}
let onnn_Nip46AppMetadata__init_1 = ($this, $name, $url, $image, $perms) => {
    jl_Object__init_($this);
    $this.$name2 = $name;
    $this.$url0 = $url;
    $this.$image = $image;
    $this.$perms = $perms;
},
onnn_Nip46AppMetadata__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnn_Nip46AppMetadata();
    onnn_Nip46AppMetadata__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnn_Nip46AppMetadata__init_ = $this => {
    jl_Object__init_($this);
},
onnn_Nip46AppMetadata__init_2 = () => {
    let var_0 = new onnn_Nip46AppMetadata();
    onnn_Nip46AppMetadata__init_(var_0);
    return var_0;
},
onnn_Nip46AppMetadata_setName = ($this, $name) => {
    $this.$name2 = $name;
    return $this;
},
onnn_Nip46AppMetadata_setUrl = ($this, $url) => {
    $this.$url0 = $url;
    return $this;
},
onnn_Nip46AppMetadata_setImage = ($this, $image) => {
    $this.$image = $image;
    return $this;
},
onnn_Nip46AppMetadata_setPerms = ($this, $perms) => {
    $this.$perms = $perms;
    return $this;
},
onnn_Nip46AppMetadata_addPerm = ($this, $perm) => {
    if ($this.$perms === null)
        $this.$perms = ju_ArrayList__init_();
    $this.$perms.$add1($perm);
    return $this;
},
onnn_Nip46AppMetadata_removePerm = ($this, $perm) => {
    if ($this.$perms !== null) {
        $this.$perms.$remove2($perm);
        if ($this.$perms.$isEmpty())
            $this.$perms = null;
    }
    return $this;
},
onnn_Nip46AppMetadata_permsFromCsv = ($this, $csv) => {
    if ($csv !== null && !$csv.$isEmpty())
        $this.$perms = ju_List_of0($csv.$split0($rt_s(87)));
    else
        $this.$perms = ju_ArrayList__init_();
    return $this;
},
onnn_Nip46AppMetadata_getName = $this => {
    return $this.$name2;
},
onnn_Nip46AppMetadata_getUrl = $this => {
    return $this.$url0;
},
onnn_Nip46AppMetadata_getImage = $this => {
    return $this.$image;
},
onnn_Nip46AppMetadata_getPerms = $this => {
    return $this.$perms;
},
onnn_Nip46AppMetadata_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = $this.$name2;
    var$2 = $this.$url0;
    var$3 = $this.$image;
    var$4 = jl_String_valueOf($this.$perms);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1002)), var$1), $rt_s(1003)), var$2), $rt_s(1004)), var$3), $rt_s(1005)), var$4), 125);
    return jl_StringBuilder_toString(var$5);
},
onnn_Nip46AppMetadata_clone = $this => {
    let var$1, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    return onnn_Nip46AppMetadata__init_0($this.$name2, $this.$url0, $this.$image, $this.$perms);
},
onnn_Nip46AppMetadata_clone0 = $this => {
    return $this.$clone10();
},
onnn_Nip46AppMetadata__init_$exported$0 = (var$1, var$2, var$3, var$4) => {
    return onnn_Nip46AppMetadata__init_0($rt_str(var$1), $rt_str(var$2), $rt_str(var$3), var$4);
},
onnn_Nip46AppMetadata__init_$exported$1 = () => {
    return onnn_Nip46AppMetadata__init_2();
},
onnn_Nip46AppMetadata_toString$exported$2 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnn_Nip46AppMetadata_setImage$exported$3 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$setImage(var$2);
},
onnn_Nip46AppMetadata_addPerm$exported$4 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$addPerm(var$2);
},
onnn_Nip46AppMetadata_getName$exported$5 = var$1 => {
    return $rt_ustr(var$1.$getName());
},
onnn_Nip46AppMetadata_getImage$exported$6 = var$1 => {
    return $rt_ustr(var$1.$getImage());
},
onnn_Nip46AppMetadata_setPerms$exported$7 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$setPerms(var$2);
},
onnn_Nip46AppMetadata_removePerm$exported$8 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$removePerm(var$2);
},
onnn_Nip46AppMetadata_clone$exported$9 = var$1 => {
    return var$1.$clone10();
},
onnn_Nip46AppMetadata_setName$exported$10 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$setName0(var$2);
},
onnn_Nip46AppMetadata_getPerms$exported$11 = var$1 => {
    return var$1.$getPerms();
},
onnn_Nip46AppMetadata_permsFromCsv$exported$12 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$permsFromCsv(var$2);
},
onnn_Nip46AppMetadata_getUrl$exported$13 = var$1 => {
    return $rt_ustr(var$1.$getUrl());
},
onnn_Nip46AppMetadata_setUrl$exported$14 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$setUrl(var$2);
},
onnn_Nip46AppMetadata_clone$exported$15 = var$1 => {
    return otji_JSWrapper_javaToJs(var$1.$clone0());
};
function onnn_Nip05Nip46Data() {
    let a = this; onnn_Nip46AppMetadata.call(a);
    a.$nostrconnectRedirectTemplate = null;
    a.$relays3 = null;
    a.$signerPubkey0 = null;
}
let onnn_Nip05Nip46Data__init_0 = ($this, $signerPubkey) => {
    onnn_Nip46AppMetadata__init_($this);
    $this.$signerPubkey0 = $signerPubkey;
},
onnn_Nip05Nip46Data__init_ = var_0 => {
    let var_1 = new onnn_Nip05Nip46Data();
    onnn_Nip05Nip46Data__init_0(var_1, var_0);
    return var_1;
},
onnn_Nip05Nip46Data_getSignerPubkey = $this => {
    return $this.$signerPubkey0;
},
onnn_Nip05Nip46Data_setRelays = ($this, $relays) => {
    $this.$relays3 = $relays;
},
onnn_Nip05Nip46Data_getRelays = $this => {
    return $this.$relays3;
},
onnn_Nip05Nip46Data_setNostrconnectRedirectTemplate = ($this, $nostrconnectRedirect) => {
    $this.$nostrconnectRedirectTemplate = $nostrconnectRedirect;
    return $this;
},
onnn_Nip05Nip46Data_getNostrconnectRedirectTemplate = $this => {
    return $this.$nostrconnectRedirectTemplate;
},
onnn_Nip05Nip46Data_setNostrconnectRedirectTemplate$exported$0 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$setNostrconnectRedirectTemplate(var$2);
},
onnn_Nip05Nip46Data_getRelays$exported$1 = var$1 => {
    return var$1.$getRelays();
},
onnn_Nip05Nip46Data_getSignerPubkey$exported$2 = var$1 => {
    return var$1.$getSignerPubkey();
},
onnn_Nip05Nip46Data_getNostrconnectRedirectTemplate$exported$3 = var$1 => {
    return $rt_ustr(var$1.$getNostrconnectRedirectTemplate());
},
onnn_Nip05Nip46Data__init_$exported$4 = var$1 => {
    return onnn_Nip05Nip46Data__init_(var$1);
},
onnn_Nip05Nip46Data_setRelays$exported$5 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$setRelays(var$2);
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function cjj_Inflater() {
    cjj_ZStream.call(this);
    this.$finished1 = 0;
}
let cjj_Inflater__init_0 = ($this, $nowrap) => {
    cjj_Inflater__init_($this, 15, $nowrap);
},
cjj_Inflater__init_1 = var_0 => {
    let var_1 = new cjj_Inflater();
    cjj_Inflater__init_0(var_1, var_0);
    return var_1;
},
cjj_Inflater__init_ = ($this, $w, $nowrap) => {
    let $ret;
    cjj_ZStream__init_($this);
    $this.$finished1 = 0;
    $ret = cjj_Inflater_init($this, $w, $nowrap);
    if (!$ret)
        return;
    $rt_throw(cjj_GZIPException__init_(((((jl_StringBuilder__init_()).$append3($ret)).$append1($rt_s(17))).$append1($this.$msg)).$toString()));
},
cjj_Inflater__init_2 = (var_0, var_1) => {
    let var_2 = new cjj_Inflater();
    cjj_Inflater__init_(var_2, var_0, var_1);
    return var_2;
},
cjj_Inflater_init = ($this, $w, $nowrap) => {
    let var$3;
    $this.$finished1 = 0;
    $this.$istate = cjj_Inflate__init_0($this);
    var$3 = $this.$istate;
    if ($nowrap)
        $w =  -$w | 0;
    return cjj_Inflate_inflateInit(var$3, $w);
},
cjj_Inflater_inflate = ($this, $f) => {
    let $ret;
    if ($this.$istate === null)
        return (-2);
    $ret = cjj_Inflate_inflate($this.$istate, $f);
    if ($ret == 1)
        $this.$finished1 = 1;
    return $ret;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1 = $rt_classWithoutFields(),
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1__init_0 = () => {
    let var_0 = new onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1();
    onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1__init_(var_0);
    return var_0;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1_accept0 = (var$0, var$1) => {
    onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1_accept(var$0, var$1);
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1_accept = (var$0, var$1) => {
    onnrs_NostrRTCSignaling_lambda$onSubEvent$2(var$1);
};
function onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0() {
    jl_Object.call(this);
    this.$_050 = null;
}
let onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_050 = var$1;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0();
    onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0_test0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0_test(var$0, var$1);
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0_test = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$onSubEvent$0(var$0.$_050, var$1);
},
onnl_NostrRelayComponent = $rt_classWithoutFields(0);
function onn_NostrRelaySubManager() {
    jl_Object.call(this);
    this.$subTracker0 = null;
}
let onn_NostrRelaySubManager__init_ = $this => {
    jl_Object__init_($this);
    $this.$subTracker0 = juc_ConcurrentHashMap__init_();
},
onn_NostrRelaySubManager__init_0 = () => {
    let var_0 = new onn_NostrRelaySubManager();
    onn_NostrRelaySubManager__init_(var_0);
    return var_0;
},
onn_NostrRelaySubManager_onRelayConnectRequest = ($this, $relay) => {
    return 1;
},
onn_NostrRelaySubManager_onRelayConnect = ($this, $relay) => {
    return 1;
},
onn_NostrRelaySubManager_onRelayMessage = ($this, $relay, $rcv) => {
    let $subId, $attachment;
    if ($rcv instanceof onnpi_NostrClosedMessage) {
        $subId = $rcv.$getSubId();
        $this.$subTracker0.$remove1($subId);
    } else if ($rcv instanceof onnpi_NostrEOSEMessage) {
        $subId = $rcv.$getSubId();
        $attachment = $this.$subTracker0.$get1($subId);
        if ($attachment !== null)
            $attachment.$eose = 1;
    }
    return 1;
},
onn_NostrRelaySubManager_isActive = ($this, $sub) => {
    return $this.$subTracker0.$containsKey($sub.$getSubId());
},
onn_NostrRelaySubManager_isEose = ($this, $sub) => {
    let $attachment;
    $attachment = $this.$subTracker0.$get1($sub.$getSubId());
    return $attachment !== null && $attachment.$eose ? 1 : 0;
},
onn_NostrRelaySubManager_onRelayError = ($this, $relay, $error) => {
    return 1;
},
onn_NostrRelaySubManager_onRelayLoop = ($this, $relay, $nowInstant) => {
    return 1;
},
onn_NostrRelaySubManager_onRelayDisconnect = ($this, $relay, $reason, $byClient) => {
    return 1;
},
onn_NostrRelaySubManager_onRelayBeforeSend = ($this, $relay, $message) => {
    let $subId;
    if ($message instanceof onn_NostrSubscription) {
        $subId = $message.$getSubId();
        $this.$subTracker0.$computeIfAbsent($subId, onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0__init_0());
    }
    return 1;
},
onn_NostrRelaySubManager_onRelaySend = ($this, $relay, $message) => {
    return 1;
},
onn_NostrRelaySubManager_onRelayAfterSend = ($this, $relay, $message) => {
    let $subId;
    if ($message instanceof onn_NostrSubscription$NostrSubCloseMessage) {
        $subId = onn_NostrSubscription$NostrSubCloseMessage_getId($message);
        $this.$subTracker0.$remove1($subId);
    }
    return 1;
},
onn_NostrRelaySubManager_onRelayDisconnectRequest = ($this, $relay, $reason) => {
    return 1;
},
onn_NostrRelaySubManager_lambda$onRelayBeforeSend$0 = $k => {
    return onn_NostrRelaySubManager$SubAttachment__init_();
},
onn_NostrRelaySubManager__init_$exported$0 = () => {
    return onn_NostrRelaySubManager__init_0();
},
onn_NostrRelaySubManager_isActive$exported$1 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$isActive(var$2);
},
onn_NostrRelaySubManager_onRelayMessage$exported$2 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayMessage(var$2, var$3);
},
onn_NostrRelaySubManager_onRelayError$exported$3 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayError(var$2, var$3);
},
onn_NostrRelaySubManager_onRelayBeforeSend$exported$4 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayBeforeSend(var$2, var$3);
},
onn_NostrRelaySubManager_isEose$exported$5 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$isEose(var$2);
},
onn_NostrRelaySubManager_onRelayDisconnect$exported$6 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$5 = var$4 ? 1 : 0;
    return !!var$1.$onRelayDisconnect(var$2, var$3, var$5);
},
onn_NostrRelaySubManager_onRelayAfterSend$exported$7 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayAfterSend(var$2, var$3);
},
onn_NostrRelaySubManager_onRelayConnectRequest$exported$8 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$onRelayConnectRequest(var$2);
},
onn_NostrRelaySubManager_onRelayDisconnectRequest$exported$9 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return !!var$1.$onRelayDisconnectRequest(var$2, var$3);
},
onn_NostrRelaySubManager_onRelayLoop$exported$10 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayLoop(var$2, var$3);
},
onn_NostrRelaySubManager_onRelaySend$exported$11 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelaySend(var$2, var$3);
},
onn_NostrRelaySubManager_onRelayConnect$exported$12 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$onRelayConnect(var$2);
},
onn_NostrRelaySubManager_lambda$onRelayBeforeSend$0$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onn_NostrRelaySubManager_lambda$onRelayBeforeSend$0($rt_str(var$1));
};
function onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3() {
    jl_Object.call(this);
    this.$_0154 = null;
}
let onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0154 = var$1;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3();
    onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3_run = var$0 => {
    onnrs_NostrRTCSignaling_lambda$onSubEvent$1(var$0.$_0154);
};
function onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2() {
    let a = this; jl_Object.call(a);
    a.$_0133 = null;
    a.$_169 = null;
    a.$_236 = null;
    a.$_313 = null;
}
let onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_0133 = var$1;
    var$0.$_169 = var$2;
    var$0.$_236 = var$3;
    var$0.$_313 = var$4;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2();
    onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$onSubEvent$4(var$0.$_0133, var$0.$_169, var$0.$_236, var$0.$_313, var$1);
},
ju_LinkedHashMapIterator$KeyIterator = $rt_classWithoutFields(ju_LinkedHashMapIterator),
ju_LinkedHashMapIterator$KeyIterator__init_ = ($this, $map, $reversed) => {
    ju_LinkedHashMapIterator__init_($this, $map, $reversed);
},
ju_LinkedHashMapIterator$KeyIterator__init_0 = (var_0, var_1) => {
    let var_2 = new ju_LinkedHashMapIterator$KeyIterator();
    ju_LinkedHashMapIterator$KeyIterator__init_(var_2, var_0, var_1);
    return var_2;
},
ju_LinkedHashMapIterator$KeyIterator_next = $this => {
    ju_LinkedHashMapIterator_makeNext($this);
    return $this.$currentEntry2.$key;
};
function jn_ByteBufferJsImpl() {
    let a = this; jn_ByteBuffer.call(a);
    a.$array3 = null;
    a.$arrayOffset0 = 0;
    a.$data2 = null;
    a.$direct = 0;
    a.$readOnly0 = 0;
}
let jn_ByteBufferJsImpl__init_0 = ($this, $array, $arrayOffset, $data, $direct, $readOnly) => {
    jn_ByteBuffer__init_($this);
    $this.$array3 = $array;
    $this.$arrayOffset0 = $arrayOffset;
    $this.$data2 = $data;
    $this.$direct = $direct;
    $this.$readOnly0 = $readOnly;
},
jn_ByteBufferJsImpl__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ByteBufferJsImpl();
    jn_ByteBufferJsImpl__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ByteBufferJsImpl_arrayImpl = $this => {
    if ($this.$array3 !== null)
        return $this.$array3;
    $rt_throw(jl_UnsupportedOperationException__init_());
},
jn_ByteBufferJsImpl_arrayOffsetImpl = $this => {
    if ($this.$array3 !== null)
        return $this.$arrayOffset0;
    $rt_throw(jl_UnsupportedOperationException__init_());
},
jn_ByteBufferJsImpl_hasArrayImpl = $this => {
    return $this.$array3 === null ? 0 : 1;
},
jn_ByteBufferJsImpl_capacityImpl = $this => {
    return $this.$data2.length;
},
jn_ByteBufferJsImpl_getImpl = ($this, $index, $dst, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $this.$data2.buffer;
    var$6 = $this.$data2.byteOffset + $index | 0;
    $slice = new Int8Array(var$5, var$6, $length);
    $dst.data.set($slice, $offset);
},
jn_ByteBufferJsImpl_putImpl = ($this, $index, $src, $offset, $length) => {
    let $srcImpl, $slice, $i, var$8, var$9;
    a: {
        if ($src instanceof jn_ByteBufferJsImpl) {
            $srcImpl = $src;
            $slice = new Int8Array($srcImpl.$data2.buffer, $srcImpl.$data2.byteOffset + $offset | 0, $length);
            $this.$data2.set($slice, $index);
        } else {
            if (!jn_ByteBuffer_hasArray($src)) {
                $i = 0;
                while (true) {
                    if ($i >= $length)
                        break a;
                    $this.$put7($index + $i | 0, $src.$get6($offset + $i | 0));
                    $i = $i + 1 | 0;
                }
            }
            var$8 = (jn_ByteBuffer_array($src)).data.buffer;
            var$9 = jn_ByteBuffer_arrayOffset($src) + $offset | 0;
            $slice = new Int8Array(var$8, var$9, $length);
            $this.$data2.set($slice, $index);
        }
    }
},
jn_ByteBufferJsImpl_putImpl0 = ($this, $src, $srcOffset, $destOffset, $length) => {
    let var$5, $slice;
    var$5 = $src.data.buffer;
    $slice = new Int8Array(var$5, $srcOffset, $length);
    $this.$data2.set($slice, $destOffset);
},
jn_ByteBufferJsImpl_slice = $this => {
    let var$1, var$2, var$3, $newData, $result;
    var$1 = $this.$data2.buffer;
    var$2 = $this.$data2.byteOffset + $this.$position3 | 0;
    var$3 = jn_Buffer_remaining($this);
    $newData = new Int8Array(var$1, var$2, var$3);
    $result = jn_ByteBufferJsImpl__init_($this.$array3, $this.$arrayOffset0 + $this.$position3 | 0, $newData, $this.$direct, $this.$readOnly0);
    $result.$position3 = 0;
    $result.$limit2 = $newData.length;
    jn_ByteOrder_$callClinit();
    $result.$order = jn_ByteOrder_BIG_ENDIAN;
    return $result;
},
jn_ByteBufferJsImpl_get0 = $this => {
    let var$1, var$2;
    if ($this.$position3 >= $this.$limit2)
        $rt_throw(jn_BufferUnderflowException__init_());
    var$1 = $this.$data2;
    var$2 = $this.$position3;
    $this.$position3 = var$2 + 1 | 0;
    return var$1[var$2];
},
jn_ByteBufferJsImpl_put0 = ($this, $b) => {
    let var$2, var$3;
    if ($this.$readOnly0)
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($this.$position3 >= $this.$limit2)
        $rt_throw(jn_BufferOverflowException__init_());
    var$2 = $this.$data2;
    var$3 = $this.$position3;
    $this.$position3 = var$3 + 1 | 0;
    var$2[var$3] = $b;
    return $this;
},
jn_ByteBufferJsImpl_get = ($this, $index) => {
    if ($index >= 0 && $index < $this.$limit2)
        return $this.$data2[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ByteBufferJsImpl_put = ($this, $index, $b) => {
    if ($this.$readOnly0)
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit2) {
        $this.$data2[$index] = $b;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ByteBufferJsImpl_isReadOnly = $this => {
    return $this.$readOnly0;
},
jn_ByteBufferJsImpl_getArrayBufferView = $this => {
    return $this.$data2;
};
function jnc_CoderResult() {
    let a = this; jl_Object.call(a);
    a.$kind3 = 0;
    a.$length4 = 0;
}
let jnc_CoderResult_UNDERFLOW = null,
jnc_CoderResult_OVERFLOW = null,
jnc_CoderResult_$callClinit = () => {
    jnc_CoderResult_$callClinit = $rt_eraseClinit(jnc_CoderResult);
    jnc_CoderResult__clinit_();
},
jnc_CoderResult__init_0 = ($this, $kind, $length) => {
    jnc_CoderResult_$callClinit();
    jl_Object__init_($this);
    $this.$kind3 = $kind;
    $this.$length4 = $length;
},
jnc_CoderResult__init_ = (var_0, var_1) => {
    let var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
},
jnc_CoderResult_isUnderflow = $this => {
    return $this.$kind3 ? 0 : 1;
},
jnc_CoderResult_isOverflow = $this => {
    return $this.$kind3 != 1 ? 0 : 1;
},
jnc_CoderResult_isError = $this => {
    return !$this.$isMalformed() && !$this.$isUnmappable() ? 0 : 1;
},
jnc_CoderResult_isMalformed = $this => {
    return $this.$kind3 != 2 ? 0 : 1;
},
jnc_CoderResult_isUnmappable = $this => {
    return $this.$kind3 != 3 ? 0 : 1;
},
jnc_CoderResult_length = $this => {
    if ($this.$isError())
        return $this.$length4;
    $rt_throw(jl_UnsupportedOperationException__init_());
},
jnc_CoderResult_malformedForLength = $length => {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(2, $length);
},
jnc_CoderResult_unmappableForLength = $length => {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(3, $length);
},
jnc_CoderResult_throwException = $this => {
    switch ($this.$kind3) {
        case 0:
            $rt_throw(jnc_BufferUnderflowException__init_0());
        case 1:
            $rt_throw(jnc_BufferOverflowException__init_0());
        case 2:
            $rt_throw(jnc_MalformedInputException__init_0($this.$length4));
        case 3:
            $rt_throw(jnc_UnmappableCharacterException__init_0($this.$length4));
        default:
    }
},
jnc_CoderResult__clinit_ = () => {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
},
otcit_DoubleAnalyzer = $rt_classWithoutFields(),
otcit_DoubleAnalyzer_MAX_MANTISSA = Long_ZERO,
otcit_DoubleAnalyzer_resultForLog10 = null,
otcit_DoubleAnalyzer_mantissa10Table = null,
otcit_DoubleAnalyzer_exp10Table = null,
otcit_DoubleAnalyzer_$callClinit = () => {
    otcit_DoubleAnalyzer_$callClinit = $rt_eraseClinit(otcit_DoubleAnalyzer);
    otcit_DoubleAnalyzer__clinit_();
},
otcit_DoubleAnalyzer_analyze = ($d, $result) => {
    let $bits, $mantissa, $exponent, var$6, $decExponent, var$8, var$9, $binExponentCorrection, $mantissaShift, $decMantissa, var$13, var$14, var$15, $decMantissaHi, $decMantissaLow, $lowerPos, $upperPos, $posCmp;
    otcit_DoubleAnalyzer_$callClinit();
    $bits = jl_Double_doubleToLongBits($d);
    $result.$sign2 = Long_eq(Long_and($bits, Long_create(0, 2147483648)), Long_ZERO) ? 0 : 1;
    $mantissa = Long_and($bits, Long_create(4294967295, 1048575));
    $exponent = Long_lo(Long_shr($bits, 52)) & 2047;
    if (Long_eq($mantissa, Long_ZERO) && !$exponent) {
        $result.$mantissa0 = Long_ZERO;
        $result.$exponent = 0;
        return;
    }
    if ($exponent)
        var$6 = Long_or($mantissa, Long_create(0, 1048576));
    else {
        var$6 = Long_shl($mantissa, 1);
        while (Long_eq(Long_and(var$6, Long_create(0, 1048576)), Long_ZERO)) {
            var$6 = Long_shl(var$6, 1);
            $exponent = $exponent + (-1) | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch0(otcit_DoubleAnalyzer_exp10Table, $exponent << 16 >> 16);
    if ($decExponent < 0)
        $decExponent =  -$decExponent | 0;
    var$8 = otcit_DoubleAnalyzer_exp10Table.data;
    var$9 = $decExponent + 1 | 0;
    $binExponentCorrection = $exponent - var$8[var$9] | 0;
    $mantissaShift = 12 + $binExponentCorrection | 0;
    $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight(var$6, otcit_DoubleAnalyzer_mantissa10Table.data[var$9], $mantissaShift);
    if (Long_le($decMantissa, otcit_DoubleAnalyzer_MAX_MANTISSA)) {
        while (jl_Long_compareUnsigned($decMantissa, otcit_DoubleAnalyzer_MAX_MANTISSA) <= 0) {
            $decExponent = $decExponent + (-1) | 0;
            $decMantissa = Long_add(Long_mul($decMantissa, Long_fromInt(10)), Long_fromInt(9));
        }
        var$8 = otcit_DoubleAnalyzer_exp10Table.data;
        var$9 = $decExponent + 1 | 0;
        var$13 = $exponent - var$8[var$9] | 0;
        $mantissaShift = 12 + var$13 | 0;
        $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight(var$6, otcit_DoubleAnalyzer_mantissa10Table.data[var$9], $mantissaShift);
    }
    var$14 = Long_shl(var$6, 1);
    var$6 = Long_add(var$14, Long_fromInt(1));
    var$8 = otcit_DoubleAnalyzer_mantissa10Table.data;
    var$13 = $decExponent + 1 | 0;
    var$15 = var$8[var$13];
    var$9 = $mantissaShift - 1 | 0;
    $decMantissaHi = otcit_DoubleAnalyzer_mulAndShiftRight(var$6, var$15, var$9);
    $decMantissaLow = otcit_DoubleAnalyzer_mulAndShiftRight(Long_sub(var$14, Long_fromInt(1)), otcit_DoubleAnalyzer_mantissa10Table.data[var$13], var$9);
    $lowerPos = otcit_DoubleAnalyzer_findLowerDistance($decMantissa, $decMantissaLow);
    $upperPos = otcit_DoubleAnalyzer_findUpperDistance($decMantissa, $decMantissaHi);
    $posCmp = jl_Long_compareUnsigned($lowerPos, $upperPos);
    var$6 = $posCmp > 0 ? Long_mul(jl_Long_divideUnsigned($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? Long_add(Long_mul(jl_Long_divideUnsigned($decMantissa, $upperPos), $upperPos), $upperPos) : Long_mul(jl_Long_divideUnsigned(Long_add($decMantissa, Long_div($upperPos, Long_fromInt(2))), $upperPos), $upperPos);
    if (jl_Long_compareUnsigned(var$6, Long_create(2808348672, 232830643)) >= 0)
        while (true) {
            $decExponent = $decExponent + 1 | 0;
            var$6 = jl_Long_divideUnsigned(var$6, Long_fromInt(10));
            if (jl_Long_compareUnsigned(var$6, Long_create(2808348672, 232830643)) < 0)
                break;
        }
    else if (jl_Long_compareUnsigned(var$6, Long_create(1569325056, 23283064)) < 0) {
        $decExponent = $decExponent + (-1) | 0;
        var$6 = Long_mul(var$6, Long_fromInt(10));
    }
    $result.$mantissa0 = var$6;
    $result.$exponent = $decExponent - 330 | 0;
},
otcit_DoubleAnalyzer_findLowerDistance = ($mantissa, $lower) => {
    let $pos, $pos_0, var$5, var$6;
    otcit_DoubleAnalyzer_$callClinit();
    $pos = Long_fromInt(1);
    while (true) {
        $pos_0 = Long_mul($pos, Long_fromInt(10));
        var$5 = jl_Long_divideUnsigned($mantissa, $pos_0);
        var$6 = jl_Long_divideUnsigned($lower, $pos_0);
        if (jl_Long_compareUnsigned(var$5, var$6) <= 0)
            break;
        $pos = $pos_0;
    }
    return $pos;
},
otcit_DoubleAnalyzer_findUpperDistance = ($mantissa, $upper) => {
    let $pos, $pos_0, var$5, var$6;
    otcit_DoubleAnalyzer_$callClinit();
    $pos = Long_fromInt(1);
    while (true) {
        $pos_0 = Long_mul($pos, Long_fromInt(10));
        var$5 = jl_Long_divideUnsigned($mantissa, $pos_0);
        var$6 = jl_Long_divideUnsigned($upper, $pos_0);
        if (jl_Long_compareUnsigned(var$5, var$6) >= 0)
            break;
        $pos = $pos_0;
    }
    return $pos;
},
otcit_DoubleAnalyzer_mulAndShiftRight = ($a, $b, $shift) => {
    let $a1, $a2, $a3, $a4, $b1, $b2, $b3, $b4, $cm, $c0, $c1, $c2, $c3, $c, var$18;
    otcit_DoubleAnalyzer_$callClinit();
    $a1 = Long_and($a, Long_fromInt(65535));
    $a2 = Long_and(Long_shru($a, 16), Long_fromInt(65535));
    $a3 = Long_and(Long_shru($a, 32), Long_fromInt(65535));
    $a4 = Long_and(Long_shru($a, 48), Long_fromInt(65535));
    $b1 = Long_and($b, Long_fromInt(65535));
    $b2 = Long_and(Long_shru($b, 16), Long_fromInt(65535));
    $b3 = Long_and(Long_shru($b, 32), Long_fromInt(65535));
    $b4 = Long_and(Long_shru($b, 48), Long_fromInt(65535));
    $cm = Long_add(Long_add(Long_mul($b3, $a1), Long_mul($b2, $a2)), Long_mul($b1, $a3));
    $c0 = Long_add(Long_add(Long_add(Long_mul($b4, $a1), Long_mul($b3, $a2)), Long_mul($b2, $a3)), Long_mul($b1, $a4));
    $c1 = Long_add(Long_add(Long_mul($b4, $a2), Long_mul($b3, $a3)), Long_mul($b2, $a4));
    $c2 = Long_add(Long_mul($b4, $a3), Long_mul($b3, $a4));
    $c3 = Long_mul($b4, $a4);
    $c = Long_add(Long_add(Long_shl($c3, 32 + $shift | 0), Long_shl($c2, 16 + $shift | 0)), Long_shl($c1, $shift));
    var$18 = Long_add($cm, Long_shl($c0, 16));
    var$18 = Long_add($c, Long_shru(var$18, 32 - $shift | 0));
    return var$18;
},
otcit_DoubleAnalyzer__clinit_ = () => {
    otcit_DoubleAnalyzer_MAX_MANTISSA = jl_Long_divideUnsigned(Long_fromInt(-1), Long_fromInt(10));
    otcit_DoubleAnalyzer_resultForLog10 = otcit_DoubleAnalyzer$Result__init_0();
    otcit_DoubleAnalyzer_mantissa10Table = $rt_createLongArrayFromData([Long_create(3251292512, 2194092222), Long_create(1766094183, 3510547556), Long_create(553881887, 2808438045), Long_create(443105509, 2246750436), Long_create(3285949193, 3594800697), Long_create(910772436, 2875840558), Long_create(2446604867, 2300672446), Long_create(2196580869, 3681075914), Long_create(2616258154, 2944860731), Long_create(1234013064, 2355888585), Long_create(1974420903, 3769421736), Long_create(720543263, 3015537389), Long_create(1435428070, 2412429911),
    Long_create(578697993, 3859887858), Long_create(2180945313, 3087910286), Long_create(885762791, 2470328229), Long_create(3135207384, 3952525166), Long_create(1649172448, 3162020133), Long_create(3037324877, 2529616106), Long_create(3141732885, 4047385770), Long_create(2513386308, 3237908616), Long_create(1151715587, 2590326893), Long_create(983751480, 4144523029), Long_create(1645994643, 3315618423), Long_create(3034782633, 2652494738), Long_create(3996658754, 4243991581), Long_create(2338333544, 3395193265),
    Long_create(1870666835, 2716154612), Long_create(4073513845, 2172923689), Long_create(3940641775, 3476677903), Long_create(575533043, 2781342323), Long_create(2178413352, 2225073858), Long_create(2626467905, 3560118173), Long_create(3819161242, 2848094538), Long_create(478348616, 2278475631), Long_create(3342338164, 3645561009), Long_create(3532863990, 2916448807), Long_create(1108304273, 2333159046), Long_create(55299919, 3733054474), Long_create(903233395, 2986443579), Long_create(1581580175, 2389154863),
    Long_create(1671534821, 3822647781), Long_create(478234397, 3058118225), Long_create(382587518, 2446494580), Long_create(612140029, 3914391328), Long_create(2207698941, 3131513062), Long_create(48172235, 2505210450), Long_create(77075576, 4008336720), Long_create(61660460, 3206669376), Long_create(3485302205, 2565335500), Long_create(1281516232, 4104536801), Long_create(166219527, 3283629441), Long_create(3568949458, 2626903552), Long_create(2274345296, 4203045684), Long_create(2678469696, 3362436547), Long_create(424788838, 2689949238),
    Long_create(2057817989, 2151959390), Long_create(3292508783, 3443135024), Long_create(3493000485, 2754508019), Long_create(3653393847, 2203606415), Long_create(1550462860, 3525770265), Long_create(1240370288, 2820616212), Long_create(3569276608, 2256492969), Long_create(3133862195, 3610388751), Long_create(1648096297, 2888311001), Long_create(459483578, 2310648801), Long_create(3312154103, 3697038081), Long_create(1790729823, 2957630465), Long_create(1432583858, 2366104372), Long_create(3151127633, 3785766995),
    Long_create(2520902106, 3028613596), Long_create(1157728226, 2422890877), Long_create(2711358621, 3876625403), Long_create(3887073815, 3101300322), Long_create(1391672133, 2481040258), Long_create(1367681954, 3969664413), Long_create(2812132482, 3175731530), Long_create(2249705985, 2540585224), Long_create(1022549199, 4064936359), Long_create(1677032818, 3251949087), Long_create(3918606632, 2601559269), Long_create(3692790234, 4162494831), Long_create(2095238728, 3329995865), Long_create(1676190982, 2663996692),
    Long_create(3540899031, 4262394707), Long_create(1114732307, 3409915766), Long_create(32792386, 2727932613), Long_create(1744220827, 2182346090), Long_create(2790753324, 3491753744), Long_create(3091596118, 2793402995), Long_create(2473276894, 2234722396), Long_create(2239256113, 3575555834), Long_create(2650398349, 2860444667), Long_create(402331761, 2288355734), Long_create(2361717736, 3661369174), Long_create(2748367648, 2929095339), Long_create(3057687578, 2343276271), Long_create(3174313206, 3749242034),
    Long_create(3398444024, 2999393627), Long_create(1000768301, 2399514902), Long_create(2460222741, 3839223843), Long_create(3686165111, 3071379074), Long_create(3807925548, 2457103259), Long_create(3515700499, 3931365215), Long_create(2812560399, 3145092172), Long_create(532061401, 2516073738), Long_create(4287272078, 4025717980), Long_create(3429817663, 3220574384), Long_create(3602847589, 2576459507), Long_create(2328582306, 4122335212), Long_create(144878926, 3297868170), Long_create(115903141, 2638294536),
    Long_create(2762425404, 4221271257), Long_create(491953404, 3377017006), Long_create(3829536560, 2701613604), Long_create(3922622707, 2161290883), Long_create(1122235577, 3458065414), Long_create(1756781920, 2766452331), Long_create(546432077, 2213161865), Long_create(874291324, 3541058984), Long_create(1558426518, 2832847187), Long_create(3823721592, 2266277749), Long_create(3540974170, 3626044399), Long_create(3691772795, 2900835519), Long_create(3812411695, 2320668415), Long_create(1804891416, 3713069465),
    Long_create(1443913133, 2970455572), Long_create(3732110884, 2376364457), Long_create(2535403578, 3802183132), Long_create(310335944, 3041746506), Long_create(3684242592, 2433397204), Long_create(3317807769, 3893435527), Long_create(936259297, 3114748422), Long_create(3325987815, 2491798737), Long_create(1885606668, 3986877980), Long_create(1508485334, 3189502384), Long_create(2065781726, 2551601907), Long_create(4164244222, 4082563051), Long_create(2472401918, 3266050441), Long_create(1118928075, 2612840353),
    Long_create(931291461, 4180544565), Long_create(745033169, 3344435652), Long_create(3173006913, 2675548521), Long_create(3358824142, 4280877634), Long_create(3546052773, 3424702107), Long_create(1118855300, 2739761686), Long_create(36090780, 2191809349), Long_create(1775732167, 3506894958), Long_create(3138572652, 2805515966), Long_create(1651864662, 2244412773), Long_create(1783990001, 3591060437), Long_create(4004172378, 2872848349), Long_create(4062331362, 2298278679), Long_create(3922749802, 3677245887),
    Long_create(1420212923, 2941796710), Long_create(1136170338, 2353437368), Long_create(958879082, 3765499789), Long_create(1626096725, 3012399831), Long_create(441883920, 2409919865), Long_create(707014273, 3855871784), Long_create(1424604878, 3084697427), Long_create(3716664280, 2467757941), Long_create(4228675929, 3948412706), Long_create(2523947284, 3158730165), Long_create(2019157827, 2526984132), Long_create(4089645983, 4043174611), Long_create(2412723327, 3234539689), Long_create(2789172121, 2587631751),
    Long_create(2744688475, 4140210802), Long_create(477763862, 3312168642), Long_create(2959191467, 2649734913), Long_create(3875712888, 4239575861), Long_create(2241576851, 3391660689), Long_create(2652254940, 2713328551), Long_create(1262810493, 2170662841), Long_create(302509870, 3473060546), Long_create(3677981733, 2778448436), Long_create(2083391927, 2222758749), Long_create(756446706, 3556413999), Long_create(1464150824, 2845131199), Long_create(2030314118, 2276104959), Long_create(671522212, 3641767935),
    Long_create(537217769, 2913414348), Long_create(2147761134, 2330731478), Long_create(2577424355, 3729170365), Long_create(2061939484, 2983336292), Long_create(4226531965, 2386669033), Long_create(1608490388, 3818670454), Long_create(2145785770, 3054936363), Long_create(3434615534, 2443949090), Long_create(1200417559, 3910318545), Long_create(960334047, 3128254836), Long_create(4204241074, 2502603868), Long_create(1572824964, 4004166190), Long_create(1258259971, 3203332952), Long_create(3583588354, 2562666361),
    Long_create(4015754449, 4100266178), Long_create(635623181, 3280212943), Long_create(2226485463, 2624170354), Long_create(985396364, 4198672567), Long_create(3365297469, 3358938053), Long_create(115257597, 2687150443), Long_create(1810192996, 2149720354), Long_create(319328417, 3439552567), Long_create(2832443111, 2751642053), Long_create(3983941407, 2201313642), Long_create(2938332415, 3522101828), Long_create(4068652850, 2817681462), Long_create(1536935362, 2254145170), Long_create(2459096579, 3606632272),
    Long_create(249290345, 2885305818), Long_create(1917419194, 2308244654), Long_create(490890333, 3693191447), Long_create(2969692644, 2954553157), Long_create(657767197, 2363642526), Long_create(3629407892, 3781828041), Long_create(2044532855, 3025462433), Long_create(3353613202, 2420369946), Long_create(3647794205, 3872591914), Long_create(3777228823, 3098073531), Long_create(2162789599, 2478458825), Long_create(3460463359, 3965534120), Long_create(2768370687, 3172427296), Long_create(1355703090, 2537941837),
    Long_create(3028118404, 4060706939), Long_create(3281488183, 3248565551), Long_create(1766197087, 2598852441), Long_create(1107928421, 4158163906), Long_create(27349277, 3326531125), Long_create(21879422, 2661224900), Long_create(35007075, 4257959840), Long_create(28005660, 3406367872), Long_create(2599384905, 2725094297), Long_create(361521006, 2180075438), Long_create(4014407446, 3488120700), Long_create(3211525957, 2790496560), Long_create(2569220766, 2232397248), Long_create(3251759766, 3571835597),
    Long_create(883420894, 2857468478), Long_create(2424723634, 2285974782), Long_create(443583977, 3657559652), Long_create(2931847559, 2926047721), Long_create(1486484588, 2340838177), Long_create(3237368801, 3745341083), Long_create(12914663, 2996272867), Long_create(2587312108, 2397018293), Long_create(3280705914, 3835229269), Long_create(3483558190, 3068183415), Long_create(2786846552, 2454546732), Long_create(1022980646, 3927274772), Long_create(3395364895, 3141819817), Long_create(998304997, 2513455854),
    Long_create(3315274914, 4021529366), Long_create(1793226472, 3217223493), Long_create(3152568096, 2573778794), Long_create(2467128576, 4118046071), Long_create(1114709402, 3294436857), Long_create(3468747899, 2635549485), Long_create(1255029343, 4216879177), Long_create(3581003852, 3373503341), Long_create(2005809622, 2698802673), Long_create(3322634616, 2159042138), Long_create(162254630, 3454467422), Long_create(2706784082, 2763573937), Long_create(447440347, 2210859150), Long_create(715904555, 3537374640),
    Long_create(572723644, 2829899712), Long_create(3035159293, 2263919769), Long_create(2279274491, 3622271631), Long_create(964426134, 2897817305), Long_create(771540907, 2318253844), Long_create(2952452370, 3709206150), Long_create(2361961896, 2967364920), Long_create(1889569516, 2373891936), Long_create(1305324308, 3798227098), Long_create(2762246365, 3038581678), Long_create(3927784010, 2430865342), Long_create(2848480580, 3889384548), Long_create(3996771382, 3111507638), Long_create(620436728, 2489206111),
    Long_create(3569679143, 3982729777), Long_create(1137756396, 3186183822), Long_create(3487185494, 2548947057), Long_create(2143522954, 4078315292), Long_create(4291798741, 3262652233), Long_create(856458615, 2610121787), Long_create(2229327243, 4176194859), Long_create(2642455254, 3340955887), Long_create(395977285, 2672764710), Long_create(633563656, 4276423536), Long_create(3942824761, 3421138828), Long_create(577279431, 2736911063), Long_create(2179810463, 2189528850), Long_create(3487696741, 3503246160),
    Long_create(2790157393, 2802596928), Long_create(3950112833, 2242077542), Long_create(2884206696, 3587324068), Long_create(4025352275, 2869859254), Long_create(4079275279, 2295887403), Long_create(1372879692, 3673419846), Long_create(239310294, 2938735877), Long_create(2768428613, 2350988701), Long_create(2711498862, 3761581922), Long_create(451212171, 3009265538), Long_create(2078956655, 2407412430), Long_create(3326330649, 3851859888), Long_create(84084141, 3081487911), Long_create(3503241150, 2465190328),
    Long_create(451225085, 3944304526), Long_create(3796953905, 3155443620), Long_create(3037563124, 2524354896), Long_create(3142114080, 4038967834), Long_create(3372684723, 3231174267), Long_create(980160860, 2584939414), Long_create(3286244294, 4135903062), Long_create(911008517, 3308722450), Long_create(728806813, 2646977960), Long_create(1166090902, 4235164736), Long_create(73879262, 3388131789), Long_create(918096869, 2710505431), Long_create(4170451332, 2168404344), Long_create(4095741754, 3469446951),
    Long_create(2417599944, 2775557561), Long_create(1075086496, 2220446049), Long_create(3438125312, 3552713678), Long_create(173519872, 2842170943), Long_create(1856802816, 2273736754), Long_create(393904128, 3637978807), Long_create(2892103680, 2910383045), Long_create(2313682944, 2328306436), Long_create(1983905792, 3725290298), Long_create(3305111552, 2980232238), Long_create(67108864, 2384185791), Long_create(2684354560, 3814697265), Long_create(2147483648, 3051757812), Long_create(0, 2441406250), Long_create(0, 3906250000),
    Long_create(0, 3125000000), Long_create(0, 2500000000), Long_create(0, 4000000000), Long_create(0, 3200000000), Long_create(0, 2560000000), Long_create(0, 4096000000), Long_create(0, 3276800000), Long_create(0, 2621440000), Long_create(0, 4194304000), Long_create(0, 3355443200), Long_create(0, 2684354560), Long_create(0, 2147483648), Long_create(3435973836, 3435973836), Long_create(1889785610, 2748779069), Long_create(2370821947, 2199023255), Long_create(3793315115, 3518437208), Long_create(457671715, 2814749767),
    Long_create(2943117749, 2251799813), Long_create(3849994940, 3602879701), Long_create(2221002492, 2882303761), Long_create(917808535, 2305843009), Long_create(3186480574, 3689348814), Long_create(3408177918, 2951479051), Long_create(1867548875, 2361183241), Long_create(1270091283, 3777893186), Long_create(157079567, 3022314549), Long_create(984657113, 2417851639), Long_create(3293438299, 3868562622), Long_create(916763721, 3094850098), Long_create(2451397895, 2475880078), Long_create(3063243173, 3961408125),
    Long_create(2450594538, 3169126500), Long_create(1960475630, 2535301200), Long_create(3136761009, 4056481920), Long_create(2509408807, 3245185536), Long_create(1148533586, 2596148429), Long_create(3555640657, 4153837486), Long_create(1985519066, 3323069989), Long_create(2447408712, 2658455991), Long_create(2197867021, 4253529586), Long_create(899300158, 3402823669), Long_create(1578433585, 2722258935), Long_create(1262746868, 2177807148), Long_create(1161401530, 3484491437), Long_create(3506101601, 2787593149),
    Long_create(3663874740, 2230074519), Long_create(3285219207, 3568119231), Long_create(1769181906, 2854495385), Long_create(1415345525, 2283596308), Long_create(1405559381, 3653754093), Long_create(2842434423, 2923003274), Long_create(3132940998, 2338402619), Long_create(2435725219, 3741444191), Long_create(1089586716, 2993155353), Long_create(2589656291, 2394524282), Long_create(707476229, 3831238852), Long_create(3142961361, 3064991081), Long_create(1655375629, 2451992865), Long_create(2648601007, 3923188584),
    Long_create(2977874265, 3138550867), Long_create(664312493, 2510840694), Long_create(2780886908, 4017345110), Long_create(2224709526, 3213876088), Long_create(3497754539, 2571100870), Long_create(1301439967, 4113761393), Long_create(2759138892, 3291009114), Long_create(3066304573, 2632807291), Long_create(3188100398, 4212491666), Long_create(1691486859, 3369993333), Long_create(3071176406, 2695994666), Long_create(1597947665, 2156795733), Long_create(1697722806, 3450873173), Long_create(3076165163, 2760698538),
    Long_create(4178919049, 2208558830), Long_create(2391303182, 3533694129), Long_create(2772036005, 2826955303), Long_create(3935615722, 2261564242), Long_create(2861011319, 3618502788), Long_create(4006795973, 2894802230), Long_create(3205436779, 2315841784), Long_create(2551718468, 3705346855), Long_create(2041374775, 2964277484), Long_create(2492093279, 2371421987), Long_create(551375410, 3794275180), Long_create(441100328, 3035420144), Long_create(1211873721, 2428336115), Long_create(1938997954, 3885337784),
    Long_create(2410191822, 3108270227), Long_create(210166539, 2486616182), Long_create(1195259923, 3978585891), Long_create(97214479, 3182868713), Long_create(1795758501, 2546294970), Long_create(2873213602, 4074071952), Long_create(580583963, 3259257562), Long_create(3041447548, 2607406049), Long_create(2289335700, 4171849679), Long_create(2690462019, 3337479743), Long_create(3870356534, 2669983794), Long_create(3615590076, 4271974071), Long_create(2033478602, 3417579257), Long_create(4203763259, 2734063405),
    Long_create(3363010607, 2187250724), Long_create(2803836594, 3499601159), Long_create(3102062734, 2799680927), Long_create(763663269, 2239744742), Long_create(2080854690, 3583591587), Long_create(4241664129, 2866873269), Long_create(4252324763, 2293498615), Long_create(2508752324, 3669597785), Long_create(2007001859, 2935678228), Long_create(3323588406, 2348542582), Long_create(1881767613, 3757668132), Long_create(4082394468, 3006134505), Long_create(3265915574, 2404907604), Long_create(2648484541, 3847852167),
    Long_create(400800715, 3078281734), Long_create(1179634031, 2462625387), Long_create(2746407909, 3940200619), Long_create(3056119786, 3152160495), Long_create(2444895829, 2521728396), Long_create(2193846408, 4034765434), Long_create(2614070585, 3227812347), Long_create(373269550, 2582249878), Long_create(4033205117, 4131599804), Long_create(4085557553, 3305279843), Long_create(691465664, 2644223875), Long_create(1106345063, 4230758200), Long_create(885076050, 3384606560), Long_create(708060840, 2707685248),
    Long_create(2284435591, 2166148198), Long_create(2796103486, 3465837117), Long_create(518895870, 2772669694), Long_create(1274110155, 2218135755), Long_create(2038576249, 3549017208), Long_create(3348847917, 2839213766), Long_create(1820084875, 2271371013), Long_create(2053142340, 3634193621), Long_create(783520413, 2907354897), Long_create(3203796708, 2325883917), Long_create(1690100896, 3721414268), Long_create(3070067635, 2977131414), Long_create(3315047567, 2381705131), Long_create(3586089190, 3810728210),
    Long_create(2868871352, 3048582568), Long_create(4013084000, 2438866054), Long_create(3843954022, 3902185687), Long_create(1357176299, 3121748550), Long_create(1085741039, 2497398840), Long_create(1737185663, 3995838144), Long_create(2248741989, 3196670515), Long_create(1798993591, 2557336412), Long_create(3737383206, 4091738259), Long_create(3848900024, 3273390607), Long_create(1361133101, 2618712486), Long_create(459826043, 4189939978), Long_create(2085847752, 3351951982), Long_create(4245658579, 2681561585),
    Long_create(2498086431, 4290498537), Long_create(280482227, 3432398830), Long_create(224385781, 2745919064), Long_create(1038502084, 2196735251), Long_create(4238583712, 3514776401), Long_create(2531873511, 2811821121), Long_create(1166505349, 2249456897), Long_create(2725402018, 3599131035), Long_create(2180321615, 2879304828), Long_create(3462244210, 2303443862), Long_create(2103616899, 3685510180), Long_create(1682893519, 2948408144), Long_create(2205308275, 2358726515), Long_create(3528493240, 3773962424),
    Long_create(3681788051, 3019169939), Long_create(3804423900, 2415335951), Long_create(74124026, 3864537523), Long_create(1777286139, 3091630018), Long_create(3139815829, 2473304014), Long_create(2446724950, 3957286423), Long_create(3675366878, 3165829138), Long_create(363313125, 2532663311), Long_create(3158281377, 4052261297), Long_create(808638183, 3241809038), Long_create(2364897465, 2593447230), Long_create(3783835944, 4149515568), Long_create(450088378, 3319612455), Long_create(360070702, 2655689964),
    Long_create(2294100042, 4249103942), Long_create(117293115, 3399283154), Long_create(952827951, 2719426523), Long_create(2480249279, 2175541218), Long_create(3109405388, 3480865949), Long_create(3346517769, 2784692759), Long_create(3536207675, 2227754207), Long_create(2221958443, 3564406732), Long_create(59579836, 2851525386), Long_create(3483637705, 2281220308), Long_create(419859574, 3649952494), Long_create(1194881118, 2919961995), Long_create(955904894, 2335969596), Long_create(4106428209, 3737551353),
    Long_create(708162189, 2990041083), Long_create(2284516670, 2392032866), Long_create(1937239754, 3827252586), Long_create(690798344, 3061802069), Long_create(1411632134, 2449441655), Long_create(2258611415, 3919106648), Long_create(3524876050, 3135285318), Long_create(242920462, 2508228255), Long_create(388672740, 4013165208), Long_create(2028925110, 3210532166), Long_create(764146629, 2568425733), Long_create(363641147, 4109481173), Long_create(2008899836, 3287584938), Long_create(3325106787, 2630067950),
    Long_create(1025203564, 4208108721), Long_create(4256136688, 3366486976), Long_create(2545915891, 2693189581), Long_create(1177739254, 2154551665), Long_create(1884382806, 3447282664), Long_create(2366499704, 2757826131), Long_create(1034206304, 2206260905), Long_create(1654730086, 3530017448), Long_create(3041770987, 2824013958), Long_create(4151403708, 2259211166), Long_create(629291719, 3614737867), Long_create(3080413753, 2891790293), Long_create(4182317920, 2313432234), Long_create(4114728295, 3701491575),
    Long_create(3291782636, 2961193260), Long_create(2633426109, 2368954608), Long_create(3354488315, 3790327373), Long_create(106610275, 3032261899), Long_create(944281679, 2425809519), Long_create(3228837605, 3881295230), Long_create(2583070084, 3105036184), Long_create(2925449526, 2484028947), Long_create(1244745405, 3974446316), Long_create(136802865, 3179557053), Long_create(1827429210, 2543645642), Long_create(3782880196, 4069833027), Long_create(1308317238, 3255866422), Long_create(3623634168, 2604693137),
    Long_create(2361840832, 4167509020), Long_create(1889472666, 3334007216), Long_create(652584673, 2667205773), Long_create(185142018, 4267529237), Long_create(2725093992, 3414023389), Long_create(3039068653, 2731218711), Long_create(1572261463, 2184974969), Long_create(4233605259, 3495959950), Long_create(3386884207, 2796767960), Long_create(2709507366, 2237414368), Long_create(3476218326, 3579862989), Long_create(3639968120, 2863890391), Long_create(2052981037, 2291112313), Long_create(2425776200, 3665779701),
    Long_create(1081627501, 2932623761), Long_create(6308541, 2346099009), Long_create(1728080585, 3753758414), Long_create(2241457927, 3003006731), Long_create(934172882, 2402405385), Long_create(1494676612, 3843848616), Long_create(336747830, 3075078893), Long_create(1987385183, 2460063114), Long_create(602835915, 3936100983), Long_create(2200255650, 3148880786), Long_create(901211061, 2519104629), Long_create(3159924616, 4030567406), Long_create(1668946233, 3224453925), Long_create(1335156987, 2579563140),
    Long_create(2136251179, 4127301024), Long_create(2567994402, 3301840819), Long_create(2913388981, 2641472655), Long_create(366455074, 4226356249), Long_create(1152157518, 3381084999), Long_create(1780719474, 2704867999), Long_create(2283569038, 2163894399), Long_create(1076730083, 3462231039), Long_create(1720377526, 2769784831), Long_create(517308561, 2215827865), Long_create(827693699, 3545324584), Long_create(1521148418, 2836259667), Long_create(3793899112, 2269007733), Long_create(916277824, 3630412374),
    Long_create(1592015718, 2904329899), Long_create(2132606034, 2323463919), Long_create(835189277, 3717542271), Long_create(4104125258, 2974033816), Long_create(2424306747, 2379227053), Long_create(3019897337, 3806763285), Long_create(2415917869, 3045410628), Long_create(3650721214, 2436328502), Long_create(2405180105, 3898125604), Long_create(2783137543, 3118500483), Long_create(3944496953, 2494800386), Long_create(298240911, 3991680619), Long_create(1097586188, 3193344495), Long_create(878068950, 2554675596),
    Long_create(3981890698, 4087480953), Long_create(608532181, 3269984763), Long_create(2204812663, 2615987810), Long_create(3527700261, 4185580496), Long_create(1963166749, 3348464397), Long_create(4147513777, 2678771517), Long_create(3200048207, 4286034428), Long_create(4278025484, 3428827542), Long_create(1704433468, 2743062034), Long_create(2222540234, 2194449627), Long_create(120090538, 3511119404), Long_create(955065889, 2808895523), Long_create(2482039630, 2247116418), Long_create(3112269949, 3595386269),
    Long_create(3348809418, 2876309015), Long_create(2679047534, 2301047212), Long_create(850502218, 3681675540), Long_create(680401775, 2945340432), Long_create(3121301797, 2356272345), Long_create(699115580, 3770035753), Long_create(2277279382, 3016028602), Long_create(103836587, 2412822882), Long_create(1025131999, 3860516611), Long_create(4256079436, 3088413288), Long_create(827883168, 2470730631), Long_create(3901593088, 3953169009)]);
    otcit_DoubleAnalyzer_exp10Table = $rt_createShortArrayFromData([(-70), (-66), (-63), (-60), (-56), (-53), (-50), (-46), (-43), (-40), (-36), (-33), (-30), (-26), (-23), (-20), (-16), (-13), (-10), (-6), (-3), 0, 4, 7, 10, 14, 17, 20, 23, 27, 30, 33, 37, 40, 43, 47, 50, 53, 57, 60, 63, 67, 70, 73, 77, 80, 83, 87, 90, 93, 97, 100, 103, 107, 110, 113, 116, 120, 123, 126, 130, 133, 136, 140, 143, 146, 150, 153, 156, 160, 163, 166, 170, 173, 176, 180, 183, 186, 190, 193, 196, 200, 203, 206, 210, 213, 216, 219,
    223, 226, 229, 233, 236, 239, 243, 246, 249, 253, 256, 259, 263, 266, 269, 273, 276, 279, 283, 286, 289, 293, 296, 299, 303, 306, 309, 312, 316, 319, 322, 326, 329, 332, 336, 339, 342, 346, 349, 352, 356, 359, 362, 366, 369, 372, 376, 379, 382, 386, 389, 392, 396, 399, 402, 406, 409, 412, 415, 419, 422, 425, 429, 432, 435, 439, 442, 445, 449, 452, 455, 459, 462, 465, 469, 472, 475, 479, 482, 485, 489, 492, 495, 499, 502, 505, 508, 512, 515, 518, 522, 525, 528, 532, 535, 538, 542, 545, 548, 552, 555, 558,
    562, 565, 568, 572, 575, 578, 582, 585, 588, 592, 595, 598, 601, 605, 608, 611, 615, 618, 621, 625, 628, 631, 635, 638, 641, 645, 648, 651, 655, 658, 661, 665, 668, 671, 675, 678, 681, 685, 688, 691, 695, 698, 701, 704, 708, 711, 714, 718, 721, 724, 728, 731, 734, 738, 741, 744, 748, 751, 754, 758, 761, 764, 768, 771, 774, 778, 781, 784, 788, 791, 794, 797, 801, 804, 807, 811, 814, 817, 821, 824, 827, 831, 834, 837, 841, 844, 847, 851, 854, 857, 861, 864, 867, 871, 874, 877, 881, 884, 887, 891, 894, 897,
    900, 904, 907, 910, 914, 917, 920, 924, 927, 930, 934, 937, 940, 944, 947, 950, 954, 957, 960, 964, 967, 970, 974, 977, 980, 984, 987, 990, 993, 997, 1000, 1003, 1007, 1010, 1013, 1017, 1020, 1023, 1027, 1030, 1033, 1037, 1040, 1043, 1047, 1050, 1053, 1057, 1060, 1063, 1067, 1070, 1073, 1077, 1080, 1083, 1086, 1090, 1093, 1096, 1100, 1103, 1106, 1110, 1113, 1116, 1120, 1123, 1126, 1130, 1133, 1136, 1140, 1143, 1146, 1150, 1153, 1156, 1160, 1163, 1166, 1170, 1173, 1176, 1180, 1183, 1186, 1189, 1193, 1196,
    1199, 1203, 1206, 1209, 1213, 1216, 1219, 1223, 1226, 1229, 1233, 1236, 1239, 1243, 1246, 1249, 1253, 1256, 1259, 1263, 1266, 1269, 1273, 1276, 1279, 1282, 1286, 1289, 1292, 1296, 1299, 1302, 1306, 1309, 1312, 1316, 1319, 1322, 1326, 1329, 1332, 1336, 1339, 1342, 1346, 1349, 1352, 1356, 1359, 1362, 1366, 1369, 1372, 1376, 1379, 1382, 1385, 1389, 1392, 1395, 1399, 1402, 1405, 1409, 1412, 1415, 1419, 1422, 1425, 1429, 1432, 1435, 1439, 1442, 1445, 1449, 1452, 1455, 1459, 1462, 1465, 1469, 1472, 1475, 1478,
    1482, 1485, 1488, 1492, 1495, 1498, 1502, 1505, 1508, 1512, 1515, 1518, 1522, 1525, 1528, 1532, 1535, 1538, 1542, 1545, 1548, 1552, 1555, 1558, 1562, 1565, 1568, 1572, 1575, 1578, 1581, 1585, 1588, 1591, 1595, 1598, 1601, 1605, 1608, 1611, 1615, 1618, 1621, 1625, 1628, 1631, 1635, 1638, 1641, 1645, 1648, 1651, 1655, 1658, 1661, 1665, 1668, 1671, 1674, 1678, 1681, 1684, 1688, 1691, 1694, 1698, 1701, 1704, 1708, 1711, 1714, 1718, 1721, 1724, 1728, 1731, 1734, 1738, 1741, 1744, 1748, 1751, 1754, 1758, 1761,
    1764, 1767, 1771, 1774, 1777, 1781, 1784, 1787, 1791, 1794, 1797, 1801, 1804, 1807, 1811, 1814, 1817, 1821, 1824, 1827, 1831, 1834, 1837, 1841, 1844, 1847, 1851, 1854, 1857, 1861, 1864, 1867, 1870, 1874, 1877, 1880, 1884, 1887, 1890, 1894, 1897, 1900, 1904, 1907, 1910, 1914, 1917, 1920, 1924, 1927, 1930, 1934, 1937, 1940, 1944, 1947, 1950, 1954, 1957, 1960, 1963, 1967, 1970, 1973, 1977, 1980, 1983, 1987, 1990, 1993, 1997, 2000, 2003, 2007, 2010, 2013, 2017, 2020, 2023, 2027, 2030, 2033, 2037, 2040, 2043,
    2047, 2050, 2053, 2057, 2060, 2063, 2066, 2070, 2073, 2076, 2080, 2083, 2086, 2090, 2093, 2096, 2100, 2103, 2106, 2110, 2113, 2116, 2120]);
};
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
let jur_EOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter0 = $counter;
},
jur_EOLSet__init_0 = var_0 => {
    let var_1 = new jur_EOLSet();
    jur_EOLSet__init_(var_1, var_0);
    return var_1;
},
jur_EOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, var$5, var$6, $ch;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter0, 0);
        return $this.$next5.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2 && $testString.$charAt($strIndex) == 13) {
        var$6 = $strIndex + 1 | 0;
        if ($testString.$charAt(var$6) == 10) {
            $matchResult.$setConsumed($this.$consCounter0, 0);
            return $this.$next5.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = $testString.$charAt($strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    $matchResult.$setConsumed($this.$consCounter0, 0);
    return $this.$next5.$matches($strIndex, $testString, $matchResult);
},
jur_EOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter0) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter0, (-1));
    return $res;
},
jur_EOLSet_getName = $this => {
    return $rt_s(1006);
};
function jur_Lexer() {
    let a = this; jl_Object.call(a);
    a.$pattern0 = null;
    a.$flags1 = 0;
    a.$mode3 = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead0 = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
let jur_Lexer_decompTable = null,
jur_Lexer_singleDecompTable = null,
jur_Lexer_singleDecompTableSize = 0,
jur_Lexer__init_ = ($this, $pattern, $flags) => {
    jl_Object__init_($this);
    $this.$mode3 = 1;
    $this.$orig = $pattern;
    if (($flags & 16) > 0)
        $pattern = jur_Pattern_quote($pattern);
    else if (($flags & 128) > 0)
        $pattern = jur_Lexer_normalize($pattern);
    $this.$pattern0 = $rt_createCharArray($pattern.$length() + 2 | 0);
    jl_System_fastArraycopy($pattern.$toCharArray(), 0, $this.$pattern0, 0, $pattern.$length());
    $this.$pattern0.data[$this.$pattern0.data.length - 1 | 0] = 0;
    $this.$pattern0.data[$this.$pattern0.data.length - 2 | 0] = 0;
    $this.$patternFullLength = $this.$pattern0.data.length;
    $this.$flags1 = $flags;
    jur_Lexer_movePointer($this);
    jur_Lexer_movePointer($this);
},
jur_Lexer__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Lexer();
    jur_Lexer__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Lexer_peek = $this => {
    return $this.$ch;
},
jur_Lexer_setMode = ($this, $mode) => {
    if ($mode > 0 && $mode < 3)
        $this.$mode3 = $mode;
    if ($mode == 1)
        jur_Lexer_reread($this);
},
jur_Lexer_restoreFlags = ($this, $flags) => {
    $this.$flags1 = $flags;
    $this.$lookAhead0 = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    $this.$index = $this.$curToc + 1 | 0;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
},
jur_Lexer_peekSpecial = $this => {
    return $this.$curST;
},
jur_Lexer_isSpecial = $this => {
    return $this.$curST === null ? 0 : 1;
},
jur_Lexer_isNextSpecial = $this => {
    return $this.$lookAheadST === null ? 0 : 1;
},
jur_Lexer_next = $this => {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
},
jur_Lexer_nextSpecial = $this => {
    let $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
},
jur_Lexer_lookAhead = $this => {
    return $this.$lookAhead0;
},
jur_Lexer_back = $this => {
    return $this.$lookBack;
},
jur_Lexer_normalize = $input => {
    return $input;
},
jur_Lexer_reread = $this => {
    $this.$lookAhead0 = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    $this.$index = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
},
jur_Lexer_movePointer = $this => {
    let $reread, $nonCap, $behind, $mod, var$5, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead0;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index;
    while (true) {
        $reread = 0;
        $this.$lookAhead0 = $this.$index >= $this.$pattern0.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAheadST = null;
        if ($this.$mode3 == 4) {
            if ($this.$lookAhead0 != 92)
                return;
            $this.$lookAhead0 = $this.$index >= $this.$pattern0.data.length ? 0 : $this.$pattern0.data[jur_Lexer_nextIndex($this)];
            switch ($this.$lookAhead0) {
                case 69:
                    break;
                default:
                    $this.$lookAhead0 = 92;
                    $this.$index = $this.$prevNW;
                    return;
            }
            $this.$mode3 = $this.$savedMode;
            $this.$lookAhead0 = $this.$index > ($this.$pattern0.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            if ($this.$lookAhead0 != 92) {
                if ($this.$mode3 == 1)
                    switch ($this.$lookAhead0) {
                        case 36:
                            $this.$lookAhead0 = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern0.data[$this.$index] != 63) {
                                $this.$lookAhead0 = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern0.data[$this.$index];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead0 = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
                                        }
                                        $this.$lookAhead0 = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern0.data[$this.$index];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead0 = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead0 = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $this.$lookAhead0 = jur_Lexer_readFlags($this);
                                                if ($this.$lookAhead0 < 256) {
                                                    $this.$flags1 = $this.$lookAhead0;
                                                    $this.$lookAhead0 = $this.$lookAhead0 << 16;
                                                    $this.$lookAhead0 = (-1073741784) | $this.$lookAhead0;
                                                    break b;
                                                }
                                                $this.$lookAhead0 = $this.$lookAhead0 & 255;
                                                $this.$flags1 = $this.$lookAhead0;
                                                $this.$lookAhead0 = $this.$lookAhead0 << 16;
                                                $this.$lookAhead0 = (-16777176) | $this.$lookAhead0;
                                                break b;
                                        }
                                        $this.$lookAhead0 = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead0 = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $mod = $this.$index >= $this.$pattern0.data.length ? 42 : $this.$pattern0.data[$this.$index];
                            switch ($mod) {
                                case 43:
                                    $this.$lookAhead0 = $this.$lookAhead0 | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead0 = $this.$lookAhead0 | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead0 = $this.$lookAhead0 | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead0 = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead0 = (-536870821);
                            $this.$setMode(2);
                            break a;
                        case 93:
                            if ($this.$mode3 != 2)
                                break a;
                            $this.$lookAhead0 = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead0 = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $this.$lookAhead0);
                            break a;
                        case 124:
                            $this.$lookAhead0 = (-536870788);
                            break a;
                        default:
                    }
                else if ($this.$mode3 == 2)
                    switch ($this.$lookAhead0) {
                        case 38:
                            $this.$lookAhead0 = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead0 = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead0 = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead0 = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead0 = (-536870818);
                            break a;
                        default:
                    }
            } else {
                var$5 = $this.$index >= ($this.$pattern0.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead0 = var$5;
                    switch ($this.$lookAhead0) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead0 = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode3 != 1)
                                break a;
                            $this.$lookAhead0 = (-2147483648) | $this.$lookAhead0;
                            break a;
                        case 65:
                            $this.$lookAhead0 = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead0 = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_2($this.$pattern0, $this.$prevNW, 1), 0);
                            $this.$lookAhead0 = 0;
                            break a;
                        case 71:
                            $this.$lookAhead0 = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode3;
                            $this.$mode3 = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead0 = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead0 = 7;
                            break a;
                        case 98:
                            $this.$lookAhead0 = (-2147483550);
                            break a;
                        case 99:
                            if ($this.$index >= ($this.$pattern0.data.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
                            $this.$lookAhead0 = $this.$pattern0.data[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead0 = 27;
                            break a;
                        case 102:
                            $this.$lookAhead0 = 12;
                            break a;
                        case 110:
                            $this.$lookAhead0 = 10;
                            break a;
                        case 114:
                            $this.$lookAhead0 = 13;
                            break a;
                        case 116:
                            $this.$lookAhead0 = 9;
                            break a;
                        case 117:
                            $this.$lookAhead0 = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead0 = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead0 = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead0 == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead0 = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
},
jur_Lexer_parseCharClassName = $this => {
    let $sb, var$2, var$3, $ch, $res;
    $sb = jl_StringBuilder__init_0(10);
    if ($this.$index < ($this.$pattern0.data.length - 2 | 0)) {
        if ($this.$pattern0.data[$this.$index] != 123) {
            var$2 = jl_String__init_2($this.$pattern0, jur_Lexer_nextIndex($this), 1);
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1007)), var$2);
            return jl_StringBuilder_toString(var$3);
        }
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while ($this.$index < ($this.$pattern0.data.length - 2 | 0)) {
                $ch = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                $sb.$append0($ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
    }
    if (!$sb.$length())
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
    $res = $sb.$toString();
    if ($res.$length() == 1) {
        var$2 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1007)), $res);
        return jl_StringBuilder_toString(var$2);
    }
    b: {
        c: {
            if ($res.$length() > 3) {
                if ($res.$startsWith($rt_s(1007)))
                    break c;
                if ($res.$startsWith($rt_s(1008)))
                    break c;
            }
            break b;
        }
        $res = $res.$substring0(2);
    }
    return $res;
},
jur_Lexer_processQuantifier = ($this, $ch) => {
    let $sb, $min, $max, $mod, $$je;
    $sb = jl_StringBuilder__init_0(4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            if ($this.$index >= $this.$pattern0.data.length)
                break a;
            $ch = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt0($sb.$toString(), 10);
                    $sb.$delete0(0, $sb.$length());
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $sb.$append0($ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
    if ($sb.$length() > 0)
        b: {
            try {
                $max = jl_Integer_parseInt0($sb.$toString(), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
    $mod = $this.$index >= $this.$pattern0.data.length ? 42 : $this.$pattern0.data[$this.$index];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead0 = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead0 = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead0 = (-536870789);
    }
    return jur_Quantifier__init_0($min, $max);
},
jur_Lexer_toString = $this => {
    return $this.$orig;
},
jur_Lexer_isEmpty = $this => {
    return !$this.$ch && !$this.$lookAhead0 && $this.$index == $this.$patternFullLength && !$this.$isSpecial() ? 1 : 0;
},
jur_Lexer_isLetter = $ch => {
    return $ch < 0 ? 0 : 1;
},
jur_Lexer_isLetter0 = $this => {
    return !$this.$isEmpty() && !$this.$isSpecial() && jur_Lexer_isLetter($this.$ch) ? 1 : 0;
},
jur_Lexer_isHighSurrogate0 = $this => {
    return $this.$ch <= 56319 && $this.$ch >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate0 = $this => {
    return $this.$ch <= 57343 && $this.$ch >= 56320 ? 1 : 0;
},
jur_Lexer_isHighSurrogate = $ch => {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate = $ch => {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
},
jur_Lexer_readHex = ($this, $max) => {
    let $st, $length, $i, var$5, $$je;
    $st = jl_StringBuilder__init_0($max);
    $length = $this.$pattern0.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index >= $length)
            break;
        $st.$append0($this.$pattern0.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                var$5 = jl_Integer_parseInt0($st.$toString(), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$5;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
},
jur_Lexer_readOctals = $this => {
    let $max, $i, $length, $res, var$5;
    $max = 3;
    $i = 1;
    $length = $this.$pattern0.data.length - 2 | 0;
    $res = jl_Character_digit($this.$pattern0.data[$this.$index], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if ($this.$index >= $length)
                        break a;
                    var$5 = jl_Character_digit($this.$pattern0.data[$this.$index], 8);
                    if (var$5 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$5 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
},
jur_Lexer_readFlags = $this => {
    let $pos, $res, $ch;
    $pos = 1;
    $res = $this.$flags1;
    a: while (true) {
        if ($this.$index >= $this.$pattern0.data.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
        b: {
            c: {
                $ch = $this.$pattern0.data[$this.$index];
                switch ($ch) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$toString(), $this.$index));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
},
jur_Lexer_nextIndex = $this => {
    $this.$prevNW = $this.$index;
    if ($this.$flags1 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index = $this.$index + 1 | 0;
    return $this.$prevNW;
},
jur_Lexer_skipComments = $this => {
    let $length;
    $length = $this.$pattern0.data.length - 2 | 0;
    $this.$index = $this.$index + 1 | 0;
    a: while (true) {
        if ($this.$index < $length && jl_Character_isWhitespace0($this.$pattern0.data[$this.$index])) {
            $this.$index = $this.$index + 1 | 0;
            continue;
        }
        if ($this.$index >= $length)
            break;
        if ($this.$pattern0.data[$this.$index] != 35)
            break;
        $this.$index = $this.$index + 1 | 0;
        while (true) {
            if ($this.$index >= $length)
                continue a;
            if (jur_Lexer_isLineSeparator($this, $this.$pattern0.data[$this.$index]))
                continue a;
            $this.$index = $this.$index + 1 | 0;
        }
    }
    return $this.$index;
},
jur_Lexer_isLineSeparator = ($this, $ch) => {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
},
jur_Lexer_getDecomposition = $ch => {
    return jur_Lexer_decompTable.$get21($ch);
},
jur_Lexer_getHangulDecomposition = $ch => {
    let $sIndex, $l, $v, $t, $decomp, var$7;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        if (!$t)
            $decomp = $rt_createIntArrayFromData([$l, $v]);
        else {
            var$7 = 4519 + $t | 0;
            $decomp = $rt_createIntArrayFromData([$l, $v, var$7]);
        }
        return $decomp;
    }
    return null;
},
jur_Lexer_hasSingleCodepointDecomposition = $ch => {
    let $hasSingleDecomp;
    $hasSingleDecomp = jur_Lexer_singleDecompTable.$get3($ch);
    return $hasSingleDecomp == jur_Lexer_singleDecompTableSize ? 0 : 1;
},
jur_Lexer_hasDecompositionNonNullCanClass = $ch => {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
},
jur_Lexer_nextCodePoint = $this => {
    let $high, $lowExpectedIndex, $low;
    $high = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        if ($lowExpectedIndex < $this.$pattern0.data.length) {
            $low = $this.$pattern0.data[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
},
jur_Lexer_getIndex = $this => {
    return $this.$curToc;
},
jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace),
jur_AbstractCharClass$LazyNonSpace__init_ = $this => {
    jur_AbstractCharClass$LazySpace__init_($this);
},
jur_AbstractCharClass$LazyNonSpace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonSpace_computeValue = $this => {
    let $chCl;
    $chCl = (jur_AbstractCharClass$LazySpace_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
jn_MalformedURLException = $rt_classWithoutFields(ji_IOException),
jn_MalformedURLException__init_1 = $this => {
    ji_IOException__init_0($this);
},
jn_MalformedURLException__init_0 = () => {
    let var_0 = new jn_MalformedURLException();
    jn_MalformedURLException__init_1(var_0);
    return var_0;
},
jn_MalformedURLException__init_2 = ($this, $detailMessage) => {
    ji_IOException__init_($this, $detailMessage);
},
jn_MalformedURLException__init_ = var_0 => {
    let var_1 = new jn_MalformedURLException();
    jn_MalformedURLException__init_2(var_1, var_0);
    return var_1;
},
jn_URLEncoder = $rt_classWithoutFields();
let jn_URLEncoder_encode0 = ($s, $enc) => {
    let $buf, $start, $i, $ch;
    ju_Objects_requireNonNull0($s);
    ju_Objects_requireNonNull0($enc);
    $buf = jl_StringBuffer__init_2($s.$length() + 16 | 0);
    $start = (-1);
    $i = 0;
    while ($i < $s.$length()) {
        $ch = $s.$charAt($i);
        if (!(!($ch >= 97 && $ch <= 122) && !($ch >= 65 && $ch <= 90) && !($ch >= 48 && $ch <= 57) && $rt_s(1009).$indexOf($ch) <= (-1))) {
            if ($start >= 0) {
                jn_URLEncoder_convert($s.$substring($start, $i), $buf, $enc);
                $start = (-1);
            }
            if ($ch != 32)
                $buf.$append16($ch);
            else
                $buf.$append16(43);
        } else if ($start < 0)
            $start = $i;
        $i = $i + 1 | 0;
    }
    if ($start >= 0)
        jn_URLEncoder_convert($s.$substring0($start), $buf, $enc);
    return $buf.$toString();
},
jn_URLEncoder_encode = ($s, $enc) => {
    let var$3, $$je;
    ju_Objects_requireNonNull0($s);
    ju_Objects_requireNonNull0($enc);
    a: {
        try {
            var$3 = jn_URLEncoder_encode0($s, jnc_Charset_forName($enc));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_UnsupportedCharsetException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(ji_UnsupportedEncodingException__init_0($enc));
},
jn_URLEncoder_convert = ($s, $buf, $enc) => {
    let $bytes, $j, var$6;
    $bytes = $s.$getBytes($enc);
    $j = 0;
    while (true) {
        var$6 = $bytes.data;
        if ($j >= var$6.length)
            break;
        $buf.$append16(37);
        $buf.$append16($rt_s(1010).$charAt((var$6[$j] & 240) >> 4));
        $buf.$append16($rt_s(1010).$charAt(var$6[$j] & 15));
        $j = $j + 1 | 0;
    }
},
jt_Clock = $rt_classWithoutFields(),
jt_Clock_systemUTC = () => {
    let var$1;
    var$1 = new jt_Clock$SystemClock;
    jt_ZoneOffset_$callClinit();
    jt_Clock$SystemClock__init_(var$1, jt_ZoneOffset_UTC);
    return var$1;
},
jt_Clock__init_ = $this => {
    jl_Object__init_($this);
};
function onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0() {
    jl_Object.call(this);
    this.$_0104 = null;
}
let onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0104 = var$1;
},
onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0__init_0 = var_0 => {
    let var_1 = new onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0();
    onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0_accept0 = (var$0, var$1, var$2) => {
    onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0_accept(var$0, var$1, var$2);
},
onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0_accept = (var$0, var$1, var$2) => {
    onns_NostrKeyPairSigner_lambda$getPublicKey$4(var$0.$_0104, var$1, var$2);
},
ju_HashMap$EntryIterator = $rt_classWithoutFields(ju_HashMap$AbstractMapIterator),
ju_HashMap$EntryIterator__init_ = ($this, $map) => {
    ju_HashMap$AbstractMapIterator__init_($this, $map);
},
ju_HashMap$EntryIterator__init_0 = var_0 => {
    let var_1 = new ju_HashMap$EntryIterator();
    ju_HashMap$EntryIterator__init_(var_1, var_0);
    return var_1;
},
ju_HashMap$EntryIterator_next = $this => {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry;
},
ju_HashMap$EntryIterator_next0 = $this => {
    return $this.$next3();
};
function onn_NostrRelay$onConnectionMessage$lambda$_23_0() {
    jl_Object.call(this);
    this.$_079 = null;
}
let onn_NostrRelay$onConnectionMessage$lambda$_23_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_079 = var$1;
},
onn_NostrRelay$onConnectionMessage$lambda$_23_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$onConnectionMessage$lambda$_23_0();
    onn_NostrRelay$onConnectionMessage$lambda$_23_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$onConnectionMessage$lambda$_23_0_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionMessage$28(var$0.$_079);
},
ju_Collections = $rt_classWithoutFields(),
ju_Collections_EMPTY_SET = null,
ju_Collections_EMPTY_MAP = null,
ju_Collections_EMPTY_LIST = null,
ju_Collections_EMPTY_ITERATOR = null,
ju_Collections_EMPTY_LIST_ITERATOR = null,
ju_Collections_reverseOrder = null,
ju_Collections_$callClinit = () => {
    ju_Collections_$callClinit = $rt_eraseClinit(ju_Collections);
    ju_Collections__clinit_();
},
ju_Collections_emptyIterator = () => {
    ju_Collections_$callClinit();
    return ju_Collections_EMPTY_ITERATOR;
},
ju_Collections_emptyList = () => {
    ju_Collections_$callClinit();
    return ju_Collections_EMPTY_LIST;
},
ju_Collections_emptySet = () => {
    ju_Collections_$callClinit();
    return ju_Collections_EMPTY_SET;
},
ju_Collections_emptyMap = () => {
    ju_Collections_$callClinit();
    return ju_Collections_EMPTY_MAP;
},
ju_Collections_singletonList = $o => {
    ju_Collections_$callClinit();
    return ju_TemplateCollections$SingleElementList__init_0($o);
},
ju_Collections_singleton = $o => {
    ju_Collections_$callClinit();
    return ju_TemplateCollections$SingleElementSet__init_0($o);
},
ju_Collections_singletonMap = ($key, $value) => {
    let $entries;
    ju_Collections_$callClinit();
    $entries = ju_Collections_singleton(ju_AbstractMap$SimpleImmutableEntry__init_($key, $value));
    return ju_Collections$7__init_0($entries);
},
ju_Collections_sort = ($list, $c) => {
    let $array, $i, var$5;
    ju_Collections_$callClinit();
    if ($c === null)
        $c = ju_Comparator$NaturalOrder_instance();
    $array = $rt_createArray(jl_Object, $list.$size());
    $list.$toArray($array);
    ju_Arrays_sort($array, $c);
    $i = 0;
    while (true) {
        var$5 = $array.data;
        if ($i >= var$5.length)
            break;
        $list.$set0($i, var$5[$i]);
        $i = $i + 1 | 0;
    }
},
ju_Collections_unmodifiableList = $list => {
    ju_Collections_$callClinit();
    ju_Objects_requireNonNull0($list);
    return ju_Collections$9__init_0($list);
},
ju_Collections_unmodifiableCollection = $c => {
    ju_Collections_$callClinit();
    ju_Objects_requireNonNull0($c);
    return ju_Collections$10__init_0($c);
},
ju_Collections_unmodifiableIterator = $c => {
    ju_Collections_$callClinit();
    return ju_Collections$11__init_0($c);
},
ju_Collections_unmodifiableSet = $s => {
    ju_Collections_$callClinit();
    ju_Objects_requireNonNull0($s);
    return ju_Collections$12__init_0($s);
},
ju_Collections_unmodifiableMap = $m => {
    ju_Collections_$callClinit();
    ju_Objects_requireNonNull0($m);
    return ju_Collections$13__init_0($m);
},
ju_Collections_unmodifiableMapEntrySet = $c => {
    ju_Collections_$callClinit();
    return ju_Collections$14__init_0($c);
},
ju_Collections_unmodifiableMapEntryIterator = $c => {
    ju_Collections_$callClinit();
    return ju_Collections$15__init_0($c);
},
ju_Collections__clinit_ = () => {
    ju_Collections_EMPTY_SET = ju_Collections$1__init_0();
    ju_Collections_EMPTY_MAP = ju_Collections$2__init_0();
    ju_Collections_EMPTY_LIST = ju_Collections$3__init_0();
    ju_Collections_EMPTY_ITERATOR = ju_Collections$4__init_0();
    ju_Collections_EMPTY_LIST_ITERATOR = ju_Collections$5__init_0();
    ju_Collections_reverseOrder = ju_Collections$_clinit_$lambda$_59_0__init_0();
};
function onn_NostrRelay$onConnectionMessage$lambda$_23_1() {
    let a = this; jl_Object.call(a);
    a.$_036 = null;
    a.$_120 = null;
    a.$_29 = null;
}
let onn_NostrRelay$onConnectionMessage$lambda$_23_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_036 = var$1;
    var$0.$_120 = var$2;
    var$0.$_29 = var$3;
},
onn_NostrRelay$onConnectionMessage$lambda$_23_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$onConnectionMessage$lambda$_23_1();
    onn_NostrRelay$onConnectionMessage$lambda$_23_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$onConnectionMessage$lambda$_23_1_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$onConnectionMessage$lambda$_23_1_accept(var$0, var$1, var$2);
},
onn_NostrRelay$onConnectionMessage$lambda$_23_1_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$onConnectionMessage$33(var$0.$_036, var$0.$_120, var$0.$_29, var$1, var$2);
};
function onn_NostrSubscription() {
    let a = this; onnp_NostrMessage.call(a);
    a.$eventTracker = null;
    a.$subId = null;
    a.$onEoseListeners = null;
    a.$onEventListeners = null;
    a.$onCloseListeners = null;
    a.$exc = null;
    a.$filters = null;
    a.$filtersRO = null;
    a.$onOpen = null;
    a.$onClose = null;
    a.$closeReasons = null;
    a.$opened = 0;
}
let onn_NostrSubscription_logger = null,
onn_NostrSubscription_$assertionsDisabled = 0,
onn_NostrSubscription_$callClinit = () => {
    onn_NostrSubscription_$callClinit = $rt_eraseClinit(onn_NostrSubscription);
    onn_NostrSubscription__clinit_();
},
onn_NostrSubscription__init_0 = ($this, $subId, $filters, $eventTracker, $onOpen, $onClose) => {
    onn_NostrSubscription_$callClinit();
    onnp_NostrMessage__init_($this);
    $this.$onEoseListeners = juc_CopyOnWriteArrayList__init_();
    $this.$onEventListeners = juc_CopyOnWriteArrayList__init_();
    $this.$onCloseListeners = juc_CopyOnWriteArrayList__init_();
    $this.$closeReasons = ju_ArrayList__init_();
    $this.$opened = 0;
    $this.$subId = $subId;
    $this.$eventTracker = $eventTracker;
    $this.$filters = $filters;
    $this.$filtersRO = ju_Collections_unmodifiableCollection($filters);
    $this.$onOpen = $onOpen;
    $this.$onClose = $onClose;
},
onn_NostrSubscription__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onn_NostrSubscription();
    onn_NostrSubscription__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onn_NostrSubscription_registerClosure = ($this, $reason) => {
    $this.$closeReasons.$add1($reason);
},
onn_NostrSubscription_getFilters = $this => {
    return $this.$filtersRO;
},
onn_NostrSubscription_getExecutor = $this => {
    if ($this.$exc !== null)
        return $this.$exc;
    $rt_throw(jl_IllegalStateException__init_($rt_s(1011)));
},
onn_NostrSubscription_getId = $this => {
    return $this.$subId;
},
onn_NostrSubscription_open = $this => {
    let $platform;
    if ($this.$opened)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1012)));
    $platform = onp_NGEUtils_getPlatform();
    $this.$exc = onp_NGEPlatform_newSubscriptionExecutor($platform);
    $this.$opened = 1;
    return $this.$onOpen.$apply($this);
},
onn_NostrSubscription_isOpened = $this => {
    return $this.$opened;
},
onn_NostrSubscription_close = $this => {
    let $platform, $out;
    $platform = onp_NGEUtils_getPlatform();
    if (!$this.$opened)
        return $platform.$wrapPromise(onn_NostrSubscription$close$lambda$_7_0__init_0());
    $this.$opened = 0;
    $this.$exc.$close();
    $out = $this.$onClose.$apply13($this, onn_NostrSubscription_getCloseMessage($this));
    $this.$registerClosure($rt_s(1013));
    $this.$callCloseListeners();
    return $out;
},
onn_NostrSubscription_getSubId = $this => {
    return $this.$subId;
},
onn_NostrSubscription_addEventListener = ($this, $listener) => {
    onn_NostrSubscription_$callClinit();
    if (!onn_NostrSubscription_$assertionsDisabled && $listener === null)
        $rt_throw(jl_AssertionError__init_());
    if (!onn_NostrSubscription_$assertionsDisabled && $this.$onEventListeners.$contains($listener))
        $rt_throw(jl_AssertionError__init_());
    $this.$onEventListeners.$add1($listener);
    return $this;
},
onn_NostrSubscription_addEoseListener = ($this, $listener) => {
    onn_NostrSubscription_$callClinit();
    if (!onn_NostrSubscription_$assertionsDisabled && $listener === null)
        $rt_throw(jl_AssertionError__init_());
    if (!onn_NostrSubscription_$assertionsDisabled && $this.$onEoseListeners.$contains($listener))
        $rt_throw(jl_AssertionError__init_());
    $this.$onEoseListeners.$add1($listener);
    return $this;
},
onn_NostrSubscription_addCloseListener = ($this, $listener) => {
    onn_NostrSubscription_$callClinit();
    if (!onn_NostrSubscription_$assertionsDisabled && $listener === null)
        $rt_throw(jl_AssertionError__init_());
    if (!onn_NostrSubscription_$assertionsDisabled && $this.$onCloseListeners.$contains($listener))
        $rt_throw(jl_AssertionError__init_());
    $this.$onCloseListeners.$add1($listener);
    return $this;
},
onn_NostrSubscription_addListener = ($this, $listener) => {
    onn_NostrSubscription_$callClinit();
    if (!onn_NostrSubscription_$assertionsDisabled && $listener === null)
        $rt_throw(jl_AssertionError__init_());
    if ($rt_isInstance($listener, onnls_NostrSubEoseListener)) {
        if (!onn_NostrSubscription_$assertionsDisabled && $this.$onEoseListeners.$contains($listener))
            $rt_throw(jl_AssertionError__init_());
        $this.$onEoseListeners.$add1($listener);
    }
    if ($rt_isInstance($listener, onnls_NostrSubEventListener)) {
        if (!onn_NostrSubscription_$assertionsDisabled && $this.$onEventListeners.$contains($listener))
            $rt_throw(jl_AssertionError__init_());
        $this.$onEventListeners.$add1($listener);
    }
    if ($rt_isInstance($listener, onnls_NostrSubCloseListener)) {
        if (!onn_NostrSubscription_$assertionsDisabled && $this.$onCloseListeners.$contains($listener))
            $rt_throw(jl_AssertionError__init_());
        $this.$onCloseListeners.$add1($listener);
    }
    return $this;
},
onn_NostrSubscription_removeListener = ($this, $listener) => {
    if ($rt_isInstance($listener, onnls_NostrSubEoseListener))
        $this.$onEoseListeners.$remove2($listener);
    if ($rt_isInstance($listener, onnls_NostrSubEventListener))
        $this.$onEventListeners.$remove2($listener);
    if ($rt_isInstance($listener, onnls_NostrSubCloseListener))
        $this.$onCloseListeners.$remove2($listener);
    return $this;
},
onn_NostrSubscription_callEoseListeners = ($this, $everyWhere) => {
    let var$2, $listener, var$4, var$5;
    if ($this.$onEoseListeners.$isEmpty())
        return;
    var$2 = $this.$onEoseListeners.$iterator();
    while (var$2.$hasNext()) {
        $listener = var$2.$next();
        var$4 = $this.$getExecutor();
        var$5 = onn_NostrSubscription$callEoseListeners$lambda$_14_0__init_0($listener, $everyWhere);
        var$4 = var$4.$run0(var$5);
        var$5 = onn_NostrSubscription$callEoseListeners$lambda$_14_1__init_0($listener);
        var$4.$catchException(var$5);
    }
},
onn_NostrSubscription_callEventListeners = ($this, $event, $stored) => {
    let var$3, $listener, var$5, var$6;
    if ($this.$onEventListeners.$isEmpty())
        return;
    var$3 = $this.$onEventListeners.$iterator();
    while (var$3.$hasNext()) {
        $listener = var$3.$next();
        var$5 = $this.$getExecutor();
        var$6 = onn_NostrSubscription$callEventListeners$lambda$_15_0__init_0($listener, $event, $stored);
        var$5 = var$5.$run0(var$6);
        var$6 = onn_NostrSubscription$callEventListeners$lambda$_15_1__init_0($listener);
        var$5.$catchException(var$6);
    }
},
onn_NostrSubscription_callCloseListeners = $this => {
    let var$1, $listener, var$3, var$4;
    if ($this.$onCloseListeners.$isEmpty())
        return;
    var$1 = $this.$onCloseListeners.$iterator();
    while (var$1.$hasNext()) {
        $listener = var$1.$next();
        var$3 = $this.$getExecutor();
        var$4 = onn_NostrSubscription$callCloseListeners$lambda$_16_0__init_0($this, $listener);
        var$3 = var$3.$run0(var$4);
        var$4 = onn_NostrSubscription$callCloseListeners$lambda$_16_1__init_0($listener);
        var$3.$catchException(var$4);
    }
},
onn_NostrSubscription_getPrefix = $this => {
    return $rt_s(1014);
},
onn_NostrSubscription_getFragments = $this => {
    let $fragments, var$2, $filter;
    $fragments = ju_ArrayList__init_1($this.$filters.$size() + 1 | 0);
    $fragments.$add1($this.$subId);
    var$2 = $this.$filters.$iterator();
    while (var$2.$hasNext()) {
        $filter = var$2.$next();
        $fragments.$add1($filter);
    }
    return $fragments;
},
onn_NostrSubscription_getCloseMessage = $this => {
    return onn_NostrSubscription$NostrSubCloseMessage__init_0($this.$getId());
},
onn_NostrSubscription_lambda$callCloseListeners$6 = ($listener, $ex) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrSubscription_$callClinit();
    var$3 = onn_NostrSubscription_logger;
    var$4 = jl_String_valueOf($listener);
    var$5 = jl_String_valueOf($ex);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1015)), var$4), 32), var$5);
    var$3.$warning(jl_StringBuilder_toString(var$6));
},
onn_NostrSubscription_lambda$callCloseListeners$5 = ($this, $listener) => {
    $listener.$onSubClose($this.$closeReasons);
    return null;
},
onn_NostrSubscription_lambda$callEventListeners$4 = ($listener, $ex) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrSubscription_$callClinit();
    var$3 = onn_NostrSubscription_logger;
    var$4 = jl_String_valueOf($listener);
    var$5 = jl_String_valueOf($ex);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1016)), var$4), 32), var$5);
    var$3.$warning(jl_StringBuilder_toString(var$6));
},
onn_NostrSubscription_lambda$callEventListeners$3 = ($listener, $event, $stored) => {
    onn_NostrSubscription_$callClinit();
    $listener.$onSubEvent($event, $stored);
    return null;
},
onn_NostrSubscription_lambda$callEoseListeners$2 = ($listener, $ex) => {
    let var$3, var$4, var$5, var$6;
    onn_NostrSubscription_$callClinit();
    var$3 = onn_NostrSubscription_logger;
    var$4 = jl_String_valueOf($listener);
    var$5 = jl_String_valueOf($ex);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1017)), var$4), 32), var$5);
    var$3.$warning(jl_StringBuilder_toString(var$6));
},
onn_NostrSubscription_lambda$callEoseListeners$1 = ($listener, $everyWhere) => {
    onn_NostrSubscription_$callClinit();
    $listener.$onSubEose($everyWhere);
    return null;
},
onn_NostrSubscription_lambda$close$0 = ($res, $rej) => {
    onn_NostrSubscription_$callClinit();
    $res.$accept0(ju_Collections_emptyList());
},
onn_NostrSubscription__clinit_ = () => {
    onn_NostrSubscription_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onn_NostrSubscription)) ? 0 : 1;
    onn_NostrSubscription_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onn_NostrSubscription)));
},
onn_NostrSubscription_isOpened$exported$0 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return !!var$1.$isOpened();
},
onn_NostrSubscription__init_$exported$1 = (var$1, var$2, var$3, var$4, var$5) => {
    onn_NostrSubscription_$callClinit();
    return onn_NostrSubscription__init_($rt_str(var$1), var$2, var$3, var$4, var$5);
},
onn_NostrSubscription_registerClosure$exported$2 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    var$2 = $rt_str(var$2);
    var$1.$registerClosure(var$2);
},
onn_NostrSubscription_lambda$callCloseListeners$5$exported$3 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    var$2 = var$2;
    return otji_JSWrapper_javaToJs(onn_NostrSubscription_lambda$callCloseListeners$5(var$1, var$2));
},
onn_NostrSubscription_getExecutor$exported$4 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return var$1.$getExecutor();
},
onn_NostrSubscription_getId$exported$5 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return $rt_ustr(var$1.$getId());
},
onn_NostrSubscription_getCloseMessage$exported$6 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return onn_NostrSubscription_getCloseMessage(var$1);
},
onn_NostrSubscription_getSubId$exported$7 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return $rt_ustr(var$1.$getSubId());
},
onn_NostrSubscription_addEventListener$exported$8 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    var$2 = var$2;
    return var$1.$addEventListener(var$2);
},
onn_NostrSubscription_getFilters$exported$9 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return var$1.$getFilters();
},
onn_NostrSubscription_callEventListeners$exported$10 = (var$1, var$2, var$3) => {
    let var$4;
    onn_NostrSubscription_$callClinit();
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    var$1.$callEventListeners(var$2, var$4);
},
onn_NostrSubscription_callCloseListeners$exported$11 = var$1 => {
    onn_NostrSubscription_$callClinit();
    var$1.$callCloseListeners();
},
onn_NostrSubscription_addListener$exported$12 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    var$2 = var$2;
    return var$1.$addListener3(var$2);
},
onn_NostrSubscription_open$exported$13 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return var$1.$open();
},
onn_NostrSubscription_close$exported$14 = var$1 => {
    onn_NostrSubscription_$callClinit();
    return var$1.$close0();
},
onn_NostrSubscription_removeListener$exported$15 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    var$2 = var$2;
    return var$1.$removeListener0(var$2);
},
onn_NostrSubscription_addEoseListener$exported$16 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    var$2 = var$2;
    return var$1.$addEoseListener(var$2);
},
onn_NostrSubscription_callEoseListeners$exported$17 = (var$1, var$2) => {
    let var$3;
    onn_NostrSubscription_$callClinit();
    var$3 = var$2 ? 1 : 0;
    var$1.$callEoseListeners(var$3);
};
let onn_NostrSubscription_addCloseListener$exported$18 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    var$2 = var$2;
    return var$1.$addCloseListener(var$2);
},
onn_NostrSubscription_lambda$callCloseListeners$6$exported$0 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrSubscription_lambda$callCloseListeners$6(var$1, var$2);
},
onn_NostrSubscription_lambda$callEventListeners$4$exported$1 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrSubscription_lambda$callEventListeners$4(var$1, var$2);
},
onn_NostrSubscription_lambda$callEventListeners$3$exported$2 = (var$1, var$2, var$3) => {
    onn_NostrSubscription_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JSWrapper_javaToJs(onn_NostrSubscription_lambda$callEventListeners$3(var$1, var$2, var$3 ? 1 : 0));
},
onn_NostrSubscription_lambda$callEoseListeners$2$exported$3 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrSubscription_lambda$callEoseListeners$2(var$1, var$2);
},
onn_NostrSubscription_lambda$callEoseListeners$1$exported$4 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JSWrapper_javaToJs(onn_NostrSubscription_lambda$callEoseListeners$1(var$1, var$2 ? 1 : 0));
},
onn_NostrSubscription_lambda$close$0$exported$5 = (var$1, var$2) => {
    onn_NostrSubscription_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrSubscription_lambda$close$0(var$1, var$2);
},
jtz_ZoneRulesProvider = $rt_classWithoutFields(),
jtz_ZoneRulesProvider_PROVIDERS = null,
jtz_ZoneRulesProvider_ZONES = null,
jtz_ZoneRulesProvider_$callClinit = () => {
    jtz_ZoneRulesProvider_$callClinit = $rt_eraseClinit(jtz_ZoneRulesProvider);
    jtz_ZoneRulesProvider__clinit_();
},
jtz_ZoneRulesProvider_getAvailableZoneIds = () => {
    jtz_ZoneRulesProvider_$callClinit();
    return ju_Collections_unmodifiableSet(jtz_ZoneRulesProvider_ZONES.$keySet());
},
jtz_ZoneRulesProvider_getRules = ($zoneId, $forCaching) => {
    jtz_ZoneRulesProvider_$callClinit();
    ju_Objects_requireNonNull($zoneId, $rt_s(623));
    return (jtz_ZoneRulesProvider_getProvider($zoneId)).$provideRules($zoneId, $forCaching);
},
jtz_ZoneRulesProvider_getProvider = $zoneId => {
    let $provider, var$3, var$4;
    jtz_ZoneRulesProvider_$callClinit();
    $provider = jtz_ZoneRulesProvider_ZONES.$get1($zoneId);
    if ($provider !== null)
        return $provider;
    if (jtz_ZoneRulesProvider_ZONES.$isEmpty())
        $rt_throw(jtz_ZoneRulesException__init_0($rt_s(1018)));
    var$3 = new jtz_ZoneRulesException;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1019)), $zoneId);
    jtz_ZoneRulesException__init_(var$3, jl_StringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jtz_ZoneRulesProvider_registerProvider0 = $provider => {
    let var$2, $zoneId, $old, var$5, var$6;
    jtz_ZoneRulesProvider_$callClinit();
    var$2 = ($provider.$provideZoneIds()).$iterator();
    while (var$2.$hasNext()) {
        $zoneId = var$2.$next();
        ju_Objects_requireNonNull($zoneId, $rt_s(623));
        $old = jtz_ZoneRulesProvider_ZONES.$putIfAbsent($zoneId, $provider);
        if ($old !== null) {
            var$5 = new jtz_ZoneRulesException;
            var$2 = jl_String_valueOf($provider);
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1020)), $zoneId), $rt_s(1021)), var$2);
            jtz_ZoneRulesException__init_(var$5, jl_StringBuilder_toString(var$6));
            $rt_throw(var$5);
        }
    }
},
jtz_ZoneRulesProvider__init_ = $this => {
    jtz_ZoneRulesProvider_$callClinit();
    jl_Object__init_($this);
},
jtz_ZoneRulesProvider__clinit_ = () => {
    jtz_ZoneRulesProvider_PROVIDERS = ju_ArrayList__init_();
    jtz_ZoneRulesProvider_ZONES = ju_HashMap__init_();
    jtz_ZoneRulesProvider_registerProvider0(jtz_JodaRulesProvider__init_0());
};
function onpt_TeaVMPlatform$2$runLater$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_022 = null;
    a.$_113 = Long_ZERO;
}
let onpt_TeaVMPlatform$2$runLater$lambda$_2_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_022 = var$1;
    var$0.$_113 = var$2;
},
onpt_TeaVMPlatform$2$runLater$lambda$_2_0__init_0 = (var_0, var_1) => {
    let var_2 = new onpt_TeaVMPlatform$2$runLater$lambda$_2_0();
    onpt_TeaVMPlatform$2$runLater$lambda$_2_0__init_(var_2, var_0, var_1);
    return var_2;
},
onpt_TeaVMPlatform$2$runLater$lambda$_2_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$2$runLater$lambda$_2_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$2$runLater$lambda$_2_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$2_lambda$runLater$3(var$0.$_022, var$0.$_113, var$1, var$2);
};
function onne_UnsignedNostrEvent() {
    let a = this; jl_Object.call(a);
    a.$createdAt1 = null;
    a.$kind1 = 0;
    a.$content = null;
    a.$tags0 = null;
    a.$tagRows = null;
}
let onne_UnsignedNostrEvent__init_1 = $this => {
    jl_Object__init_($this);
    $this.$createdAt1 = jt_Instant_now();
    $this.$kind1 = 1;
    $this.$content = $rt_s(23);
    $this.$tags0 = ju_LinkedHashMap__init_();
},
onne_UnsignedNostrEvent__init_ = () => {
    let var_0 = new onne_UnsignedNostrEvent();
    onne_UnsignedNostrEvent__init_1(var_0);
    return var_0;
},
onne_UnsignedNostrEvent__init_0 = ($this, $map) => {
    jl_Object__init_($this);
    $this.$createdAt1 = jt_Instant_now();
    $this.$kind1 = 1;
    $this.$content = $rt_s(23);
    $this.$tags0 = ju_LinkedHashMap__init_();
    $this.$fromMap($map);
},
onne_UnsignedNostrEvent__init_2 = var_0 => {
    let var_1 = new onne_UnsignedNostrEvent();
    onne_UnsignedNostrEvent__init_0(var_1, var_0);
    return var_1;
},
onne_UnsignedNostrEvent_withKind = ($this, $kind) => {
    $this.$kind1 = $kind;
    return $this;
},
onne_UnsignedNostrEvent_withContent = ($this, $content) => {
    $this.$content = $content;
    return $this;
},
onne_UnsignedNostrEvent_createdAt = ($this, $created_at) => {
    $this.$createdAt1 = $created_at;
    return $this;
},
onne_UnsignedNostrEvent_withExpiration = ($this, $expiresAt) => {
    let var$2;
    $this.$clearTags($rt_s(738));
    if ($expiresAt !== null) {
        var$2 = $rt_createArray(jl_String, 1);
        var$2.data[0] = jl_String_valueOf1(jt_Instant_getEpochSecond(ju_Objects_requireNonNull0($expiresAt)));
        $this.$withTag0($rt_s(738), var$2);
    }
    return $this;
},
onne_UnsignedNostrEvent_withTag1 = ($this, $key, $values) => {
    if ($values !== null && $values.data.length)
        return $this.$withTag($key, onne_NostrEvent$TagValue__init_(ju_Arrays_asList($values)));
    return $this.$clearTags($key);
},
onne_UnsignedNostrEvent_withTag0 = ($this, $key, $values) => {
    if ($values !== null && !$values.$isEmpty())
        return $this.$withTag($key, onne_NostrEvent$TagValue__init_($values));
    return $this.$clearTags($key);
},
onne_UnsignedNostrEvent_withTag = ($this, $key, $value) => {
    let $tagValues;
    if ($value !== null && $value.$size()) {
        $this.$tagRows = null;
        $tagValues = $this.$tags0.$computeIfAbsent($key, onne_UnsignedNostrEvent$withTag$lambda$_8_0__init_0());
        $tagValues.$add1($value);
        return $this;
    }
    return $this.$clearTags($key);
},
onne_UnsignedNostrEvent_clearTags = ($this, $key) => {
    $this.$tagRows = null;
    $this.$tags0.$remove1($key);
    return $this;
},
onne_UnsignedNostrEvent_getTagRows = $this => {
    let $tagRows, var$2, $entry, var$4, $value, $row, var$7, $v;
    if ($this.$tagRows === null) {
        $tagRows = ju_ArrayList__init_();
        var$2 = ($this.$tags0.$entrySet()).$iterator();
        while (var$2.$hasNext()) {
            $entry = var$2.$next();
            var$4 = ($entry.$getValue()).$iterator();
            while (var$4.$hasNext()) {
                $value = var$4.$next();
                if ($value === null)
                    continue;
                $row = ju_ArrayList__init_();
                $row.$add1($entry.$getKey());
                var$7 = ($value.$getAll()).$iterator();
                while (var$7.$hasNext()) {
                    $v = var$7.$next();
                    $row.$add1($v);
                }
                $tagRows.$add1(ju_Collections_unmodifiableList($row));
            }
        }
        $this.$tagRows = ju_Collections_unmodifiableList($tagRows);
    }
    return $this.$tagRows;
},
onne_UnsignedNostrEvent_fromMap = ($this, $map) => {
    let $tags, var$3, $tag, var$5, var$6, $key, $values;
    $this.$kind1 = onp_NGEUtils_safeInt($map.$get1($rt_s(741)));
    $this.$content = onp_NGEUtils_safeString($map.$get1($rt_s(742)));
    $this.$createdAt1 = onp_NGEUtils_safeSecondsInstant($map.$get1($rt_s(746)));
    $tags = onp_NGEUtils_safeCollectionOfStringArray($map.$getOrDefault($rt_s(747), ju_ArrayList__init_()));
    var$3 = $tags.$iterator();
    while (var$3.$hasNext()) {
        $tag = var$3.$next();
        var$5 = $tag.data;
        var$6 = var$5.length;
        if (!var$6)
            continue;
        $key = var$5[0];
        $values = ju_Arrays_copyOfRange0($tag, 1, var$6);
        var$5 = $values.data;
        if (var$5.length)
            $this.$withTag0($key, $values);
        else
            $this.$clearTags($key);
    }
    return $this;
},
onne_UnsignedNostrEvent_toString = $this => {
    let $sb, var$2, $tagRow, var$4, $tag;
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(1022));
    ($sb.$append1($rt_s(1023))).$append($this.$createdAt1);
    ($sb.$append1($rt_s(1024))).$append3($this.$kind1);
    (($sb.$append1($rt_s(1025))).$append1($this.$content)).$append0(39);
    $sb.$append1($rt_s(1026));
    var$2 = ($this.$getTagRows()).$iterator();
    while (var$2.$hasNext()) {
        $tagRow = var$2.$next();
        $sb.$append1($rt_s(1027));
        var$4 = $tagRow.$iterator();
        while (var$4.$hasNext()) {
            $tag = var$4.$next();
            ($sb.$append1($tag)).$append1($rt_s(12));
        }
        $sb.$append0(10);
    }
    $sb.$append0(125);
    return $sb.$toString();
},
onne_UnsignedNostrEvent_getCreatedAt = $this => {
    return $this.$createdAt1;
},
onne_UnsignedNostrEvent_getKind = $this => {
    return $this.$kind1;
},
onne_UnsignedNostrEvent_getContent = $this => {
    return $this.$content;
},
onne_UnsignedNostrEvent_equals = ($this, $obj) => {
    let $e, $tagRows1, $tagRows2, $i, $row1, $row2;
    if ($obj !== null && $obj instanceof onne_UnsignedNostrEvent) {
        if ($obj === $this)
            return 1;
        $e = $obj;
        if (jt_Instant_equals($e.$getCreatedAt(), $this.$getCreatedAt()) && $e.$getKind() == $this.$getKind() && ($e.$getContent()).$equals($this.$getContent())) {
            $tagRows1 = $this.$getTagRows();
            $tagRows2 = $e.$getTagRows();
            if ($tagRows1.$size() != $tagRows2.$size())
                return 0;
            $i = 0;
            while ($i < $tagRows1.$size()) {
                $row1 = $tagRows1.$get($i);
                $row2 = $tagRows2.$get($i);
                if (!$row1.$equals($row2))
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
        return 0;
    }
    return 0;
},
onne_UnsignedNostrEvent_hashCode = $this => {
    return ($this.$toString()).$hashCode();
},
onne_UnsignedNostrEvent_clone = $this => {
    let $clone, $e, $$je;
    a: {
        try {
            $clone = jl_Object_clone($this);
            $clone.$tags0 = ju_LinkedHashMap__init_0($this.$tags0);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $clone;
    }
    $rt_throw(jl_RuntimeException__init_1($rt_s(424), $e));
},
onne_UnsignedNostrEvent_hasTag = ($this, $tag) => {
    if ($tag === null)
        return 0;
    return $this.$tags0.$get1($tag) === null ? 0 : 1;
},
onne_UnsignedNostrEvent_getTag = ($this, $key) => {
    let $values;
    $values = $this.$tags0.$get1($key);
    if ($values !== null && $values.$isEmpty())
        return null;
    return $values;
},
onne_UnsignedNostrEvent_getFirstTag = ($this, $key) => {
    let $values;
    $values = $this.$tags0.$get1($key);
    if ($values !== null && !$values.$isEmpty())
        return $values.$get(0);
    return null;
},
onne_UnsignedNostrEvent_listTagKeys = $this => {
    return $this.$tags0.$keySet();
},
onne_UnsignedNostrEvent_clone0 = $this => {
    return $this.$clone11();
},
onne_UnsignedNostrEvent_lambda$withTag$0 = $k => {
    return ju_ArrayList__init_();
},
onne_UnsignedNostrEvent_clone$exported$0 = var$1 => {
    return var$1.$clone11();
},
onne_UnsignedNostrEvent_getExpiration$exported$1 = var$1 => {
    return var$1.$getExpiration();
},
onne_UnsignedNostrEvent_withTag$exported$2 = (var$1, var$2, var$3) => {
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return var$1.$withTag(var$2, var$3);
},
onne_UnsignedNostrEvent__init_$exported$3 = var$1 => {
    return onne_UnsignedNostrEvent__init_2(var$1);
},
onne_UnsignedNostrEvent_getContent$exported$4 = var$1 => {
    return $rt_ustr(var$1.$getContent());
},
onne_UnsignedNostrEvent_isEphemeral$exported$5 = var$1 => {
    return !!var$1.$isEphemeral0();
},
onne_UnsignedNostrEvent_withKind$exported$6 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return var$1.$withKind(var$3);
},
onne_UnsignedNostrEvent_toString$exported$7 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onne_UnsignedNostrEvent_getKind$exported$8 = var$1 => {
    return var$1.$getKind();
},
onne_UnsignedNostrEvent_getTagRows$exported$9 = var$1 => {
    return var$1.$getTagRows();
},
onne_UnsignedNostrEvent_createdAt$exported$10 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$createdAt(var$2);
},
onne_UnsignedNostrEvent_withExpiration$exported$11 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$withExpiration(var$2);
},
onne_UnsignedNostrEvent_isRegular$exported$12 = var$1 => {
    return !!var$1.$isRegular0();
},
onne_UnsignedNostrEvent_fromMap$exported$13 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$fromMap(var$2);
},
onne_UnsignedNostrEvent_hasTag$exported$14 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return !!var$1.$hasTag(var$2);
},
onne_UnsignedNostrEvent_clone$exported$15 = var$1 => {
    return otji_JSWrapper_javaToJs(var$1.$clone0());
},
onne_UnsignedNostrEvent__init_$exported$16 = () => {
    return onne_UnsignedNostrEvent__init_();
},
onne_UnsignedNostrEvent_withTag$exported$17 = (var$1, var$2, var$3) => {
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return var$1.$withTag1(var$2, var$3);
},
onne_UnsignedNostrEvent_getCreatedAt$exported$18 = var$1 => {
    return var$1.$getCreatedAt();
},
onne_UnsignedNostrEvent_listTagKeys$exported$19 = var$1 => {
    return var$1.$listTagKeys();
},
onne_UnsignedNostrEvent_equals$exported$20 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!var$1.$equals(var$2);
},
onne_UnsignedNostrEvent_isReplaceable$exported$21 = var$1 => {
    return !!var$1.$isReplaceable0();
},
onne_UnsignedNostrEvent_withContent$exported$22 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$withContent(var$2);
};
let onne_UnsignedNostrEvent_isAddressable$exported$23 = var$1 => {
    return !!var$1.$isAddressable0();
},
onne_UnsignedNostrEvent_hashCode$exported$24 = var$1 => {
    return var$1.$hashCode();
},
onne_UnsignedNostrEvent_getTag$exported$25 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$getTag(var$2);
};
function onne_UnsignedNostrEvent_withTag$exported$26(var$1, var$2) {
    let var$3, var$4;
    var$3 = $rt_skip(arguments, 2);
    var$2 = $rt_str(var$2);
    var$4 = otji_JS_unwrapStringArray(var$3);
    return var$1.$withTag0(var$2, var$4);
}
let onne_UnsignedNostrEvent_getFirstTag$exported$27 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$getFirstTag(var$2);
},
onne_UnsignedNostrEvent_clearTags$exported$28 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$clearTags(var$2);
},
onne_UnsignedNostrEvent_lambda$withTag$0$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onne_UnsignedNostrEvent_lambda$withTag$0($rt_str(var$1));
},
onnrs_NostrRTCSignal = $rt_classWithoutFields(0);
function onnrs_NostrRTCAnswer() {
    let a = this; jl_Object.call(a);
    a.$pubkey4 = null;
    a.$map2 = null;
    a.$sdp = null;
    a.$turnServer = null;
    a.$peerInfo = null;
}
let onnrs_NostrRTCAnswer__init_ = ($this, $pubkey, $sdp, $turnServer, $misc) => {
    let $map;
    jl_Object__init_($this);
    $this.$pubkey4 = $pubkey;
    $this.$sdp = $sdp;
    $this.$turnServer = $turnServer;
    $map = ju_HashMap__init_();
    if ($misc !== null && !$misc.$isEmpty())
        $map.$putAll($misc);
    $map.$put1($rt_s(1028), $this.$sdp);
    if ($turnServer !== null && !$turnServer.$isEmpty())
        $map.$put1($rt_s(1029), $turnServer);
    else
        $map.$remove1($rt_s(1029));
    $this.$map2 = ju_Collections_unmodifiableMap($map);
},
onnrs_NostrRTCAnswer__init_2 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCAnswer();
    onnrs_NostrRTCAnswer__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCAnswer__init_1 = ($this, $pubkey, $map) => {
    onnrs_NostrRTCAnswer__init_($this, $pubkey, onp_NGEUtils_safeString($map.$get1($rt_s(1028))), onp_NGEUtils_safeString($map.$get1($rt_s(1029))), $map);
},
onnrs_NostrRTCAnswer__init_0 = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCAnswer();
    onnrs_NostrRTCAnswer__init_1(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCAnswer_getSdp = $this => {
    return $this.$sdp;
},
onnrs_NostrRTCAnswer_getTurnServers = $this => {
    return $this.$turnServer;
},
onnrs_NostrRTCAnswer_get = $this => {
    return $this.$map2;
},
onnrs_NostrRTCAnswer_getPeerInfo = $this => {
    if ($this.$peerInfo !== null)
        return $this.$peerInfo;
    $this.$peerInfo = onnrs_NostrRTCPeer__init_($this.$pubkey4, $this.$turnServer, $this.$map2);
    return $this.$peerInfo;
},
onnrs_NostrRTCAnswer_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = jl_String_valueOf($this.$pubkey4);
    var$2 = $this.$sdp;
    var$3 = $this.$turnServer;
    var$4 = $this.$map2;
    var$4 = ju_Arrays_deepToString((var$4.$entrySet()).$toArray0());
    var$5 = jl_String_valueOf($this.$peerInfo);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1030)), var$1), $rt_s(1031)), var$2), $rt_s(1032)), var$3), $rt_s(1033)), var$4), $rt_s(1034)), var$5), 125);
    var$1 = jl_StringBuilder_toString(var$6);
    return var$1;
},
onnrs_NostrRTCAnswer_getSdp$exported$0 = var$1 => {
    return $rt_ustr(var$1.$getSdp());
},
onnrs_NostrRTCAnswer_getPeerInfo$exported$1 = var$1 => {
    return var$1.$getPeerInfo();
},
onnrs_NostrRTCAnswer_toString$exported$2 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnrs_NostrRTCAnswer_get$exported$3 = var$1 => {
    return var$1.$get20();
},
onnrs_NostrRTCAnswer_getTurnServers$exported$4 = var$1 => {
    return $rt_ustr(var$1.$getTurnServers());
},
onnrs_NostrRTCAnswer__init_$exported$5 = (var$1, var$2, var$3, var$4) => {
    return onnrs_NostrRTCAnswer__init_2(var$1, $rt_str(var$2), $rt_str(var$3), var$4);
},
onnrs_NostrRTCAnswer__init_$exported$6 = (var$1, var$2) => {
    return onnrs_NostrRTCAnswer__init_0(var$1, var$2);
},
jl_AbstractStringBuilder$Constants = $rt_classWithoutFields(),
jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null,
jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null,
jl_AbstractStringBuilder$Constants_floatAnalysisResult = null,
jl_AbstractStringBuilder$Constants_$callClinit = () => {
    jl_AbstractStringBuilder$Constants_$callClinit = $rt_eraseClinit(jl_AbstractStringBuilder$Constants);
    jl_AbstractStringBuilder$Constants__clinit_();
},
jl_AbstractStringBuilder$Constants__clinit_ = () => {
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = otcit_DoubleAnalyzer$Result__init_0();
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = otcit_FloatAnalyzer$Result__init_0();
};
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
let jur_SingleSet__init_ = ($this, $child, $fSet) => {
    jur_JointSet__init_($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$getGroupIndex();
},
jur_SingleSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_SingleSet();
    jur_SingleSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_SingleSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $shift;
    $start = $matchResult.$getStart($this.$groupIndex);
    $matchResult.$setStart($this.$groupIndex, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $matchResult.$setStart($this.$groupIndex, $start);
    return (-1);
},
jur_SingleSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$find($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_findBack = ($this, $stringIndex, $lastIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_first = ($this, $set) => {
    return $this.$kid.$first($set);
},
jur_SingleSet_processBackRefReplacement = $this => {
    let $set;
    $set = jur_BackReferencedSingleSet__init_0($this);
    $this.$next5 = $set;
    return $set;
},
jur_SingleSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    if ($this.$kid !== null && !$this.$kid.$isSecondPassVisited) {
        $set = $this.$kid.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
},
jtf_SignStyle = $rt_classWithoutFields(jl_Enum),
jtf_SignStyle_NORMAL = null,
jtf_SignStyle_ALWAYS = null,
jtf_SignStyle_NEVER = null,
jtf_SignStyle_NOT_NEGATIVE = null,
jtf_SignStyle_EXCEEDS_PAD = null,
jtf_SignStyle_$VALUES = null,
jtf_SignStyle_$callClinit = () => {
    jtf_SignStyle_$callClinit = $rt_eraseClinit(jtf_SignStyle);
    jtf_SignStyle__clinit_();
},
jtf_SignStyle_values = () => {
    jtf_SignStyle_$callClinit();
    return jtf_SignStyle_$VALUES.$clone0();
},
jtf_SignStyle__init_0 = ($this, var$1, var$2) => {
    jtf_SignStyle_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jtf_SignStyle__init_ = (var_0, var_1) => {
    let var_2 = new jtf_SignStyle();
    jtf_SignStyle__init_0(var_2, var_0, var_1);
    return var_2;
},
jtf_SignStyle_parse = ($this, $positive, $strict, $fixedWidth) => {
    a: {
        switch (jl_Enum_ordinal($this)) {
            case 0:
                return $positive && $strict ? 0 : 1;
            case 1:
            case 4:
                break;
            case 2:
            case 3:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return !$strict && !$fixedWidth ? 1 : 0;
},
jtf_SignStyle_$values = () => {
    let var$1, var$2;
    jtf_SignStyle_$callClinit();
    var$1 = $rt_createArray(jtf_SignStyle, 5);
    var$2 = var$1.data;
    var$2[0] = jtf_SignStyle_NORMAL;
    var$2[1] = jtf_SignStyle_ALWAYS;
    var$2[2] = jtf_SignStyle_NEVER;
    var$2[3] = jtf_SignStyle_NOT_NEGATIVE;
    var$2[4] = jtf_SignStyle_EXCEEDS_PAD;
    return var$1;
},
jtf_SignStyle__clinit_ = () => {
    jtf_SignStyle_NORMAL = jtf_SignStyle__init_($rt_s(1035), 0);
    jtf_SignStyle_ALWAYS = jtf_SignStyle__init_($rt_s(1036), 1);
    jtf_SignStyle_NEVER = jtf_SignStyle__init_($rt_s(1037), 2);
    jtf_SignStyle_NOT_NEGATIVE = jtf_SignStyle__init_($rt_s(1038), 3);
    jtf_SignStyle_EXCEEDS_PAD = jtf_SignStyle__init_($rt_s(1039), 4);
    jtf_SignStyle_$VALUES = jtf_SignStyle_$values();
};
function ju_Comparator$thenComparingLong$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_0188 = null;
    a.$_192 = null;
}
let ju_Comparator$thenComparingLong$lambda$_6_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0188 = var$1;
    var$0.$_192 = var$2;
},
ju_Comparator$thenComparingLong$lambda$_6_0__init_0 = (var_0, var_1) => {
    let var_2 = new ju_Comparator$thenComparingLong$lambda$_6_0();
    ju_Comparator$thenComparingLong$lambda$_6_0__init_(var_2, var_0, var_1);
    return var_2;
};
function jl_Thread() {
    let a = this; jl_Object.call(a);
    a.$id10 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$name11 = null;
    a.$alive = 0;
    a.$target = null;
}
let jl_Thread_mainThread = null,
jl_Thread_currentThread0 = null,
jl_Thread_nextId = 0,
jl_Thread_activeCount = 0,
jl_Thread_defaultUncaughtExceptionHandler = null,
jl_Thread_$callClinit = () => {
    jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
    jl_Thread__clinit_();
},
jl_Thread__init_0 = ($this, $name) => {
    jl_Thread_$callClinit();
    jl_Thread__init_($this, null, $name);
},
jl_Thread__init_1 = var_0 => {
    let var_1 = new jl_Thread();
    jl_Thread__init_0(var_1, var_0);
    return var_1;
},
jl_Thread__init_ = ($this, $target, $name) => {
    let var$3;
    jl_Thread_$callClinit();
    jl_Object__init_($this);
    $this.$finishedLock = jl_Object__init_0();
    $this.$alive = 1;
    $this.$name11 = $name;
    $this.$target = $target;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    $this.$id10 = Long_fromInt(var$3);
},
jl_Thread__init_2 = (var_0, var_1) => {
    let var_2 = new jl_Thread();
    jl_Thread__init_(var_2, var_0, var_1);
    return var_2;
},
jl_Thread_setCurrentThread = $thread_0 => {
    jl_Thread_$callClinit();
    if (jl_Thread_currentThread0 !== $thread_0)
        jl_Thread_currentThread0 = $thread_0;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
},
jl_Thread_currentThread = () => {
    jl_Thread_$callClinit();
    return jl_Thread_currentThread0;
},
jl_Thread_getId = $this => {
    return $this.$id10;
},
jl_Thread__clinit_ = () => {
    jl_Thread_mainThread = jl_Thread__init_1($rt_s(1040));
    jl_Thread_currentThread0 = jl_Thread_mainThread;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = jl_DefaultUncaughtExceptionHandler__init_0();
};
function onn_NostrRelayInfo$get$lambda$_1_0() {
    let a = this; jl_Object.call(a);
    a.$_0153 = null;
    a.$_177 = null;
}
let onn_NostrRelayInfo$get$lambda$_1_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0153 = var$1;
    var$0.$_177 = var$2;
},
onn_NostrRelayInfo$get$lambda$_1_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelayInfo$get$lambda$_1_0();
    onn_NostrRelayInfo$get$lambda$_1_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelayInfo$get$lambda$_1_0_apply0 = (var$0, var$1) => {
    return onn_NostrRelayInfo$get$lambda$_1_0_apply(var$0, var$1);
},
onn_NostrRelayInfo$get$lambda$_1_0_apply = (var$0, var$1) => {
    return onn_NostrRelayInfo_lambda$get$0(var$0.$_0153, var$0.$_177, var$1);
},
jus_Collector = $rt_classWithoutFields(0),
jus_Collector_of = ($supplier, $accumulator, $combiner, $finisher, $characteristics) => {
    let $characteristicsSet;
    $characteristicsSet = ju_EnumSet_noneOf($rt_cls(jus_Collector$Characteristics));
    $characteristicsSet.$addAll(ju_Arrays_asList($characteristics));
    return jus_CollectorImpl__init_0($supplier, $accumulator, $combiner, $finisher, $characteristicsSet);
};
function jtz_ZoneOffsetTransitionRule() {
    let a = this; jl_Object.call(a);
    a.$month0 = null;
    a.$dom = 0;
    a.$dow = null;
    a.$time2 = null;
    a.$adjustDays = 0;
    a.$timeDefinition = null;
    a.$standardOffset = null;
    a.$offsetBefore = null;
    a.$offsetAfter = null;
}
let jtz_ZoneOffsetTransitionRule_of = ($month, $dayOfMonthIndicator, $dayOfWeek, $time, $timeEndOfDay, $timeDefnition, $standardOffset, $offsetBefore, $offsetAfter) => {
    ju_Objects_requireNonNull($month, $rt_s(342));
    ju_Objects_requireNonNull($time, $rt_s(54));
    ju_Objects_requireNonNull($timeDefnition, $rt_s(1041));
    ju_Objects_requireNonNull($standardOffset, $rt_s(1042));
    ju_Objects_requireNonNull($offsetBefore, $rt_s(477));
    ju_Objects_requireNonNull($offsetAfter, $rt_s(478));
    if ($dayOfMonthIndicator >= (-28) && $dayOfMonthIndicator <= 31 && $dayOfMonthIndicator) {
        if ($timeEndOfDay) {
            jt_LocalTime_$callClinit();
            if (!jt_LocalTime_equals($time, jt_LocalTime_MIDNIGHT))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(1043)));
        }
        return jtz_ZoneOffsetTransitionRule__init_0($month, $dayOfMonthIndicator, $dayOfWeek, $time, !$timeEndOfDay ? 0 : 1, $timeDefnition, $standardOffset, $offsetBefore, $offsetAfter);
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1044)));
},
jtz_ZoneOffsetTransitionRule__init_ = ($this, $month, $dayOfMonthIndicator, $dayOfWeek, $time, $adjustDays, $timeDefnition, $standardOffset, $offsetBefore, $offsetAfter) => {
    jl_Object__init_($this);
    $this.$month0 = $month;
    $this.$dom = $dayOfMonthIndicator << 24 >> 24;
    $this.$dow = $dayOfWeek;
    $this.$time2 = $time;
    $this.$adjustDays = $adjustDays;
    $this.$timeDefinition = $timeDefnition;
    $this.$standardOffset = $standardOffset;
    $this.$offsetBefore = $offsetBefore;
    $this.$offsetAfter = $offsetAfter;
},
jtz_ZoneOffsetTransitionRule__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) => {
    let var_9 = new jtz_ZoneOffsetTransitionRule();
    jtz_ZoneOffsetTransitionRule__init_(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
},
jtz_ZoneOffsetTransitionRule_createTransition = ($this, $year) => {
    let $date, var$3, var$4, $localDT, $transition;
    if ($this.$dom >= 0) {
        $date = jt_LocalDate_of0($year, $this.$month0, $this.$dom);
        if ($this.$dow !== null)
            $date = jt_LocalDate_with0($date, jtt_TemporalAdjusters_nextOrSame($this.$dow));
    } else {
        var$3 = $this.$month0;
        var$4 = $this.$month0;
        jtc_IsoChronology_$callClinit();
        $date = jt_LocalDate_of0($year, var$3, (jt_Month_length(var$4, jtc_IsoChronology_isLeapYear(jtc_IsoChronology_INSTANCE, Long_fromInt($year))) + 1 | 0) + $this.$dom | 0);
        if ($this.$dow !== null)
            $date = jt_LocalDate_with0($date, jtt_TemporalAdjusters_previousOrSame($this.$dow));
    }
    $localDT = jt_LocalDateTime_of(jt_LocalDate_plusDays($date, Long_fromInt($this.$adjustDays)), $this.$time2);
    $transition = jtz_ZoneOffsetTransitionRule$TimeDefinition_createDateTime($this.$timeDefinition, $localDT, $this.$standardOffset, $this.$offsetBefore);
    return jtz_ZoneOffsetTransition__init_($transition, $this.$offsetBefore, $this.$offsetAfter);
},
jtz_ZoneOffsetTransitionRule_equals = ($this, $otherRule) => {
    let $other, var$3, var$4, var$5;
    if ($otherRule === $this)
        return 1;
    if (!($otherRule instanceof jtz_ZoneOffsetTransitionRule))
        return 0;
    a: {
        b: {
            $other = $otherRule;
            if ($this.$month0 !== $other.$month0)
                break b;
            if ($this.$dom != $other.$dom)
                break b;
            if ($this.$dow !== $other.$dow)
                break b;
            if ($this.$timeDefinition !== $other.$timeDefinition)
                break b;
            if ($this.$adjustDays != $other.$adjustDays)
                break b;
            var$3 = $this.$time2;
            var$4 = $other.$time2;
            if (!jt_LocalTime_equals(var$3, var$4))
                break b;
            var$3 = $this.$standardOffset;
            var$4 = $other.$standardOffset;
            if (!jt_ZoneOffset_equals(var$3, var$4))
                break b;
            var$3 = $this.$offsetBefore;
            var$4 = $other.$offsetBefore;
            if (!jt_ZoneOffset_equals(var$3, var$4))
                break b;
            var$3 = $this.$offsetAfter;
            var$4 = $other.$offsetAfter;
            if (jt_ZoneOffset_equals(var$3, var$4)) {
                var$5 = 1;
                break a;
            }
        }
        var$5 = 0;
    }
    return var$5;
},
jtz_ZoneOffsetTransitionRule_hashCode = $this => {
    let var$1, var$2, var$3, $hash;
    var$1 = (jt_LocalTime_toSecondOfDay($this.$time2) + $this.$adjustDays | 0) << 15;
    var$2 = $this.$month0;
    var$3 = (var$1 + (jl_Enum_ordinal(var$2) << 11) | 0) + (($this.$dom + 32 | 0) << 5) | 0;
    $hash = (var$3 + (($this.$dow === null ? 7 : jl_Enum_ordinal($this.$dow)) << 2) | 0) + jl_Enum_ordinal($this.$timeDefinition) | 0;
    return $hash ^ jt_ZoneOffset_hashCode($this.$standardOffset) ^ jt_ZoneOffset_hashCode($this.$offsetBefore) ^ jt_ZoneOffset_hashCode($this.$offsetAfter);
},
jtz_ZoneOffsetTransitionRule_toString = $this => {
    let $buf, var$2, var$3, $timeOfDaysMins;
    $buf = jl_StringBuilder__init_();
    var$2 = $buf.$append1($rt_s(1045));
    var$2 = var$2.$append1(jt_ZoneOffset_compareTo($this.$offsetBefore, $this.$offsetAfter) <= 0 ? $rt_s(1046) : $rt_s(1047));
    var$3 = $this.$offsetBefore;
    (((var$2.$append(var$3)).$append1($rt_s(316))).$append($this.$offsetAfter)).$append1($rt_s(12));
    if ($this.$dow === null)
        (($buf.$append1(jl_Enum_name($this.$month0))).$append0(32)).$append3($this.$dom);
    else if ($this.$dom == (-1))
        (($buf.$append1(jl_Enum_name($this.$dow))).$append1($rt_s(1048))).$append1(jl_Enum_name($this.$month0));
    else if ($this.$dom >= 0)
        (((($buf.$append1(jl_Enum_name($this.$dow))).$append1($rt_s(1049))).$append1(jl_Enum_name($this.$month0))).$append0(32)).$append3($this.$dom);
    else {
        var$2 = (($buf.$append1(jl_Enum_name($this.$dow))).$append1($rt_s(1050))).$append3(( -$this.$dom | 0) - 1 | 0);
        (var$2.$append1($rt_s(1051))).$append1(jl_Enum_name($this.$month0));
    }
    $buf.$append1($rt_s(484));
    if (!$this.$adjustDays)
        $buf.$append($this.$time2);
    else {
        $timeOfDaysMins = Long_fromInt((jt_LocalTime_toSecondOfDay($this.$time2) / 60 | 0) + (($this.$adjustDays * 24 | 0) * 60 | 0) | 0);
        jtz_ZoneOffsetTransitionRule_appendZeroPad($this, $buf, jl_Math_floorDiv($timeOfDaysMins, 60));
        $buf.$append0(58);
        jtz_ZoneOffsetTransitionRule_appendZeroPad($this, $buf, Long_fromInt(jl_Math_floorMod($timeOfDaysMins, 60)));
    }
    var$2 = ($buf.$append1($rt_s(48))).$append($this.$timeDefinition);
    var$2 = (var$2.$append1($rt_s(1052))).$append($this.$standardOffset);
    var$2.$append0(93);
    return $buf.$toString();
},
jtz_ZoneOffsetTransitionRule_appendZeroPad = ($this, $sb, $number) => {
    if (Long_lt($number, Long_fromInt(10)))
        $sb.$append3(0);
    $sb.$append13($number);
},
jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferOverflowException__init_ = $this => {
    jl_RuntimeException__init_($this);
},
jnc_BufferOverflowException__init_0 = () => {
    let var_0 = new jnc_BufferOverflowException();
    jnc_BufferOverflowException__init_(var_0);
    return var_0;
},
jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet),
jur_BackReferencedSingleSet__init_ = ($this, $node) => {
    jur_SingleSet__init_($this, $node.$kid, $node.$fSet);
},
jur_BackReferencedSingleSet__init_0 = var_0 => {
    let var_1 = new jur_BackReferencedSingleSet();
    jur_BackReferencedSingleSet__init_(var_1, var_0);
    return var_1;
},
jur_BackReferencedSingleSet_find = ($this, $startSearch, $testString, $matchResult) => {
    let $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex);
            $matchResult.$setStart($this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex);
            $matchResult.$setStart($this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_processBackRefReplacement = $this => {
    return null;
},
otp_PlatformQueue = $rt_classWithoutFields(),
otp_PlatformQueue_wrap = $obj => {
    return $obj;
},
otp_PlatformQueue_isEmpty$static = $this => {
    return $this.length ? 0 : 1;
},
otp_PlatformQueue_add$static = ($this, $e) => {
    let var$3;
    var$3 = otp_PlatformQueue_wrap($e);
    $this.push(var$3);
},
otp_PlatformQueue_remove$static = $this => {
    return otji_JSWrapper_maybeWrap($this.shift());
},
jni_XHRStreamHandler = $rt_classWithoutFields(jn_URLStreamHandler),
jni_XHRStreamHandler__init_ = $this => {
    jn_URLStreamHandler__init_($this);
},
jni_XHRStreamHandler__init_0 = () => {
    let var_0 = new jni_XHRStreamHandler();
    jni_XHRStreamHandler__init_(var_0);
    return var_0;
};
function onns_NostrKeyPairSigner$encrypt$lambda$_3_0() {
    jl_Object.call(this);
    this.$_092 = null;
}
let onns_NostrKeyPairSigner$encrypt$lambda$_3_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_092 = var$1;
},
onns_NostrKeyPairSigner$encrypt$lambda$_3_0__init_0 = var_0 => {
    let var_1 = new onns_NostrKeyPairSigner$encrypt$lambda$_3_0();
    onns_NostrKeyPairSigner$encrypt$lambda$_3_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrKeyPairSigner$encrypt$lambda$_3_0_apply0 = (var$0, var$1) => {
    return onns_NostrKeyPairSigner$encrypt$lambda$_3_0_apply(var$0, var$1);
},
onns_NostrKeyPairSigner$encrypt$lambda$_3_0_apply = (var$0, var$1) => {
    return onns_NostrKeyPairSigner_lambda$encrypt$1(var$0.$_092, var$1);
},
onns_NostrKeyPairSigner$encrypt$lambda$_3_1 = $rt_classWithoutFields(),
onns_NostrKeyPairSigner$encrypt$lambda$_3_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onns_NostrKeyPairSigner$encrypt$lambda$_3_1__init_0 = () => {
    let var_0 = new onns_NostrKeyPairSigner$encrypt$lambda$_3_1();
    onns_NostrKeyPairSigner$encrypt$lambda$_3_1__init_(var_0);
    return var_0;
},
onns_NostrKeyPairSigner$encrypt$lambda$_3_1_apply0 = (var$0, var$1) => {
    return onns_NostrKeyPairSigner$encrypt$lambda$_3_1_apply(var$0, var$1);
},
onns_NostrKeyPairSigner$encrypt$lambda$_3_1_apply = (var$0, var$1) => {
    return onns_NostrKeyPairSigner_lambda$encrypt$2(var$1);
};
function onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3() {
    jl_Object.call(this);
    this.$_0123 = null;
}
let onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0123 = var$1;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3();
    onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionMessage$32(var$0.$_0123);
};
function onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2() {
    jl_Object.call(this);
    this.$_0117 = null;
}
let onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0117 = var$1;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2();
    onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionMessage$30(var$0.$_0117);
};
function onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1() {
    jl_Object.call(this);
    this.$_053 = null;
}
let onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_053 = var$1;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1();
    onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionMessage$31(var$0.$_053);
},
otciu_CLDRHelper = $rt_classWithoutFields(),
otciu_CLDRHelper_$$metadata$$0 = null,
otciu_CLDRHelper_$$metadata$$10 = null,
otciu_CLDRHelper_$$metadata$$12 = null,
otciu_CLDRHelper_$$metadata$$13 = null,
otciu_CLDRHelper_getLikelySubtags = $localeCode => {
    let $map;
    $map = otciu_CLDRHelper_getLikelySubtagsMap();
    if ($map.hasOwnProperty($rt_ustr($localeCode)))
        $localeCode = ($map[$rt_ustr($localeCode)].value !== null ? $rt_str($map[$rt_ustr($localeCode)].value) : null);
    return $localeCode;
},
otciu_CLDRHelper_resolveCountry = ($language, $country) => {
    let $subtags, $index;
    if ($country.$isEmpty()) {
        $subtags = otciu_CLDRHelper_getLikelySubtags($language);
        $index = $subtags.$lastIndexOf(95);
        $country = $index <= 0 ? $rt_s(23) : $subtags.$substring0($index + 1 | 0);
    }
    return $country;
},
otciu_CLDRHelper_getLikelySubtagsMap = () => {
    if (otciu_CLDRHelper_$$metadata$$0 === null)
        otciu_CLDRHelper_$$metadata$$0 = otciu_CLDRHelper_getLikelySubtagsMap$$create();
    return otciu_CLDRHelper_$$metadata$$0;
},
otciu_CLDRHelper_getDefaultLocale = () => {
    if (otciu_CLDRHelper_$$metadata$$10 === null)
        otciu_CLDRHelper_$$metadata$$10 = otciu_CLDRHelper_getDefaultLocale$$create();
    return otciu_CLDRHelper_$$metadata$$10;
},
otciu_CLDRHelper_getMinimalDaysInFirstWeek = () => {
    if (otciu_CLDRHelper_$$metadata$$12 === null)
        otciu_CLDRHelper_$$metadata$$12 = otciu_CLDRHelper_getMinimalDaysInFirstWeek$$create();
    return otciu_CLDRHelper_$$metadata$$12;
},
otciu_CLDRHelper_getFirstDayOfWeek = () => {
    if (otciu_CLDRHelper_$$metadata$$13 === null)
        otciu_CLDRHelper_$$metadata$$13 = otciu_CLDRHelper_getFirstDayOfWeek$$create();
    return otciu_CLDRHelper_$$metadata$$13;
},
otciu_CLDRHelper_getLikelySubtagsMap$$create = () => {
    return {"ksh": {"value" : "ksh-Latn-DE"}, "ksj": {"value" : "ksj-Latn-ZZ"}, "tdu": {"value" : "tdu-Latn-MY"}, "cch": {"value" : "cch-Latn-NG"}, "und-Khar": {"value" : "pra-Khar-PK"}, "gkn": {"value" : "gkn-Latn-ZZ"}, "ksr": {"value" : "ksr-Latn-ZZ"}, "und-Mani": {"value" : "xmn-Mani-CN"}, "gkp": {"value" : "gkp-Latn-ZZ"}, "xmf": {"value" : "xmf-Geor-GE"}, "ccp": {"value" : "ccp-Cakm-BD"}, "ted": {"value" : "ted-Latn-ZZ"}, "und-Mand": {"value" : "myz-Mand-IR"}, "ktb": {"value" : "ktb-Ethi-ZZ"}, "xmn": {"value"
    : "xmn-Mani-CN"}, "sd-Sind": {"value" : "sd-Sind-IN"}, "xmr": {"value" : "xmr-Merc-SD"}, "tem": {"value" : "tem-Latn-SL"}, "und-Mroo": {"value" : "mro-Mroo-BD"}, "teo": {"value" : "teo-Latn-UG"}, "tet": {"value" : "tet-Latn-TL"}, "ktm": {"value" : "ktm-Latn-ZZ"}, "glk": {"value" : "glk-Arab-IR"}, "kto": {"value" : "kto-Latn-ZZ"}, "ktr": {"value" : "ktr-Latn-MY"}, "und-Soyo": {"value" : "cmg-Soyo-MN"}, "xna": {"value" : "xna-Narb-SA"}, "tfi": {"value" : "tfi-Latn-ZZ"}, "kub": {"value" : "kub-Latn-ZZ"}, "kue":
    {"value" : "kue-Latn-ZZ"}, "kud": {"value" : "kud-Latn-ZZ"}, "xnr": {"value" : "xnr-Deva-IN"}, "ceb": {"value" : "ceb-Latn-PH"}, "kuj": {"value" : "kuj-Latn-ZZ"}, "kum": {"value" : "kum-Cyrl-RU"}, "kun": {"value" : "kun-Latn-ZZ"}, "gmm": {"value" : "gmm-Latn-ZZ"}, "kup": {"value" : "kup-Latn-ZZ"}, "kus": {"value" : "kus-Latn-ZZ"}, "gmv": {"value" : "gmv-Ethi-ZZ"}, "tgc": {"value" : "tgc-Latn-ZZ"}, "xog": {"value" : "xog-Latn-UG"}, "und-Arab-YT": {"value" : "swb-Arab-YT"}, "und-Latn-ET": {"value" : "en-Latn-ET"}
    , "xon": {"value" : "xon-Latn-ZZ"}, "ha-CM": {"value" : "ha-Arab-CM"}, "gnd": {"value" : "gnd-Latn-ZZ"}, "kvg": {"value" : "kvg-Latn-ZZ"}, "tgo": {"value" : "tgo-Latn-ZZ"}, "cfa": {"value" : "cfa-Latn-ZZ"}, "gng": {"value" : "gng-Latn-ZZ"}, "tgu": {"value" : "tgu-Latn-ZZ"}, "und-Latn-GE": {"value" : "ku-Latn-GE"}, "kvr": {"value" : "kvr-Latn-ID"}, "kvx": {"value" : "kvx-Arab-PK"}, "und-Gujr": {"value" : "gu-Gujr-IN"}, "thl": {"value" : "thl-Deva-NP"}, "xpr": {"value" : "xpr-Prti-IR"}, "thq": {"value" : "thq-Deva-NP"}
    , "god": {"value" : "god-Latn-ZZ"}, "gof": {"value" : "gof-Ethi-ZZ"}, "kwj": {"value" : "kwj-Latn-ZZ"}, "ky-Arab": {"value" : "ky-Arab-CN"}, "thr": {"value" : "thr-Deva-NP"}, "goi": {"value" : "goi-Latn-ZZ"}, "cgg": {"value" : "cgg-Latn-UG"}, "kwo": {"value" : "kwo-Latn-ZZ"}, "gom": {"value" : "gom-Deva-IN"}, "kwq": {"value" : "kwq-Latn-ZZ"}, "gon": {"value" : "gon-Telu-IN"}, "gos": {"value" : "gos-Latn-NL"}, "gor": {"value" : "gor-Latn-ID"}, "und-Latn-CY": {"value" : "tr-Latn-CY"}, "got": {"value" : "got-Goth-UA"}
    , "tif": {"value" : "tif-Latn-ZZ"}, "tig": {"value" : "tig-Ethi-ER"}, "kxa": {"value" : "kxa-Latn-ZZ"}, "kxc": {"value" : "kxc-Ethi-ZZ"}, "pag": {"value" : "pag-Latn-PH"}, "tik": {"value" : "tik-Latn-ZZ"}, "kxe": {"value" : "kxe-Latn-ZZ"}, "tim": {"value" : "tim-Latn-ZZ"}, "pal": {"value" : "pal-Phli-IR"}, "tio": {"value" : "tio-Latn-ZZ"}, "pam": {"value" : "pam-Latn-PH"}, "und-Marc": {"value" : "bo-Marc-CN"}, "pap": {"value" : "pap-Latn-AW"}, "und-Latn-CN": {"value" : "za-Latn-CN"}, "tiv": {"value" : "tiv-Latn-NG"}
    , "kxm": {"value" : "kxm-Thai-TH"}, "kxp": {"value" : "kxp-Arab-PK"}, "pau": {"value" : "pau-Latn-PW"}, "chk": {"value" : "chk-Latn-FM"}, "chm": {"value" : "chm-Cyrl-RU"}, "xrb": {"value" : "xrb-Latn-ZZ"}, "chp": {"value" : "chp-Latn-CA"}, "cho": {"value" : "cho-Latn-US"}, "kxw": {"value" : "kxw-Latn-ZZ"}, "und-Latn-DZ": {"value" : "fr-Latn-DZ"}, "chr": {"value" : "chr-Cher-US"}, "kxz": {"value" : "kxz-Latn-ZZ"}, "und-Batk": {"value" : "bbc-Batk-ID"}, "und-Bass": {"value" : "bsq-Bass-LR"}, "kye": {"value"
    : "kye-Latn-ZZ"}, "pbi": {"value" : "pbi-Latn-ZZ"}, "und-Deva-MU": {"value" : "bho-Deva-MU"}, "cic": {"value" : "cic-Latn-US"}, "und-Sgnw": {"value" : "ase-Sgnw-US"}, "xsa": {"value" : "xsa-Sarb-YE"}, "kyx": {"value" : "kyx-Latn-ZZ"}, "xsi": {"value" : "xsi-Latn-ZZ"}, "pcd": {"value" : "pcd-Latn-FR"}, "und-Latn-AM": {"value" : "ku-Latn-AM"}, "xsm": {"value" : "xsm-Latn-ZZ"}, "tkl": {"value" : "tkl-Latn-TK"}, "und-Thai-CN": {"value" : "lcp-Thai-CN"}, "grb": {"value" : "grb-Latn-ZZ"}, "xsr": {"value" : "xsr-Deva-NP"}
    , "und-Latn-AF": {"value" : "tk-Latn-AF"}, "grc": {"value" : "grc-Cprt-CY"}, "kzj": {"value" : "kzj-Latn-MY"}, "tkr": {"value" : "tkr-Latn-AZ"}, "cja": {"value" : "cja-Arab-KH"}, "pcm": {"value" : "pcm-Latn-NG"}, "tkt": {"value" : "tkt-Deva-NP"}, "und-Olck": {"value" : "sat-Olck-IN"}, "kzr": {"value" : "kzr-Latn-ZZ"}, "kzt": {"value" : "kzt-Latn-MY"}, "cjm": {"value" : "cjm-Cham-VN"}, "grt": {"value" : "grt-Beng-IN"}, "und-Arab-TJ": {"value" : "fa-Arab-TJ"}, "und-Arab-TG": {"value" : "apd-Arab-TG"}, "und-Arab-TH":
    {"value" : "mfa-Arab-TH"}, "und-Deva-PK": {"value" : "btv-Deva-PK"}, "grw": {"value" : "grw-Latn-ZZ"}, "cjv": {"value" : "cjv-Latn-ZZ"}, "pdc": {"value" : "pdc-Latn-US"}, "tlf": {"value" : "tlf-Latn-ZZ"}, "und-Arab-TR": {"value" : "az-Arab-TR"}, "ckb": {"value" : "ckb-Arab-IQ"}, "tly": {"value" : "tly-Latn-AZ"}, "pdt": {"value" : "pdt-Latn-CA"}, "tlx": {"value" : "tlx-Latn-ZZ"}, "ckl": {"value" : "ckl-Latn-ZZ"}, "cko": {"value" : "cko-Latn-ZZ"}, "gsw": {"value" : "gsw-Latn-CH"}, "ped": {"value" : "ped-Latn-ZZ"}
    , "tmh": {"value" : "tmh-Latn-NE"}, "cky": {"value" : "cky-Latn-ZZ"}, "kk-Arab": {"value" : "kk-Arab-CN"}, "und-Runr": {"value" : "non-Runr-SE"}, "cla": {"value" : "cla-Latn-ZZ"}, "peo": {"value" : "peo-Xpeo-IR"}, "tmy": {"value" : "tmy-Latn-ZZ"}, "pex": {"value" : "pex-Latn-ZZ"}, "ky-TR": {"value" : "ky-Latn-TR"}, "tnh": {"value" : "tnh-Latn-ZZ"}, "guc": {"value" : "guc-Latn-CO"}, "gub": {"value" : "gub-Latn-BR"}, "gud": {"value" : "gud-Latn-ZZ"}, "pfl": {"value" : "pfl-Latn-DE"}, "cme": {"value" : "cme-Latn-ZZ"}
    , "cmg": {"value" : "cmg-Soyo-MN"}, "gur": {"value" : "gur-Latn-GH"}, "xwe": {"value" : "xwe-Latn-ZZ"}, "guw": {"value" : "guw-Latn-ZZ"}, "tof": {"value" : "tof-Latn-ZZ"}, "gux": {"value" : "gux-Latn-ZZ"}, "guz": {"value" : "guz-Latn-KE"}, "tog": {"value" : "tog-Latn-MW"}, "gvf": {"value" : "gvf-Latn-ZZ"}, "toq": {"value" : "toq-Latn-ZZ"}, "gvr": {"value" : "gvr-Deva-NP"}, "und-Guru": {"value" : "pa-Guru-IN"}, "gvs": {"value" : "gvs-Latn-ZZ"}, "tpi": {"value" : "tpi-Latn-PG"}, "tpm": {"value" : "tpm-Latn-ZZ"}
    , "und-Tfng": {"value" : "zgh-Tfng-MA"}, "gwc": {"value" : "gwc-Arab-ZZ"}, "und-Arab-PK": {"value" : "ur-Arab-PK"}, "phl": {"value" : "phl-Arab-ZZ"}, "und-Aghb": {"value" : "lez-Aghb-RU"}, "phn": {"value" : "phn-Phnx-LB"}, "gwi": {"value" : "gwi-Latn-CA"}, "tpz": {"value" : "tpz-Latn-ZZ"}, "cop": {"value" : "cop-Copt-EG"}, "gwt": {"value" : "gwt-Arab-ZZ"}, "lab": {"value" : "lab-Lina-GR"}, "lad": {"value" : "lad-Hebr-IL"}, "lah": {"value" : "lah-Arab-PK"}, "pil": {"value" : "pil-Latn-ZZ"}, "lag": {"value"
    : "lag-Latn-TZ"}, "tqo": {"value" : "tqo-Latn-ZZ"}, "laj": {"value" : "laj-Latn-UG"}, "pip": {"value" : "pip-Latn-ZZ"}, "und-Khmr": {"value" : "km-Khmr-KH"}, "las": {"value" : "las-Latn-ZZ"}, "sd-Deva": {"value" : "sd-Deva-IN"}, "und-Khoj": {"value" : "sd-Khoj-IN"}, "cps": {"value" : "cps-Latn-PH"}, "kk-AF": {"value" : "kk-Arab-AF"}, "und-Arab-MU": {"value" : "ur-Arab-MU"}, "lbe": {"value" : "lbe-Cyrl-RU"}, "und-Arab-NG": {"value" : "ha-Arab-NG"}, "gyi": {"value" : "gyi-Latn-ZZ"}, "tru": {"value" : "tru-Latn-TR"}
    , "trw": {"value" : "trw-Arab-ZZ"}, "trv": {"value" : "trv-Latn-TW"}, "lbu": {"value" : "lbu-Latn-ZZ"}, "lbw": {"value" : "lbw-Latn-ID"}, "tsd": {"value" : "tsd-Grek-GR"}, "tsf": {"value" : "tsf-Deva-NP"}, "pka": {"value" : "pka-Brah-IN"}, "tsg": {"value" : "tsg-Latn-PH"}, "tsj": {"value" : "tsj-Tibt-BT"}, "und-Deva-FJ": {"value" : "hif-Deva-FJ"}, "pko": {"value" : "pko-Latn-KE"}, "lcm": {"value" : "lcm-Latn-ZZ"}, "crh": {"value" : "crh-Cyrl-UA"}, "lcp": {"value" : "lcp-Thai-CN"}, "tsw": {"value" : "tsw-Latn-ZZ"}
    , "crj": {"value" : "crj-Cans-CA"}, "crl": {"value" : "crl-Cans-CA"}, "und-Arab-MN": {"value" : "kk-Arab-MN"}, "crk": {"value" : "crk-Cans-CA"}, "crm": {"value" : "crm-Cans-CA"}, "und-Arab-MM": {"value" : "rhg-Arab-MM"}, "pla": {"value" : "pla-Latn-ZZ"}, "tte": {"value" : "tte-Latn-ZZ"}, "crs": {"value" : "crs-Latn-SC"}, "ttd": {"value" : "ttd-Latn-ZZ"}, "ldb": {"value" : "ldb-Latn-ZZ"}, "ttj": {"value" : "ttj-Latn-UG"}, "kk-CN": {"value" : "kk-Arab-CN"}, "und-Yiii": {"value" : "ii-Yiii-CN"}, "tts": {"value"
    : "tts-Thai-TH"}, "csb": {"value" : "csb-Latn-PL"}, "ttr": {"value" : "ttr-Latn-ZZ"}, "ttt": {"value" : "ttt-Latn-AZ"}, "csw": {"value" : "csw-Cans-CA"}, "tuh": {"value" : "tuh-Latn-ZZ"}, "led": {"value" : "led-Latn-ZZ"}, "tul": {"value" : "tul-Latn-ZZ"}, "lee": {"value" : "lee-Latn-ZZ"}, "tum": {"value" : "tum-Latn-MW"}, "und-Arab-KH": {"value" : "cja-Arab-KH"}, "tuq": {"value" : "tuq-Latn-ZZ"}, "ctd": {"value" : "ctd-Pauc-MM"}, "lem": {"value" : "lem-Latn-ZZ"}, "lep": {"value" : "lep-Lepc-IN"}, "pms":
    {"value" : "pms-Latn-IT"}, "leq": {"value" : "leq-Latn-ZZ"}, "und-Pauc": {"value" : "ctd-Pauc-MM"}, "und-Sogo": {"value" : "sog-Sogo-UZ"}, "leu": {"value" : "leu-Latn-ZZ"}, "lez": {"value" : "lez-Cyrl-RU"}, "tvd": {"value" : "tvd-Latn-ZZ"}, "mn-CN": {"value" : "mn-Mong-CN"}, "sr-TR": {"value" : "sr-Latn-TR"}, "png": {"value" : "png-Latn-ZZ"}, "tvl": {"value" : "tvl-Latn-TV"}, "und-Brah": {"value" : "pka-Brah-IN"}, "und-Brai": {"value" : "fr-Brai-FR"}, "pnn": {"value" : "pnn-Latn-ZZ"}, "tvu": {"value" : "tvu-Latn-ZZ"}
    , "pnt": {"value" : "pnt-Grek-GR"}, "uz-CN": {"value" : "uz-Cyrl-CN"}, "ha-SD": {"value" : "ha-Arab-SD"}, "twh": {"value" : "twh-Latn-ZZ"}, "und-Takr": {"value" : "doi-Takr-IN"}, "lgg": {"value" : "lgg-Latn-ZZ"}, "pon": {"value" : "pon-Latn-FM"}, "twq": {"value" : "twq-Latn-NE"}, "und-Arab-ID": {"value" : "ms-Arab-ID"}, "und-Arab-IN": {"value" : "ur-Arab-IN"}, "ppa": {"value" : "ppa-Deva-IN"}, "txg": {"value" : "txg-Tang-CN"}, "yam": {"value" : "yam-Latn-ZZ"}, "und-Talu": {"value" : "khb-Talu-CN"}, "yao":
    {"value" : "yao-Latn-MZ"}, "yap": {"value" : "yap-Latn-FM"}, "yas": {"value" : "yas-Latn-ZZ"}, "yat": {"value" : "yat-Latn-ZZ"}, "ppo": {"value" : "ppo-Latn-ZZ"}, "yav": {"value" : "yav-Latn-CM"}, "yay": {"value" : "yay-Latn-ZZ"}, "yaz": {"value" : "yaz-Latn-ZZ"}, "und-Tale": {"value" : "tdd-Tale-CN"}, "ybb": {"value" : "ybb-Latn-CM"}, "yba": {"value" : "yba-Latn-ZZ"}, "tya": {"value" : "tya-Latn-ZZ"}, "lia": {"value" : "lia-Latn-ZZ"}, "lid": {"value" : "lid-Latn-ZZ"}, "und-Latn-TW": {"value" : "trv-Latn-TW"}
    , "lif": {"value" : "lif-Deva-NP"}, "lih": {"value" : "lih-Latn-ZZ"}, "lig": {"value" : "lig-Latn-ZZ"}, "lij": {"value" : "lij-Latn-IT"}, "hag": {"value" : "hag-Latn-ZZ"}, "und-Latn-TN": {"value" : "fr-Latn-TN"}, "tyv": {"value" : "tyv-Cyrl-RU"}, "yby": {"value" : "yby-Latn-ZZ"}, "und-Arab-GB": {"value" : "ks-Arab-GB"}, "hak": {"value" : "hak-Hans-CN"}, "und-Taml": {"value" : "ta-Taml-IN"}, "ham": {"value" : "ham-Latn-ZZ"}, "lis": {"value" : "lis-Lisu-CN"}, "und-Latn-SY": {"value" : "fr-Latn-SY"}, "ky-Latn":
    {"value" : "ky-Latn-TR"}, "pra": {"value" : "pra-Khar-PK"}, "haw": {"value" : "haw-Latn-US"}, "haz": {"value" : "haz-Arab-AF"}, "ku-LB": {"value" : "ku-Arab-LB"}, "prd": {"value" : "prd-Arab-IR"}, "prg": {"value" : "prg-Latn-001"}, "tzm": {"value" : "tzm-Latn-MA"}, "hbb": {"value" : "hbb-Latn-ZZ"}, "und-Latn-UA": {"value" : "pl-Latn-UA"}, "ljp": {"value" : "ljp-Latn-ID"}, "und-Tang": {"value" : "txg-Tang-CN"}, "yue-Hans": {"value" : "yue-Hans-CN"}, "und-Latn-RU": {"value" : "krl-Latn-RU"}, "lki": {"value"
    : "lki-Arab-IR"}, "pss": {"value" : "pss-Latn-ZZ"}, "lkt": {"value" : "lkt-Latn-US"}, "sr-RO": {"value" : "sr-Latn-RO"}, "und-Arab-CN": {"value" : "ug-Arab-CN"}, "lle": {"value" : "lle-Latn-ZZ"}, "und-Cyrl": {"value" : "ru-Cyrl-RU"}, "uz-AF": {"value" : "uz-Arab-AF"}, "yer": {"value" : "yer-Latn-ZZ"}, "und-Beng": {"value" : "bn-Beng-BD"}, "ptp": {"value" : "ptp-Latn-ZZ"}, "lln": {"value" : "lln-Latn-ZZ"}, "sr-RU": {"value" : "sr-Latn-RU"}, "hdy": {"value" : "hdy-Ethi-ZZ"}, "unr-NP": {"value" : "unr-Deva-NP"}
    , "und-Mend": {"value" : "men-Mend-SL"}, "lmn": {"value" : "lmn-Telu-IN"}, "lmp": {"value" : "lmp-Latn-ZZ"}, "lmo": {"value" : "lmo-Latn-IT"}, "puu": {"value" : "puu-Latn-GA"}, "und-Arab-CC": {"value" : "ms-Arab-CC"}, "pal-Phlp": {"value" : "pal-Phlp-CN"}, "ygr": {"value" : "ygr-Latn-ZZ"}, "ygw": {"value" : "ygw-Latn-ZZ"}, "lns": {"value" : "lns-Latn-ZZ"}, "ky-CN": {"value" : "ky-Arab-CN"}, "lnu": {"value" : "lnu-Latn-ZZ"}, "pwa": {"value" : "pwa-Latn-ZZ"}, "und-Chrs": {"value" : "xco-Chrs-UZ"}, "und-Mahj":
    {"value" : "hi-Mahj-IN"}, "rif-NL": {"value" : "rif-Latn-NL"}, "loj": {"value" : "loj-Latn-ZZ"}, "lol": {"value" : "lol-Latn-CD"}, "lok": {"value" : "lok-Latn-ZZ"}, "lor": {"value" : "lor-Latn-ZZ"}, "und-Sora": {"value" : "srb-Sora-IN"}, "los": {"value" : "los-Latn-ZZ"}, "loz": {"value" : "loz-Latn-ZM"}, "und-202": {"value" : "en-Latn-NG"}, "und-Latn-MR": {"value" : "fr-Latn-MR"}, "ku-Yezi": {"value" : "ku-Yezi-GE"}, "hhy": {"value" : "hhy-Latn-ZZ"}, "hia": {"value" : "hia-Latn-ZZ"}, "hif": {"value" : "hif-Latn-FJ"}
    , "dad": {"value" : "dad-Latn-ZZ"}, "hih": {"value" : "hih-Latn-ZZ"}, "hig": {"value" : "hig-Latn-ZZ"}, "daf": {"value" : "daf-Latn-ZZ"}, "ubu": {"value" : "ubu-Latn-ZZ"}, "dah": {"value" : "dah-Latn-ZZ"}, "hil": {"value" : "hil-Latn-PH"}, "dag": {"value" : "dag-Latn-ZZ"}, "und-Mero": {"value" : "xmr-Mero-SD"}, "dak": {"value" : "dak-Latn-US"}, "und-Merc": {"value" : "xmr-Merc-SD"}, "dar": {"value" : "dar-Cyrl-RU"}, "dav": {"value" : "dav-Latn-KE"}, "lrc": {"value" : "lrc-Arab-IR"}, "yko": {"value" : "yko-Latn-ZZ"}
    , "und-Latn-MK": {"value" : "sq-Latn-MK"}, "und-Latn-MM": {"value" : "kac-Latn-MM"}, "dbd": {"value" : "dbd-Latn-ZZ"}, "und-Latn-MO": {"value" : "pt-Latn-MO"}, "und-Latn-MA": {"value" : "fr-Latn-MA"}, "und-Bali": {"value" : "ban-Bali-ID"}, "und-Tavt": {"value" : "blt-Tavt-VN"}, "dbq": {"value" : "dbq-Latn-ZZ"}, "yle": {"value" : "yle-Latn-ZZ"}, "ylg": {"value" : "ylg-Latn-ZZ"}, "und-Maka": {"value" : "mak-Maka-ID"}, "yll": {"value" : "yll-Latn-ZZ"}, "udm": {"value" : "udm-Cyrl-RU"}, "dcc": {"value" : "dcc-Arab-IN"}
    , "yml": {"value" : "yml-Latn-ZZ"}, "hla": {"value" : "hla-Latn-ZZ"}, "und-Latn-IR": {"value" : "tk-Latn-IR"}, "ltg": {"value" : "ltg-Latn-LV"}, "und-Latn-KM": {"value" : "fr-Latn-KM"}, "ddn": {"value" : "ddn-Latn-ZZ"}, "hlu": {"value" : "hlu-Hluw-TR"}, "lua": {"value" : "lua-Latn-CD"}, "und-Bamu": {"value" : "bax-Bamu-CM"}, "hmd": {"value" : "hmd-Plrd-CN"}, "ded": {"value" : "ded-Latn-ZZ"}, "luo": {"value" : "luo-Latn-KE"}, "und-142": {"value" : "zh-Hans-CN"}, "und-143": {"value" : "uz-Latn-UZ"}, "den":
    {"value" : "den-Latn-CA"}, "und-Gran": {"value" : "sa-Gran-IN"}, "hmt": {"value" : "hmt-Latn-ZZ"}, "uga": {"value" : "uga-Ugar-SY"}, "luz": {"value" : "luz-Arab-IR"}, "luy": {"value" : "luy-Latn-KE"}, "und-145": {"value" : "ar-Arab-SA"}, "und-Cakm": {"value" : "ccp-Cakm-BD"}, "und-Dupl": {"value" : "fr-Dupl-FR"}, "yon": {"value" : "yon-Latn-ZZ"}, "ug-MN": {"value" : "ug-Cyrl-MN"}, "hne": {"value" : "hne-Deva-IN"}, "hnd": {"value" : "hnd-Arab-PK"}, "hnj": {"value" : "hnj-Hmng-LA"}, "hno": {"value" : "hno-Arab-PK"}
    , "hnn": {"value" : "hnn-Latn-PH"}, "ug-KZ": {"value" : "ug-Cyrl-KZ"}, "und-154": {"value" : "en-Latn-GB"}, "und-155": {"value" : "de-Latn-DE"}, "und-150": {"value" : "ru-Cyrl-RU"}, "und-151": {"value" : "ru-Cyrl-RU"}, "und-Sylo": {"value" : "syl-Sylo-BD"}, "hoc": {"value" : "hoc-Deva-IN"}, "dga": {"value" : "dga-Latn-ZZ"}, "lwl": {"value" : "lwl-Thai-TH"}, "und-Ital": {"value" : "ett-Ital-IT"}, "hoj": {"value" : "hoj-Deva-IN"}, "dgh": {"value" : "dgh-Latn-ZZ"}, "dgi": {"value" : "dgi-Latn-ZZ"}, "dgl": {"value"
    : "dgl-Arab-ZZ"}, "hot": {"value" : "hot-Latn-ZZ"}, "dgr": {"value" : "dgr-Latn-CA"}, "dgz": {"value" : "dgz-Latn-ZZ"}, "yrb": {"value" : "yrb-Latn-ZZ"}, "yre": {"value" : "yre-Latn-ZZ"}, "und-Lyci": {"value" : "xlc-Lyci-TR"}, "und-Cans": {"value" : "cr-Cans-CA"}, "und-Hluw": {"value" : "hlu-Hluw-TR"}, "und-Nand": {"value" : "sa-Nand-IN"}, "yrl": {"value" : "yrl-Latn-BR"}, "dia": {"value" : "dia-Latn-ZZ"}, "und-Grek": {"value" : "el-Grek-GR"}, "und-Mong": {"value" : "mn-Mong-CN"}, "und-Lydi": {"value" :
    "xld-Lydi-TR"}, "yss": {"value" : "yss-Latn-ZZ"}, "und-Newa": {"value" : "new-Newa-NP"}, "lzh": {"value" : "lzh-Hans-CN"}, "dje": {"value" : "dje-Latn-NE"}, "lzz": {"value" : "lzz-Latn-TR"}, "uli": {"value" : "uli-Latn-FM"}, "hsb": {"value" : "hsb-Latn-DE"}, "und-Xsux": {"value" : "akk-Xsux-IQ"}, "hsn": {"value" : "hsn-Hans-CN"}, "und-Cari": {"value" : "xcr-Cari-TR"}, "und-Syrc": {"value" : "syr-Syrc-IQ"}, "yua": {"value" : "yua-Latn-MX"}, "yue": {"value" : "yue-Hant-HK"}, "umb": {"value" : "umb-Latn-AO"}
    , "yuj": {"value" : "yuj-Latn-ZZ"}, "yut": {"value" : "yut-Latn-ZZ"}, "yuw": {"value" : "yuw-Latn-ZZ"}, "und-Bopo": {"value" : "zh-Bopo-TW"}, "und-Yezi": {"value" : "ku-Yezi-GE"}, "und": {"value" : "en-Latn-US"}, "und-Egyp": {"value" : "egy-Egyp-EG"}, "und-Tglg": {"value" : "fil-Tglg-PH"}, "unr": {"value" : "unr-Beng-IN"}, "hui": {"value" : "hui-Latn-ZZ"}, "und-Elba": {"value" : "sq-Elba-AL"}, "unx": {"value" : "unx-Beng-IN"}, "und-Narb": {"value" : "xna-Narb-SA"}, "pa-PK": {"value" : "pa-Arab-PK"}, "und-Hebr-CA":
    {"value" : "yi-Hebr-CA"}, "uok": {"value" : "uok-Latn-ZZ"}, "und-Geor": {"value" : "ka-Geor-GE"}, "und-Shrd": {"value" : "sa-Shrd-IN"}, "dnj": {"value" : "dnj-Latn-CI"}, "und-Diak": {"value" : "dv-Diak-MV"}, "dob": {"value" : "dob-Latn-ZZ"}, "und-Mymr-TH": {"value" : "mnw-Mymr-TH"}, "doi": {"value" : "doi-Arab-IN"}, "dop": {"value" : "dop-Latn-ZZ"}, "und-Sund": {"value" : "su-Sund-ID"}, "dow": {"value" : "dow-Latn-ZZ"}, "sr-ME": {"value" : "sr-Latn-ME"}, "und-Hung": {"value" : "hu-Hung-HU"}, "mad": {"value"
    : "mad-Latn-ID"}, "mag": {"value" : "mag-Deva-IN"}, "maf": {"value" : "maf-Latn-CM"}, "mai": {"value" : "mai-Deva-IN"}, "mak": {"value" : "mak-Latn-ID"}, "man": {"value" : "man-Latn-GM"}, "mas": {"value" : "mas-Latn-KE"}, "maw": {"value" : "maw-Latn-ZZ"}, "maz": {"value" : "maz-Latn-MX"}, "uri": {"value" : "uri-Latn-ZZ"}, "mbh": {"value" : "mbh-Latn-ZZ"}, "urt": {"value" : "urt-Latn-ZZ"}, "mbo": {"value" : "mbo-Latn-ZZ"}, "urw": {"value" : "urw-Latn-ZZ"}, "mbq": {"value" : "mbq-Latn-ZZ"}, "mbu": {"value"
    : "mbu-Latn-ZZ"}, "und-Hebr-GB": {"value" : "yi-Hebr-GB"}, "usa": {"value" : "usa-Latn-ZZ"}, "mbw": {"value" : "mbw-Latn-ZZ"}, "mci": {"value" : "mci-Latn-ZZ"}, "dri": {"value" : "dri-Latn-ZZ"}, "mcq": {"value" : "mcq-Latn-ZZ"}, "drh": {"value" : "drh-Mong-CN"}, "mcp": {"value" : "mcp-Latn-ZZ"}, "mcr": {"value" : "mcr-Latn-ZZ"}, "mcu": {"value" : "mcu-Latn-ZZ"}, "drs": {"value" : "drs-Ethi-ZZ"}, "mda": {"value" : "mda-Latn-ZZ"}, "mdf": {"value" : "mdf-Cyrl-RU"}, "mde": {"value" : "mde-Arab-ZZ"}, "mdh": {"value"
    : "mdh-Latn-PH"}, "dsb": {"value" : "dsb-Latn-DE"}, "mdj": {"value" : "mdj-Latn-ZZ"}, "utr": {"value" : "utr-Latn-ZZ"}, "mdr": {"value" : "mdr-Latn-ID"}, "mdx": {"value" : "mdx-Ethi-ZZ"}, "mee": {"value" : "mee-Latn-ZZ"}, "med": {"value" : "med-Latn-ZZ"}, "mek": {"value" : "mek-Latn-ZZ"}, "men": {"value" : "men-Latn-SL"}, "az-RU": {"value" : "az-Cyrl-RU"}, "mis-Medf": {"value" : "mis-Medf-NG"}, "mer": {"value" : "mer-Latn-KE"}, "dtm": {"value" : "dtm-Latn-ML"}, "meu": {"value" : "meu-Latn-ZZ"}, "met": {"value"
    : "met-Latn-ZZ"}, "dtp": {"value" : "dtp-Latn-MY"}, "dts": {"value" : "dts-Latn-ZZ"}, "uvh": {"value" : "uvh-Latn-ZZ"}, "dty": {"value" : "dty-Deva-NP"}, "mfa": {"value" : "mfa-Arab-TH"}, "uvl": {"value" : "uvl-Latn-ZZ"}, "mfe": {"value" : "mfe-Latn-MU"}, "dua": {"value" : "dua-Latn-CM"}, "dud": {"value" : "dud-Latn-ZZ"}, "duc": {"value" : "duc-Latn-ZZ"}, "mfn": {"value" : "mfn-Latn-ZZ"}, "dug": {"value" : "dug-Latn-ZZ"}, "mfo": {"value" : "mfo-Latn-ZZ"}, "mfq": {"value" : "mfq-Latn-ZZ"}, "und-Phag": {"value"
    : "lzh-Phag-CN"}, "dva": {"value" : "dva-Latn-ZZ"}, "mgh": {"value" : "mgh-Latn-MZ"}, "mgl": {"value" : "mgl-Latn-ZZ"}, "mgo": {"value" : "mgo-Latn-CM"}, "mgp": {"value" : "mgp-Deva-NP"}, "mgy": {"value" : "mgy-Latn-TZ"}, "zag": {"value" : "zag-Latn-SD"}, "mhi": {"value" : "mhi-Latn-ZZ"}, "mhl": {"value" : "mhl-Latn-ZZ"}, "dww": {"value" : "dww-Latn-ZZ"}, "mif": {"value" : "mif-Latn-ZZ"}, "und-Mymr-IN": {"value" : "kht-Mymr-IN"}, "min": {"value" : "min-Latn-ID"}, "mis": {"value" : "mis-Hatr-IQ"}, "ian":
    {"value" : "ian-Latn-ZZ"}, "miw": {"value" : "miw-Latn-ZZ"}, "iar": {"value" : "iar-Latn-ZZ"}, "uz-Arab": {"value" : "uz-Arab-AF"}, "ibb": {"value" : "ibb-Latn-NG"}, "iba": {"value" : "iba-Latn-MY"}, "dyo": {"value" : "dyo-Latn-SN"}, "dyu": {"value" : "dyu-Latn-BF"}, "iby": {"value" : "iby-Latn-ZZ"}, "zdj": {"value" : "zdj-Arab-KM"}, "ica": {"value" : "ica-Latn-ZZ"}, "mki": {"value" : "mki-Arab-ZZ"}, "und-Wcho": {"value" : "nnp-Wcho-IN"}, "ich": {"value" : "ich-Latn-ZZ"}, "mkl": {"value" : "mkl-Latn-ZZ"}
    , "dzg": {"value" : "dzg-Latn-ZZ"}, "mkp": {"value" : "mkp-Latn-ZZ"}, "zea": {"value" : "zea-Latn-NL"}, "mkw": {"value" : "mkw-Latn-ZZ"}, "mle": {"value" : "mle-Latn-ZZ"}, "idd": {"value" : "idd-Latn-ZZ"}, "idi": {"value" : "idi-Latn-ZZ"}, "lif-Limb": {"value" : "lif-Limb-IN"}, "mlp": {"value" : "mlp-Latn-ZZ"}, "mls": {"value" : "mls-Latn-SD"}, "idu": {"value" : "idu-Latn-ZZ"}, "quc": {"value" : "quc-Latn-GT"}, "qug": {"value" : "qug-Latn-EC"}, "und-Jamo": {"value" : "ko-Jamo-KR"}, "mmo": {"value" : "mmo-Latn-ZZ"}
    , "mmu": {"value" : "mmu-Latn-ZZ"}, "mmx": {"value" : "mmx-Latn-ZZ"}, "zgh": {"value" : "zgh-Tfng-MA"}, "mna": {"value" : "mna-Latn-ZZ"}, "mnf": {"value" : "mnf-Latn-ZZ"}, "ife": {"value" : "ife-Latn-TG"}, "mni": {"value" : "mni-Beng-IN"}, "mnw": {"value" : "mnw-Mymr-MM"}, "moa": {"value" : "moa-Latn-ZZ"}, "moe": {"value" : "moe-Latn-CA"}, "igb": {"value" : "igb-Latn-ZZ"}, "ige": {"value" : "ige-Latn-ZZ"}, "moh": {"value" : "moh-Latn-CA"}, "und-Hebr-SE": {"value" : "yi-Hebr-SE"}, "zhx": {"value" : "zhx-Nshu-CN"}
    , "mos": {"value" : "mos-Latn-BF"}, "und-Shaw": {"value" : "en-Shaw-GB"}, "zia": {"value" : "zia-Latn-ZZ"}, "mox": {"value" : "mox-Latn-ZZ"}, "vag": {"value" : "vag-Latn-ZZ"}, "vai": {"value" : "vai-Vaii-LR"}, "van": {"value" : "van-Latn-ZZ"}, "mpp": {"value" : "mpp-Latn-ZZ"}, "mpt": {"value" : "mpt-Latn-ZZ"}, "mps": {"value" : "mps-Latn-ZZ"}, "mpx": {"value" : "mpx-Latn-ZZ"}, "und-Hebr-US": {"value" : "yi-Hebr-US"}, "hi-Latn": {"value" : "hi-Latn-IN"}, "mql": {"value" : "mql-Latn-ZZ"}, "und-Hebr-UA": {"value"
    : "yi-Hebr-UA"}, "mrd": {"value" : "mrd-Deva-NP"}, "zkt": {"value" : "zkt-Kits-CN"}, "mrj": {"value" : "mrj-Cyrl-RU"}, "ijj": {"value" : "ijj-Latn-ZZ"}, "mro": {"value" : "mro-Mroo-BD"}, "und-Modi": {"value" : "mr-Modi-IN"}, "ebu": {"value" : "ebu-Latn-KE"}, "zlm": {"value" : "zlm-Latn-TG"}, "arc-Palm": {"value" : "arc-Palm-SY"}, "ikk": {"value" : "ikk-Latn-ZZ"}, "ikt": {"value" : "ikt-Latn-CA"}, "ikw": {"value" : "ikw-Latn-ZZ"}, "vec": {"value" : "vec-Latn-IT"}, "ikx": {"value" : "ikx-Latn-ZZ"}, "zmi":
    {"value" : "zmi-Latn-MY"}, "mtc": {"value" : "mtc-Latn-ZZ"}, "mtf": {"value" : "mtf-Latn-ZZ"}, "vep": {"value" : "vep-Latn-RU"}, "zh-Bopo": {"value" : "zh-Bopo-TW"}, "mti": {"value" : "mti-Latn-ZZ"}, "und-Ethi": {"value" : "am-Ethi-ET"}, "mtr": {"value" : "mtr-Deva-IN"}, "und-Thai-LA": {"value" : "kdt-Thai-LA"}, "ilo": {"value" : "ilo-Latn-PH"}, "zne": {"value" : "zne-Latn-ZZ"}, "mua": {"value" : "mua-Latn-CM"}, "und-Thai-KH": {"value" : "kdt-Thai-KH"}, "imo": {"value" : "imo-Latn-ZZ"}, "mus": {"value" :
    "mus-Latn-US"}, "mur": {"value" : "mur-Latn-ZZ"}, "mva": {"value" : "mva-Latn-ZZ"}, "inh": {"value" : "inh-Cyrl-RU"}, "mvn": {"value" : "mvn-Latn-ZZ"}, "efi": {"value" : "efi-Latn-NG"}, "mvy": {"value" : "mvy-Arab-PK"}, "und-Java": {"value" : "jv-Java-ID"}, "mwk": {"value" : "mwk-Latn-ML"}, "mwr": {"value" : "mwr-Deva-IN"}, "und-021": {"value" : "en-Latn-US"}, "egl": {"value" : "egl-Latn-IT"}, "mww": {"value" : "mww-Hmnp-US"}, "mwv": {"value" : "mwv-Latn-ID"}, "iou": {"value" : "iou-Latn-ZZ"}, "und-029":
    {"value" : "es-Latn-CU"}, "vic": {"value" : "vic-Latn-SX"}, "egy": {"value" : "egy-Egyp-EG"}, "und-Ugar": {"value" : "uga-Ugar-SY"}, "mxc": {"value" : "mxc-Latn-ZW"}, "raj": {"value" : "raj-Deva-IN"}, "rai": {"value" : "rai-Latn-ZZ"}, "rao": {"value" : "rao-Latn-ZZ"}, "viv": {"value" : "viv-Latn-ZZ"}, "mxm": {"value" : "mxm-Latn-ZZ"}, "und-034": {"value" : "hi-Deva-IN"}, "und-030": {"value" : "zh-Hans-CN"}, "und-039": {"value" : "it-Latn-IT"}, "und-035": {"value" : "id-Latn-ID"}, "ug-Cyrl": {"value" : "ug-Cyrl-KZ"}
    , "myk": {"value" : "myk-Latn-ZZ"}, "mym": {"value" : "mym-Ethi-ZZ"}, "aai": {"value" : "aai-Latn-ZZ"}, "aak": {"value" : "aak-Latn-ZZ"}, "myw": {"value" : "myw-Latn-ZZ"}, "myv": {"value" : "myv-Cyrl-RU"}, "myx": {"value" : "myx-Latn-UG"}, "myz": {"value" : "myz-Mand-IR"}, "und-Sinh": {"value" : "si-Sinh-LK"}, "und-Sind": {"value" : "sd-Sind-IN"}, "aau": {"value" : "aau-Latn-ZZ"}, "rcf": {"value" : "rcf-Latn-RE"}, "und-Orkh": {"value" : "otk-Orkh-MN"}, "mzk": {"value" : "mzk-Latn-ZZ"}, "mzn": {"value" :
    "mzn-Arab-IR"}, "iri": {"value" : "iri-Latn-ZZ"}, "mzm": {"value" : "mzm-Latn-ZZ"}, "mzp": {"value" : "mzp-Latn-ZZ"}, "und-053": {"value" : "en-Latn-AU"}, "abi": {"value" : "abi-Latn-ZZ"}, "und-054": {"value" : "en-Latn-PG"}, "mzw": {"value" : "mzw-Latn-ZZ"}, "mzz": {"value" : "mzz-Latn-ZZ"}, "abr": {"value" : "abr-Latn-GH"}, "abq": {"value" : "abq-Cyrl-ZZ"}, "abt": {"value" : "abt-Latn-ZZ"}, "und-057": {"value" : "en-Latn-GU"}, "aby": {"value" : "aby-Latn-ZZ"}, "eka": {"value" : "eka-Latn-ZZ"}, "vls": {"value"
    : "vls-Latn-BE"}, "ace": {"value" : "ace-Latn-ID"}, "acd": {"value" : "acd-Latn-ZZ"}, "ach": {"value" : "ach-Latn-UG"}, "vmf": {"value" : "vmf-Latn-DE"}, "eky": {"value" : "eky-Kali-MM"}, "rej": {"value" : "rej-Latn-ID"}, "rel": {"value" : "rel-Latn-ZZ"}, "ada": {"value" : "ada-Latn-GH"}, "res": {"value" : "res-Latn-ZZ"}, "vmw": {"value" : "vmw-Latn-MZ"}, "ade": {"value" : "ade-Latn-ZZ"}, "adj": {"value" : "adj-Latn-ZZ"}, "und-Hira": {"value" : "ja-Hira-JP"}, "adp": {"value" : "adp-Tibt-BT"}, "adz": {"value"
    : "adz-Latn-ZZ"}, "ady": {"value" : "ady-Cyrl-RU"}, "ema": {"value" : "ema-Latn-ZZ"}, "und-Deva": {"value" : "hi-Deva-IN"}, "aeb": {"value" : "aeb-Arab-TN"}, "emi": {"value" : "emi-Latn-ZZ"}, "und-009": {"value" : "en-Latn-AU"}, "aey": {"value" : "aey-Latn-ZZ"}, "und-002": {"value" : "en-Latn-NG"}, "und-003": {"value" : "en-Latn-US"}, "und-005": {"value" : "pt-Latn-BR"}, "rgn": {"value" : "rgn-Latn-IT"}, "vot": {"value" : "vot-Latn-RU"}, "enn": {"value" : "enn-Latn-ZZ"}, "enq": {"value" : "enq-Latn-ZZ"}
    , "und-011": {"value" : "en-Latn-NG"}, "rhg": {"value" : "rhg-Arab-MM"}, "und-017": {"value" : "sw-Latn-CD"}, "und-018": {"value" : "en-Latn-ZA"}, "und-019": {"value" : "en-Latn-US"}, "und-013": {"value" : "es-Latn-MX"}, "und-014": {"value" : "sw-Latn-TZ"}, "und-015": {"value" : "ar-Arab-EG"}, "agc": {"value" : "agc-Latn-ZZ"}, "und-Zanb": {"value" : "cmg-Zanb-MN"}, "iwm": {"value" : "iwm-Latn-ZZ"}, "agd": {"value" : "agd-Latn-ZZ"}, "agg": {"value" : "agg-Latn-ZZ"}, "iws": {"value" : "iws-Latn-ZZ"}, "agm":
    {"value" : "agm-Latn-ZZ"}, "ago": {"value" : "ago-Latn-ZZ"}, "agq": {"value" : "agq-Latn-CM"}, "ria": {"value" : "ria-Latn-IN"}, "rif": {"value" : "rif-Tfng-MA"}, "nac": {"value" : "nac-Latn-ZZ"}, "naf": {"value" : "naf-Latn-ZZ"}, "nak": {"value" : "nak-Latn-ZZ"}, "nan": {"value" : "nan-Hans-CN"}, "aha": {"value" : "aha-Latn-ZZ"}, "nap": {"value" : "nap-Latn-IT"}, "naq": {"value" : "naq-Latn-NA"}, "zza": {"value" : "zza-Latn-TR"}, "nas": {"value" : "nas-Latn-ZZ"}, "ahl": {"value" : "ahl-Latn-ZZ"}, "en-Shaw":
    {"value" : "en-Shaw-GB"}, "und-Copt": {"value" : "cop-Copt-EG"}, "aho": {"value" : "aho-Ahom-IN"}, "vro": {"value" : "vro-Latn-EE"}, "rjs": {"value" : "rjs-Deva-NP"}, "nca": {"value" : "nca-Latn-ZZ"}, "ncf": {"value" : "ncf-Latn-ZZ"}, "nce": {"value" : "nce-Latn-ZZ"}, "nch": {"value" : "nch-Latn-MX"}, "izh": {"value" : "izh-Latn-RU"}, "izi": {"value" : "izi-Latn-ZZ"}, "rkt": {"value" : "rkt-Beng-BD"}, "nco": {"value" : "nco-Latn-ZZ"}, "eri": {"value" : "eri-Latn-ZZ"}, "ajg": {"value" : "ajg-Latn-ZZ"}, "ncu":
    {"value" : "ncu-Latn-ZZ"}, "ndc": {"value" : "ndc-Latn-MZ"}, "esg": {"value" : "esg-Gonm-IN"}, "nds": {"value" : "nds-Latn-DE"}, "akk": {"value" : "akk-Xsux-IQ"}, "esu": {"value" : "esu-Latn-US"}, "neb": {"value" : "neb-Latn-ZZ"}, "rmf": {"value" : "rmf-Latn-FI"}, "und-061": {"value" : "sm-Latn-WS"}, "und-Limb": {"value" : "lif-Limb-IN"}, "vun": {"value" : "vun-Latn-TZ"}, "ff-Adlm": {"value" : "ff-Adlm-GN"}, "vut": {"value" : "vut-Latn-ZZ"}, "rmo": {"value" : "rmo-Latn-CH"}, "ala": {"value" : "ala-Latn-ZZ"}
    , "rmt": {"value" : "rmt-Arab-IR"}, "rmu": {"value" : "rmu-Latn-SE"}, "ali": {"value" : "ali-Latn-ZZ"}, "nex": {"value" : "nex-Latn-ZZ"}, "new": {"value" : "new-Deva-NP"}, "aln": {"value" : "aln-Latn-XK"}, "etr": {"value" : "etr-Latn-ZZ"}, "und-Rohg": {"value" : "rhg-Rohg-MM"}, "ett": {"value" : "ett-Ital-IT"}, "rna": {"value" : "rna-Latn-ZZ"}, "etu": {"value" : "etu-Latn-ZZ"}, "alt": {"value" : "alt-Cyrl-RU"}, "etx": {"value" : "etx-Latn-ZZ"}, "rng": {"value" : "rng-Latn-MZ"}, "und-Linb": {"value" : "grc-Linb-GR"}
    , "und-Lina": {"value" : "lab-Lina-GR"}, "und-Jpan": {"value" : "ja-Jpan-JP"}, "man-GN": {"value" : "man-Nkoo-GN"}, "nfr": {"value" : "nfr-Latn-ZZ"}, "amm": {"value" : "amm-Latn-ZZ"}, "und-Arab": {"value" : "ar-Arab-EG"}, "amo": {"value" : "amo-Latn-NG"}, "amn": {"value" : "amn-Latn-ZZ"}, "rob": {"value" : "rob-Latn-ID"}, "amp": {"value" : "amp-Latn-ZZ"}, "ngb": {"value" : "ngb-Latn-ZZ"}, "rof": {"value" : "rof-Latn-TZ"}, "nga": {"value" : "nga-Latn-ZZ"}, "ngl": {"value" : "ngl-Latn-MZ"}, "roo": {"value"
    : "roo-Latn-ZZ"}, "anc": {"value" : "anc-Latn-ZZ"}, "ank": {"value" : "ank-Latn-ZZ"}, "ann": {"value" : "ann-Latn-ZZ"}, "und-Bhks": {"value" : "sa-Bhks-IN"}, "nhb": {"value" : "nhb-Latn-ZZ"}, "nhe": {"value" : "nhe-Latn-MX"}, "any": {"value" : "any-Latn-ZZ"}, "und-Orya": {"value" : "or-Orya-IN"}, "ewo": {"value" : "ewo-Latn-CM"}, "nhw": {"value" : "nhw-Latn-MX"}, "aoj": {"value" : "aoj-Latn-ZZ"}, "aom": {"value" : "aom-Latn-ZZ"}, "zh-Hanb": {"value" : "zh-Hanb-TW"}, "und-Kits": {"value" : "zkt-Kits-CN"}
    , "jab": {"value" : "jab-Latn-ZZ"}, "nif": {"value" : "nif-Latn-ZZ"}, "aoz": {"value" : "aoz-Latn-ID"}, "nij": {"value" : "nij-Latn-ID"}, "nii": {"value" : "nii-Latn-ZZ"}, "zh-PH": {"value" : "zh-Hant-PH"}, "nin": {"value" : "nin-Latn-ZZ"}, "zh-Hant": {"value" : "zh-Hant-TW"}, "zh-PF": {"value" : "zh-Hant-PF"}, "und-Ahom": {"value" : "aho-Ahom-IN"}, "apd": {"value" : "apd-Arab-TG"}, "apc": {"value" : "apc-Arab-ZZ"}, "ape": {"value" : "ape-Latn-ZZ"}, "jam": {"value" : "jam-Latn-JM"}, "zh-PA": {"value" : "zh-Hant-PA"}
    , "niu": {"value" : "niu-Latn-NU"}, "niz": {"value" : "niz-Latn-ZZ"}, "niy": {"value" : "niy-Latn-ZZ"}, "ext": {"value" : "ext-Latn-ES"}, "apr": {"value" : "apr-Latn-ZZ"}, "aps": {"value" : "aps-Latn-ZZ"}, "apz": {"value" : "apz-Latn-ZZ"}, "rro": {"value" : "rro-Latn-ZZ"}, "njo": {"value" : "njo-Latn-IN"}, "jbo": {"value" : "jbo-Latn-001"}, "jbu": {"value" : "jbu-Latn-ZZ"}, "zh-MO": {"value" : "zh-Hant-MO"}, "nkg": {"value" : "nkg-Latn-ZZ"}, "zh-MY": {"value" : "zh-Hant-MY"}, "arc": {"value" : "arc-Armi-IR"}
    , "nko": {"value" : "nko-Latn-ZZ"}, "arh": {"value" : "arh-Latn-ZZ"}, "pa-Arab": {"value" : "pa-Arab-PK"}, "und-Mtei": {"value" : "mni-Mtei-IN"}, "arn": {"value" : "arn-Latn-CL"}, "aro": {"value" : "aro-Latn-BO"}, "und-Cyrl-RO": {"value" : "bg-Cyrl-RO"}, "arq": {"value" : "arq-Arab-DZ"}, "ars": {"value" : "ars-Arab-SA"}, "arz": {"value" : "arz-Arab-EG"}, "ary": {"value" : "ary-Arab-MA"}, "rtm": {"value" : "rtm-Latn-FJ"}, "asa": {"value" : "asa-Latn-TZ"}, "und-Grek-TR": {"value" : "bgx-Grek-TR"}, "ase": {"value"
    : "ase-Sgnw-US"}, "asg": {"value" : "asg-Latn-ZZ"}, "aso": {"value" : "aso-Latn-ZZ"}, "ast": {"value" : "ast-Latn-ES"}, "rue": {"value" : "rue-Cyrl-UA"}, "rug": {"value" : "rug-Latn-SB"}, "nmg": {"value" : "nmg-Latn-CM"}, "ata": {"value" : "ata-Latn-ZZ"}, "jen": {"value" : "jen-Latn-ZZ"}, "atg": {"value" : "atg-Latn-ZZ"}, "atj": {"value" : "atj-Latn-CA"}, "nmz": {"value" : "nmz-Latn-ZZ"}, "unr-Deva": {"value" : "unr-Deva-NP"}, "nnf": {"value" : "nnf-Latn-ZZ"}, "nnh": {"value" : "nnh-Latn-CM"}, "nnk": {"value"
    : "nnk-Latn-ZZ"}, "nnm": {"value" : "nnm-Latn-ZZ"}, "nnp": {"value" : "nnp-Wcho-IN"}, "az-IR": {"value" : "az-Arab-IR"}, "und-Adlm": {"value" : "ff-Adlm-GN"}, "az-IQ": {"value" : "az-Arab-IQ"}, "und-Nbat": {"value" : "arc-Nbat-JO"}, "sd-Khoj": {"value" : "sd-Khoj-IN"}, "nod": {"value" : "nod-Lana-TH"}, "auy": {"value" : "auy-Latn-ZZ"}, "noe": {"value" : "noe-Deva-IN"}, "rwk": {"value" : "rwk-Latn-TZ"}, "und-Cyrl-MD": {"value" : "uk-Cyrl-MD"}, "rwo": {"value" : "rwo-Latn-ZZ"}, "non": {"value" : "non-Runr-SE"}
    , "nop": {"value" : "nop-Latn-ZZ"}, "jgk": {"value" : "jgk-Latn-ZZ"}, "jgo": {"value" : "jgo-Latn-CM"}, "und-Vaii": {"value" : "vai-Vaii-LR"}, "nou": {"value" : "nou-Latn-ZZ"}, "avl": {"value" : "avl-Arab-ZZ"}, "avn": {"value" : "avn-Latn-ZZ"}, "wae": {"value" : "wae-Latn-CH"}, "avt": {"value" : "avt-Latn-ZZ"}, "avu": {"value" : "avu-Latn-ZZ"}, "waj": {"value" : "waj-Latn-ZZ"}, "wal": {"value" : "wal-Ethi-ET"}, "wan": {"value" : "wan-Latn-ZZ"}, "zh-HK": {"value" : "zh-Hant-HK"}, "war": {"value" : "war-Latn-PH"}
    , "awa": {"value" : "awa-Deva-IN"}, "und-Plrd": {"value" : "hmd-Plrd-CN"}, "awb": {"value" : "awb-Latn-ZZ"}, "awo": {"value" : "awo-Latn-ZZ"}, "und-Knda": {"value" : "kn-Knda-IN"}, "zh-ID": {"value" : "zh-Hant-ID"}, "jib": {"value" : "jib-Latn-ZZ"}, "awx": {"value" : "awx-Latn-ZZ"}, "wbp": {"value" : "wbp-Latn-AU"}, "und-Sidd": {"value" : "sa-Sidd-IN"}, "fab": {"value" : "fab-Latn-ZZ"}, "wbr": {"value" : "wbr-Deva-IN"}, "faa": {"value" : "faa-Latn-ZZ"}, "wbq": {"value" : "wbq-Telu-IN"}, "und-Kali": {"value"
    : "eky-Kali-MM"}, "fag": {"value" : "fag-Latn-ZZ"}, "nqo": {"value" : "nqo-Nkoo-GN"}, "fai": {"value" : "fai-Latn-ZZ"}, "ryu": {"value" : "ryu-Kana-JP"}, "fan": {"value" : "fan-Latn-GQ"}, "wci": {"value" : "wci-Latn-ZZ"}, "nrb": {"value" : "nrb-Latn-ZZ"}, "und-Phlp": {"value" : "pal-Phlp-CN"}, "ayb": {"value" : "ayb-Latn-ZZ"}, "und-Phli": {"value" : "pal-Phli-IR"}, "cu-Glag": {"value" : "cu-Glag-BG"}, "und-Cyrl-XK": {"value" : "sr-Cyrl-XK"}, "az-Arab": {"value" : "az-Arab-IR"}, "ks-Deva": {"value" : "ks-Deva-IN"}
    , "und-Thai": {"value" : "th-Thai-TH"}, "nsk": {"value" : "nsk-Cans-CA"}, "nsn": {"value" : "nsn-Latn-ZZ"}, "nso": {"value" : "nso-Latn-ZA"}, "und-Thaa": {"value" : "dv-Thaa-MV"}, "und-Nshu": {"value" : "zhx-Nshu-CN"}, "nss": {"value" : "nss-Latn-ZZ"}, "zh-VN": {"value" : "zh-Hant-VN"}, "und-Hmnp": {"value" : "mww-Hmnp-US"}, "und-Kana": {"value" : "ja-Kana-JP"}, "und-Hmng": {"value" : "hnj-Hmng-LA"}, "wer": {"value" : "wer-Latn-ZZ"}, "zh-TW": {"value" : "zh-Hant-TW"}, "ntm": {"value" : "ntm-Latn-ZZ"}, "ntr":
    {"value" : "ntr-Latn-ZZ"}, "zh-US": {"value" : "zh-Hant-US"}, "und-Xpeo": {"value" : "peo-Xpeo-IR"}, "jmc": {"value" : "jmc-Latn-TZ"}, "nui": {"value" : "nui-Latn-ZZ"}, "jml": {"value" : "jml-Deva-NP"}, "nup": {"value" : "nup-Latn-ZZ"}, "und-Cyrl-SK": {"value" : "uk-Cyrl-SK"}, "nus": {"value" : "nus-Latn-SS"}, "nuv": {"value" : "nuv-Latn-ZZ"}, "nux": {"value" : "nux-Latn-ZZ"}, "zh-TH": {"value" : "zh-Hant-TH"}, "wgi": {"value" : "wgi-Latn-ZZ"}, "und-Phnx": {"value" : "phn-Phnx-LB"}, "und-Cyrl-TR": {"value"
    : "kbd-Cyrl-TR"}, "ffi": {"value" : "ffi-Latn-ZZ"}, "und-Elym": {"value" : "arc-Elym-IR"}, "ffm": {"value" : "ffm-Latn-ML"}, "und-Rjng": {"value" : "rej-Rjng-ID"}, "whg": {"value" : "whg-Latn-ZZ"}, "nwb": {"value" : "nwb-Latn-ZZ"}, "zh-SR": {"value" : "zh-Hant-SR"}, "wib": {"value" : "wib-Latn-ZZ"}, "und-Hebr": {"value" : "he-Hebr-IL"}, "saf": {"value" : "saf-Latn-GH"}, "sah": {"value" : "sah-Cyrl-RU"}, "saq": {"value" : "saq-Latn-KE"}, "wiu": {"value" : "wiu-Latn-ZZ"}, "sas": {"value" : "sas-Latn-ID"},
    "wiv": {"value" : "wiv-Latn-ZZ"}, "nxq": {"value" : "nxq-Latn-CN"}, "sat": {"value" : "sat-Olck-IN"}, "nxr": {"value" : "nxr-Latn-ZZ"}, "sav": {"value" : "sav-Latn-SN"}, "saz": {"value" : "saz-Saur-IN"}, "wja": {"value" : "wja-Latn-ZZ"}, "sba": {"value" : "sba-Latn-ZZ"}, "sbe": {"value" : "sbe-Latn-ZZ"}, "wji": {"value" : "wji-Latn-ZZ"}, "mn-Mong": {"value" : "mn-Mong-CN"}, "und-419": {"value" : "es-Latn-419"}, "fia": {"value" : "fia-Arab-SD"}, "sbp": {"value" : "sbp-Latn-TZ"}, "und-NO": {"value" : "nb-Latn-NO"}
    , "nyn": {"value" : "nyn-Latn-UG"}, "nym": {"value" : "nym-Latn-TZ"}, "und-NL": {"value" : "nl-Latn-NL"}, "und-NP": {"value" : "ne-Deva-NP"}, "fil": {"value" : "fil-Latn-PH"}, "bal": {"value" : "bal-Arab-PK"}, "ban": {"value" : "ban-Latn-ID"}, "bap": {"value" : "bap-Deva-NP"}, "fit": {"value" : "fit-Latn-SE"}, "bar": {"value" : "bar-Latn-AT"}, "bas": {"value" : "bas-Latn-CM"}, "bav": {"value" : "bav-Latn-ZZ"}, "bax": {"value" : "bax-Bamu-CM"}, "jra": {"value" : "jra-Latn-ZZ"}, "sck": {"value" : "sck-Deva-IN"}
    , "nzi": {"value" : "nzi-Latn-GH"}, "scl": {"value" : "scl-Arab-ZZ"}, "sco": {"value" : "sco-Latn-GB"}, "scn": {"value" : "scn-Latn-IT"}, "aa": {"value" : "aa-Latn-ET"}, "bba": {"value" : "bba-Latn-ZZ"}, "und-MN": {"value" : "mn-Cyrl-MN"}, "ab": {"value" : "ab-Cyrl-GE"}, "und-MM": {"value" : "my-Mymr-MM"}, "und-Osma": {"value" : "so-Osma-SO"}, "bbc": {"value" : "bbc-Latn-ID"}, "scs": {"value" : "scs-Latn-CA"}, "und-ML": {"value" : "bm-Latn-ML"}, "bbb": {"value" : "bbb-Latn-ZZ"}, "und-MK": {"value" : "mk-Cyrl-MK"}
    , "ae": {"value" : "ae-Avst-IR"}, "und-MR": {"value" : "ar-Arab-MR"}, "af": {"value" : "af-Latn-ZA"}, "bbd": {"value" : "bbd-Latn-ZZ"}, "und-MQ": {"value" : "fr-Latn-MQ"}, "und-Wara": {"value" : "hoc-Wara-IN"}, "und-MO": {"value" : "zh-Hant-MO"}, "und-MV": {"value" : "dv-Thaa-MV"}, "und-MU": {"value" : "mfe-Latn-MU"}, "ak": {"value" : "ak-Latn-GH"}, "und-MT": {"value" : "mt-Latn-MT"}, "bbj": {"value" : "bbj-Latn-CM"}, "am": {"value" : "am-Ethi-ET"}, "und-MZ": {"value" : "pt-Latn-MZ"}, "an": {"value" : "an-Latn-ES"}
    , "und-MY": {"value" : "ms-Latn-MY"}, "und-MX": {"value" : "es-Latn-MX"}, "ar": {"value" : "ar-Arab-EG"}, "bbp": {"value" : "bbp-Latn-ZZ"}, "as": {"value" : "as-Beng-IN"}, "bbr": {"value" : "bbr-Latn-ZZ"}, "sdc": {"value" : "sdc-Latn-IT"}, "und-NC": {"value" : "fr-Latn-NC"}, "av": {"value" : "av-Cyrl-RU"}, "sdh": {"value" : "sdh-Arab-IR"}, "und-NA": {"value" : "af-Latn-NA"}, "ay": {"value" : "ay-Latn-BO"}, "az": {"value" : "az-Latn-AZ"}, "und-NE": {"value" : "ha-Latn-NE"}, "und-NI": {"value" : "es-Latn-NI"}
    , "ba": {"value" : "ba-Cyrl-RU"}, "wls": {"value" : "wls-Latn-WF"}, "und-Kore": {"value" : "ko-Kore-KR"}, "und-LK": {"value" : "si-Sinh-LK"}, "be": {"value" : "be-Cyrl-BY"}, "bcf": {"value" : "bcf-Latn-ZZ"}, "bg": {"value" : "bg-Cyrl-BG"}, "bch": {"value" : "bch-Latn-ZZ"}, "bi": {"value" : "bi-Latn-VU"}, "und-LU": {"value" : "fr-Latn-LU"}, "bci": {"value" : "bci-Latn-CI"}, "und-LT": {"value" : "lt-Latn-LT"}, "und-LS": {"value" : "st-Latn-LS"}, "bm": {"value" : "bm-Latn-ML"}, "bcn": {"value" : "bcn-Latn-ZZ"}
    , "bn": {"value" : "bn-Beng-BD"}, "und-LY": {"value" : "ar-Arab-LY"}, "bcm": {"value" : "bcm-Latn-ZZ"}, "bo": {"value" : "bo-Tibt-CN"}, "bco": {"value" : "bco-Latn-ZZ"}, "und-LV": {"value" : "lv-Latn-LV"}, "br": {"value" : "br-Latn-FR"}, "bcq": {"value" : "bcq-Ethi-ZZ"}, "bs": {"value" : "bs-Latn-BA"}, "bcu": {"value" : "bcu-Latn-ZZ"}, "sef": {"value" : "sef-Latn-CI"}, "und-MA": {"value" : "ar-Arab-MA"}, "sei": {"value" : "sei-Latn-MX"}, "seh": {"value" : "seh-Latn-MZ"}, "und-MF": {"value" : "fr-Latn-MF"}
    , "wmo": {"value" : "wmo-Latn-ZZ"}, "und-ME": {"value" : "sr-Latn-ME"}, "und-MD": {"value" : "ro-Latn-MD"}, "und-MC": {"value" : "fr-Latn-MC"}, "ca": {"value" : "ca-Latn-ES"}, "und-MG": {"value" : "mg-Latn-MG"}, "ses": {"value" : "ses-Latn-ML"}, "ce": {"value" : "ce-Cyrl-RU"}, "und-Cyrl-BA": {"value" : "sr-Cyrl-BA"}, "bdd": {"value" : "bdd-Latn-ZZ"}, "und-KP": {"value" : "ko-Kore-KP"}, "ch": {"value" : "ch-Latn-GU"}, "und-KM": {"value" : "ar-Arab-KM"}, "und-KR": {"value" : "ko-Kore-KR"}, "co": {"value" :
    "co-Latn-FR"}, "flr": {"value" : "flr-Latn-ZZ"}, "und-KW": {"value" : "ar-Arab-KW"}, "wnc": {"value" : "wnc-Latn-ZZ"}, "und-Dogr": {"value" : "doi-Dogr-IN"}, "cr": {"value" : "cr-Cans-CA"}, "cs": {"value" : "cs-Latn-CZ"}, "cu": {"value" : "cu-Cyrl-RU"}, "und-KZ": {"value" : "ru-Cyrl-KZ"}, "cv": {"value" : "cv-Cyrl-RU"}, "wni": {"value" : "wni-Arab-KM"}, "und-LA": {"value" : "lo-Laoo-LA"}, "cy": {"value" : "cy-Latn-GB"}, "und-LB": {"value" : "ar-Arab-LB"}, "und-LI": {"value" : "de-Latn-LI"}, "da": {"value"
    : "da-Latn-DK"}, "und-Cyrl-AL": {"value" : "mk-Cyrl-AL"}, "wnu": {"value" : "wnu-Latn-ZZ"}, "de": {"value" : "de-Latn-DE"}, "bef": {"value" : "bef-Latn-ZZ"}, "beh": {"value" : "beh-Latn-ZZ"}, "und-JO": {"value" : "ar-Arab-JO"}, "bej": {"value" : "bej-Arab-SD"}, "fmp": {"value" : "fmp-Latn-ZZ"}, "jut": {"value" : "jut-Latn-DK"}, "bem": {"value" : "bem-Latn-ZM"}, "und-JP": {"value" : "ja-Jpan-JP"}, "wob": {"value" : "wob-Latn-ZZ"}, "sga": {"value" : "sga-Ogam-IE"}, "bet": {"value" : "bet-Latn-ZZ"}, "dv": {"value"
    : "dv-Thaa-MV"}, "bex": {"value" : "bex-Latn-ZZ"}, "bew": {"value" : "bew-Latn-ID"}, "bez": {"value" : "bez-Latn-TZ"}, "dz": {"value" : "dz-Tibt-BT"}, "ms-ID": {"value" : "ms-Latn-ID"}, "wos": {"value" : "wos-Latn-ZZ"}, "und-KH": {"value" : "km-Khmr-KH"}, "und-KG": {"value" : "ky-Cyrl-KG"}, "sgs": {"value" : "sgs-Latn-LT"}, "und-KE": {"value" : "sw-Latn-KE"}, "ee": {"value" : "ee-Latn-GH"}, "bfd": {"value" : "bfd-Latn-CM"}, "sgw": {"value" : "sgw-Ethi-ZZ"}, "und-IN": {"value" : "hi-Deva-IN"}, "und-IL": {"value"
    : "he-Hebr-IL"}, "el": {"value" : "el-Grek-GR"}, "sgz": {"value" : "sgz-Latn-ZZ"}, "und-IR": {"value" : "fa-Arab-IR"}, "en": {"value" : "en-Latn-US"}, "und-IQ": {"value" : "ar-Arab-IQ"}, "und-Perm": {"value" : "kv-Perm-RU"}, "eo": {"value" : "eo-Latn-001"}, "bfq": {"value" : "bfq-Taml-IN"}, "es": {"value" : "es-Latn-ES"}, "und-IT": {"value" : "it-Latn-IT"}, "et": {"value" : "et-Latn-EE"}, "und-IS": {"value" : "is-Latn-IS"}, "eu": {"value" : "eu-Latn-ES"}, "bft": {"value" : "bft-Arab-PK"}, "bfy": {"value"
    : "bfy-Deva-IN"}, "shi": {"value" : "shi-Tfng-MA"}, "shk": {"value" : "shk-Latn-ZZ"}, "shn": {"value" : "shn-Mymr-MM"}, "fod": {"value" : "fod-Latn-ZZ"}, "fa": {"value" : "fa-Arab-IR"}, "bgc": {"value" : "bgc-Deva-IN"}, "ff": {"value" : "ff-Latn-SN"}, "shu": {"value" : "shu-Arab-ZZ"}, "fi": {"value" : "fi-Latn-FI"}, "fj": {"value" : "fj-Latn-FJ"}, "fon": {"value" : "fon-Latn-BJ"}, "und-HM": {"value" : "und-Latn-HM"}, "und-HK": {"value" : "zh-Hant-HK"}, "bgn": {"value" : "bgn-Arab-PK"}, "for": {"value" :
    "for-Latn-ZZ"}, "fo": {"value" : "fo-Latn-FO"}, "und-HN": {"value" : "es-Latn-HN"}, "fr": {"value" : "fr-Latn-FR"}, "und-HU": {"value" : "hu-Latn-HU"}, "und-HT": {"value" : "ht-Latn-HT"}, "ku-Arab": {"value" : "ku-Arab-IQ"}, "sid": {"value" : "sid-Latn-ET"}, "und-HR": {"value" : "hr-Latn-HR"}, "sig": {"value" : "sig-Latn-ZZ"}, "bgx": {"value" : "bgx-Grek-TR"}, "fy": {"value" : "fy-Latn-NL"}, "sim": {"value" : "sim-Latn-ZZ"}, "sil": {"value" : "sil-Latn-ZZ"}, "fpe": {"value" : "fpe-Latn-ZZ"}, "ga": {"value"
    : "ga-Latn-IE"}, "bhb": {"value" : "bhb-Deva-IN"}, "gd": {"value" : "gd-Latn-GB"}, "und-ID": {"value" : "id-Latn-ID"}, "und-IC": {"value" : "es-Latn-IC"}, "bhg": {"value" : "bhg-Latn-ZZ"}, "und-GH": {"value" : "ak-Latn-GH"}, "bhi": {"value" : "bhi-Deva-IN"}, "und-GF": {"value" : "fr-Latn-GF"}, "und-GE": {"value" : "ka-Geor-GE"}, "und-GL": {"value" : "kl-Latn-GL"}, "gl": {"value" : "gl-Latn-ES"}, "bhl": {"value" : "bhl-Latn-ZZ"}, "gn": {"value" : "gn-Latn-PY"}, "bho": {"value" : "bho-Deva-IN"}, "und-GP":
    {"value" : "fr-Latn-GP"}, "und-GN": {"value" : "fr-Latn-GN"}, "und-GT": {"value" : "es-Latn-GT"}, "und-GS": {"value" : "und-Latn-GS"}, "gu": {"value" : "gu-Gujr-IN"}, "und-GR": {"value" : "el-Grek-GR"}, "gv": {"value" : "gv-Latn-IM"}, "und-GQ": {"value" : "es-Latn-GQ"}, "und-Palm": {"value" : "arc-Palm-SY"}, "und-GW": {"value" : "pt-Latn-GW"}, "bhy": {"value" : "bhy-Latn-ZZ"}, "ha": {"value" : "ha-Latn-NG"}, "wrs": {"value" : "wrs-Latn-ZZ"}, "bib": {"value" : "bib-Latn-ZZ"}, "sjr": {"value" : "sjr-Latn-ZZ"}
    , "he": {"value" : "he-Hebr-IL"}, "big": {"value" : "big-Latn-ZZ"}, "hi": {"value" : "hi-Deva-IN"}, "und-Cyrl-GE": {"value" : "ab-Cyrl-GE"}, "bik": {"value" : "bik-Latn-PH"}, "bin": {"value" : "bin-Latn-NG"}, "und-Cham": {"value" : "cjm-Cham-VN"}, "und-FI": {"value" : "fi-Latn-FI"}, "bim": {"value" : "bim-Latn-ZZ"}, "ho": {"value" : "ho-Latn-PG"}, "tg-PK": {"value" : "tg-Arab-PK"}, "und-FO": {"value" : "fo-Latn-FO"}, "bio": {"value" : "bio-Latn-ZZ"}, "fqs": {"value" : "fqs-Latn-ZZ"}, "hr": {"value" : "hr-Latn-HR"}
    , "skc": {"value" : "skc-Latn-ZZ"}, "wsg": {"value" : "wsg-Gong-IN"}, "biq": {"value" : "biq-Latn-ZZ"}, "ht": {"value" : "ht-Latn-HT"}, "hu": {"value" : "hu-Latn-HU"}, "und-FR": {"value" : "fr-Latn-FR"}, "wsk": {"value" : "wsk-Latn-ZZ"}, "hy": {"value" : "hy-Armn-AM"}, "hz": {"value" : "hz-Latn-NA"}, "frc": {"value" : "frc-Latn-US"}, "ia": {"value" : "ia-Latn-001"}, "sks": {"value" : "sks-Latn-ZZ"}, "id": {"value" : "id-Latn-ID"}, "skr": {"value" : "skr-Arab-PK"}, "ig": {"value" : "ig-Latn-NG"}, "und-GA":
    {"value" : "fr-Latn-GA"}, "bji": {"value" : "bji-Ethi-ZZ"}, "ii": {"value" : "ii-Yiii-CN"}, "bjh": {"value" : "bjh-Latn-ZZ"}, "und-EE": {"value" : "et-Latn-EE"}, "ik": {"value" : "ik-Latn-US"}, "bjj": {"value" : "bjj-Deva-IN"}, "und-EC": {"value" : "es-Latn-EC"}, "und-Cprt": {"value" : "grc-Cprt-CY"}, "frp": {"value" : "frp-Latn-FR"}, "in": {"value" : "in-Latn-ID"}, "bjo": {"value" : "bjo-Latn-ZZ"}, "frs": {"value" : "frs-Latn-DE"}, "io": {"value" : "io-Latn-001"}, "und-EH": {"value" : "ar-Arab-EH"}, "bjn":
    {"value" : "bjn-Latn-ID"}, "frr": {"value" : "frr-Latn-DE"}, "und-EG": {"value" : "ar-Arab-EG"}, "is": {"value" : "is-Latn-IS"}, "sld": {"value" : "sld-Latn-ZZ"}, "bjr": {"value" : "bjr-Latn-ZZ"}, "it": {"value" : "it-Latn-IT"}, "iu": {"value" : "iu-Cans-CA"}, "und-ER": {"value" : "ti-Ethi-ER"}, "bjt": {"value" : "bjt-Latn-SN"}, "iw": {"value" : "iw-Hebr-IL"}, "und-Tirh": {"value" : "mai-Tirh-IN"}, "sli": {"value" : "sli-Latn-PL"}, "und-EU": {"value" : "en-Latn-GB"}, "wtm": {"value" : "wtm-Deva-IN"}, "sll":
    {"value" : "sll-Latn-ZZ"}, "und-ET": {"value" : "am-Ethi-ET"}, "bjz": {"value" : "bjz-Latn-ZZ"}, "und-ES": {"value" : "es-Latn-ES"}, "und-EZ": {"value" : "de-Latn-EZ"}, "ja": {"value" : "ja-Jpan-JP"}, "zh-GF": {"value" : "zh-Hant-GF"}, "bkc": {"value" : "bkc-Latn-ZZ"}, "zh-GB": {"value" : "zh-Hant-GB"}, "und-Cyrl-GR": {"value" : "mk-Cyrl-GR"}, "ji": {"value" : "ji-Hebr-UA"}, "und-DE": {"value" : "de-Latn-DE"}, "sly": {"value" : "sly-Latn-ID"}, "bkm": {"value" : "bkm-Latn-CM"}, "sma": {"value" : "sma-Latn-SE"}
    , "bkq": {"value" : "bkq-Latn-ZZ"}, "und-DK": {"value" : "da-Latn-DK"}, "und-DJ": {"value" : "aa-Latn-DJ"}, "bkv": {"value" : "bkv-Latn-ZZ"}, "jv": {"value" : "jv-Latn-ID"}, "bku": {"value" : "bku-Latn-PH"}, "jw": {"value" : "jw-Latn-ID"}, "und-DO": {"value" : "es-Latn-DO"}, "smj": {"value" : "smj-Latn-SE"}, "smn": {"value" : "smn-Latn-FI"}, "ka": {"value" : "ka-Geor-GE"}, "smq": {"value" : "smq-Latn-ZZ"}, "wuu": {"value" : "wuu-Hans-CN"}, "smp": {"value" : "smp-Samr-IL"}, "sms": {"value" : "sms-Latn-FI"}
    , "wuv": {"value" : "wuv-Latn-ZZ"}, "und-DZ": {"value" : "ar-Arab-DZ"}, "kg": {"value" : "kg-Latn-CD"}, "und-EA": {"value" : "es-Latn-EA"}, "ki": {"value" : "ki-Latn-KE"}, "kj": {"value" : "kj-Latn-NA"}, "kk": {"value" : "kk-Cyrl-KZ"}, "man-Nkoo": {"value" : "man-Nkoo-GN"}, "und-CD": {"value" : "sw-Latn-CD"}, "kl": {"value" : "kl-Latn-GL"}, "und-Telu": {"value" : "te-Telu-IN"}, "km": {"value" : "km-Khmr-KH"}, "kn": {"value" : "kn-Knda-IN"}, "ko": {"value" : "ko-Kore-KR"}, "und-CH": {"value" : "de-Latn-CH"}
    , "und-CG": {"value" : "fr-Latn-CG"}, "und-CF": {"value" : "fr-Latn-CF"}, "kr": {"value" : "kr-Latn-ZZ"}, "ks": {"value" : "ks-Arab-IN"}, "und-CL": {"value" : "es-Latn-CL"}, "snc": {"value" : "snc-Latn-ZZ"}, "ku": {"value" : "ku-Latn-TR"}, "blt": {"value" : "blt-Tavt-VN"}, "kv": {"value" : "kv-Cyrl-RU"}, "und-CI": {"value" : "fr-Latn-CI"}, "kw": {"value" : "kw-Latn-GB"}, "und-CP": {"value" : "und-Latn-CP"}, "und-CO": {"value" : "es-Latn-CO"}, "ky": {"value" : "ky-Cyrl-KG"}, "und-CN": {"value" : "zh-Hans-CN"}
    , "und-CM": {"value" : "fr-Latn-CM"}, "snk": {"value" : "snk-Latn-ML"}, "fub": {"value" : "fub-Arab-CM"}, "und-CR": {"value" : "es-Latn-CR"}, "fud": {"value" : "fud-Latn-WF"}, "snp": {"value" : "snp-Latn-ZZ"}, "la": {"value" : "la-Latn-VA"}, "und-CW": {"value" : "pap-Latn-CW"}, "fuf": {"value" : "fuf-Latn-GN"}, "lb": {"value" : "lb-Latn-LU"}, "und-CV": {"value" : "pt-Latn-CV"}, "fue": {"value" : "fue-Latn-ZZ"}, "und-CU": {"value" : "es-Latn-CU"}, "fuh": {"value" : "fuh-Latn-ZZ"}, "und-CZ": {"value" : "cs-Latn-CZ"}
    , "lg": {"value" : "lg-Latn-UG"}, "und-CY": {"value" : "el-Grek-CY"}, "bmh": {"value" : "bmh-Latn-ZZ"}, "snx": {"value" : "snx-Latn-ZZ"}, "li": {"value" : "li-Latn-NL"}, "sny": {"value" : "sny-Latn-ZZ"}, "wwa": {"value" : "wwa-Latn-ZZ"}, "bmk": {"value" : "bmk-Latn-ZZ"}, "und-Cher": {"value" : "chr-Cher-US"}, "fur": {"value" : "fur-Latn-IT"}, "ln": {"value" : "ln-Latn-CD"}, "und-BA": {"value" : "bs-Latn-BA"}, "fuq": {"value" : "fuq-Latn-NE"}, "lo": {"value" : "lo-Laoo-LA"}, "und-BG": {"value" : "bg-Cyrl-BG"}
    , "und-BF": {"value" : "fr-Latn-BF"}, "fuv": {"value" : "fuv-Latn-NG"}, "und-BE": {"value" : "nl-Latn-BE"}, "bmq": {"value" : "bmq-Latn-ML"}, "und-BD": {"value" : "bn-Beng-BD"}, "lt": {"value" : "lt-Latn-LT"}, "lu": {"value" : "lu-Latn-CD"}, "und-BJ": {"value" : "fr-Latn-BJ"}, "lv": {"value" : "lv-Latn-LV"}, "ogc": {"value" : "ogc-Latn-ZZ"}, "sog": {"value" : "sog-Sogd-UZ"}, "und-BI": {"value" : "rn-Latn-BI"}, "bmu": {"value" : "bmu-Latn-ZZ"}, "fuy": {"value" : "fuy-Latn-ZZ"}, "und-BH": {"value" : "ar-Arab-BH"}
    , "und-BO": {"value" : "es-Latn-BO"}, "und-BN": {"value" : "ms-Latn-BN"}, "sok": {"value" : "sok-Latn-ZZ"}, "und-BL": {"value" : "fr-Latn-BL"}, "und-BR": {"value" : "pt-Latn-BR"}, "und-BQ": {"value" : "pap-Latn-BQ"}, "soq": {"value" : "soq-Latn-ZZ"}, "und-BV": {"value" : "und-Latn-BV"}, "und-BT": {"value" : "dz-Tibt-BT"}, "sou": {"value" : "sou-Thai-TH"}, "bng": {"value" : "bng-Latn-ZZ"}, "mg": {"value" : "mg-Latn-MG"}, "und-BY": {"value" : "be-Cyrl-BY"}, "und-Glag": {"value" : "cu-Glag-BG"}, "mh": {"value"
    : "mh-Latn-MH"}, "mi": {"value" : "mi-Latn-NZ"}, "soy": {"value" : "soy-Latn-ZZ"}, "mk": {"value" : "mk-Cyrl-MK"}, "ml": {"value" : "ml-Mlym-IN"}, "bnm": {"value" : "bnm-Latn-ZZ"}, "mn": {"value" : "mn-Cyrl-MN"}, "mo": {"value" : "mo-Latn-RO"}, "und-Prti": {"value" : "xpr-Prti-IR"}, "fvr": {"value" : "fvr-Latn-SD"}, "und-AF": {"value" : "fa-Arab-AF"}, "bnp": {"value" : "bnp-Latn-ZZ"}, "mr": {"value" : "mr-Deva-IN"}, "und-AE": {"value" : "ar-Arab-AE"}, "ms": {"value" : "ms-Latn-MY"}, "spd": {"value" : "spd-Latn-ZZ"}
    , "und-AD": {"value" : "ca-Latn-AD"}, "mt": {"value" : "mt-Latn-MT"}, "my": {"value" : "my-Mymr-MM"}, "zh-BN": {"value" : "zh-Hant-BN"}, "und-AM": {"value" : "hy-Armn-AM"}, "spl": {"value" : "spl-Latn-ZZ"}, "und-AL": {"value" : "sq-Latn-AL"}, "und-AR": {"value" : "es-Latn-AR"}, "und-AQ": {"value" : "und-Latn-AQ"}, "na": {"value" : "na-Latn-NR"}, "und-AO": {"value" : "pt-Latn-AO"}, "nb": {"value" : "nb-Latn-NO"}, "nd": {"value" : "nd-Latn-ZW"}, "und-AT": {"value" : "de-Latn-AT"}, "ne": {"value" : "ne-Deva-NP"}
    , "sps": {"value" : "sps-Latn-ZZ"}, "und-AS": {"value" : "sm-Latn-AS"}, "und-AZ": {"value" : "az-Latn-AZ"}, "ng": {"value" : "ng-Latn-NA"}, "und-AX": {"value" : "sv-Latn-AX"}, "und-AW": {"value" : "nl-Latn-AW"}, "boj": {"value" : "boj-Latn-ZZ"}, "nl": {"value" : "nl-Latn-NL"}, "bon": {"value" : "bon-Latn-ZZ"}, "nn": {"value" : "nn-Latn-NO"}, "bom": {"value" : "bom-Latn-ZZ"}, "no": {"value" : "no-Latn-NO"}, "nr": {"value" : "nr-Latn-ZA"}, "arc-Nbat": {"value" : "arc-Nbat-JO"}, "und-Medf": {"value" : "mis-Medf-NG"}
    , "nv": {"value" : "nv-Latn-US"}, "kaa": {"value" : "kaa-Cyrl-UZ"}, "ny": {"value" : "ny-Latn-MW"}, "kac": {"value" : "kac-Latn-MM"}, "kab": {"value" : "kab-Latn-DZ"}, "kad": {"value" : "kad-Latn-ZZ"}, "kai": {"value" : "kai-Latn-ZZ"}, "oc": {"value" : "oc-Latn-FR"}, "zh-AU": {"value" : "zh-Hant-AU"}, "kaj": {"value" : "kaj-Latn-NG"}, "kam": {"value" : "kam-Latn-KE"}, "und-Tagb": {"value" : "tbw-Tagb-PH"}, "kao": {"value" : "kao-Latn-ML"}, "und-Ogam": {"value" : "sga-Ogam-IE"}, "om": {"value" : "om-Latn-ET"}
    , "srb": {"value" : "srb-Sora-IN"}, "or": {"value" : "or-Orya-IN"}, "tg-Arab": {"value" : "tg-Arab-PK"}, "os": {"value" : "os-Cyrl-GE"}, "und-Sogd": {"value" : "sog-Sogd-UZ"}, "bpy": {"value" : "bpy-Beng-IN"}, "kbd": {"value" : "kbd-Cyrl-RU"}, "srn": {"value" : "srn-Latn-SR"}, "pa": {"value" : "pa-Guru-IN"}, "srr": {"value" : "srr-Latn-SN"}, "bqc": {"value" : "bqc-Latn-ZZ"}, "und-Kthi": {"value" : "bho-Kthi-IN"}, "kbm": {"value" : "kbm-Latn-ZZ"}, "kbp": {"value" : "kbp-Latn-ZZ"}, "srx": {"value" : "srx-Deva-IN"}
    , "bqi": {"value" : "bqi-Arab-IR"}, "kbq": {"value" : "kbq-Latn-ZZ"}, "pl": {"value" : "pl-Latn-PL"}, "bqp": {"value" : "bqp-Latn-ZZ"}, "kbx": {"value" : "kbx-Latn-ZZ"}, "kby": {"value" : "kby-Arab-NE"}, "ps": {"value" : "ps-Arab-AF"}, "pt": {"value" : "pt-Latn-BR"}, "ssd": {"value" : "ssd-Latn-ZZ"}, "und-Nkoo": {"value" : "man-Nkoo-GN"}, "bqv": {"value" : "bqv-Latn-CI"}, "ssg": {"value" : "ssg-Latn-ZZ"}, "und-Mymr": {"value" : "my-Mymr-MM"}, "kcg": {"value" : "kcg-Latn-NG"}, "bra": {"value" : "bra-Deva-IN"}
    , "kck": {"value" : "kck-Latn-ZW"}, "kcl": {"value" : "kcl-Latn-ZZ"}, "okr": {"value" : "okr-Latn-ZZ"}, "ssy": {"value" : "ssy-Latn-ER"}, "brh": {"value" : "brh-Arab-PK"}, "okv": {"value" : "okv-Latn-ZZ"}, "kct": {"value" : "kct-Latn-ZZ"}, "und-Hani": {"value" : "zh-Hani-CN"}, "und-Bugi": {"value" : "bug-Bugi-ID"}, "und-Hang": {"value" : "ko-Hang-KR"}, "qu": {"value" : "qu-Latn-PE"}, "brx": {"value" : "brx-Deva-IN"}, "und-Samr": {"value" : "smp-Samr-IL"}, "brz": {"value" : "brz-Latn-ZZ"}, "stk": {"value"
    : "stk-Latn-ZZ"}, "und-Hano": {"value" : "hnn-Hano-PH"}, "kde": {"value" : "kde-Latn-TZ"}, "kdh": {"value" : "kdh-Arab-TG"}, "stq": {"value" : "stq-Latn-DE"}, "kdl": {"value" : "kdl-Latn-ZZ"}, "bsj": {"value" : "bsj-Latn-ZZ"}, "und-Hanb": {"value" : "zh-Hanb-TW"}, "kdt": {"value" : "kdt-Thai-TH"}, "rm": {"value" : "rm-Latn-CH"}, "rn": {"value" : "rn-Latn-BI"}, "ro": {"value" : "ro-Latn-RO"}, "sua": {"value" : "sua-Latn-ZZ"}, "und-Deva-BT": {"value" : "ne-Deva-BT"}, "bsq": {"value" : "bsq-Bass-LR"}, "bst":
    {"value" : "bst-Ethi-ZZ"}, "sue": {"value" : "sue-Latn-ZZ"}, "bss": {"value" : "bss-Latn-CM"}, "ru": {"value" : "ru-Cyrl-RU"}, "und-Buhd": {"value" : "bku-Buhd-PH"}, "rw": {"value" : "rw-Latn-RW"}, "kea": {"value" : "kea-Latn-CV"}, "suk": {"value" : "suk-Latn-TZ"}, "grc-Linb": {"value" : "grc-Linb-GR"}, "sa": {"value" : "sa-Deva-IN"}, "sc": {"value" : "sc-Latn-IT"}, "sus": {"value" : "sus-Latn-GN"}, "sd": {"value" : "sd-Arab-PK"}, "sur": {"value" : "sur-Latn-ZZ"}, "se": {"value" : "se-Latn-NO"}, "sg": {"value"
    : "sg-Latn-CF"}, "ken": {"value" : "ken-Latn-CM"}, "si": {"value" : "si-Sinh-LK"}, "und-Hant": {"value" : "zh-Hant-TW"}, "und-Hans": {"value" : "zh-Hans-CN"}, "sk": {"value" : "sk-Latn-SK"}, "sl": {"value" : "sl-Latn-SI"}, "sm": {"value" : "sm-Latn-WS"}, "sn": {"value" : "sn-Latn-ZW"}, "bto": {"value" : "bto-Latn-PH"}, "so": {"value" : "so-Latn-SO"}, "sq": {"value" : "sq-Latn-AL"}, "sr": {"value" : "sr-Cyrl-RS"}, "ss": {"value" : "ss-Latn-ZA"}, "kez": {"value" : "kez-Latn-ZZ"}, "st": {"value" : "st-Latn-ZA"}
    , "su": {"value" : "su-Latn-ID"}, "btt": {"value" : "btt-Latn-ZZ"}, "sv": {"value" : "sv-Latn-SE"}, "sw": {"value" : "sw-Latn-TZ"}, "btv": {"value" : "btv-Deva-PK"}, "ong": {"value" : "ong-Latn-ZZ"}, "ta": {"value" : "ta-Taml-IN"}, "onn": {"value" : "onn-Latn-ZZ"}, "bua": {"value" : "bua-Cyrl-RU"}, "bud": {"value" : "bud-Latn-ZZ"}, "buc": {"value" : "buc-Latn-YT"}, "te": {"value" : "te-Telu-IN"}, "tg": {"value" : "tg-Cyrl-TJ"}, "th": {"value" : "th-Thai-TH"}, "und-Gong": {"value" : "wsg-Gong-IN"}, "bug":
    {"value" : "bug-Latn-ID"}, "kfo": {"value" : "kfo-Latn-CI"}, "ons": {"value" : "ons-Latn-ZZ"}, "ti": {"value" : "ti-Ethi-ET"}, "kfr": {"value" : "kfr-Deva-IN"}, "tk": {"value" : "tk-Latn-TM"}, "tl": {"value" : "tl-Latn-PH"}, "und-Lisu": {"value" : "lis-Lisu-CN"}, "buk": {"value" : "buk-Latn-ZZ"}, "tn": {"value" : "tn-Latn-ZA"}, "bum": {"value" : "bum-Latn-CM"}, "to": {"value" : "to-Latn-TO"}, "buo": {"value" : "buo-Latn-ZZ"}, "swc": {"value" : "swc-Latn-CD"}, "tr": {"value" : "tr-Latn-TR"}, "und-Gonm": {"value"
    : "esg-Gonm-IN"}, "kfy": {"value" : "kfy-Deva-IN"}, "swb": {"value" : "swb-Arab-YT"}, "ts": {"value" : "ts-Latn-ZA"}, "tt": {"value" : "tt-Cyrl-RU"}, "bus": {"value" : "bus-Latn-ZZ"}, "swg": {"value" : "swg-Latn-DE"}, "buu": {"value" : "buu-Latn-ZZ"}, "ty": {"value" : "ty-Latn-PF"}, "kge": {"value" : "kge-Latn-ID"}, "kgf": {"value" : "kgf-Latn-ZZ"}, "swp": {"value" : "swp-Latn-ZZ"}, "bvb": {"value" : "bvb-Latn-GQ"}, "ug": {"value" : "ug-Arab-CN"}, "swv": {"value" : "swv-Deva-IN"}, "kgp": {"value" : "kgp-Latn-BR"}
    , "uk": {"value" : "uk-Cyrl-UA"}, "ur": {"value" : "ur-Arab-PK"}, "kk-IR": {"value" : "kk-Arab-IR"}, "khb": {"value" : "khb-Talu-CN"}, "kha": {"value" : "kha-Latn-IN"}, "uz": {"value" : "uz-Latn-UZ"}, "sxn": {"value" : "sxn-Latn-ID"}, "xav": {"value" : "xav-Latn-BR"}, "opm": {"value" : "opm-Latn-ZZ"}, "bwd": {"value" : "bwd-Latn-ZZ"}, "und-Mlym": {"value" : "ml-Mlym-IN"}, "ve": {"value" : "ve-Latn-ZA"}, "khn": {"value" : "khn-Deva-IN"}, "sxw": {"value" : "sxw-Latn-ZZ"}, "vi": {"value" : "vi-Latn-VN"}, "khq":
    {"value" : "khq-Latn-ML"}, "kht": {"value" : "kht-Mymr-IN"}, "khs": {"value" : "khs-Latn-ZZ"}, "vo": {"value" : "vo-Latn-001"}, "khw": {"value" : "khw-Arab-PK"}, "bwr": {"value" : "bwr-Latn-ZZ"}, "khz": {"value" : "khz-Latn-ZZ"}, "und-ZW": {"value" : "sn-Latn-ZW"}, "xbi": {"value" : "xbi-Latn-ZZ"}, "gaa": {"value" : "gaa-Latn-GH"}, "syl": {"value" : "syl-Beng-BD"}, "wa": {"value" : "wa-Latn-BE"}, "gag": {"value" : "gag-Latn-MD"}, "gaf": {"value" : "gaf-Latn-ZZ"}, "kij": {"value" : "kij-Latn-ZZ"}, "syr":
    {"value" : "syr-Syrc-IQ"}, "und-YE": {"value" : "ar-Arab-YE"}, "gah": {"value" : "gah-Latn-ZZ"}, "gaj": {"value" : "gaj-Latn-ZZ"}, "gam": {"value" : "gam-Latn-ZZ"}, "bxh": {"value" : "bxh-Latn-ZZ"}, "gan": {"value" : "gan-Hans-CN"}, "kiu": {"value" : "kiu-Latn-TR"}, "kiw": {"value" : "kiw-Latn-ZZ"}, "wo": {"value" : "wo-Latn-SN"}, "gaw": {"value" : "gaw-Latn-ZZ"}, "und-Sarb": {"value" : "xsa-Sarb-YE"}, "gay": {"value" : "gay-Latn-ID"}, "und-YT": {"value" : "fr-Latn-YT"}, "kjd": {"value" : "kjd-Latn-ZZ"}
    , "szl": {"value" : "szl-Latn-PL"}, "xco": {"value" : "xco-Chrs-UZ"}, "xcr": {"value" : "xcr-Cari-TR"}, "gba": {"value" : "gba-Latn-ZZ"}, "und-Mult": {"value" : "skr-Mult-PK"}, "kjg": {"value" : "kjg-Laoo-LA"}, "gbf": {"value" : "gbf-Latn-ZZ"}, "oro": {"value" : "oro-Latn-ZZ"}, "und-Hatr": {"value" : "mis-Hatr-IQ"}, "bye": {"value" : "bye-Latn-ZZ"}, "xh": {"value" : "xh-Latn-ZA"}, "gbm": {"value" : "gbm-Deva-IN"}, "oru": {"value" : "oru-Arab-ZZ"}, "kjs": {"value" : "kjs-Latn-ZZ"}, "byn": {"value" : "byn-Ethi-ER"}
    , "und-XK": {"value" : "sq-Latn-XK"}, "yue-CN": {"value" : "yue-Hans-CN"}, "und-Lepc": {"value" : "lep-Lepc-IN"}, "byr": {"value" : "byr-Latn-ZZ"}, "kjy": {"value" : "kjy-Latn-ZZ"}, "osa": {"value" : "osa-Osge-US"}, "bys": {"value" : "bys-Latn-ZZ"}, "byv": {"value" : "byv-Latn-CM"}, "gbz": {"value" : "gbz-Arab-IR"}, "gby": {"value" : "gby-Latn-ZZ"}, "byx": {"value" : "byx-Latn-ZZ"}, "kkc": {"value" : "kkc-Latn-ZZ"}, "und-VU": {"value" : "bi-Latn-VU"}, "bza": {"value" : "bza-Latn-ZZ"}, "und-Goth": {"value"
    : "got-Goth-UA"}, "kkj": {"value" : "kkj-Latn-CM"}, "bze": {"value" : "bze-Latn-ML"}, "und-Avst": {"value" : "ae-Avst-IR"}, "bzf": {"value" : "bzf-Latn-ZZ"}, "yi": {"value" : "yi-Hebr-001"}, "bzh": {"value" : "bzh-Latn-ZZ"}, "und-WF": {"value" : "fr-Latn-WF"}, "yo": {"value" : "yo-Latn-NG"}, "gcr": {"value" : "gcr-Latn-GF"}, "ota": {"value" : "ota-Arab-ZZ"}, "und-WS": {"value" : "sm-Latn-WS"}, "bzw": {"value" : "bzw-Latn-ZZ"}, "und-UZ": {"value" : "uz-Latn-UZ"}, "und-UY": {"value" : "es-Latn-UY"}, "otk":
    {"value" : "otk-Orkh-MN"}, "xes": {"value" : "xes-Latn-ZZ"}, "za": {"value" : "za-Latn-CN"}, "gde": {"value" : "gde-Latn-ZZ"}, "kln": {"value" : "kln-Latn-KE"}, "und-VA": {"value" : "it-Latn-VA"}, "zh": {"value" : "zh-Hans-CN"}, "gdn": {"value" : "gdn-Latn-ZZ"}, "klq": {"value" : "klq-Latn-ZZ"}, "und-Saur": {"value" : "saz-Saur-IN"}, "klt": {"value" : "klt-Latn-ZZ"}, "und-VE": {"value" : "es-Latn-VE"}, "gdr": {"value" : "gdr-Latn-ZZ"}, "klx": {"value" : "klx-Latn-ZZ"}, "und-VN": {"value" : "vi-Latn-VN"}
    , "kk-MN": {"value" : "kk-Arab-MN"}, "zu": {"value" : "zu-Latn-ZA"}, "und-Armn": {"value" : "hy-Armn-AM"}, "kmb": {"value" : "kmb-Latn-AO"}, "und-TR": {"value" : "tr-Latn-TR"}, "geb": {"value" : "geb-Latn-ZZ"}, "und-TW": {"value" : "zh-Hant-TW"}, "kmh": {"value" : "kmh-Latn-ZZ"}, "und-TV": {"value" : "tvl-Latn-TV"}, "und-TZ": {"value" : "sw-Latn-TZ"}, "kmo": {"value" : "kmo-Latn-ZZ"}, "gej": {"value" : "gej-Latn-ZZ"}, "und-UA": {"value" : "uk-Cyrl-UA"}, "gel": {"value" : "gel-Latn-ZZ"}, "kms": {"value" :
    "kms-Latn-ZZ"}, "kmu": {"value" : "kmu-Latn-ZZ"}, "kmw": {"value" : "kmw-Latn-ZZ"}, "und-Tibt": {"value" : "bo-Tibt-CN"}, "und-UG": {"value" : "sw-Latn-UG"}, "und-Armi": {"value" : "arc-Armi-IR"}, "gez": {"value" : "gez-Ethi-ET"}, "und-ST": {"value" : "pt-Latn-ST"}, "knf": {"value" : "knf-Latn-GW"}, "und-SR": {"value" : "nl-Latn-SR"}, "und-SV": {"value" : "es-Latn-SV"}, "und-SY": {"value" : "ar-Arab-SY"}, "knp": {"value" : "knp-Latn-ZZ"}, "gfk": {"value" : "gfk-Latn-ZZ"}, "und-TD": {"value" : "fr-Latn-TD"}
    , "und-TH": {"value" : "th-Thai-TH"}, "und-TG": {"value" : "fr-Latn-TG"}, "und-TF": {"value" : "fr-Latn-TF"}, "und-TM": {"value" : "tk-Latn-TM"}, "und-TL": {"value" : "pt-Latn-TL"}, "und-TK": {"value" : "tkl-Latn-TK"}, "und-TJ": {"value" : "tg-Cyrl-TJ"}, "und-TO": {"value" : "to-Latn-TO"}, "und-TN": {"value" : "ar-Arab-TN"}, "und-RS": {"value" : "sr-Cyrl-RS"}, "koi": {"value" : "koi-Cyrl-RU"}, "und-RW": {"value" : "rw-Latn-RW"}, "kok": {"value" : "kok-Deva-IN"}, "und-RU": {"value" : "ru-Cyrl-RU"}, "kol":
    {"value" : "kol-Latn-ZZ"}, "kos": {"value" : "kos-Latn-FM"}, "ggn": {"value" : "ggn-Deva-NP"}, "und-SD": {"value" : "ar-Arab-SD"}, "und-SC": {"value" : "fr-Latn-SC"}, "und-SA": {"value" : "ar-Arab-SA"}, "koz": {"value" : "koz-Latn-ZZ"}, "und-SE": {"value" : "sv-Latn-SE"}, "und-SK": {"value" : "sk-Latn-SK"}, "und-SJ": {"value" : "nb-Latn-SJ"}, "und-SI": {"value" : "sl-Latn-SI"}, "taj": {"value" : "taj-Deva-NP"}, "und-SO": {"value" : "so-Latn-SO"}, "tal": {"value" : "tal-Latn-ZZ"}, "und-SN": {"value" : "fr-Latn-SN"}
    , "und-Osge": {"value" : "osa-Osge-US"}, "und-SM": {"value" : "it-Latn-SM"}, "kpf": {"value" : "kpf-Latn-ZZ"}, "tan": {"value" : "tan-Latn-ZZ"}, "kpe": {"value" : "kpe-Latn-LR"}, "und-QO": {"value" : "en-Latn-DG"}, "taq": {"value" : "taq-Latn-ZZ"}, "kpo": {"value" : "kpo-Latn-ZZ"}, "kpr": {"value" : "kpr-Latn-ZZ"}, "kpx": {"value" : "kpx-Latn-ZZ"}, "ghs": {"value" : "ghs-Latn-ZZ"}, "und-Lana": {"value" : "nod-Lana-TH"}, "tbc": {"value" : "tbc-Latn-ZZ"}, "und-RE": {"value" : "fr-Latn-RE"}, "tbd": {"value"
    : "tbd-Latn-ZZ"}, "tbg": {"value" : "tbg-Latn-ZZ"}, "tbf": {"value" : "tbf-Latn-ZZ"}, "und-RO": {"value" : "ro-Latn-RO"}, "kqb": {"value" : "kqb-Latn-ZZ"}, "tbo": {"value" : "tbo-Latn-ZZ"}, "kqf": {"value" : "kqf-Latn-ZZ"}, "und-PT": {"value" : "pt-Latn-PT"}, "und-PS": {"value" : "ar-Arab-PS"}, "cad": {"value" : "cad-Latn-US"}, "und-PR": {"value" : "es-Latn-PR"}, "tbw": {"value" : "tbw-Latn-PH"}, "und-PY": {"value" : "gn-Latn-PY"}, "gim": {"value" : "gim-Latn-ZZ"}, "und-PW": {"value" : "pau-Latn-PW"}, "gil":
    {"value" : "gil-Latn-KI"}, "kqs": {"value" : "kqs-Latn-ZZ"}, "tbz": {"value" : "tbz-Latn-ZZ"}, "und-Laoo": {"value" : "lo-Laoo-LA"}, "can": {"value" : "can-Latn-ZZ"}, "und-QA": {"value" : "ar-Arab-QA"}, "kqy": {"value" : "kqy-Ethi-ZZ"}, "ms-CC": {"value" : "ms-Arab-CC"}, "tci": {"value" : "tci-Latn-ZZ"}, "krc": {"value" : "krc-Cyrl-RU"}, "krj": {"value" : "krj-Latn-PH"}, "kri": {"value" : "kri-Latn-SL"}, "ozm": {"value" : "ozm-Latn-ZZ"}, "und-OM": {"value" : "ar-Arab-OM"}, "krl": {"value" : "krl-Latn-RU"}
    , "gjk": {"value" : "gjk-Arab-PK"}, "cbj": {"value" : "cbj-Latn-ZZ"}, "gjn": {"value" : "gjn-Latn-ZZ"}, "tcy": {"value" : "tcy-Knda-IN"}, "xla": {"value" : "xla-Latn-ZZ"}, "krs": {"value" : "krs-Latn-ZZ"}, "xlc": {"value" : "xlc-Lyci-TR"}, "kru": {"value" : "kru-Deva-IN"}, "und-PA": {"value" : "es-Latn-PA"}, "xld": {"value" : "xld-Lydi-TR"}, "gju": {"value" : "gju-Arab-PK"}, "und-PE": {"value" : "es-Latn-PE"}, "tdd": {"value" : "tdd-Tale-CN"}, "tdg": {"value" : "tdg-Deva-NP"}, "tdh": {"value" : "tdh-Deva-NP"}
    , "und-PH": {"value" : "fil-Latn-PH"}, "und-PG": {"value" : "tpi-Latn-PG"}, "ksb": {"value" : "ksb-Latn-TZ"}, "und-PF": {"value" : "fr-Latn-PF"}, "und-PM": {"value" : "fr-Latn-PM"}, "ksd": {"value" : "ksd-Latn-ZZ"}, "und-PL": {"value" : "pl-Latn-PL"}, "und-PK": {"value" : "ur-Arab-PK"}, "ksf": {"value" : "ksf-Latn-CM"}};
},
otciu_CLDRHelper_getDefaultLocale$$create = () => {
    return {"value" : "en_GB"};
},
otciu_CLDRHelper_getMinimalDaysInFirstWeek$$create = () => {
    return {"DE": {"value" : 4}, "PT": {"value" : 4}, "DK": {"value" : 4}, "LT": {"value" : 4}, "LU": {"value" : 4}, "HU": {"value" : 4}, "MC": {"value" : 4}, "UM": {"value" : 1}, "IE": {"value" : 4}, "US": {"value" : 1}, "EE": {"value" : 4}, "AD": {"value" : 4}, "IM": {"value" : 4}, "MQ": {"value" : 4}, "IS": {"value" : 4}, "IT": {"value" : 4}, "VA": {"value" : 4}, "AN": {"value" : 4}, "ES": {"value" : 4}, "001": {"value" : 1}, "AT": {"value" : 4}, "RE": {"value" : 4}, "VI": {"value" : 1}, "AX": {"value" :
    4}, "JE": {"value" : 4}, "NL": {"value" : 4}, "NO": {"value" : 4}, "BE": {"value" : 4}, "FI": {"value" : 4}, "RU": {"value" : 4}, "FJ": {"value" : 4}, "BG": {"value" : 4}, "FO": {"value" : 4}, "FR": {"value" : 4}, "SE": {"value" : 4}, "SJ": {"value" : 4}, "SK": {"value" : 4}, "SM": {"value" : 4}, "GB": {"value" : 4}, "GF": {"value" : 4}, "GG": {"value" : 4}, "GI": {"value" : 4}, "CH": {"value" : 4}, "GP": {"value" : 4}, "GR": {"value" : 4}, "GU": {"value" : 1}, "CZ": {"value" : 4}, "PL": {"value" : 4}, "LI":
    {"value" : 4}};
},
otciu_CLDRHelper_getFirstDayOfWeek$$create = () => {
    return {"PR": {"value" : 1}, "HK": {"value" : 1}, "PT": {"value" : 1}, "HN": {"value" : 1}, "PY": {"value" : 1}, "HR": {"value" : 2}, "YE": {"value" : 1}, "HU": {"value" : 2}, "QA": {"value" : 7}, "ID": {"value" : 1}, "IE": {"value" : 2}, "AD": {"value" : 2}, "IL": {"value" : 1}, "AE": {"value" : 7}, "AF": {"value" : 7}, "IN": {"value" : 1}, "AG": {"value" : 1}, "ZA": {"value" : 1}, "AI": {"value" : 2}, "IQ": {"value" : 7}, "IR": {"value" : 7}, "IS": {"value" : 2}, "AL": {"value" : 2}, "IT": {"value" : 2}
    , "AM": {"value" : 2}, "AN": {"value" : 2}, "001": {"value" : 2}, "AR": {"value" : 2}, "AS": {"value" : 1}, "AT": {"value" : 2}, "RE": {"value" : 2}, "AU": {"value" : 1}, "AX": {"value" : 2}, "AZ": {"value" : 2}, "RO": {"value" : 2}, "ZW": {"value" : 1}, "BA": {"value" : 2}, "RS": {"value" : 2}, "BD": {"value" : 1}, "BE": {"value" : 2}, "JM": {"value" : 1}, "RU": {"value" : 2}, "BG": {"value" : 2}, "JO": {"value" : 7}, "BH": {"value" : 7}, "JP": {"value" : 1}, "BM": {"value" : 2}, "BN": {"value" : 2}, "SA":
    {"value" : 1}, "BR": {"value" : 1}, "BS": {"value" : 1}, "SD": {"value" : 7}, "BT": {"value" : 1}, "SE": {"value" : 2}, "SG": {"value" : 1}, "BW": {"value" : 1}, "SI": {"value" : 2}, "BY": {"value" : 2}, "BZ": {"value" : 1}, "SK": {"value" : 2}, "KE": {"value" : 1}, "SM": {"value" : 2}, "KG": {"value" : 2}, "KH": {"value" : 1}, "CA": {"value" : 1}, "SV": {"value" : 1}, "CH": {"value" : 2}, "SY": {"value" : 7}, "KR": {"value" : 1}, "CL": {"value" : 2}, "CM": {"value" : 2}, "CN": {"value" : 1}, "CO": {"value"
    : 1}, "KW": {"value" : 7}, "CR": {"value" : 2}, "KZ": {"value" : 2}, "TH": {"value" : 1}, "LA": {"value" : 1}, "CY": {"value" : 2}, "LB": {"value" : 2}, "TJ": {"value" : 2}, "CZ": {"value" : 2}, "TM": {"value" : 2}, "LI": {"value" : 2}, "TR": {"value" : 2}, "LK": {"value" : 2}, "TT": {"value" : 1}, "DE": {"value" : 2}, "TW": {"value" : 1}, "DJ": {"value" : 7}, "DK": {"value" : 2}, "LT": {"value" : 2}, "DM": {"value" : 1}, "LU": {"value" : 2}, "LV": {"value" : 2}, "DO": {"value" : 1}, "UA": {"value" : 2}
    , "LY": {"value" : 7}, "DZ": {"value" : 7}, "MC": {"value" : 2}, "MD": {"value" : 2}, "ME": {"value" : 2}, "UM": {"value" : 1}, "MH": {"value" : 1}, "EC": {"value" : 2}, "MK": {"value" : 2}, "US": {"value" : 1}, "EE": {"value" : 2}, "MM": {"value" : 1}, "MN": {"value" : 2}, "EG": {"value" : 7}, "MO": {"value" : 1}, "MQ": {"value" : 2}, "UY": {"value" : 2}, "UZ": {"value" : 2}, "MT": {"value" : 1}, "MV": {"value" : 6}, "MX": {"value" : 1}, "VA": {"value" : 2}, "MY": {"value" : 2}, "MZ": {"value" : 1}, "ES":
    {"value" : 2}, "ET": {"value" : 1}, "VE": {"value" : 1}, "GB-alt-variant": {"value" : 1}, "VI": {"value" : 1}, "VN": {"value" : 2}, "NI": {"value" : 1}, "NL": {"value" : 2}, "NO": {"value" : 2}, "NP": {"value" : 1}, "FI": {"value" : 2}, "FJ": {"value" : 2}, "FO": {"value" : 2}, "FR": {"value" : 2}, "NZ": {"value" : 2}, "GB": {"value" : 2}, "WS": {"value" : 1}, "GE": {"value" : 2}, "OM": {"value" : 7}, "GF": {"value" : 2}, "GP": {"value" : 2}, "GR": {"value" : 2}, "GT": {"value" : 1}, "GU": {"value" : 1}
    , "PA": {"value" : 1}, "XK": {"value" : 2}, "PE": {"value" : 1}, "PH": {"value" : 1}, "PK": {"value" : 1}, "PL": {"value" : 2}};
},
onnrt_NostrTURN$close$lambda$_4_0 = $rt_classWithoutFields(),
onnrt_NostrTURN$close$lambda$_4_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnrt_NostrTURN$close$lambda$_4_0__init_0 = () => {
    let var_0 = new onnrt_NostrTURN$close$lambda$_4_0();
    onnrt_NostrTURN$close$lambda$_4_0__init_(var_0);
    return var_0;
},
onnrt_NostrTURN$close$lambda$_4_0_accept0 = (var$0, var$1) => {
    onnrt_NostrTURN$close$lambda$_4_0_accept(var$0, var$1);
},
onnrt_NostrTURN$close$lambda$_4_0_accept = (var$0, var$1) => {
    onnrt_NostrTURN_lambda$close$0(var$1);
},
onnrt_NostrTURN$close$lambda$_4_1 = $rt_classWithoutFields(),
onnrt_NostrTURN$close$lambda$_4_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnrt_NostrTURN$close$lambda$_4_1__init_0 = () => {
    let var_0 = new onnrt_NostrTURN$close$lambda$_4_1();
    onnrt_NostrTURN$close$lambda$_4_1__init_(var_0);
    return var_0;
},
onnrt_NostrTURN$close$lambda$_4_1_accept0 = (var$0, var$1) => {
    onnrt_NostrTURN$close$lambda$_4_1_accept(var$0, var$1);
},
onnrt_NostrTURN$close$lambda$_4_1_accept = (var$0, var$1) => {
    onnrt_NostrTURN_lambda$close$1(var$1);
};
function onn_NostrSubscription$callCloseListeners$lambda$_16_0() {
    let a = this; jl_Object.call(a);
    a.$_0170 = null;
    a.$_185 = null;
}
let onn_NostrSubscription$callCloseListeners$lambda$_16_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0170 = var$1;
    var$0.$_185 = var$2;
},
onn_NostrSubscription$callCloseListeners$lambda$_16_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrSubscription$callCloseListeners$lambda$_16_0();
    onn_NostrSubscription$callCloseListeners$lambda$_16_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrSubscription$callCloseListeners$lambda$_16_0_call = var$0 => {
    return onn_NostrSubscription_lambda$callCloseListeners$5(var$0.$_0170, var$0.$_185);
},
jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException),
jl_StringIndexOutOfBoundsException__init_1 = $this => {
    jl_IndexOutOfBoundsException__init_0($this);
},
jl_StringIndexOutOfBoundsException__init_ = () => {
    let var_0 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_1(var_0);
    return var_0;
},
jl_StringIndexOutOfBoundsException__init_0 = ($this, $index) => {
    jl_IndexOutOfBoundsException__init_1($this, (((jl_StringBuilder__init_()).$append1($rt_s(1053))).$append3($index)).$toString());
},
jl_StringIndexOutOfBoundsException__init_2 = var_0 => {
    let var_1 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_0(var_1, var_0);
    return var_1;
};
function ju_MissingResourceException() {
    let a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key2 = null;
}
let ju_MissingResourceException__init_ = ($this, $s, $className, $key) => {
    jl_RuntimeException__init_0($this, $s);
    $this.$className = $className;
    $this.$key2 = $key;
},
ju_MissingResourceException__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new ju_MissingResourceException();
    ju_MissingResourceException__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jtt_TemporalQueries$2 = $rt_classWithoutFields(),
jtt_TemporalQueries$2__init_ = $this => {
    jl_Object__init_($this);
},
jtt_TemporalQueries$2__init_0 = () => {
    let var_0 = new jtt_TemporalQueries$2();
    jtt_TemporalQueries$2__init_(var_0);
    return var_0;
},
jtt_TemporalQueries$2_queryFrom0 = ($this, $temporal) => {
    return $temporal.$query($this);
},
jtt_TemporalQueries$2_queryFrom = ($this, var$1) => {
    return $this.$queryFrom1(var$1);
};
function jusi_MappingToIntStreamImpl() {
    let a = this; jusi_SimpleIntStreamImpl.call(a);
    a.$source = null;
    a.$mapper = null;
}
let jusi_MappingToIntStreamImpl__init_ = ($this, $source, $mapper) => {
    jusi_SimpleIntStreamImpl__init_($this);
    $this.$source = $source;
    $this.$mapper = $mapper;
},
jusi_MappingToIntStreamImpl__init_0 = (var_0, var_1) => {
    let var_2 = new jusi_MappingToIntStreamImpl();
    jusi_MappingToIntStreamImpl__init_(var_2, var_0, var_1);
    return var_2;
},
jusi_MappingToIntStreamImpl_next = ($this, $consumer) => {
    return $this.$source.$next1(jusi_MappingToIntStreamImpl$next$lambda$_1_0__init_0($this, $consumer));
},
jusi_MappingToIntStreamImpl_estimateSize = $this => {
    return $this.$source.$estimateSize();
},
jusi_MappingToIntStreamImpl_lambda$next$0 = ($this, $consumer, $e) => {
    return $consumer.$test2($this.$mapper.$applyAsInt($e));
},
jtt_TemporalQueries$1 = $rt_classWithoutFields(),
jtt_TemporalQueries$1__init_ = $this => {
    jl_Object__init_($this);
},
jtt_TemporalQueries$1__init_0 = () => {
    let var_0 = new jtt_TemporalQueries$1();
    jtt_TemporalQueries$1__init_(var_0);
    return var_0;
};
function onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0() {
    let a = this; jl_Object.call(a);
    a.$_044 = null;
    a.$_125 = 0;
    a.$_214 = null;
}
let onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_044 = var$1;
    var$0.$_125 = var$2;
    var$0.$_214 = var$3;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0();
    onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionMessage$29(var$0.$_044, var$0.$_125, var$0.$_214);
},
jtt_TemporalQueries$4 = $rt_classWithoutFields(),
jtt_TemporalQueries$4__init_ = $this => {
    jl_Object__init_($this);
},
jtt_TemporalQueries$4__init_0 = () => {
    let var_0 = new jtt_TemporalQueries$4();
    jtt_TemporalQueries$4__init_(var_0);
    return var_0;
},
jtt_TemporalQueries$3 = $rt_classWithoutFields(),
jtt_TemporalQueries$3__init_ = $this => {
    jl_Object__init_($this);
},
jtt_TemporalQueries$3__init_0 = () => {
    let var_0 = new jtt_TemporalQueries$3();
    jtt_TemporalQueries$3__init_(var_0);
    return var_0;
};
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
let jur_UCIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_UCIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_UCIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter1, $group.$length());
                return $this.$next5.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = jl_Character_toLowerCase(jl_Character_toUpperCase($group.$charAt($i)));
            var$7 = $stringIndex + $i | 0;
            var$7 = jl_Character_toUpperCase($testString.$charAt(var$7));
            if (var$6 != jl_Character_toLowerCase(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_UCIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex1;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(1054)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jtz_JodaRulesProvider() {
    let a = this; jtz_ZoneRulesProvider.call(a);
    a.$zoneIds = null;
    a.$cache = null;
}
let jtz_JodaRulesProvider__init_ = $this => {
    jtz_ZoneRulesProvider__init_($this);
    $this.$cache = ju_HashMap__init_();
},
jtz_JodaRulesProvider__init_0 = () => {
    let var_0 = new jtz_JodaRulesProvider();
    jtz_JodaRulesProvider__init_(var_0);
    return var_0;
},
jtz_JodaRulesProvider_provideZoneIds = $this => {
    if ($this.$zoneIds === null)
        $this.$zoneIds = ju_Collections_unmodifiableSet(ju_HashSet__init_3(ju_Arrays_asList(otcit_DateTimeZoneProvider_getIds())));
    return $this.$zoneIds;
},
jtz_JodaRulesProvider_provideRules = ($this, $regionId, $forCaching) => {
    let $result, $zone;
    $result = $this.$cache.$get1($regionId);
    if ($result === null) {
        $zone = otcit_DateTimeZoneProvider_getTimeZone($regionId);
        if ($zone === null)
            $rt_throw(jtz_ZoneRulesException__init_0($regionId));
        $result = $zone.$asZoneRules();
        $this.$cache.$put1($regionId, $result);
    }
    return $result;
};
function onnrs_NostrRTCOffer() {
    let a = this; jl_Object.call(a);
    a.$pubkey6 = null;
    a.$map1 = null;
    a.$offerString = null;
    a.$turnServer0 = null;
    a.$peerInfo0 = null;
}
let onnrs_NostrRTCOffer__init_ = ($this, $pubkey, $offerString, $turnServer, $misc) => {
    let $map;
    jl_Object__init_($this);
    $this.$pubkey6 = $pubkey;
    $this.$offerString = $offerString;
    $this.$turnServer0 = $turnServer;
    if ($turnServer.$isEmpty())
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1055)));
    $map = ju_HashMap__init_();
    if ($misc !== null && !$misc.$isEmpty())
        $map.$putAll($misc);
    $map.$put1($rt_s(1056), $this.$offerString);
    if ($turnServer !== null && !$turnServer.$isEmpty())
        $map.$put1($rt_s(1029), $turnServer);
    else
        $map.$remove1($rt_s(1029));
    $this.$map1 = ju_Collections_unmodifiableMap($map);
},
onnrs_NostrRTCOffer__init_2 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCOffer();
    onnrs_NostrRTCOffer__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCOffer__init_1 = ($this, $pubkey, $map) => {
    onnrs_NostrRTCOffer__init_($this, $pubkey, onp_NGEUtils_safeString($map.$get1($rt_s(1056))), onp_NGEUtils_safeString($map.$get1($rt_s(1029))), $map);
},
onnrs_NostrRTCOffer__init_0 = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCOffer();
    onnrs_NostrRTCOffer__init_1(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCOffer_getOfferString = $this => {
    return $this.$offerString;
},
onnrs_NostrRTCOffer_getTurnServer = $this => {
    return $this.$turnServer0;
},
onnrs_NostrRTCOffer_get = $this => {
    return $this.$map1;
},
onnrs_NostrRTCOffer_getPeerInfo = $this => {
    if ($this.$peerInfo0 !== null)
        return $this.$peerInfo0;
    $this.$peerInfo0 = onnrs_NostrRTCPeer__init_($this.$pubkey6, $this.$turnServer0, $this.$map1);
    return $this.$peerInfo0;
},
onnrs_NostrRTCOffer_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = jl_String_valueOf($this.$pubkey6);
    var$2 = $this.$map1;
    var$2 = ju_Arrays_deepToString((var$2.$entrySet()).$toArray0());
    var$3 = $this.$offerString;
    var$4 = $this.$turnServer0;
    var$5 = jl_String_valueOf($this.$peerInfo0);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1057)), var$1), $rt_s(1058)), var$2), $rt_s(1059)), var$3), $rt_s(1032)), var$4), $rt_s(1060)), var$5), 125);
    var$1 = jl_StringBuilder_toString(var$6);
    return var$1;
},
onnrs_NostrRTCOffer_getTurnServer$exported$0 = var$1 => {
    return $rt_ustr(var$1.$getTurnServer());
},
onnrs_NostrRTCOffer_getPeerInfo$exported$1 = var$1 => {
    return var$1.$getPeerInfo();
},
onnrs_NostrRTCOffer_getOfferString$exported$2 = var$1 => {
    return $rt_ustr(var$1.$getOfferString());
},
onnrs_NostrRTCOffer_toString$exported$3 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnrs_NostrRTCOffer_get$exported$4 = var$1 => {
    return var$1.$get20();
},
onnrs_NostrRTCOffer__init_$exported$5 = (var$1, var$2, var$3, var$4) => {
    return onnrs_NostrRTCOffer__init_2(var$1, $rt_str(var$2), $rt_str(var$3), var$4);
},
onnrs_NostrRTCOffer__init_$exported$6 = (var$1, var$2) => {
    return onnrs_NostrRTCOffer__init_0(var$1, var$2);
};
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name12 = null;
}
let jn_ByteOrder_BIG_ENDIAN = null,
jn_ByteOrder_LITTLE_ENDIAN = null,
jn_ByteOrder_$callClinit = () => {
    jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
    jn_ByteOrder__clinit_();
},
jn_ByteOrder__init_0 = ($this, $name) => {
    jn_ByteOrder_$callClinit();
    jl_Object__init_($this);
    $this.$name12 = $name;
},
jn_ByteOrder__init_ = var_0 => {
    let var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
},
jn_ByteOrder__clinit_ = () => {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(1061));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(1062));
};
function onn_NostrRelay$QueuedMessage() {
    let a = this; jl_Object.call(a);
    a.$message0 = null;
    a.$res = null;
    a.$rej = null;
}
let onn_NostrRelay$QueuedMessage__init_0 = ($this, $message, $res, $rej) => {
    jl_Object__init_($this);
    $this.$message0 = $message;
    $this.$res = $res;
    $this.$rej = $rej;
},
onn_NostrRelay$QueuedMessage__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$QueuedMessage();
    onn_NostrRelay$QueuedMessage__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$QueuedMessage_equals = ($this, $obj) => {
    if ($this === $obj)
        return 1;
    if ($obj !== null && jl_Object_getClass($this) === jl_Object_getClass($obj))
        return 0;
    return 0;
},
onn_NostrRelay$QueuedMessage_hashCode = $this => {
    return $this.$message0.$hashCode();
},
onn_NostrRelay$QueuedMessage__init_$exported$0 = (var$1, var$2, var$3) => {
    return onn_NostrRelay$QueuedMessage__init_(var$1, var$2, var$3);
},
onn_NostrRelay$QueuedMessage_equals$exported$1 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onn_NostrRelay$QueuedMessage_equals(var$1, var$2);
},
onn_NostrRelay$QueuedMessage_hashCode$exported$2 = var$1 => {
    return onn_NostrRelay$QueuedMessage_hashCode(var$1);
},
jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_DotAllQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_DotAllQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_DotAllQuantifierSet();
    jur_DotAllQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_DotAllQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($strLength > $stringIndex)
        return $this.$next5.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_DotAllQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($this.$next5.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
},
jur_DotAllQuantifierSet_getName = $this => {
    return $rt_s(1063);
};
function onn_NostrFilter() {
    let a = this; onnp_NostrMessageFragment.call(a);
    a.$ids = null;
    a.$authors = null;
    a.$kinds = null;
    a.$since1 = null;
    a.$until1 = null;
    a.$limit3 = null;
    a.$tags = null;
}
let onn_NostrFilter__init_0 = $this => {
    onnp_NostrMessageFragment__init_($this);
},
onn_NostrFilter__init_ = () => {
    let var_0 = new onn_NostrFilter();
    onn_NostrFilter__init_0(var_0);
    return var_0;
},
onn_NostrFilter__init_1 = ($this, $map) => {
    let var$2, $entry, $key, $tagKey, $value;
    onnp_NostrMessageFragment__init_($this);
    if ($map.$containsKey($rt_s(1064)))
        $this.$ids = onp_NGEUtils_safeStringList($map.$get1($rt_s(1064)));
    if ($map.$containsKey($rt_s(1065)))
        $this.$authors = onp_NGEUtils_safeStringList($map.$get1($rt_s(1065)));
    if ($map.$containsKey($rt_s(1066)))
        $this.$kinds = onp_NGEUtils_safeIntList($map.$get1($rt_s(1066)));
    if ($map.$containsKey($rt_s(1067)))
        $this.$since1 = jt_Instant_ofEpochSecond(onp_NGEUtils_safeLong($map.$get1($rt_s(1067))));
    if ($map.$containsKey($rt_s(1068)))
        $this.$until1 = jt_Instant_ofEpochSecond(onp_NGEUtils_safeLong($map.$get1($rt_s(1068))));
    if ($map.$containsKey($rt_s(1069)))
        $this.$limit3 = jl_Integer_valueOf(onp_NGEUtils_safeInt($map.$get1($rt_s(1069))));
    var$2 = ($map.$entrySet()).$iterator();
    while (var$2.$hasNext()) {
        $entry = var$2.$next();
        $key = $entry.$getKey();
        if ($key.$startsWith($rt_s(86))) {
            $tagKey = $key.$substring0(1);
            $value = onp_NGEUtils_safeStringList($entry.$getValue());
            if ($this.$tags === null)
                $this.$tags = ju_HashMap__init_();
            $this.$tags.$put1($tagKey, $value);
        }
    }
},
onn_NostrFilter__init_2 = var_0 => {
    let var_1 = new onn_NostrFilter();
    onn_NostrFilter__init_1(var_1, var_0);
    return var_1;
},
onn_NostrFilter_id = ($this, $id) => {
    if ($this.$ids === null)
        $this.$ids = ju_ArrayList__init_();
    $this.$ids.$add1($id);
    return $this;
},
onn_NostrFilter_getIds = $this => {
    return $this.$ids;
},
onn_NostrFilter_withAuthor = ($this, $author) => {
    if ($this.$authors === null)
        $this.$authors = ju_ArrayList__init_();
    $this.$authors.$add1($author);
    return $this;
},
onn_NostrFilter_withAuthor0 = ($this, $author) => {
    if ($this.$authors === null)
        $this.$authors = ju_ArrayList__init_();
    $this.$authors.$add1(onnk_NostrPublicKey_asHex($author));
    return $this;
},
onn_NostrFilter_getAuthors = $this => {
    return $this.$authors;
},
onn_NostrFilter_withKind = ($this, $kind) => {
    if ($this.$kinds === null)
        $this.$kinds = ju_ArrayList__init_();
    $this.$kinds.$add1(jl_Integer_valueOf($kind));
    return $this;
},
onn_NostrFilter_getKinds = $this => {
    return $this.$kinds;
},
onn_NostrFilter_since = ($this, $since) => {
    $this.$since1 = $since;
    return $this;
},
onn_NostrFilter_getSince = $this => {
    return $this.$since1;
},
onn_NostrFilter_getUntil = $this => {
    return $this.$until1;
},
onn_NostrFilter_until = ($this, $until) => {
    $this.$until1 = $until;
    return $this;
},
onn_NostrFilter_limit = ($this, $limit) => {
    $this.$limit3 = jl_Integer_valueOf($limit);
    return $this;
},
onn_NostrFilter_getLimit = $this => {
    return $this.$limit3;
},
onn_NostrFilter_withTag = ($this, $key, $values) => {
    if ($this.$tags === null)
        $this.$tags = ju_HashMap__init_();
    $this.$tags.$put1($key, ju_Arrays_asList($values));
    return $this;
},
onn_NostrFilter_getTags = $this => {
    return $this.$tags;
},
onn_NostrFilter_getTagValues = ($this, $key) => {
    if ($this.$tags === null)
        return null;
    return $this.$tags.$get1($key);
},
onn_NostrFilter_toMap = $this => {
    let $serial, var$2, $entry, $key, $value, var$6;
    $serial = ju_HashMap__init_();
    if ($this.$ids !== null)
        $serial.$put1($rt_s(1064), $this.$ids);
    if ($this.$authors !== null)
        $serial.$put1($rt_s(1065), $this.$authors);
    if ($this.$kinds !== null)
        $serial.$put1($rt_s(1066), $this.$kinds);
    if ($this.$since1 !== null)
        $serial.$put1($rt_s(1067), jl_Long_valueOf(jt_Instant_getEpochSecond($this.$since1)));
    if ($this.$until1 !== null)
        $serial.$put1($rt_s(1068), jl_Long_valueOf(jt_Instant_getEpochSecond($this.$until1)));
    if ($this.$limit3 !== null)
        $serial.$put1($rt_s(1069), $this.$limit3);
    a: {
        if ($this.$tags !== null) {
            var$2 = ($this.$tags.$entrySet()).$iterator();
            while (true) {
                if (!var$2.$hasNext())
                    break a;
                $entry = var$2.$next();
                $key = $entry.$getKey();
                $value = $entry.$getValue();
                var$6 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append0(var$6, 35), $key);
                $serial.$put1(jl_StringBuilder_toString(var$6), $value);
            }
        }
    }
    return $serial;
},
onn_NostrFilter_withAuthor$exported$0 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$withAuthor(var$2);
},
onn_NostrFilter_getIds$exported$1 = var$1 => {
    return var$1.$getIds0();
},
onn_NostrFilter__init_$exported$2 = var$1 => {
    return onn_NostrFilter__init_2(var$1);
},
onn_NostrFilter_getSince$exported$3 = var$1 => {
    return var$1.$getSince();
};
function onn_NostrFilter_withTag$exported$4(var$1, var$2) {
    let var$3, var$4;
    var$3 = $rt_skip(arguments, 2);
    var$2 = $rt_str(var$2);
    var$4 = otji_JS_unwrapStringArray(var$3);
    return var$1.$withTag2(var$2, var$4);
}
let onn_NostrFilter_until$exported$5 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$until(var$2);
},
onn_NostrFilter_getLimit$exported$6 = var$1 => {
    return var$1.$getLimit();
},
onn_NostrFilter_withKind$exported$7 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return var$1.$withKind0(var$3);
},
onn_NostrFilter_limit$exported$8 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return var$1.$limit0(var$3);
},
onn_NostrFilter_getKinds$exported$9 = var$1 => {
    return var$1.$getKinds();
},
onn_NostrFilter_getTagValues$exported$10 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$getTagValues(var$2);
},
onn_NostrFilter_withAuthor$exported$11 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$withAuthor0(var$2);
},
onn_NostrFilter_getTags$exported$12 = var$1 => {
    return var$1.$getTags0();
},
onn_NostrFilter_getAuthors$exported$13 = var$1 => {
    return var$1.$getAuthors();
},
onn_NostrFilter_getUntil$exported$14 = var$1 => {
    return var$1.$getUntil();
},
onn_NostrFilter_id$exported$15 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$id0(var$2);
},
onn_NostrFilter_since$exported$16 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$since(var$2);
};
function onn_NostrSubscription$callCloseListeners$lambda$_16_1() {
    jl_Object.call(this);
    this.$_0167 = null;
}
let onn_NostrSubscription$callCloseListeners$lambda$_16_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0167 = var$1;
},
onn_NostrSubscription$callCloseListeners$lambda$_16_1__init_0 = var_0 => {
    let var_1 = new onn_NostrSubscription$callCloseListeners$lambda$_16_1();
    onn_NostrSubscription$callCloseListeners$lambda$_16_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrSubscription$callCloseListeners$lambda$_16_1_accept0 = (var$0, var$1) => {
    onn_NostrSubscription$callCloseListeners$lambda$_16_1_accept(var$0, var$1);
},
onn_NostrSubscription$callCloseListeners$lambda$_16_1_accept = (var$0, var$1) => {
    onn_NostrSubscription_lambda$callCloseListeners$6(var$0.$_0167, var$1);
};
function onn_NostrRelayLifecycleManager() {
    let a = this; jl_Object.call(a);
    a.$subTracker = null;
    a.$keepAliveTime = Long_ZERO;
    a.$lastAction = Long_ZERO;
}
let onn_NostrRelayLifecycleManager_logger = null,
onn_NostrRelayLifecycleManager_$assertionsDisabled = 0,
onn_NostrRelayLifecycleManager_$callClinit = () => {
    onn_NostrRelayLifecycleManager_$callClinit = $rt_eraseClinit(onn_NostrRelayLifecycleManager);
    onn_NostrRelayLifecycleManager__clinit_();
},
onn_NostrRelayLifecycleManager__init_ = $this => {
    onn_NostrRelayLifecycleManager_$callClinit();
    jl_Object__init_($this);
    $this.$subTracker = juc_CopyOnWriteArrayList__init_();
    juc_TimeUnit_$callClinit();
    $this.$keepAliveTime = juc_TimeUnit_toSeconds(juc_TimeUnit_MINUTES, Long_fromInt(2));
},
onn_NostrRelayLifecycleManager__init_0 = () => {
    let var_0 = new onn_NostrRelayLifecycleManager();
    onn_NostrRelayLifecycleManager__init_(var_0);
    return var_0;
},
onn_NostrRelayLifecycleManager_setKeepAliveTime = ($this, $time, $unit) => {
    $this.$keepAliveTime = juc_TimeUnit_toSeconds($unit, $time);
},
onn_NostrRelayLifecycleManager_getKeepAliveTime = ($this, $outputUnit) => {
    let var$2;
    var$2 = $this.$keepAliveTime;
    juc_TimeUnit_$callClinit();
    return juc_TimeUnit_convert($outputUnit, var$2, juc_TimeUnit_SECONDS);
},
onn_NostrRelayLifecycleManager_hasActiveSubscription = ($this, $sub) => {
    return $this.$subTracker.$contains($sub.$getSubId());
},
onn_NostrRelayLifecycleManager_onRelayConnect = ($this, $relay) => {
    $this.$keepAlive();
    return 1;
},
onn_NostrRelayLifecycleManager_onRelayMessage = ($this, $relay, $rcv) => {
    let $msg, $subId;
    if ($rcv instanceof onnpi_NostrClosedMessage) {
        $msg = $rcv;
        $subId = $msg.$getSubId();
        $this.$subTracker.$remove2($subId);
    } else if ($rt_isInstance($rcv, onne_NostrEvent))
        $this.$keepAlive();
    return 1;
},
onn_NostrRelayLifecycleManager_keepAlive = $this => {
    $this.$lastAction = jt_Instant_getEpochSecond(jt_Instant_now());
},
onn_NostrRelayLifecycleManager_onRelayError = ($this, $relay, $error) => {
    return 1;
},
onn_NostrRelayLifecycleManager_onRelayLoop = ($this, $relay, $nowInstant) => {
    let $now, var$4, var$5, var$6;
    $now = jt_Instant_getEpochSecond($nowInstant);
    if ($this.$subTracker.$isEmpty() && Long_gt(Long_sub($now, $this.$lastAction), $this.$keepAliveTime)) {
        onn_NostrRelayLifecycleManager_$callClinit();
        var$4 = onn_NostrRelayLifecycleManager_logger;
        var$5 = onn_NostrRelay_getUrl($relay);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1070)), var$5), $rt_s(1071));
        var$4.$fine(jl_StringBuilder_toString(var$6));
        onn_NostrRelay_disconnect($relay, $rt_s(814));
    }
    return 1;
},
onn_NostrRelayLifecycleManager_onRelayDisconnect = ($this, $relay, $reason, $byClient) => {
    $this.$subTracker.$clear();
    return 1;
},
onn_NostrRelayLifecycleManager_onRelaySend = ($this, $relay, $message) => {
    let $sub;
    a: {
        if (!($message instanceof onn_NostrSubscription)) {
            if (!($message instanceof onn_NostrSubscription$NostrSubCloseMessage))
                break a;
            $this.$subTracker.$remove2(onn_NostrSubscription$NostrSubCloseMessage_getId($message));
            onn_NostrRelayLifecycleManager_$callClinit();
            if (onn_NostrRelayLifecycleManager_$assertionsDisabled)
                break a;
            if (onp_NGEUtils_dbg(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2__init_0($message)))
                break a;
            $rt_throw(jl_AssertionError__init_());
        }
        $sub = $message;
        if (!$this.$subTracker.$addIfAbsent($sub.$getSubId())) {
            onn_NostrRelayLifecycleManager_$callClinit();
            if (!onn_NostrRelayLifecycleManager_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1__init_0($sub)))
                $rt_throw(jl_AssertionError__init_());
            return 0;
        }
        onn_NostrRelayLifecycleManager_$callClinit();
        if (!onn_NostrRelayLifecycleManager_$assertionsDisabled && !onp_NGEUtils_dbg(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0__init_0($sub)))
            $rt_throw(jl_AssertionError__init_());
    }
    return 1;
},
onn_NostrRelayLifecycleManager_onRelayConnectRequest = ($this, $relay) => {
    $this.$keepAlive();
    return 1;
},
onn_NostrRelayLifecycleManager_onRelayDisconnectRequest = ($this, $relay, $reason) => {
    $this.$keepAlive();
    return 1;
},
onn_NostrRelayLifecycleManager_onRelayBeforeSend = ($this, $relay, $message) => {
    return 1;
},
onn_NostrRelayLifecycleManager_onRelayAfterSend = ($this, $relay, $message) => {
    return 1;
},
onn_NostrRelayLifecycleManager_lambda$onRelaySend$2 = $message => {
    let var$2, var$3, var$4;
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = onn_NostrRelayLifecycleManager_logger;
    var$3 = onn_NostrSubscription$NostrSubCloseMessage_getId($message);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1072)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onn_NostrRelayLifecycleManager_lambda$onRelaySend$1 = $sub => {
    let var$2, var$3, var$4;
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = onn_NostrRelayLifecycleManager_logger;
    var$3 = $sub.$getSubId();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1073)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onn_NostrRelayLifecycleManager_lambda$onRelaySend$0 = $sub => {
    let var$2, var$3, var$4;
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = onn_NostrRelayLifecycleManager_logger;
    var$3 = $sub.$getSubId();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1074)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onn_NostrRelayLifecycleManager__clinit_ = () => {
    onn_NostrRelayLifecycleManager_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onn_NostrRelayLifecycleManager)) ? 0 : 1;
    onn_NostrRelayLifecycleManager_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onn_NostrRelayLifecycleManager)));
},
onn_NostrRelayLifecycleManager__init_$exported$0 = () => {
    onn_NostrRelayLifecycleManager_$callClinit();
    return onn_NostrRelayLifecycleManager__init_0();
},
onn_NostrRelayLifecycleManager_onRelayMessage$exported$1 = (var$1, var$2, var$3) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayMessage(var$2, var$3);
},
onn_NostrRelayLifecycleManager_setKeepAliveTime$exported$2 = (var$1, var$2, var$3) => {
    let var$4;
    onn_NostrRelayLifecycleManager_$callClinit();
    var$4 = var$2;
    var$2 = var$3;
    var$1.$setKeepAliveTime(var$4, var$2);
},
onn_NostrRelayLifecycleManager_onRelayError$exported$3 = (var$1, var$2, var$3) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayError(var$2, var$3);
},
onn_NostrRelayLifecycleManager_onRelayBeforeSend$exported$4 = (var$1, var$2, var$3) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayBeforeSend(var$2, var$3);
},
onn_NostrRelayLifecycleManager_hasActiveSubscription$exported$5 = (var$1, var$2) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    return !!var$1.$hasActiveSubscription(var$2);
},
onn_NostrRelayLifecycleManager_onRelayDisconnect$exported$6 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$5 = var$4 ? 1 : 0;
    return !!var$1.$onRelayDisconnect(var$2, var$3, var$5);
},
onn_NostrRelayLifecycleManager_onRelayAfterSend$exported$7 = (var$1, var$2, var$3) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayAfterSend(var$2, var$3);
},
onn_NostrRelayLifecycleManager_onRelayConnectRequest$exported$8 = (var$1, var$2) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    return !!var$1.$onRelayConnectRequest(var$2);
},
onn_NostrRelayLifecycleManager_onRelayDisconnectRequest$exported$9 = (var$1, var$2, var$3) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return !!var$1.$onRelayDisconnectRequest(var$2, var$3);
},
onn_NostrRelayLifecycleManager_onRelayLoop$exported$10 = (var$1, var$2, var$3) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayLoop(var$2, var$3);
},
onn_NostrRelayLifecycleManager_onRelaySend$exported$11 = (var$1, var$2, var$3) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelaySend(var$2, var$3);
},
onn_NostrRelayLifecycleManager_getKeepAliveTime$exported$12 = (var$1, var$2) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    return var$1.$getKeepAliveTime(var$2);
},
onn_NostrRelayLifecycleManager_keepAlive$exported$13 = var$1 => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$1.$keepAlive();
},
onn_NostrRelayLifecycleManager_onRelayConnect$exported$14 = (var$1, var$2) => {
    onn_NostrRelayLifecycleManager_$callClinit();
    var$2 = var$2;
    return !!var$1.$onRelayConnect(var$2);
},
onn_NostrRelayLifecycleManager_lambda$onRelaySend$2$exported$0 = var$1 => {
    onn_NostrRelayLifecycleManager_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelayLifecycleManager_lambda$onRelaySend$2(var$1);
},
onn_NostrRelayLifecycleManager_lambda$onRelaySend$1$exported$1 = var$1 => {
    onn_NostrRelayLifecycleManager_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelayLifecycleManager_lambda$onRelaySend$1(var$1);
},
onn_NostrRelayLifecycleManager_lambda$onRelaySend$0$exported$2 = var$1 => {
    onn_NostrRelayLifecycleManager_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onn_NostrRelayLifecycleManager_lambda$onRelaySend$0(var$1);
};
function otcit_DateTimeZoneBuilder$Rule() {
    let a = this; jl_Object.call(a);
    a.$iRecurrence = null;
    a.$iFromYear = 0;
    a.$iToYear = 0;
}
let otcit_DateTimeZoneBuilder$Rule__init_ = ($this, $recurrence, $fromYear, $toYear) => {
    jl_Object__init_($this);
    $this.$iRecurrence = $recurrence;
    $this.$iFromYear = $fromYear;
    $this.$iToYear = $toYear;
},
otcit_DateTimeZoneBuilder$Rule__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new otcit_DateTimeZoneBuilder$Rule();
    otcit_DateTimeZoneBuilder$Rule__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
otcit_DateTimeZoneBuilder$Rule_getToYear = $this => {
    return $this.$iToYear;
},
otcit_DateTimeZoneBuilder$Rule_getSaveMillis = $this => {
    return otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($this.$iRecurrence);
},
otcit_DateTimeZoneBuilder$Rule_next = ($this, $instant, $standardOffset, $saveMillis, $calendar) => {
    let $wallOffset, $year, var$7, $next, var$9;
    $wallOffset = $standardOffset + $saveMillis | 0;
    if (Long_eq($instant, Long_create(0, 2147483648)))
        $year = (-2147483648);
    else {
        $calendar.$setTimeInMillis(Long_add($instant, Long_fromInt($wallOffset)));
        $year = $calendar.$get3(1);
    }
    if ($year > $this.$iToYear)
        return $instant;
    if ($year >= $this.$iFromYear)
        var$7 = $instant;
    else {
        $calendar.$setTimeInMillis(Long_ZERO);
        $calendar.$set(1, $this.$iFromYear);
        var$7 = Long_sub($calendar.$getTimeInMillis(), Long_fromInt($wallOffset));
        var$7 = Long_sub(var$7, Long_fromInt(1));
    }
    $next = otcit_DateTimeZoneBuilder$Recurrence_next($this.$iRecurrence, var$7, $standardOffset, $saveMillis, $calendar);
    if (Long_le($next, $instant))
        $instant = $next;
    else {
        $calendar.$setTimeInMillis(Long_add($next, Long_fromInt($wallOffset)));
        var$9 = $calendar.$get3(1);
        if (var$9 <= $this.$iToYear)
            $instant = $next;
    }
    return $instant;
};
function ju_Base64$Decoder() {
    jl_Object.call(this);
    this.$mapping = null;
}
let ju_Base64$Decoder__init_ = ($this, $mapping) => {
    jl_Object__init_($this);
    $this.$mapping = $mapping;
},
ju_Base64$Decoder__init_0 = var_0 => {
    let var_1 = new ju_Base64$Decoder();
    ju_Base64$Decoder__init_(var_1, var_0);
    return var_1;
},
ju_Base64$Decoder_decode = ($this, $src) => {
    return otci_Base64Impl_decode0($src, $this.$mapping);
},
ju_Base64$Decoder_decode0 = ($this, $src) => {
    let $bytes, $i, var$4;
    $bytes = $rt_createByteArray($src.$length());
    $i = 0;
    while (true) {
        var$4 = $bytes.data;
        if ($i >= var$4.length)
            break;
        var$4[$i] = $src.$charAt($i) << 24 >> 24;
        $i = $i + 1 | 0;
    }
    return $this.$decode6($bytes);
},
jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_ReluctantGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_ReluctantGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_ReluctantGroupQuantifierSet();
    jur_ReluctantGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_ReluctantGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next5.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error),
jnc_CoderMalfunctionError__init_ = ($this, $cause) => {
    jl_Error__init_2($this, $cause);
},
jnc_CoderMalfunctionError__init_0 = var_0 => {
    let var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_(var_1, var_0);
    return var_1;
};
function onn_NostrPool$subscribe$lambda$_14_1() {
    let a = this; jl_Object.call(a);
    a.$_046 = null;
    a.$_126 = null;
}
let onn_NostrPool$subscribe$lambda$_14_1__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_046 = var$1;
    var$0.$_126 = var$2;
},
onn_NostrPool$subscribe$lambda$_14_1__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$subscribe$lambda$_14_1();
    onn_NostrPool$subscribe$lambda$_14_1__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$subscribe$lambda$_14_1_apply0 = (var$0, var$1, var$2) => {
    return onn_NostrPool$subscribe$lambda$_14_1_apply(var$0, var$1, var$2);
},
onn_NostrPool$subscribe$lambda$_14_1_apply = (var$0, var$1, var$2) => {
    return onn_NostrPool_lambda$subscribe$7(var$0.$_046, var$0.$_126, var$1, var$2);
};
function onn_NostrPool$subscribe$lambda$_14_2() {
    let a = this; jl_Object.call(a);
    a.$_085 = null;
    a.$_149 = null;
}
let onn_NostrPool$subscribe$lambda$_14_2__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_085 = var$1;
    var$0.$_149 = var$2;
},
onn_NostrPool$subscribe$lambda$_14_2__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$subscribe$lambda$_14_2();
    onn_NostrPool$subscribe$lambda$_14_2__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$subscribe$lambda$_14_2_run = var$0 => {
    onn_NostrPool_lambda$subscribe$3(var$0.$_085, var$0.$_149);
};
function onn_NostrPool$subscribe$lambda$_14_0() {
    jl_Object.call(this);
    this.$_035 = null;
}
let onn_NostrPool$subscribe$lambda$_14_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_035 = var$1;
},
onn_NostrPool$subscribe$lambda$_14_0__init_0 = var_0 => {
    let var_1 = new onn_NostrPool$subscribe$lambda$_14_0();
    onn_NostrPool$subscribe$lambda$_14_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrPool$subscribe$lambda$_14_0_apply0 = (var$0, var$1) => {
    return onn_NostrPool$subscribe$lambda$_14_0_apply(var$0, var$1);
},
onn_NostrPool$subscribe$lambda$_14_0_apply = (var$0, var$1) => {
    return onn_NostrPool_lambda$subscribe$5(var$0.$_035, var$1);
},
jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_CIDecomposedCharSet__init_ = ($this, $decomp, $decomposedCharLength) => {
    jur_DecomposedCharSet__init_($this, $decomp, $decomposedCharLength);
},
jur_CIDecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CIDecomposedCharSet();
    jur_CIDecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jnci_AsciiDecoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_AsciiDecoder__init_ = ($this, $cs) => {
    jnci_BufferedDecoder__init_($this, $cs, 1.0, 1.0);
},
jnci_AsciiDecoder__init_0 = var_0 => {
    let var_1 = new jnci_AsciiDecoder();
    jnci_AsciiDecoder__init_(var_1, var_0);
    return var_1;
},
jnci_AsciiDecoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b, var$12;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $b = var$9[$inPos] & 255;
            if ($b & 128) {
                $result = jnc_CoderResult_malformedForLength(1);
                $inPos = var$10 + (-1) | 0;
                break a;
            }
            var$9 = $outArray.data;
            var$12 = $outPos + 1 | 0;
            var$9[$outPos] = $b & 65535;
            $inPos = var$10;
            $outPos = var$12;
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1 = $rt_classWithoutFields(),
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1__init_0 = () => {
    let var_0 = new jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1();
    jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1__init_(var_0);
    return var_0;
},
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1_compare0 = (var$0, var$1, var$2) => {
    return jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1_compare(var$0, var$1, var$2);
},
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1_compare = (var$0, var$1, var$2) => {
    return jtf_DateTimeFormatterBuilder_lambda$static$1(var$1, var$2);
},
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0 = $rt_classWithoutFields(),
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0__init_0 = () => {
    let var_0 = new jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0();
    jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0__init_(var_0);
    return var_0;
};
function jusi_SimpleIntStreamImpl$toArray$lambda$_16_0() {
    jl_Object.call(this);
    this.$_0147 = null;
}
let jusi_SimpleIntStreamImpl$toArray$lambda$_16_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0147 = var$1;
},
jusi_SimpleIntStreamImpl$toArray$lambda$_16_0__init_0 = var_0 => {
    let var_1 = new jusi_SimpleIntStreamImpl$toArray$lambda$_16_0();
    jusi_SimpleIntStreamImpl$toArray$lambda$_16_0__init_(var_1, var_0);
    return var_1;
},
jusi_SimpleIntStreamImpl$toArray$lambda$_16_0_test = (var$0, var$1) => {
    return var$0.$_0147.$add1(jl_Integer_valueOf(var$1));
};
function onnet_ForwardSlidingWindowEventTracker() {
    let a = this; jl_Object.call(a);
    a.$seenEvents = null;
    a.$maxTrackedEvents = 0;
    a.$minTrackedEvents = 0;
    a.$trackingWindowS = Long_ZERO;
    a.$trackingWindowsMarginS = Long_ZERO;
    a.$cutOffS = Long_ZERO;
}
let onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled = 0,
onnet_ForwardSlidingWindowEventTracker_$callClinit = () => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit = $rt_eraseClinit(onnet_ForwardSlidingWindowEventTracker);
    onnet_ForwardSlidingWindowEventTracker__clinit_();
},
onnet_ForwardSlidingWindowEventTracker__init_0 = $this => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    juc_TimeUnit_$callClinit();
    onnet_ForwardSlidingWindowEventTracker__init_($this, 2147483647, 21, Long_fromInt(60), juc_TimeUnit_MINUTES, Long_fromInt(30), juc_TimeUnit_MINUTES);
},
onnet_ForwardSlidingWindowEventTracker__init_2 = () => {
    let var_0 = new onnet_ForwardSlidingWindowEventTracker();
    onnet_ForwardSlidingWindowEventTracker__init_0(var_0);
    return var_0;
},
onnet_ForwardSlidingWindowEventTracker__init_ = ($this, $maxTrackedEvents, $minTrackedEvents, $trackingWindow, $trackingWindowTimeUnit, $trackingWindowMargin, $trackingWindowMarginTimeUnit) => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    jl_Object__init_($this);
    $this.$seenEvents = ju_LinkedList__init_();
    $this.$cutOffS = Long_ZERO;
    $this.$maxTrackedEvents = $maxTrackedEvents;
    if ($minTrackedEvents < 0)
        $minTrackedEvents = 0;
    $this.$minTrackedEvents = $minTrackedEvents;
    $this.$trackingWindowS = juc_TimeUnit_toSeconds($trackingWindowTimeUnit, $trackingWindow);
    $this.$trackingWindowsMarginS = juc_TimeUnit_toSeconds($trackingWindowMarginTimeUnit, $trackingWindowMargin);
},
onnet_ForwardSlidingWindowEventTracker__init_1 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new onnet_ForwardSlidingWindowEventTracker();
    onnet_ForwardSlidingWindowEventTracker__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
onnet_ForwardSlidingWindowEventTracker_seen = ($this, $event) => {
    let var$2, var$3, $newEventId, $it, $seenEventId, $$je;
    var$2 = $this.$seenEvents;
    jl_Object_monitorEnterSync(var$2);
    a: {
        b: {
            try {
                if (Long_ge(jt_Instant_getEpochSecond($event.$getCreatedAt()), $this.$cutOffS))
                    break b;
                jl_Object_monitorExitSync(var$2);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$3 = $$je;
                break a;

            }
            return 1;
        }
        try {
            $newEventId = $event.$getIdentifier();
            $it = $this.$seenEvents.$listIterator();
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$3 = $$je;
            break a;

        }
        c: {
            d: {
                try {
                    while (true) {
                        if (!$it.$hasNext())
                            break d;
                        $seenEventId = $it.$next();
                        if ($seenEventId.$id2.$equals($newEventId.$id2))
                            break;
                        if (Long_lt($seenEventId.$createdAt0, $newEventId.$createdAt0))
                            break c;
                    }
                    jl_Object_monitorExitSync(var$2);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$3 = $$je;
                    break a;

                }
                return 1;
            }
            e: {
                try {
                    $it.$add9($newEventId);
                    $this.$update1();
                    if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled && !$this.$checkOrder())
                        break e;
                    jl_Object_monitorExitSync(var$2);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$3 = $$je;
                    break a;

                }
                return 0;
            }
            try {
                $rt_throw(jl_AssertionError__init_0($rt_s(1075)));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$3 = $$je;
                break a;

            }
        }
        f: {
            try {
                $it.$previous();
                $it.$add9($newEventId);
                $this.$update1();
                if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled && !$this.$checkOrder())
                    break f;
                jl_Object_monitorExitSync(var$2);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$3 = $$je;
                break a;

            }
            return 0;
        }
        try {
            $rt_throw(jl_AssertionError__init_0($rt_s(1076)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$3 = $$je;

        }
    }
    jl_Object_monitorExitSync(var$2);
    $rt_throw(var$3);
},
onnet_ForwardSlidingWindowEventTracker_count = $this => {
    return $this.$seenEvents.$size();
},
onnet_ForwardSlidingWindowEventTracker_currentTimeSeconds = $this => {
    return Long_div(jl_System_currentTimeMillis(), Long_fromInt(1000));
},
onnet_ForwardSlidingWindowEventTracker_getAll = $this => {
    return ju_Collections_unmodifiableCollection($this.$seenEvents);
},
onnet_ForwardSlidingWindowEventTracker_update = $this => {
    let var$1, $toRemove, $cutOffUpdate, $t, var$5, var$6, var$7, var$8, $it, $removed, $seenEventId, $$je;
    if ($this.$seenEvents.$size() <= $this.$minTrackedEvents)
        return;
    var$1 = $this.$seenEvents;
    jl_Object_monitorEnterSync(var$1);
    a: {
        try {
            $toRemove = $this.$seenEvents.$size() - $this.$maxTrackedEvents | 0;
            if ($toRemove < 0)
                $toRemove = 0;
            $cutOffUpdate = 0;
            $t = $this.$currentTimeSeconds();
            if (Long_gt(Long_sub($t, $this.$cutOffS), $this.$trackingWindowS)) {
                $cutOffUpdate = 1;
                $this.$cutOffS = Long_sub($t, Long_sub($this.$trackingWindowS, $this.$trackingWindowsMarginS));
                if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled && Long_gt($this.$cutOffS, $this.$currentTimeSeconds())) {
                    var$5 = new jl_AssertionError;
                    var$6 = $this.$cutOffS;
                    var$7 = $this.$currentTimeSeconds();
                    var$8 = jl_StringBuilder__init_();
                    jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(var$8, $rt_s(1077)), var$6), $rt_s(394)), var$7);
                    jl_AssertionError__init_1(var$5, jl_StringBuilder_toString(var$8));
                    $rt_throw(var$5);
                }
            }
            if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled && !$this.$checkOrder())
                $rt_throw(jl_AssertionError__init_0($rt_s(1076)));
            b: {
                if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled) {
                    if ($toRemove >= 0) {
                        var$5 = $this.$seenEvents;
                        if ($toRemove <= var$5.$size() && $toRemove <= $this.$maxTrackedEvents)
                            break b;
                    }
                    $rt_throw(jl_AssertionError__init_0($rt_s(1078)));
                }
            }
            $it = $this.$seenEvents.$listIterator0($this.$seenEvents.$size());
            $removed = 0;
            while ($it.$hasPrevious()) {
                $seenEventId = $it.$previous();
                if ($cutOffUpdate && Long_lt($seenEventId.$createdAt0, $this.$cutOffS)) {
                    $it.$remove();
                    $removed = $removed + 1 | 0;
                    continue;
                }
                if ($removed >= $toRemove)
                    break;
                $it.$remove();
                $removed = $removed + 1 | 0;
            }
            if ($toRemove > 0 && $this.$seenEvents.$size() > 0)
                $this.$cutOffS = jl_Math_max0($this.$cutOffS, ($this.$seenEvents.$getLast()).$createdAt0);
            if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled && Long_gt($this.$cutOffS, $this.$currentTimeSeconds()) && Long_lt($this.$cutOffS, ($this.$seenEvents.$getLast()).$createdAt0))
                $rt_throw(jl_AssertionError__init_0($rt_s(1079)));
            if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled && $this.$seenEvents.$size() > $this.$maxTrackedEvents)
                $rt_throw(jl_AssertionError__init_0($rt_s(1080)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        c: {
            try {
                if (!onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled && !$this.$checkOrder())
                    break c;
                jl_Object_monitorExitSync(var$1);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$5 = $$je;
                break a;

            }
            return;
        }
        try {
            $rt_throw(jl_AssertionError__init_0($rt_s(1076)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;

        }
    }
    jl_Object_monitorExitSync(var$1);
    $rt_throw(var$5);
},
onnet_ForwardSlidingWindowEventTracker_checkOrder = $this => {
    let $last, var$2, $id;
    $last = Long_create(4294967295, 2147483647);
    if ($this.$seenEvents.$isEmpty())
        return 1;
    var$2 = $this.$seenEvents.$iterator();
    while (var$2.$hasNext()) {
        $id = var$2.$next();
        if (Long_gt($id.$createdAt0, $last))
            return 0;
        $last = $id.$createdAt0;
    }
    return 1;
},
onnet_ForwardSlidingWindowEventTracker_tuneFor = ($this, $sub) => {
    let $maxLimit, var$3, $filter, $limit, $earlistSinceS, var$7, $since;
    $maxLimit = (-1);
    var$3 = ($sub.$getFilters()).$iterator();
    while (var$3.$hasNext()) {
        $filter = var$3.$next();
        $limit = $filter.$getLimit();
        if ($limit !== null && $limit.$intValue() > $maxLimit)
            $maxLimit = $limit.$intValue();
    }
    if ($maxLimit > 0)
        $this.$maxTrackedEvents = $maxLimit * 2 | 0;
    $earlistSinceS = Long_create(4294967295, 2147483647);
    var$7 = ($sub.$getFilters()).$iterator();
    while (var$7.$hasNext()) {
        $filter = var$7.$next();
        if ($filter.$getSince() !== null) {
            $since = jt_Instant_getEpochSecond($filter.$getSince());
            if (Long_lt($since, $earlistSinceS))
                $earlistSinceS = $since;
        }
    }
    if (Long_ne($earlistSinceS, Long_create(4294967295, 2147483647)))
        $this.$cutOffS = jl_Math_max0($this.$cutOffS, $earlistSinceS);
},
onnet_ForwardSlidingWindowEventTracker__clinit_ = () => {
    onnet_ForwardSlidingWindowEventTracker_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnet_ForwardSlidingWindowEventTracker)) ? 0 : 1;
},
onnet_ForwardSlidingWindowEventTracker__init_$exported$0 = () => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    return onnet_ForwardSlidingWindowEventTracker__init_2();
},
onnet_ForwardSlidingWindowEventTracker_seen$exported$1 = (var$1, var$2) => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    var$2 = var$2;
    return !!var$1.$seen(var$2);
},
onnet_ForwardSlidingWindowEventTracker_tuneFor$exported$2 = (var$1, var$2) => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    var$2 = var$2;
    var$1.$tuneFor(var$2);
},
onnet_ForwardSlidingWindowEventTracker_checkOrder$exported$3 = var$1 => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    return !!var$1.$checkOrder();
},
onnet_ForwardSlidingWindowEventTracker_update$exported$4 = var$1 => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    var$1.$update1();
},
onnet_ForwardSlidingWindowEventTracker_count$exported$5 = var$1 => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    return var$1.$count();
},
onnet_ForwardSlidingWindowEventTracker_currentTimeSeconds$exported$6 = var$1 => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    return var$1.$currentTimeSeconds();
},
onnet_ForwardSlidingWindowEventTracker__init_$exported$7 = (var$1, var$2, var$3, var$4, var$5, var$6) => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    return onnet_ForwardSlidingWindowEventTracker__init_1(var$1, var$2, var$3, var$4, var$5, var$6);
},
onnet_ForwardSlidingWindowEventTracker_getAll$exported$8 = var$1 => {
    onnet_ForwardSlidingWindowEventTracker_$callClinit();
    return var$1.$getAll0();
};
function otcir_MethodCaller$forJs$lambda$_1_0() {
    jl_Object.call(this);
    this.$_04 = null;
}
let otcir_MethodCaller$forJs$lambda$_1_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_04 = var$1;
},
otcir_MethodCaller$forJs$lambda$_1_0__init_0 = var_0 => {
    let var_1 = new otcir_MethodCaller$forJs$lambda$_1_0();
    otcir_MethodCaller$forJs$lambda$_1_0__init_(var_1, var_0);
    return var_1;
},
otcir_MethodCaller$forJs$lambda$_1_0_call = (var$0, var$1, var$2) => {
    return otcir_MethodCaller_lambda$forJs$0(var$0.$_04, var$1, var$2);
};
function onnrt_NostrTURN() {
    let a = this; jl_Object.call(a);
    a.$config = null;
    a.$connectionId0 = null;
    a.$localPeer1 = null;
    a.$remotePeer = null;
    a.$inSub = null;
    a.$inPool = null;
    a.$outPool = null;
    a.$outSub = null;
    a.$outQueue = null;
    a.$packetCounter = null;
    a.$executor0 = null;
    a.$listeners4 = null;
    a.$inPacket = null;
    a.$lockNotify = null;
    a.$stopped = 0;
}
let onnrt_NostrTURN_logger = null,
onnrt_NostrTURN_$assertionsDisabled = 0,
onnrt_NostrTURN_$callClinit = () => {
    onnrt_NostrTURN_$callClinit = $rt_eraseClinit(onnrt_NostrTURN);
    onnrt_NostrTURN__clinit_();
},
onnrt_NostrTURN__init_0 = ($this, $connectionId, $localPeer, $remotePeer, $config) => {
    let $platform, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    onnrt_NostrTURN_$callClinit();
    jl_Object__init_($this);
    $this.$outQueue = ju_HashMap__init_();
    $this.$packetCounter = juca_AtomicLong__init_0(Long_ZERO);
    $this.$listeners4 = juc_CopyOnWriteArrayList__init_();
    $this.$stopped = 0;
    $platform = onp_NGEUtils_getPlatform();
    $this.$connectionId0 = ju_Objects_requireNonNull($connectionId, $rt_s(1081));
    $this.$localPeer1 = ju_Objects_requireNonNull($localPeer, $rt_s(1082));
    $this.$remotePeer = ju_Objects_requireNonNull($remotePeer, $rt_s(1083));
    $this.$config = ju_Objects_requireNonNull($config, $rt_s(1084));
    $this.$executor0 = onp_NGEPlatform_newPoolExecutor($platform);
    var$6 = onnrt_NostrTURN_logger;
    var$7 = $localPeer.$getTurnServer();
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1085)), var$7);
    var$6.$fine(jl_StringBuilder_toString(var$8));
    $this.$inPool = onn_NostrPool__init_($rt_cls(onnet_PassthroughEventTracker));
    $this.$inPool.$connectRelay(onn_NostrRelay__init_(ju_Objects_requireNonNull0($localPeer.$getTurnServer()), $this.$executor0));
    var$6 = $this.$inPool;
    var$9 = onn_NostrFilter__init_();
    var$7 = $this.$remotePeer;
    var$9 = var$9.$withAuthor0(var$7.$getPubkey());
    var$7 = $this.$config;
    var$7 = var$9.$withKind0(onnrt_NostrTURNSettings_getKind(var$7));
    var$10 = $rt_createArray(jl_String, 1);
    var$11 = var$10.data;
    var$12 = $this.$connectionId0;
    var$13 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$13, $rt_s(1086)), var$12);
    var$11[0] = jl_StringBuilder_toString(var$13);
    var$9 = var$7.$withTag2($rt_s(146), var$10);
    $this.$inSub = var$6.$subscribe1(var$9);
    $this.$inSub.$addEventListener(onnrt_NostrTURN$SubscriptionListenerWrapper__init_($this, 0));
    var$7 = onnrt_NostrTURN_logger;
    var$8 = $remotePeer.$getTurnServer();
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1087)), var$8);
    var$7.$fine(jl_StringBuilder_toString(var$9));
    $this.$outPool = onn_NostrPool__init_($rt_cls(onnet_PassthroughEventTracker));
    $this.$outPool.$connectRelay(onn_NostrRelay__init_(ju_Objects_requireNonNull0($remotePeer.$getTurnServer()), $this.$executor0));
    var$9 = $this.$outPool;
    var$6 = onn_NostrFilter__init_();
    var$7 = $this.$remotePeer;
    var$6 = var$6.$withAuthor0(var$7.$getPubkey());
    var$7 = $this.$config;
    var$6 = var$6.$withKind0(onnrt_NostrTURNSettings_getKind(var$7));
    var$10 = $rt_createArray(jl_String, 1);
    var$11 = var$10.data;
    var$8 = $this.$connectionId0;
    var$12 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(1086)), var$8);
    var$11[0] = jl_StringBuilder_toString(var$12);
    var$6 = var$6.$withTag2($rt_s(146), var$10);
    $this.$outSub = var$9.$subscribe1(var$6);
    $this.$outSub.$addEventListener(onnrt_NostrTURN$SubscriptionListenerWrapper__init_($this, 0));
},
onnrt_NostrTURN__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrt_NostrTURN();
    onnrt_NostrTURN__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrt_NostrTURN_addListener = ($this, $listener) => {
    $this.$listeners4.$add1($listener);
},
onnrt_NostrTURN_removeListener = ($this, $listener) => {
    $this.$listeners4.$remove2($listener);
},
onnrt_NostrTURN_start = $this => {
    $this.$outSub.$open();
    $this.$inSub.$open();
    onnrt_NostrTURN_loop($this);
},
onnrt_NostrTURN_close = $this => {
    $this.$stopped = 1;
    $this.$inSub.$close0();
    $this.$outSub.$close0();
    ($this.$inPool.$close2()).$forEach(onnrt_NostrTURN$close$lambda$_4_0__init_0());
    ($this.$outPool.$close2()).$forEach(onnrt_NostrTURN$close$lambda$_4_1__init_0());
    $this.$executor0.$close();
},
onnrt_NostrTURN_onTurnEvent = ($this, $event, $remote) => {
    let $content, var$4, var$5;
    $content = $event.$getContent();
    var$4 = $this.$localPeer1.$getSigner();
    var$5 = $this.$remotePeer;
    var$4 = var$4.$decrypt0($content, var$5.$getPubkey());
    var$5 = onnrt_NostrTURN$onTurnEvent$lambda$_5_0__init_0($this, $remote);
    var$4.$then(var$5);
},
onnrt_NostrTURN_onReceivedAck = ($this, $data) => {
    let $tokenizer, $packetId, $packet, $chunkId, $chunk;
    $tokenizer = ju_StringTokenizer__init_($data, $rt_s(87));
    $packetId = onp_NGEUtils_safeLong($tokenizer.$nextToken());
    $packet = $this.$outQueue.$get1(jl_Long_valueOf($packetId));
    if ($packet === null)
        return;
    $chunkId = onp_NGEUtils_safeInt($tokenizer.$nextToken());
    $chunk = $packet.$chunks.$get($chunkId);
    if ($chunk !== null && !$chunk.$ack1) {
        $chunk.$ack1 = 1;
        $packet.$ack0 = $packet.$ack0 + 1 | 0;
        onnrt_NostrTURN_consume($this);
        return;
    }
},
onnrt_NostrTURN_onReceivedPacketChunk = ($this, $data) => {
    let $tokenizer, $packetId, var$4, var$5, var$6, $chunkId, $nChunks, $chunk, $ack;
    $tokenizer = ju_StringTokenizer__init_($data, $rt_s(87));
    $packetId = onp_NGEUtils_safeLong($tokenizer.$nextToken());
    if ($this.$inPacket !== null && Long_ne($this.$inPacket.$id5, $packetId)) {
        onnrt_NostrTURN_$callClinit();
        var$4 = onnrt_NostrTURN_logger;
        var$5 = $this.$inPacket.$id5;
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(var$6, $rt_s(1088)), $packetId), $rt_s(1089)), var$5);
        var$4.$warning(jl_StringBuilder_toString(var$6));
        return;
    }
    if ($this.$inPacket === null)
        $this.$inPacket = onnrt_NostrTURN$Packet__init_($packetId, ju_ArrayList__init_(), null, null);
    $chunkId = onp_NGEUtils_safeInt($tokenizer.$nextToken());
    $nChunks = onp_NGEUtils_safeInt($tokenizer.$nextToken());
    while ($this.$inPacket.$chunks.$size() < $nChunks) {
        $this.$inPacket.$chunks.$add1(onnrt_NostrTURN$Chunk__init_(null));
    }
    $chunk = $this.$inPacket.$chunks.$get($chunkId);
    if (!$chunk.$ack1 && !$chunk.$sent0) {
        $chunk.$data4 = $tokenizer.$nextToken();
        $chunk.$sent0 = 1;
        $chunk.$ack1 = 1;
        $chunk.$lastAttempt = jt_Instant_now();
        var$6 = $this.$inPacket;
        var$6.$ack0 = var$6.$ack0 + 1 | 0;
        $this.$inPacket.$sent = $nChunks;
        onnrt_NostrTURN_consume($this);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append2(jl_StringBuilder_append(var$6, $rt_s(1090)), $packetId), 44), $chunkId);
        $ack = jl_StringBuilder_toString(var$6);
        var$6 = $this.$localPeer1.$getSigner();
        var$4 = $this.$remotePeer;
        var$6 = var$6.$encrypt0($ack, var$4.$getPubkey());
        var$4 = onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0__init_0($this);
        var$6.$compose(var$4);
        return;
    }
},
onnrt_NostrTURN_consume = $this => {
    let $data, var$2, $chunk, $decoded, var$5, $inflater, $bos, $decompressedSize, $chunk_0, $s, $byteBuffer, $listener, $e, var$14, var$15, var$16, $it, $packet, var$19, var$20, var$21, $$je;
    if ($this.$inPacket !== null && $this.$inPacket.$sent == $this.$inPacket.$ack0) {
        a: {
            try {
                $data = jl_StringBuilder__init_();
                var$2 = $this.$inPacket.$chunks.$iterator();
                while (var$2.$hasNext()) {
                    $chunk = var$2.$next();
                    if ($chunk.$data4 !== null)
                        $data.$append1($chunk.$data4);
                }
                $decoded = (ju_Base64_getDecoder()).$decode7($data.$toString());
                var$5 = $decoded.data;
                $inflater = juz_Inflater__init_1();
                $inflater.$setInput1($decoded);
                $bos = ji_ByteArrayOutputStream__init_2(var$5.length);
                $decompressedSize = 0;
                $chunk_0 = $rt_createByteArray(1024);
                b: {
                    while (true) {
                        if ($inflater.$finished())
                            break b;
                        $s = $inflater.$inflate1($chunk_0);
                        if (!$s)
                            break;
                        $bos.$write($chunk_0, 0, $s);
                        $decompressedSize = $decompressedSize + $s | 0;
                    }
                }
                $inflater.$end1();
                $byteBuffer = jn_ByteBuffer_wrap($bos.$toByteArray(), 0, $decompressedSize);
                var$2 = $this.$listeners4.$iterator();
                while (var$2.$hasNext()) {
                    $listener = var$2.$next();
                    c: {
                        try {
                            $listener.$onTurnPacket($this.$remotePeer, $byteBuffer);
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                $e = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        onnrt_NostrTURN_$callClinit();
                        var$14 = onnrt_NostrTURN_logger;
                        var$15 = $e.$getMessage();
                        var$16 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$16, $rt_s(1091)), var$15);
                        var$14.$warning(jl_StringBuilder_toString(var$16));
                    }
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onnrt_NostrTURN_$callClinit();
            var$2 = onnrt_NostrTURN_logger;
            var$14 = $e.$getMessage();
            var$15 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$15, $rt_s(1092)), var$14);
            var$2.$warning(jl_StringBuilder_toString(var$15));
        }
        $this.$inPacket = null;
    }
    $it = ($this.$outQueue.$values0()).$iterator();
    while ($it.$hasNext()) {
        d: {
            $packet = $it.$next();
            if ($packet.$sent && $packet.$ack0 == $packet.$sent) {
                onnrt_NostrTURN_$callClinit();
                var$2 = onnrt_NostrTURN_logger;
                var$19 = $packet.$id5;
                var$20 = $packet.$ack0;
                var$21 = $packet.$sent;
                var$14 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(var$14, $rt_s(1093)), var$19), $rt_s(1094)), var$20), 47), var$21);
                var$2.$fine(jl_StringBuilder_toString(var$14));
                $it.$remove();
                if ($packet.$callback !== null) {
                    try {
                        $packet.$callback.$run();
                        break d;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $e = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    var$2 = onnrt_NostrTURN_logger;
                    var$14 = $e.$getMessage();
                    var$15 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$15, $rt_s(1095)), var$14);
                    var$2.$warning(jl_StringBuilder_toString(var$15));
                }
            } else if (jt_Instant_isAfter(jt_Instant_now(), jt_Instant_plus($packet.$timestamp, onnrt_NostrTURNSettings_getPacketTimeout($this.$config)))) {
                e: {
                    onnrt_NostrTURN_$callClinit();
                    var$2 = onnrt_NostrTURN_logger;
                    var$19 = $packet.$id5;
                    var$20 = $packet.$ack0;
                    var$21 = $packet.$sent;
                    var$15 = jl_StringBuilder__init_();
                    jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(var$15, $rt_s(1093)), var$19), $rt_s(1096)), var$20), 47), var$21);
                    var$2.$warning(jl_StringBuilder_toString(var$15));
                    if ($packet.$callbackError !== null) {
                        try {
                            $packet.$callbackError.$accept0(jl_Exception__init_0($rt_s(1097)));
                            break e;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                $e = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        var$2 = onnrt_NostrTURN_logger;
                        var$14 = $e.$getMessage();
                        var$15 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$15, $rt_s(1095)), var$14);
                        var$2.$warning(jl_StringBuilder_toString(var$15));
                    }
                }
                $it.$remove();
            }
        }
    }
},
onnrt_NostrTURN_loop = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$executor0;
    var$2 = onnrt_NostrTURN$loop$lambda$_9_0__init_0($this);
    var$3 = $this.$config;
    var$4 = jt_Duration_toMillis(onnrt_NostrTURNSettings_getLoopInterval(var$3));
    juc_TimeUnit_$callClinit();
    var$3 = juc_TimeUnit_MILLISECONDS;
    var$1.$runLater(var$2, var$4, var$3);
},
onnrt_NostrTURN_write = ($this, $data) => {
    let $platform;
    ju_Objects_requireNonNull0($data);
    $platform = onp_NGEUtils_getPlatform();
    return $platform.$promisify(onnrt_NostrTURN$write$lambda$_10_0__init_0($this, $data), $this.$executor0);
},
onnrt_NostrTURN_lambda$write$10 = ($this, $data, $res, $rej) => {
    let $deflater, $inputBytes, $outputStream, $buffer, $count, $compressedBytes, $b64data, $packetId, $chunkLen, $chunkCount, $chunks, $i, $start, var$17, $end, $packet;
    $deflater = juz_Deflater__init_1();
    $inputBytes = $rt_createByteArray(jn_Buffer_remaining($data));
    ($data.$slice()).$get5($inputBytes);
    $deflater.$setInput1($inputBytes);
    $deflater.$finish();
    $outputStream = ji_ByteArrayOutputStream__init_0();
    $buffer = $rt_createByteArray(1024);
    while (!$deflater.$finished()) {
        $count = $deflater.$deflate0($buffer);
        if ($count <= 0)
            break;
        $outputStream.$write($buffer, 0, $count);
    }
    $deflater.$end1();
    $compressedBytes = $outputStream.$toByteArray();
    $b64data = (ju_Base64_getEncoder()).$encodeToString($compressedBytes);
    $packetId = juca_AtomicLong_incrementAndGet($this.$packetCounter);
    $chunkLen = onnrt_NostrTURNSettings_getChunkLength($this.$config);
    $chunkCount = jl_Math_ceil($b64data.$length() / $chunkLen) | 0;
    $chunks = ju_ArrayList__init_1($chunkCount);
    $i = 0;
    while ($i < $chunkCount) {
        $start = $rt_imul($i, $chunkLen);
        var$17 = $b64data.$length();
        $i = $i + 1 | 0;
        $end = jl_Math_min(var$17, $rt_imul($i, $chunkLen));
        $chunks.$add1(onnrt_NostrTURN$Chunk__init_($b64data.$substring($start, $end)));
    }
    $packet = onnrt_NostrTURN$Packet__init_($packetId, $chunks, onnrt_NostrTURN$lambda$write$10$lambda$_11_0__init_0($res), onnrt_NostrTURN$lambda$write$10$lambda$_11_1__init_0($rej));
    $this.$outQueue.$put1(jl_Long_valueOf($packetId), $packet);
    onnrt_NostrTURN_consume($this);
    if ($this.$lockNotify !== null)
        $this.$lockNotify.$run();
},
onnrt_NostrTURN_lambda$write$9 = ($rej, $e) => {
    onnrt_NostrTURN_$callClinit();
    $rej.$accept0($e);
},
onnrt_NostrTURN_lambda$write$8 = $res => {
    onnrt_NostrTURN_$callClinit();
    $res.$accept0(null);
},
onnrt_NostrTURN_lambda$loop$7 = $this => {
    let $packets, $platform, var$3, $e, $entry, $nextPacket, $i, $chunk, $lastAttempt, var$10, var$11, var$12, var$13, $encrypted, $event, var$16, var$17, $signed, $$je;
    a: {
        try {
            $packets = $this.$outQueue.$values0();
            if ($packets.$isEmpty()) {
                $platform = onp_NGEUtils_getPlatform();
                var$3 = onnrt_NostrTURN$lambda$loop$7$lambda$_14_0__init_0($this);
                var$3 = $platform.$wrapPromise(var$3);
                var$3.$await();
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        b: {
            try {
                if (!$this.$stopped)
                    break b;
                var$3 = null;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$3;
        }
        c: {
            try {
                if ($this.$outQueue.$size() <= 0) {
                    $entry = null;
                    break c;
                }
                $entry = (($this.$outQueue.$entrySet()).$iterator()).$next();
                break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
        }
        d: {
            try {
                if ($entry === null)
                    break d;
                $nextPacket = $entry.$getValue();
                $i = 0;
                while (true) {
                    if ($i >= $nextPacket.$chunks.$size())
                        break d;
                    $chunk = $nextPacket.$chunks.$get($i);
                    $lastAttempt = $chunk.$lastAttempt;
                    if (!($lastAttempt !== null && jt_Instant_isAfter(jt_Instant_now(), jt_Instant_plus($lastAttempt, onnrt_NostrTURNSettings_getMaxLatency($this.$config)))) && !$chunk.$ack1) {
                        $chunk.$lastAttempt = jt_Instant_now();
                        var$3 = $this.$localPeer1;
                        var$10 = var$3.$getSigner();
                        var$11 = $nextPacket.$id5;
                        var$3 = $nextPacket.$chunks;
                        var$12 = var$3.$size();
                        var$3 = $chunk.$data4;
                        var$13 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append2(jl_StringBuilder_append(var$13, $rt_s(1098)), var$11), 44), $i), 44), var$12), 44), var$3);
                        var$3 = jl_StringBuilder_toString(var$13);
                        var$13 = $this.$remotePeer;
                        var$13 = var$13.$getPubkey();
                        var$3 = var$10.$encrypt0(var$3, var$13);
                        $encrypted = var$3.$await();
                        if (!$chunk.$sent0) {
                            $chunk.$sent0 = 1;
                            $nextPacket.$sent = $nextPacket.$sent + 1 | 0;
                        }
                        $event = onne_UnsignedNostrEvent__init_();
                        $event.$withKind(onnrt_NostrTURNSettings_getKind($this.$config));
                        $event.$createdAt(jt_Instant_now());
                        $event.$withContent($encrypted);
                        var$16 = $rt_createArray(jl_String, 1);
                        var$17 = $this.$connectionId0;
                        var$3 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1086)), var$17);
                        var$16.data[0] = jl_StringBuilder_toString(var$3);
                        $event.$withTag0($rt_s(146), var$16);
                        $signed = (($this.$localPeer1.$getSigner()).$sign($event)).$await();
                        ($this.$outPool.$publish($signed)).$await();
                    }
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
        }
        e: {
            try {
                if (!$this.$stopped)
                    break e;
                var$3 = null;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$3;
        }
        try {
            onnrt_NostrTURN_loop($this);
            var$3 = null;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    onnrt_NostrTURN_$callClinit();
    var$3 = onnrt_NostrTURN_logger;
    jul_Level_$callClinit();
    var$10 = jul_Level_WARNING;
    var$13 = $e.$getMessage();
    var$17 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$17, $rt_s(1099)), var$13);
    var$3.$log(var$10, jl_StringBuilder_toString(var$17), $e);
    return null;
},
onnrt_NostrTURN_lambda$loop$6 = ($this, $res, $rej) => {
    onnrt_NostrTURN_$callClinit();
    if (!onnrt_NostrTURN_$assertionsDisabled && $this.$lockNotify !== null)
        $rt_throw(jl_AssertionError__init_());
    $this.$lockNotify = onnrt_NostrTURN$lambda$loop$6$lambda$_15_0__init_0($res);
},
onnrt_NostrTURN_lambda$loop$5 = $res => {
    onnrt_NostrTURN_$callClinit();
    $res.$accept0(null);
},
onnrt_NostrTURN_lambda$onReceivedPacketChunk$4 = ($this, $encrypted) => {
    let $event, var$3, var$4, var$5, var$6, var$7;
    $event = onne_UnsignedNostrEvent__init_();
    $event.$withKind(onnrt_NostrTURNSettings_getKind($this.$config));
    $event.$createdAt(jt_Instant_now());
    $event.$withContent($encrypted);
    var$3 = $rt_createArray(jl_String, 1);
    var$4 = var$3.data;
    var$5 = $this.$connectionId0;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1086)), var$5);
    var$4[0] = jl_StringBuilder_toString(var$6);
    $event.$withTag0($rt_s(146), var$3);
    $event.$withExpiration(jt_Instant_plus(jt_Instant_now(), onnrt_NostrTURNSettings_getPacketTimeout($this.$config)));
    var$7 = $this.$localPeer1.$getSigner();
    var$7 = var$7.$sign($event);
    var$5 = onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0__init_0($this);
    var$7 = var$7.$compose(var$5);
    return var$7;
},
onnrt_NostrTURN_lambda$onReceivedPacketChunk$3 = ($this, $signed) => {
    return $this.$inPool.$publish($signed);
},
onnrt_NostrTURN_lambda$onTurnEvent$2 = ($this, $remote, $decrypted) => {
    let $prefix;
    $prefix = $decrypted.$substring(0, 3);
    if ($prefix.$equals($rt_s(1090)) && $remote)
        onnrt_NostrTURN_onReceivedAck($this, $decrypted.$substring0(3));
    else if ($prefix.$equals($rt_s(1098)) && !$remote)
        onnrt_NostrTURN_onReceivedPacketChunk($this, $decrypted.$substring0(3));
    return null;
},
onnrt_NostrTURN_lambda$close$1 = $r => {
    onnrt_NostrTURN_$callClinit();
    onn_NostrRelay_disconnect($r, $rt_s(1100));
},
onnrt_NostrTURN_lambda$close$0 = $r => {
    onnrt_NostrTURN_$callClinit();
    onn_NostrRelay_disconnect($r, $rt_s(1100));
},
onnrt_NostrTURN__clinit_ = () => {
    onnrt_NostrTURN_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnrt_NostrTURN)) ? 0 : 1;
    onnrt_NostrTURN_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onnrt_NostrTURN)));
},
onnrt_NostrTURN_lambda$loop$6$exported$0 = (var$1, var$2, var$3) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onnrt_NostrTURN_lambda$loop$6(var$1, var$2, var$3);
},
onnrt_NostrTURN__init_$exported$1 = (var$1, var$2, var$3, var$4) => {
    onnrt_NostrTURN_$callClinit();
    return onnrt_NostrTURN__init_($rt_str(var$1), var$2, var$3, var$4);
},
onnrt_NostrTURN_removeListener$exported$2 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = var$2;
    var$1.$removeListener1(var$2);
},
onnrt_NostrTURN_addListener$exported$3 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = var$2;
    var$1.$addListener4(var$2);
},
onnrt_NostrTURN_onReceivedPacketChunk$exported$4 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = $rt_str(var$2);
    onnrt_NostrTURN_onReceivedPacketChunk(var$1, var$2);
},
onnrt_NostrTURN_close$exported$5 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    var$1.$close();
},
onnrt_NostrTURN_onTurnEvent$exported$6 = (var$1, var$2, var$3) => {
    let var$4;
    onnrt_NostrTURN_$callClinit();
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    onnrt_NostrTURN_onTurnEvent(var$1, var$2, var$4);
},
onnrt_NostrTURN_consume$exported$7 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    onnrt_NostrTURN_consume(var$1);
},
onnrt_NostrTURN_lambda$write$10$exported$8 = (var$1, var$2, var$3, var$4) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    onnrt_NostrTURN_lambda$write$10(var$1, var$2, var$3, var$4);
},
onnrt_NostrTURN_loop$exported$9 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    onnrt_NostrTURN_loop(var$1);
},
onnrt_NostrTURN_write$exported$10 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = var$2;
    return var$1.$write0(var$2);
},
onnrt_NostrTURN_start$exported$11 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    var$1.$start2();
},
onnrt_NostrTURN_onReceivedAck$exported$12 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = $rt_str(var$2);
    onnrt_NostrTURN_onReceivedAck(var$1, var$2);
},
onnrt_NostrTURN_lambda$loop$7$exported$13 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    return otji_JSWrapper_javaToJs(onnrt_NostrTURN_lambda$loop$7(var$1));
},
onnrt_NostrTURN_lambda$onReceivedPacketChunk$3$exported$14 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = var$2;
    return onnrt_NostrTURN_lambda$onReceivedPacketChunk$3(var$1, var$2);
},
onnrt_NostrTURN_lambda$onReceivedPacketChunk$4$exported$15 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    var$2 = $rt_str(var$2);
    return onnrt_NostrTURN_lambda$onReceivedPacketChunk$4(var$1, var$2);
},
onnrt_NostrTURN_lambda$onTurnEvent$2$exported$16 = (var$1, var$2, var$3) => {
    let var$4;
    onnrt_NostrTURN_$callClinit();
    var$4 = var$2 ? 1 : 0;
    var$2 = $rt_str(var$3);
    return otji_JSWrapper_javaToJs(onnrt_NostrTURN_lambda$onTurnEvent$2(var$1, var$4, var$2));
},
onnrt_NostrTURN_lambda$write$9$exported$0 = (var$1, var$2) => {
    onnrt_NostrTURN_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrt_NostrTURN_lambda$write$9(var$1, var$2);
},
onnrt_NostrTURN_lambda$write$8$exported$1 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrt_NostrTURN_lambda$write$8(var$1);
},
onnrt_NostrTURN_lambda$loop$5$exported$2 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrt_NostrTURN_lambda$loop$5(var$1);
},
onnrt_NostrTURN_lambda$close$1$exported$3 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrt_NostrTURN_lambda$close$1(var$1);
},
onnrt_NostrTURN_lambda$close$0$exported$4 = var$1 => {
    onnrt_NostrTURN_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrt_NostrTURN_lambda$close$0(var$1);
};
function onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0() {
    jl_Object.call(this);
    this.$_0175 = null;
}
let onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0175 = var$1;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0();
    onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0_test0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0_test(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0_test = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$check$9(var$0.$_0175, var$1);
};
function onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2() {
    let a = this; jl_Object.call(a);
    a.$_0107 = null;
    a.$_158 = null;
}
let onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0107 = var$1;
    var$0.$_158 = var$2;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2__init_0 = (var_0, var_1) => {
    let var_2 = new onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2();
    onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2__init_(var_2, var_0, var_1);
    return var_2;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2_apply(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$check$11(var$0.$_0107, var$0.$_158, var$1);
},
jtt_UnsupportedTemporalTypeException = $rt_classWithoutFields(jt_DateTimeException),
jtt_UnsupportedTemporalTypeException__init_ = ($this, $message) => {
    jt_DateTimeException__init_($this, $message);
},
jtt_UnsupportedTemporalTypeException__init_0 = var_0 => {
    let var_1 = new jtt_UnsupportedTemporalTypeException();
    jtt_UnsupportedTemporalTypeException__init_(var_1, var_0);
    return var_1;
};
function onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1() {
    jl_Object.call(this);
    this.$_0121 = null;
}
let onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0121 = var$1;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1();
    onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1_accept0 = (var$0, var$1) => {
    onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1_accept(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1_accept = (var$0, var$1) => {
    onns_NostrNIP46Signer_lambda$check$10(var$0.$_0121, var$1);
},
jus_Collector$Characteristics = $rt_classWithoutFields(jl_Enum),
jus_Collector$Characteristics_CONCURRENT = null,
jus_Collector$Characteristics_UNORDERED = null,
jus_Collector$Characteristics_IDENTITY_FINISH = null,
jus_Collector$Characteristics_$VALUES = null,
jus_Collector$Characteristics_$callClinit = () => {
    jus_Collector$Characteristics_$callClinit = $rt_eraseClinit(jus_Collector$Characteristics);
    jus_Collector$Characteristics__clinit_();
},
jus_Collector$Characteristics_values = () => {
    jus_Collector$Characteristics_$callClinit();
    return jus_Collector$Characteristics_$VALUES.$clone0();
},
jus_Collector$Characteristics__init_0 = ($this, var$1, var$2) => {
    jus_Collector$Characteristics_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jus_Collector$Characteristics__init_ = (var_0, var_1) => {
    let var_2 = new jus_Collector$Characteristics();
    jus_Collector$Characteristics__init_0(var_2, var_0, var_1);
    return var_2;
},
jus_Collector$Characteristics_$values = () => {
    let var$1, var$2;
    jus_Collector$Characteristics_$callClinit();
    var$1 = $rt_createArray(jus_Collector$Characteristics, 3);
    var$2 = var$1.data;
    var$2[0] = jus_Collector$Characteristics_CONCURRENT;
    var$2[1] = jus_Collector$Characteristics_UNORDERED;
    var$2[2] = jus_Collector$Characteristics_IDENTITY_FINISH;
    return var$1;
},
jus_Collector$Characteristics__clinit_ = () => {
    jus_Collector$Characteristics_CONCURRENT = jus_Collector$Characteristics__init_($rt_s(1101), 0);
    jus_Collector$Characteristics_UNORDERED = jus_Collector$Characteristics__init_($rt_s(1102), 1);
    jus_Collector$Characteristics_IDENTITY_FINISH = jus_Collector$Characteristics__init_($rt_s(1103), 2);
    jus_Collector$Characteristics_$VALUES = jus_Collector$Characteristics_$values();
};
function onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3() {
    jl_Object.call(this);
    this.$_093 = null;
}
let onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_093 = var$1;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3();
    onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3_run = var$0 => {
    onns_NostrNIP46Signer_lambda$check$12(var$0.$_093);
},
juc_ExecutionException = $rt_classWithoutFields(jl_Exception),
juc_ExecutionException__init_0 = ($this, $cause) => {
    jl_Exception__init_2($this, $cause);
},
juc_ExecutionException__init_ = var_0 => {
    let var_1 = new juc_ExecutionException();
    juc_ExecutionException__init_0(var_1, var_0);
    return var_1;
};
function onnet_NaiveEventTracker() {
    jl_Object.call(this);
    this.$seenEvents0 = null;
}
let onnet_NaiveEventTracker__init_ = $this => {
    jl_Object__init_($this);
    $this.$seenEvents0 = ju_HashSet__init_1();
},
onnet_NaiveEventTracker__init_0 = () => {
    let var_0 = new onnet_NaiveEventTracker();
    onnet_NaiveEventTracker__init_(var_0);
    return var_0;
},
onnet_NaiveEventTracker_seen = ($this, $event) => {
    let var$2, var$3, var$4, $$je;
    var$2 = $this.$seenEvents0;
    jl_Object_monitorEnterSync(var$2);
    a: {
        try {
            var$3 = $this.$seenEvents0.$add1(($event.$getIdentifier()).$id2) ? 0 : 1;
            jl_Object_monitorExitSync(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$4 = $$je;
            break a;

        }
        return var$3;
    }
    jl_Object_monitorExitSync(var$2);
    $rt_throw(var$4);
},
onnet_NaiveEventTracker_clear = $this => {
    let var$1, var$2, $$je;
    var$1 = $this.$seenEvents0;
    jl_Object_monitorEnterSync(var$1);
    a: {
        try {
            $this.$seenEvents0.$clear();
            jl_Object_monitorExitSync(var$1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$1);
    $rt_throw(var$2);
},
onnet_NaiveEventTracker_tuneFor = ($this, $sub) => {
    return;
},
onnet_NaiveEventTracker__init_$exported$0 = () => {
    return onnet_NaiveEventTracker__init_0();
},
onnet_NaiveEventTracker_seen$exported$1 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$seen(var$2);
},
onnet_NaiveEventTracker_tuneFor$exported$2 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$tuneFor(var$2);
},
onnet_NaiveEventTracker_clear$exported$3 = var$1 => {
    var$1.$clear();
};
function onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0() {
    let a = this; jl_Object.call(a);
    a.$_0189 = null;
    a.$_193 = null;
}
let onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0189 = var$1;
    var$0.$_193 = var$2;
},
onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0();
    onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0__init_(var_2, var_0, var_1);
    return var_2;
},
jtt_TemporalQueries$_clinit_$lambda$_11_0 = $rt_classWithoutFields(),
jtt_TemporalQueries$_clinit_$lambda$_11_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtt_TemporalQueries$_clinit_$lambda$_11_0__init_0 = () => {
    let var_0 = new jtt_TemporalQueries$_clinit_$lambda$_11_0();
    jtt_TemporalQueries$_clinit_$lambda$_11_0__init_(var_0);
    return var_0;
};
function jusi_StreamOverSpliterator$AdapterAction() {
    let a = this; jl_Object.call(a);
    a.$consumer0 = null;
    a.$wantsMore = 0;
}
let jusi_StreamOverSpliterator$AdapterAction__init_ = ($this, $consumer) => {
    jl_Object__init_($this);
    $this.$consumer0 = $consumer;
},
jusi_StreamOverSpliterator$AdapterAction__init_0 = var_0 => {
    let var_1 = new jusi_StreamOverSpliterator$AdapterAction();
    jusi_StreamOverSpliterator$AdapterAction__init_(var_1, var_0);
    return var_1;
},
jusi_StreamOverSpliterator$AdapterAction_accept = ($this, $t) => {
    $this.$wantsMore = $this.$consumer0.$test0($t);
},
jn_URIEncoderDecoder = $rt_classWithoutFields(),
jn_URIEncoderDecoder_validate = ($s, $legal) => {
    let $i, $ch, var$5, $d1, $d2;
    $i = 0;
    a: {
        b: {
            c: while ($i < $s.$length()) {
                $ch = $s.$charAt($i);
                if ($ch == 37) {
                    while (true) {
                        var$5 = $i + 2 | 0;
                        if (var$5 >= $s.$length())
                            $rt_throw(jn_URISyntaxException__init_($s, $rt_s(23), $i));
                        $d1 = jl_Character_digit($s.$charAt($i + 1 | 0), 16);
                        $d2 = jl_Character_digit($s.$charAt(var$5), 16);
                        if ($d1 == (-1))
                            break b;
                        if ($d2 == (-1))
                            break b;
                        $i = $i + 3 | 0;
                        if ($i >= $s.$length())
                            continue c;
                        if ($s.$charAt($i) != 37)
                            break;
                    }
                    continue;
                }
                if (!($ch >= 97 && $ch <= 122) && !($ch >= 65 && $ch <= 90) && !($ch >= 48 && $ch <= 57) && $legal.$indexOf($ch) <= (-1)) {
                    if ($ch <= 127)
                        break a;
                    if (jn_URIEncoderDecoder_isSpaceChar($ch))
                        break a;
                    if (jl_Character_isISOControl0($ch))
                        break a;
                }
                $i = $i + 1 | 0;
            }
            return;
        }
        $rt_throw(jn_URISyntaxException__init_($s, $rt_s(23), $i));
    }
    $rt_throw(jn_URISyntaxException__init_($s, $rt_s(23), $i));
},
jn_URIEncoderDecoder_isSpaceChar = $c => {
    switch ($c) {
        case 9:
        case 32:
            break;
        default:
            return 0;
    }
    return 1;
},
jn_URIEncoderDecoder_validateSimple = ($s, $legal) => {
    let $i, $ch;
    $i = 0;
    while ($i < $s.$length()) {
        $ch = $s.$charAt($i);
        if (!($ch >= 97 && $ch <= 122) && !($ch >= 65 && $ch <= 90) && !($ch >= 48 && $ch <= 57) && $legal.$indexOf($ch) <= (-1))
            $rt_throw(jn_URISyntaxException__init_($s, $rt_s(23), $i));
        $i = $i + 1 | 0;
    }
};
function jn_URISyntaxException() {
    let a = this; jl_Exception.call(a);
    a.$input = null;
    a.$index7 = 0;
}
let jn_URISyntaxException__init_2 = ($this, $input, $reason, $index) => {
    jl_Exception__init_($this, $reason);
    if ($input !== null && $reason !== null) {
        if ($index >= (-1)) {
            $this.$input = $input;
            $this.$index7 = $index;
            return;
        }
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    $rt_throw(jl_NullPointerException__init_());
},
jn_URISyntaxException__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jn_URISyntaxException();
    jn_URISyntaxException__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
jn_URISyntaxException__init_1 = ($this, $input, $reason) => {
    jl_Exception__init_($this, $reason);
    if ($input !== null && $reason !== null) {
        $this.$input = $input;
        $this.$index7 = (-1);
        return;
    }
    $rt_throw(jl_NullPointerException__init_());
},
jn_URISyntaxException__init_0 = (var_0, var_1) => {
    let var_2 = new jn_URISyntaxException();
    jn_URISyntaxException__init_1(var_2, var_0, var_1);
    return var_2;
},
jn_URISyntaxException_getIndex = $this => {
    return $this.$index7;
},
jn_URISyntaxException_getMessage = $this => {
    return $rt_s(23);
};
function otcit_DoubleAnalyzer$Result() {
    let a = this; jl_Object.call(a);
    a.$mantissa0 = Long_ZERO;
    a.$exponent = 0;
    a.$sign2 = 0;
}
let otcit_DoubleAnalyzer$Result__init_ = $this => {
    jl_Object__init_($this);
},
otcit_DoubleAnalyzer$Result__init_0 = () => {
    let var_0 = new otcit_DoubleAnalyzer$Result();
    otcit_DoubleAnalyzer$Result__init_(var_0);
    return var_0;
},
jtt_TemporalQueries$_clinit_$lambda$_11_2 = $rt_classWithoutFields(),
jtt_TemporalQueries$_clinit_$lambda$_11_2__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtt_TemporalQueries$_clinit_$lambda$_11_2__init_0 = () => {
    let var_0 = new jtt_TemporalQueries$_clinit_$lambda$_11_2();
    jtt_TemporalQueries$_clinit_$lambda$_11_2__init_(var_0);
    return var_0;
};
function onnn_Nip05Identity() {
    let a = this; jl_Object.call(a);
    a.$data5 = null;
    a.$name5 = null;
    a.$domain = null;
    a.$publicKey1 = null;
    a.$recommendedRelays = null;
    a.$nip46 = null;
}
let onnn_Nip05Identity__init_ = ($this, $name, $domain, $nip05data) => {
    jl_Object__init_($this);
    $this.$data5 = $nip05data;
    $this.$name5 = $name;
    $this.$domain = $domain;
    $this.$publicKey1 = onnn_Nip05Identity_extractPubkey($this, $this.$getName());
    if ($this.$publicKey1 !== null)
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1104)));
},
onnn_Nip05Identity__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onnn_Nip05Identity();
    onnn_Nip05Identity__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onnn_Nip05Identity_getNip46Data = $this => {
    let $nip46, var$2, var$3, $nip46o, $nip46data, $relayso, $relays, var$8, $nostrconnect, $nostrconnectRedirect;
    if ($this.$nip46 !== null)
        return $this.$nip46;
    $nip46 = onnn_Nip05Nip46Data__init_(onnn_Nip05Identity_extractPubkey($this, $rt_s(1105)));
    var$2 = $this.$getDomain();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(913)), var$2);
    $nip46.$setUrl(jl_StringBuilder_toString(var$3));
    $nip46.$setName0($this.$getName());
    $nip46o = $this.$data5.$get1($rt_s(1106));
    if ($nip46o !== null && $rt_isInstance($nip46o, ju_Map)) {
        $nip46data = $nip46o;
        $relayso = $nip46data.$get1($rt_s(1107));
        if ($relayso !== null) {
            $relays = onp_NGEUtils_safeStringArray($relayso);
            var$8 = $relays.data;
            if (var$8.length > 0)
                $nip46.$setRelays(ju_Arrays_asList($relays));
        }
        $nostrconnect = $nip46data.$get1($rt_s(1108));
        if ($nostrconnect !== null) {
            $nostrconnectRedirect = onp_NGEUtils_safeString($nostrconnect);
            if (!$nostrconnectRedirect.$isEmpty())
                $nip46.$setNostrconnectRedirectTemplate($nostrconnectRedirect);
        }
        $this.$nip46 = $nip46;
        return $nip46;
    }
    $this.$nip46 = $nip46;
    return $nip46;
},
onnn_Nip05Identity_getName = $this => {
    return $this.$name5;
},
onnn_Nip05Identity_getDomain = $this => {
    return $this.$domain;
},
onnn_Nip05Identity_getIdentifier = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$name5;
    var$2 = $this.$domain;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, var$1), 64), var$2);
    return jl_StringBuilder_toString(var$3);
},
onnn_Nip05Identity_getPublicKey = $this => {
    return $this.$publicKey1;
},
onnn_Nip05Identity_getRecommendedRelays = $this => {
    let $o, $relays, $userRelays;
    if ($this.$recommendedRelays !== null)
        return $this.$recommendedRelays;
    $o = $this.$data5.$get1($rt_s(1107));
    if ($o !== null && $rt_isInstance($o, ju_Map)) {
        $relays = $o;
        $userRelays = $relays.$get1(onnk_NostrPublicKey_asHex($this.$publicKey1));
        if ($userRelays !== null && $rt_isInstance($userRelays, ju_Collection)) {
            $this.$recommendedRelays = ju_Arrays_asList(onp_NGEUtils_safeStringArray($userRelays));
            return $this.$recommendedRelays;
        }
        return ju_Collections_emptyList();
    }
    return ju_Collections_emptyList();
},
onnn_Nip05Identity_extractPubkey = ($this, $name) => {
    let $o, $names, $key, $pubkey, $pk;
    $o = $this.$data5.$get1($rt_s(1109));
    if ($o !== null && $rt_isInstance($o, ju_Map)) {
        $names = $o;
        $key = $names.$get1($name);
        if ($key !== null && $key instanceof jl_String) {
            $pubkey = $key;
            $pk = onnk_NostrPublicKey_fromHex($pubkey);
            return $pk;
        }
        return null;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1104)));
},
onnn_Nip05Identity_extractPubkey$exported$0 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return onnn_Nip05Identity_extractPubkey(var$1, var$2);
},
onnn_Nip05Identity_getName$exported$1 = var$1 => {
    return $rt_ustr(var$1.$getName());
},
onnn_Nip05Identity__init_$exported$2 = (var$1, var$2, var$3) => {
    return onnn_Nip05Identity__init_0($rt_str(var$1), $rt_str(var$2), var$3);
},
onnn_Nip05Identity_getDomain$exported$3 = var$1 => {
    return $rt_ustr(var$1.$getDomain());
},
onnn_Nip05Identity_getIdentifier$exported$4 = var$1 => {
    return $rt_ustr(var$1.$getIdentifier0());
},
onnn_Nip05Identity_getNip46Data$exported$5 = var$1 => {
    return var$1.$getNip46Data();
},
onnn_Nip05Identity_getRecommendedRelays$exported$6 = var$1 => {
    return var$1.$getRecommendedRelays();
},
onnn_Nip05Identity_getPublicKey$exported$7 = var$1 => {
    return var$1.$getPublicKey();
},
jtt_TemporalQueries$_clinit_$lambda$_11_1 = $rt_classWithoutFields(),
jtt_TemporalQueries$_clinit_$lambda$_11_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jtt_TemporalQueries$_clinit_$lambda$_11_1__init_0 = () => {
    let var_0 = new jtt_TemporalQueries$_clinit_$lambda$_11_1();
    jtt_TemporalQueries$_clinit_$lambda$_11_1__init_(var_0);
    return var_0;
},
jtt_TemporalQueries$_clinit_$lambda$_11_1_queryFrom0 = (var$0, var$1) => {
    return jtt_TemporalQueries$_clinit_$lambda$_11_1_queryFrom(var$0, var$1);
},
jtt_TemporalQueries$_clinit_$lambda$_11_1_queryFrom = (var$0, var$1) => {
    return jtt_TemporalQueries_lambda$static$1(var$1);
};
function ji_ByteArrayInputStream() {
    let a = this; ji_InputStream.call(a);
    a.$buf1 = null;
    a.$pos0 = 0;
    a.$mark0 = 0;
    a.$count3 = 0;
}
let ji_ByteArrayInputStream__init_ = ($this, $buf, $offset, $length) => {
    ji_InputStream__init_($this);
    $this.$buf1 = $buf;
    $this.$pos0 = $offset;
    $this.$mark0 = $offset;
    $this.$count3 = $offset + $length | 0;
},
ji_ByteArrayInputStream__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
ji_ByteArrayInputStream__init_0 = ($this, $buf) => {
    ji_ByteArrayInputStream__init_($this, $buf, 0, $buf.data.length);
},
ji_ByteArrayInputStream__init_1 = var_0 => {
    let var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_0(var_1, var_0);
    return var_1;
},
ji_ByteArrayInputStream_read = ($this, $b, $off, $len) => {
    let $bytesToRead, $i, var$6, var$7, var$8, var$9;
    $bytesToRead = jl_Math_min($len, $this.$count3 - $this.$pos0 | 0);
    $i = 0;
    while ($i < $bytesToRead) {
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$8 = $this.$buf1.data;
        var$9 = $this.$pos0;
        $this.$pos0 = var$9 + 1 | 0;
        var$6[$off] = var$8[var$9];
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($bytesToRead <= 0)
        $bytesToRead = (-1);
    return $bytesToRead;
},
ji_ByteArrayInputStream_available = $this => {
    return $this.$count3 - $this.$pos0 | 0;
},
ji_ByteArrayInputStream_close = $this => {
    return;
},
otci_IntegerUtil = $rt_classWithoutFields(),
otci_IntegerUtil_toUnsignedLogRadixString = ($value, $radixLog2) => {
    let $radix, $mask, $sz, $chars, $pos, $target, var$9, $target_0;
    if (!$value)
        return $rt_s(707);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz);
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        var$9 = $chars.data;
        $target_0 = $target + 1 | 0;
        var$9[$target] = jl_Character_forDigit(($value >>> $pos | 0) & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    return jl_String__init_($chars);
};
function juca_AtomicInteger() {
    let a = this; jl_Number.call(a);
    a.$value8 = 0;
    a.$version3 = 0;
}
let juca_AtomicInteger__init_ = ($this, $value) => {
    jl_Number__init_($this);
    $this.$value8 = $value;
},
juca_AtomicInteger__init_0 = var_0 => {
    let var_1 = new juca_AtomicInteger();
    juca_AtomicInteger__init_(var_1, var_0);
    return var_1;
},
juca_AtomicInteger_get = $this => {
    return $this.$value8;
},
juca_AtomicInteger_decrementAndGet = $this => {
    let var$1;
    $this.$version3 = $this.$version3 + 1 | 0;
    var$1 = $this.$value8 - 1 | 0;
    $this.$value8 = var$1;
    return var$1;
},
jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_PossessiveAltQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_PossessiveAltQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PossessiveAltQuantifierSet();
    jur_PossessiveAltQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PossessiveAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jl_SecurityException = $rt_classWithoutFields(jl_RuntimeException),
jl_SecurityException__init_ = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_SecurityException__init_0 = var_0 => {
    let var_1 = new jl_SecurityException();
    jl_SecurityException__init_(var_1, var_0);
    return var_1;
},
otjc_JSObjects = $rt_classWithoutFields();
function onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0() {
    jl_Object.call(this);
    this.$_0116 = null;
}
let onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0116 = var$1;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0();
    onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0_run = var$0 => {
    onnrs_NostrRTCSignaling_lambda$onSubEvent$3(var$0.$_0116);
};
function onnrt_NostrTURN$lambda$loop$6$lambda$_15_0() {
    jl_Object.call(this);
    this.$_018 = null;
}
let onnrt_NostrTURN$lambda$loop$6$lambda$_15_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_018 = var$1;
},
onnrt_NostrTURN$lambda$loop$6$lambda$_15_0__init_0 = var_0 => {
    let var_1 = new onnrt_NostrTURN$lambda$loop$6$lambda$_15_0();
    onnrt_NostrTURN$lambda$loop$6$lambda$_15_0__init_(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$lambda$loop$6$lambda$_15_0_run = var$0 => {
    onnrt_NostrTURN_lambda$loop$5(var$0.$_018);
};
function onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0() {
    let a = this; jl_Object.call(a);
    a.$_0187 = null;
    a.$_191 = null;
}
let onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0187 = var$1;
    var$0.$_191 = var$2;
},
onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0();
    onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0__init_(var_2, var_0, var_1);
    return var_2;
};
function onns_NostrNIP46Signer$listen$lambda$_6_1() {
    let a = this; jl_Object.call(a);
    a.$_098 = null;
    a.$_153 = null;
    a.$_226 = null;
}
let onns_NostrNIP46Signer$listen$lambda$_6_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_098 = var$1;
    var$0.$_153 = var$2;
    var$0.$_226 = var$3;
},
onns_NostrNIP46Signer$listen$lambda$_6_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onns_NostrNIP46Signer$listen$lambda$_6_1();
    onns_NostrNIP46Signer$listen$lambda$_6_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_NostrNIP46Signer$listen$lambda$_6_1_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$listen$lambda$_6_1_apply(var$0, var$1);
},
onns_NostrNIP46Signer$listen$lambda$_6_1_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$listen$8(var$0.$_098, var$0.$_153, var$0.$_226, var$1);
};
function jtf_DateTimeParseContext() {
    let a = this; jl_Object.call(a);
    a.$locale = null;
    a.$symbols = null;
    a.$overrideChronology = null;
    a.$overrideZone = null;
    a.$caseSensitive = 0;
    a.$strict = 0;
    a.$parsed = null;
}
let jtf_DateTimeParseContext__init_0 = ($this, $formatter) => {
    jl_Object__init_($this);
    $this.$caseSensitive = 1;
    $this.$strict = 1;
    $this.$parsed = ju_ArrayList__init_();
    $this.$locale = jtf_DateTimeFormatter_getLocale($formatter);
    $this.$symbols = jtf_DateTimeFormatter_getDecimalStyle($formatter);
    $this.$overrideChronology = jtf_DateTimeFormatter_getChronology($formatter);
    $this.$overrideZone = jtf_DateTimeFormatter_getZone($formatter);
    $this.$parsed.$add1(jtf_DateTimeParseContext$Parsed__init_($this));
},
jtf_DateTimeParseContext__init_1 = var_0 => {
    let var_1 = new jtf_DateTimeParseContext();
    jtf_DateTimeParseContext__init_0(var_1, var_0);
    return var_1;
},
jtf_DateTimeParseContext__init_ = ($this, $other) => {
    jl_Object__init_($this);
    $this.$caseSensitive = 1;
    $this.$strict = 1;
    $this.$parsed = ju_ArrayList__init_();
    $this.$locale = $other.$locale;
    $this.$symbols = $other.$symbols;
    $this.$overrideChronology = $other.$overrideChronology;
    $this.$overrideZone = $other.$overrideZone;
    $this.$caseSensitive = $other.$caseSensitive;
    $this.$strict = $other.$strict;
    $this.$parsed.$add1(jtf_DateTimeParseContext$Parsed__init_($this));
},
jtf_DateTimeParseContext__init_2 = var_0 => {
    let var_1 = new jtf_DateTimeParseContext();
    jtf_DateTimeParseContext__init_(var_1, var_0);
    return var_1;
},
jtf_DateTimeParseContext_copy = $this => {
    return jtf_DateTimeParseContext__init_2($this);
},
jtf_DateTimeParseContext_getLocale = $this => {
    return $this.$locale;
},
jtf_DateTimeParseContext_getSymbols = $this => {
    return $this.$symbols;
},
jtf_DateTimeParseContext_getEffectiveChronology = $this => {
    let $chrono;
    $chrono = (jtf_DateTimeParseContext_currentParsed($this)).$chrono1;
    if ($chrono === null) {
        $chrono = $this.$overrideChronology;
        if ($chrono === null) {
            jtc_IsoChronology_$callClinit();
            $chrono = jtc_IsoChronology_INSTANCE;
        }
    }
    return $chrono;
},
jtf_DateTimeParseContext_isCaseSensitive = $this => {
    return $this.$caseSensitive;
},
jtf_DateTimeParseContext_setCaseSensitive = ($this, $caseSensitive) => {
    $this.$caseSensitive = $caseSensitive;
},
jtf_DateTimeParseContext_subSequenceEquals = ($this, $cs1, $offset1, $cs2, $offset2, $length) => {
    let $i, $ch1, $ch2;
    if (($offset1 + $length | 0) <= $cs1.$length() && ($offset2 + $length | 0) <= $cs2.$length()) {
        a: {
            if (jtf_DateTimeParseContext_isCaseSensitive($this)) {
                $i = 0;
                while (true) {
                    if ($i >= $length)
                        break a;
                    $ch1 = $cs1.$charAt($offset1 + $i | 0);
                    $ch2 = $cs2.$charAt($offset2 + $i | 0);
                    if ($ch1 != $ch2)
                        break;
                    $i = $i + 1 | 0;
                }
                return 0;
            }
            $i = 0;
            while (true) {
                if ($i >= $length)
                    break a;
                $ch1 = $cs1.$charAt($offset1 + $i | 0);
                $ch2 = $cs2.$charAt($offset2 + $i | 0);
                if ($ch1 != $ch2 && jl_Character_toUpperCase($ch1) != jl_Character_toUpperCase($ch2) && jl_Character_toLowerCase($ch1) != jl_Character_toLowerCase($ch2))
                    return 0;
                $i = $i + 1 | 0;
            }
        }
        return 1;
    }
    return 0;
},
jtf_DateTimeParseContext_charEquals = ($this, $ch1, $ch2) => {
    if (!jtf_DateTimeParseContext_isCaseSensitive($this))
        return jtf_DateTimeParseContext_charEqualsIgnoreCase($ch1, $ch2);
    return $ch1 != $ch2 ? 0 : 1;
},
jtf_DateTimeParseContext_charEqualsIgnoreCase = ($c1, $c2) => {
    return $c1 != $c2 && jl_Character_toUpperCase($c1) != jl_Character_toUpperCase($c2) && jl_Character_toLowerCase($c1) != jl_Character_toLowerCase($c2) ? 0 : 1;
},
jtf_DateTimeParseContext_isStrict = $this => {
    return $this.$strict;
},
jtf_DateTimeParseContext_setStrict = ($this, $strict) => {
    $this.$strict = $strict;
},
jtf_DateTimeParseContext_startOptional = $this => {
    $this.$parsed.$add1(jtf_DateTimeParseContext$Parsed_copy(jtf_DateTimeParseContext_currentParsed($this)));
},
jtf_DateTimeParseContext_endOptional = ($this, $successful) => {
    if (!$successful)
        $this.$parsed.$remove0($this.$parsed.$size() - 1 | 0);
    else
        $this.$parsed.$remove0($this.$parsed.$size() - 2 | 0);
},
jtf_DateTimeParseContext_currentParsed = $this => {
    return $this.$parsed.$get($this.$parsed.$size() - 1 | 0);
},
jtf_DateTimeParseContext_getParsed = ($this, $field) => {
    return (jtf_DateTimeParseContext_currentParsed($this)).$fieldValues0.$get1($field);
},
jtf_DateTimeParseContext_setParsedField = ($this, $field, $value, $errorPos, $successPos) => {
    let $old;
    ju_Objects_requireNonNull($field, $rt_s(33));
    $old = (jtf_DateTimeParseContext_currentParsed($this)).$fieldValues0.$put1($field, jl_Long_valueOf($value));
    if ($old !== null && Long_ne($old.$longValue(), $value))
        $successPos = $errorPos ^ (-1);
    return $successPos;
},
jtf_DateTimeParseContext_setParsed = ($this, $zone) => {
    ju_Objects_requireNonNull($zone, $rt_s(1110));
    (jtf_DateTimeParseContext_currentParsed($this)).$zone1 = $zone;
},
jtf_DateTimeParseContext_setParsedLeapSecond = $this => {
    (jtf_DateTimeParseContext_currentParsed($this)).$leapSecond = 1;
},
jtf_DateTimeParseContext_toParsed = $this => {
    return jtf_DateTimeParseContext_currentParsed($this);
},
onns_NostrNIP46Signer$listen$lambda$_6_0 = $rt_classWithoutFields(),
onns_NostrNIP46Signer$listen$lambda$_6_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onns_NostrNIP46Signer$listen$lambda$_6_0__init_0 = () => {
    let var_0 = new onns_NostrNIP46Signer$listen$lambda$_6_0();
    onns_NostrNIP46Signer$listen$lambda$_6_0__init_(var_0);
    return var_0;
},
onns_NostrNIP46Signer$listen$lambda$_6_0_accept0 = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer$listen$lambda$_6_0_accept(var$0, var$1, var$2);
},
onns_NostrNIP46Signer$listen$lambda$_6_0_accept = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer_lambda$listen$4(var$1, var$2);
},
ju_Objects = $rt_classWithoutFields(),
ju_Objects_equals = ($a, $b) => {
    if ($a === $b)
        return 1;
    return $a !== null ? $a.$equals($b) : $b !== null ? 0 : 1;
},
ju_Objects_hashCode = $o => {
    return $o !== null ? $o.$hashCode() : 0;
},
ju_Objects_toString = $o => {
    return ju_Objects_toString0($o, $rt_s(94));
},
ju_Objects_toString0 = ($o, $nullDefault) => {
    if ($o !== null)
        $nullDefault = $o.$toString();
    return $nullDefault;
},
ju_Objects_requireNonNull0 = $obj => {
    return ju_Objects_requireNonNull($obj, $rt_s(23));
},
ju_Objects_requireNonNull = ($obj, $message) => {
    if ($obj !== null)
        return $obj;
    $rt_throw(jl_NullPointerException__init_0($message));
},
ju_Objects_deepEquals = ($a, $b) => {
    if ($a === $b)
        return 1;
    if ($a === null)
        return $b !== null ? 0 : 1;
    if ($rt_isInstance($a, $rt_arraycls($rt_booleancls)))
        return $rt_isInstance($b, $rt_arraycls($rt_booleancls)) && ju_Arrays_equals4($a, $b) ? 1 : 0;
    if ($rt_isInstance($b, $rt_arraycls($rt_booleancls)))
        return 0;
    if ($rt_isInstance($a, $rt_arraycls($rt_bytecls)))
        return $rt_isInstance($b, $rt_arraycls($rt_bytecls)) && ju_Arrays_equals2($a, $b) ? 1 : 0;
    if ($rt_isInstance($b, $rt_arraycls($rt_bytecls)))
        return 0;
    if ($rt_isInstance($a, $rt_arraycls($rt_shortcls)))
        return $rt_isInstance($b, $rt_arraycls($rt_shortcls)) && ju_Arrays_equals5($a, $b) ? 1 : 0;
    if ($rt_isInstance($b, $rt_arraycls($rt_shortcls)))
        return 0;
    if ($rt_isInstance($a, $rt_arraycls($rt_intcls)))
        return $rt_isInstance($b, $rt_arraycls($rt_intcls)) && ju_Arrays_equals1($a, $b) ? 1 : 0;
    if ($rt_isInstance($b, $rt_arraycls($rt_intcls)))
        return 0;
    if ($rt_isInstance($a, $rt_arraycls($rt_charcls)))
        return $rt_isInstance($b, $rt_arraycls($rt_charcls)) && ju_Arrays_equals6($a, $b) ? 1 : 0;
    if ($rt_isInstance($b, $rt_arraycls($rt_charcls)))
        return 0;
    if ($rt_isInstance($a, $rt_arraycls($rt_floatcls)))
        return $rt_isInstance($b, $rt_arraycls($rt_floatcls)) && ju_Arrays_equals7($a, $b) ? 1 : 0;
    if ($rt_isInstance($b, $rt_arraycls($rt_floatcls)))
        return 0;
    if ($rt_isInstance($a, $rt_arraycls($rt_doublecls)))
        return $rt_isInstance($b, $rt_arraycls($rt_doublecls)) && ju_Arrays_equals3($a, $b) ? 1 : 0;
    if ($rt_isInstance($b, $rt_arraycls($rt_doublecls)))
        return 0;
    if (!$rt_isInstance($a, $rt_arraycls(jl_Object))) {
        if (!$rt_isInstance($b, $rt_arraycls(jl_Object)))
            return $a.$equals($b);
        return 0;
    }
    return $rt_isInstance($b, $rt_arraycls(jl_Object)) && ju_Arrays_deepEquals($a, $b) ? 1 : 0;
},
ju_Objects_hash = $values => {
    return ju_Arrays_hashCode($values);
},
ju_Objects_checkFromIndexSize = ($fromIndex, $size, $length) => {
    if ($fromIndex >= 0 && $size >= 0 && $size <= ($length - $fromIndex | 0))
        return $fromIndex;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
};
function onn_NostrPool$lambda$fetch$16$lambda$_41_0() {
    let a = this; jl_Object.call(a);
    a.$_021 = null;
    a.$_112 = null;
}
let onn_NostrPool$lambda$fetch$16$lambda$_41_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_021 = var$1;
    var$0.$_112 = var$2;
},
onn_NostrPool$lambda$fetch$16$lambda$_41_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$lambda$fetch$16$lambda$_41_0();
    onn_NostrPool$lambda$fetch$16$lambda$_41_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$lambda$fetch$16$lambda$_41_0_run = var$0 => {
    onn_NostrPool_lambda$fetch$15(var$0.$_021, var$0.$_112);
};
function jur_SequenceSet() {
    let a = this; jur_LeafSet.call(a);
    a.$string = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
let jur_SequenceSet__init_ = ($this, $substring) => {
    let $j;
    jur_LeafSet__init_($this);
    $this.$string = $substring.$toString();
    $this.$charCount0 = $substring.$length();
    $this.$leftToRight = jur_SequenceSet$IntHash__init_0($this.$charCount0);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_0($this.$charCount0);
    $j = 0;
    while ($j < ($this.$charCount0 - 1 | 0)) {
        $this.$leftToRight.$put8($this.$string.$charAt($j), ($this.$charCount0 - $j | 0) - 1 | 0);
        $this.$rightToLeft.$put8($this.$string.$charAt(($this.$charCount0 - $j | 0) - 1 | 0), ($this.$charCount0 - $j | 0) - 1 | 0);
        $j = $j + 1 | 0;
    }
},
jur_SequenceSet__init_0 = var_0 => {
    let var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_SequenceSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$startsWith1($testString, $strIndex) ? (-1) : $this.$charCount0;
},
jur_SequenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $strLength, var$5;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = $this.$indexOf6($testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next5.$matches(var$5 + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
},
jur_SequenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let var$5;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$5 = $this.$lastIndexOf1($testString, $strIndex, $lastIndex);
        if (var$5 < 0)
            return (-1);
        if ($this.$next5.$matches(var$5 + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = var$5 + (-1) | 0;
    }
    return var$5;
},
jur_SequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1111)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_SequenceSet_first = ($this, $set) => {
    let var$2, var$3, var$4, var$5, var$6;
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$string.$charAt(0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return $set.$accepts(0, $this.$string.$substring(0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            if ($this.$string.$length() > 1) {
                var$2 = $set;
                var$3 = var$2.$getCodePoint();
                var$4 = $this.$string.$charAt(0);
                var$2 = $this.$string;
                var$5 = var$2.$charAt(1);
                if (var$3 == jl_Character_toCodePoint(var$4, var$5)) {
                    var$4 = 1;
                    break a;
                }
            }
            var$4 = 0;
        }
        return var$4;
    }
    b: {
        c: {
            var$2 = $set;
            if (!var$2.$contains0($this.$string.$charAt(0))) {
                var$6 = $this.$string;
                if (var$6.$length() <= 1)
                    break c;
                var$6 = $this.$string;
                var$4 = jl_Character_toCodePoint(var$6.$charAt(0), $this.$string.$charAt(1));
                if (!var$2.$contains0(var$4))
                    break c;
            }
            var$4 = 1;
            break b;
        }
        var$4 = 0;
    }
    return var$4;
},
jur_SequenceSet_indexOf = ($this, $str, $i, $to) => {
    let $last, $ch;
    $last = $this.$string.$charAt($this.$charCount0 - 1 | 0);
    while (true) {
        if ($i > ($to - $this.$charCount0 | 0))
            return (-1);
        $ch = $str.$charAt(($i + $this.$charCount0 | 0) - 1 | 0);
        if ($ch == $last && $this.$startsWith1($str, $i))
            break;
        $i = $i + $this.$leftToRight.$get3($ch) | 0;
    }
    return $i;
},
jur_SequenceSet_lastIndexOf = ($this, $str, $to, $i) => {
    let $first, $size, $delta, $ch;
    $first = $this.$string.$charAt(0);
    $size = $str.$length();
    $delta = ($size - $i | 0) - $this.$charCount0 | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    while (true) {
        if ($i < $to)
            return (-1);
        $ch = $str.$charAt($i);
        if ($ch == $first && $this.$startsWith1($str, $i))
            break;
        $i = $i - $this.$rightToLeft.$get3($ch) | 0;
    }
    return $i;
},
jur_SequenceSet_startsWith = ($this, $str, $from) => {
    let $i;
    $i = 0;
    while ($i < $this.$charCount0) {
        if ($str.$charAt($i + $from | 0) != $this.$string.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
};
function onnrs_NostrRTCSignaling() {
    let a = this; jl_Object.call(a);
    a.$pool0 = null;
    a.$localPeer = null;
    a.$seenAnnounces = null;
    a.$seenAnnouncesRO = null;
    a.$listeners1 = null;
    a.$settings1 = null;
    a.$executor3 = null;
    a.$roomKeyPair = null;
    a.$roomSigner = null;
    a.$closed = 0;
    a.$loopStarted = 0;
    a.$discoverySub = null;
    a.$signalingSub = null;
    a.$listener0 = null;
}
let onnrs_NostrRTCSignaling_logger = null,
onnrs_NostrRTCSignaling_$assertionsDisabled = 0,
onnrs_NostrRTCSignaling_$callClinit = () => {
    onnrs_NostrRTCSignaling_$callClinit = $rt_eraseClinit(onnrs_NostrRTCSignaling);
    onnrs_NostrRTCSignaling__clinit_();
},
onnrs_NostrRTCSignaling__init_0 = ($this, $settings, $localPeer, $roomKeyPair, $pool) => {
    onnrs_NostrRTCSignaling_$callClinit();
    jl_Object__init_($this);
    $this.$seenAnnounces = (onp_NGEUtils_getPlatform()).$newConcurrentQueue($rt_cls(onnrs_NostrRTCAnnounce));
    $this.$seenAnnouncesRO = ju_Collections_unmodifiableCollection($this.$seenAnnounces);
    $this.$listeners1 = juc_CopyOnWriteArrayList__init_();
    $this.$closed = 0;
    $this.$loopStarted = 0;
    $this.$listener0 = onnrs_NostrRTCSignaling$1__init_($this);
    $this.$pool0 = $pool;
    $this.$localPeer = $localPeer;
    $this.$settings1 = $settings;
    $this.$executor3 = onp_NGEPlatform_newPoolExecutor(onp_NGEUtils_getPlatform());
    $this.$roomKeyPair = $roomKeyPair;
    $this.$roomSigner = onns_NostrKeyPairSigner__init_($roomKeyPair);
},
onnrs_NostrRTCSignaling__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCSignaling();
    onnrs_NostrRTCSignaling__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCSignaling_getAnnounces = $this => {
    return $this.$seenAnnouncesRO;
},
onnrs_NostrRTCSignaling_addListener = ($this, $listener) => {
    $this.$listeners1.$add1($listener);
    return $this;
},
onnrs_NostrRTCSignaling_removeListener = ($this, $listener) => {
    $this.$listeners1.$remove2($listener);
    return $this;
},
onnrs_NostrRTCSignaling_onSubEvent = ($this, $event, $stored) => {
    if ($this.$closed)
        return;
    if (onnk_NostrPublicKey_equals($event.$getPubkey(), $this.$localPeer.$getPubkey()))
        return;
    $this.$executor3.$run0(onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0__init_0($this, $event));
},
onnrs_NostrRTCSignaling_isDiscoveryStarted = $this => {
    return $this.$discoverySub === null ? 0 : 1;
},
onnrs_NostrRTCSignaling_isSignalingStarted = $this => {
    return $this.$signalingSub === null ? 0 : 1;
},
onnrs_NostrRTCSignaling_start = ($this, $signaling) => {
    let $waitQueue, var$3, var$4, var$5, var$6, var$7, $localpk, $platform;
    $waitQueue = ju_ArrayList__init_();
    if (!$this.$isDiscoveryStarted()) {
        var$3 = $this.$pool0;
        var$4 = onn_NostrFilter__init_();
        var$5 = var$4.$withKind0(25050);
        var$6 = $rt_createArray(jl_String, 1);
        var$7 = var$6.data;
        var$4 = $this.$roomKeyPair;
        var$7[0] = onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey(var$4));
        var$4 = var$5.$withTag2($rt_s(1112), var$6);
        var$7 = $rt_wrapArray(jl_String, [$rt_s(1113), $rt_s(1114)]);
        var$4 = var$4.$withTag2($rt_s(1115), var$7);
        var$4 = var$4.$limit0(0);
        $this.$discoverySub = var$3.$subscribe1(var$4);
        $this.$discoverySub.$addEventListener($this.$listener0);
        $waitQueue.$add1($this.$discoverySub.$open());
    }
    if (!$this.$isSignalingStarted() && $signaling) {
        $localpk = $this.$localPeer.$getPubkey();
        var$4 = $this.$pool0;
        var$5 = onn_NostrFilter__init_();
        var$5 = var$5.$withKind0(25050);
        var$7 = $rt_createArray(jl_String, 1);
        var$6 = var$7.data;
        var$3 = $this.$roomKeyPair;
        var$6[0] = onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey(var$3));
        var$5 = var$5.$withTag2($rt_s(1112), var$7);
        var$7 = $rt_wrapArray(jl_String, [$rt_s(1056), $rt_s(1116), $rt_s(1117)]);
        var$5 = var$5.$withTag2($rt_s(1115), var$7);
        var$7 = $rt_wrapArray(jl_String, [onnk_NostrPublicKey_asHex($localpk)]);
        var$5 = var$5.$withTag2($rt_s(1118), var$7);
        var$5 = var$5.$limit0(0);
        $this.$signalingSub = var$4.$subscribe1(var$5);
        $this.$signalingSub.$addEventListener($this.$listener0);
        $waitQueue.$add1($this.$signalingSub.$open());
    }
    $platform = onp_NGEUtils_getPlatform();
    var$4 = $platform.$awaitAll($waitQueue);
    var$5 = onnrs_NostrRTCSignaling$start$lambda$_7_0__init_0($this, $platform);
    var$4 = var$4.$compose(var$5);
    return var$4;
},
onnrs_NostrRTCSignaling_loop = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$executor3;
    var$2 = onnrs_NostrRTCSignaling$loop$lambda$_8_0__init_0($this);
    var$3 = $this.$settings1;
    var$4 = jt_Duration_toMillis(onp_RTCSettings_getSignalingLoopInterval(var$3));
    juc_TimeUnit_$callClinit();
    var$3 = juc_TimeUnit_MILLISECONDS;
    var$1.$runLater(var$2, var$4, var$3);
},
onnrs_NostrRTCSignaling_sendAnnounce = $this => {
    let $connectEvent, var$2, var$3, var$4, var$5;
    if ($this.$closed)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1119)));
    if (!$this.$isSignalingStarted())
        $rt_throw(jl_IllegalStateException__init_($rt_s(1120)));
    $connectEvent = onne_UnsignedNostrEvent__init_();
    $connectEvent.$withKind(25050);
    $connectEvent.$createdAt(jt_Instant_now());
    var$2 = $rt_createArray(jl_String, 1);
    var$2.data[0] = onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey($this.$roomKeyPair));
    $connectEvent.$withTag0($rt_s(1112), var$2);
    var$2 = $rt_createArray(jl_String, 1);
    var$2.data[0] = $rt_s(1113);
    $connectEvent.$withTag0($rt_s(1115), var$2);
    var$3 = $rt_createArray(jl_String, 1);
    var$3.data[0] = jl_String_valueOf1(jt_Instant_getEpochSecond(jt_Instant_plusSeconds(jt_Instant_now(), Long_fromInt(60))));
    $connectEvent.$withTag0($rt_s(738), var$3);
    var$4 = $this.$localPeer.$getSigner();
    var$4 = var$4.$sign($connectEvent);
    var$5 = onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0__init_0($this);
    var$4 = var$4.$compose(var$5);
    return var$4;
},
onnrs_NostrRTCSignaling_sendOffer = ($this, $offer, $recipient) => {
    let $event, var$4, $platform, $content, $json, var$8, var$9;
    if ($this.$closed)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1119)));
    if (!$this.$isSignalingStarted())
        $rt_throw(jl_IllegalStateException__init_($rt_s(1120)));
    $event = onne_UnsignedNostrEvent__init_();
    $event.$withKind(25050);
    $event.$createdAt(jt_Instant_now());
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey($this.$roomKeyPair));
    $event.$withTag0($rt_s(1112), var$4);
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = $rt_s(1056);
    $event.$withTag0($rt_s(1115), var$4);
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = onnk_NostrPublicKey_asHex($recipient);
    $event.$withTag0($rt_s(1118), var$4);
    $platform = onp_NGEUtils_getPlatform();
    $content = $offer.$get20();
    $json = $platform.$toJSON($content);
    var$8 = onnrs_NostrRTCSignaling_encrypt($this, $json, $recipient);
    var$9 = onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0__init_0($this, $event, $content, $recipient);
    var$8 = var$8.$compose(var$9);
    return var$8;
},
onnrs_NostrRTCSignaling_sendAnswer = ($this, $answer, $recipient) => {
    let $event, var$4, $platform, $content, $json, var$8, var$9;
    if ($this.$closed)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1119)));
    if (!$this.$isSignalingStarted())
        $rt_throw(jl_IllegalStateException__init_($rt_s(1120)));
    $event = onne_UnsignedNostrEvent__init_();
    $event.$withKind(25050);
    $event.$createdAt(jt_Instant_now());
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey($this.$roomKeyPair));
    $event.$withTag0($rt_s(1112), var$4);
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = $rt_s(1116);
    $event.$withTag0($rt_s(1115), var$4);
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = onnk_NostrPublicKey_asHex($recipient);
    $event.$withTag0($rt_s(1118), var$4);
    $platform = onp_NGEUtils_getPlatform();
    $content = $answer.$get20();
    $json = $platform.$toJSON($content);
    var$8 = onnrs_NostrRTCSignaling_encrypt($this, $json, $recipient);
    var$9 = onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0__init_0($this, $event, $content, $recipient);
    var$8 = var$8.$compose(var$9);
    return var$8;
},
onnrs_NostrRTCSignaling_sendCandidates = ($this, $candidate, $recipient) => {
    let $event, var$4, $platform, $content, $json, var$8, var$9;
    if ($this.$closed)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1119)));
    if (!$this.$isSignalingStarted())
        $rt_throw(jl_IllegalStateException__init_($rt_s(1120)));
    $event = onne_UnsignedNostrEvent__init_();
    $event.$withKind(25050);
    $event.$createdAt(jt_Instant_now());
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey($this.$roomKeyPair));
    $event.$withTag0($rt_s(1112), var$4);
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = $rt_s(1117);
    $event.$withTag0($rt_s(1115), var$4);
    var$4 = $rt_createArray(jl_String, 1);
    var$4.data[0] = onnk_NostrPublicKey_asHex($recipient);
    $event.$withTag0($rt_s(1118), var$4);
    $platform = onp_NGEUtils_getPlatform();
    $content = $candidate.$get20();
    $json = $platform.$toJSON($content);
    var$8 = onnrs_NostrRTCSignaling_encrypt($this, $json, $recipient);
    var$9 = onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0__init_0($this, $event, $content, $recipient);
    var$8 = var$8.$compose(var$9);
    return var$8;
},
onnrs_NostrRTCSignaling_close = $this => {
    let $connectEvent, var$2, var$3, var$4;
    if ($this.$closed)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1119)));
    onnrs_NostrRTCSignaling_$callClinit();
    onnrs_NostrRTCSignaling_logger.$fine($rt_s(1121));
    $this.$closed = 1;
    $connectEvent = onne_UnsignedNostrEvent__init_();
    $connectEvent.$withKind(25050);
    $connectEvent.$createdAt(jt_Instant_now());
    var$2 = $rt_createArray(jl_String, 1);
    var$2.data[0] = onnk_NostrPublicKey_asHex(onnk_NostrKeyPair_getPublicKey($this.$roomKeyPair));
    $connectEvent.$withTag0($rt_s(1112), var$2);
    var$2 = $rt_createArray(jl_String, 1);
    var$2.data[0] = $rt_s(1114);
    $connectEvent.$withTag0($rt_s(1115), var$2);
    var$3 = $this.$localPeer.$getSigner();
    var$3 = var$3.$sign($connectEvent);
    var$4 = onnrs_NostrRTCSignaling$close$lambda$_13_0__init_0($this);
    var$3.$compose(var$4);
    if ($this.$isDiscoveryStarted())
        $this.$discoverySub.$close0();
    if ($this.$isSignalingStarted())
        $this.$signalingSub.$close0();
    $this.$executor3.$close();
},
onnrs_NostrRTCSignaling_encrypt = ($this, $content, $recipient) => {
    let var$3, var$4, $out;
    var$3 = $this.$localPeer;
    var$3 = var$3.$getSigner();
    var$3 = var$3.$encrypt0($content, $recipient);
    var$4 = onnrs_NostrRTCSignaling$encrypt$lambda$_14_0__init_0($this, $recipient);
    $out = var$3.$compose(var$4);
    return $out;
},
onnrs_NostrRTCSignaling_decrypt = ($this, $content, $sender) => {
    let var$3, var$4, $out;
    var$3 = $this.$localPeer;
    var$3 = var$3.$getSigner();
    var$4 = $this.$roomKeyPair;
    var$3 = var$3.$decrypt0($content, onnk_NostrKeyPair_getPublicKey(var$4));
    var$4 = onnrs_NostrRTCSignaling$decrypt$lambda$_15_0__init_0($this, $sender);
    $out = var$3.$compose(var$4);
    return $out;
},
onnrs_NostrRTCSignaling_lambda$decrypt$18 = ($this, $sender, $enc) => {
    return ($this.$localPeer.$getSigner()).$decrypt0($enc, $sender);
},
onnrs_NostrRTCSignaling_lambda$encrypt$17 = ($this, $recipient, $enc) => {
    return $this.$roomSigner.$encrypt0($enc, $recipient);
},
onnrs_NostrRTCSignaling_lambda$close$16 = ($this, $ev) => {
    return $this.$pool0.$publish($ev);
},
onnrs_NostrRTCSignaling_lambda$sendCandidates$15 = ($this, $event, $content, $recipient, $encContent) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    $event.$withContent($encContent);
    onnrs_NostrRTCSignaling_$callClinit();
    var$5 = onnrs_NostrRTCSignaling_logger;
    var$6 = jl_String_valueOf($event);
    var$7 = jl_String_valueOf($content);
    var$8 = jl_String_valueOf($recipient);
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1122)), var$6), 32), var$7), $rt_s(316)), var$8);
    var$5.$finest(jl_StringBuilder_toString(var$9));
    var$5 = $this.$localPeer.$getSigner();
    var$5 = var$5.$sign($event);
    var$10 = onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0__init_0($this);
    var$5 = var$5.$compose(var$10);
    return var$5;
},
onnrs_NostrRTCSignaling_lambda$sendCandidates$14 = ($this, $ev) => {
    return $this.$pool0.$publish($ev);
},
onnrs_NostrRTCSignaling_lambda$sendAnswer$13 = ($this, $event, $content, $recipient, $encContent) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    $event.$withContent($encContent);
    onnrs_NostrRTCSignaling_$callClinit();
    var$5 = onnrs_NostrRTCSignaling_logger;
    var$6 = jl_String_valueOf($event);
    var$7 = jl_String_valueOf($content);
    var$8 = jl_String_valueOf($recipient);
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1123)), var$6), 32), var$7), $rt_s(316)), var$8);
    var$5.$finest(jl_StringBuilder_toString(var$9));
    var$5 = $this.$localPeer.$getSigner();
    var$5 = var$5.$sign($event);
    var$10 = onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0__init_0($this);
    var$5 = var$5.$compose(var$10);
    return var$5;
},
onnrs_NostrRTCSignaling_lambda$sendAnswer$12 = ($this, $ev) => {
    return $this.$pool0.$publish($ev);
},
onnrs_NostrRTCSignaling_lambda$sendOffer$11 = ($this, $event, $content, $recipient, $encContent) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    $event.$withContent($encContent);
    onnrs_NostrRTCSignaling_$callClinit();
    var$5 = onnrs_NostrRTCSignaling_logger;
    var$6 = jl_String_valueOf($event);
    var$7 = jl_String_valueOf($content);
    var$8 = jl_String_valueOf($recipient);
    var$9 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1124)), var$6), 32), var$7), $rt_s(316)), var$8);
    var$5.$finest(jl_StringBuilder_toString(var$9));
    var$5 = $this.$localPeer.$getSigner();
    var$5 = var$5.$sign($event);
    var$10 = onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0__init_0($this);
    var$5 = var$5.$compose(var$10);
    return var$5;
},
onnrs_NostrRTCSignaling_lambda$sendOffer$10 = ($this, $ev) => {
    return $this.$pool0.$publish($ev);
},
onnrs_NostrRTCSignaling_lambda$sendAnnounce$9 = ($this, $ev) => {
    return $this.$pool0.$publish($ev);
},
onnrs_NostrRTCSignaling_lambda$loop$8 = $this => {
    let $e, var$2, $now, $it, $announce, var$6, $listener, $$je;
    a: {
        try {
            if ($this.$isSignalingStarted())
                ($this.$sendAnnounce()).$await();
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        var$2 = onnrs_NostrRTCSignaling_logger;
        jul_Level_$callClinit();
        var$2.$log(jul_Level_WARNING, $rt_s(1125), $e);
    }
    $now = jt_Instant_now();
    $it = $this.$seenAnnounces.$iterator();
    while ($it.$hasNext()) {
        b: {
            $announce = $it.$next();
            if (jt_Instant_isBefore($announce.$getExpireAt(), $now)) {
                $it.$remove();
                var$6 = $this.$listeners1.$iterator();
                while (true) {
                    if (!var$6.$hasNext())
                        break b;
                    $listener = var$6.$next();
                    c: {
                        try {
                            onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
                            $listener.$onRemoveAnnounce($announce, onnrs_NostrRTCSignaling$Listener$RemoveReason_EXPIRED);
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                $e = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        var$2 = onnrs_NostrRTCSignaling_logger;
                        jul_Level_$callClinit();
                        var$2.$log(jul_Level_WARNING, $rt_s(1126), $e);
                    }
                }
            }
        }
    }
    if ($this.$closed)
        return null;
    onnrs_NostrRTCSignaling_loop($this);
    return null;
},
onnrs_NostrRTCSignaling_lambda$start$7 = ($this, $platform, $acks) => {
    let var$3, var$4, var$5;
    onnrs_NostrRTCSignaling_$callClinit();
    var$3 = onnrs_NostrRTCSignaling_logger;
    var$4 = jl_String_valueOf($acks);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1127)), var$4);
    var$3.$finest(jl_StringBuilder_toString(var$5));
    if (!$this.$loopStarted) {
        $this.$loopStarted = 1;
        onnrs_NostrRTCSignaling_loop($this);
    }
    return $platform.$wrapPromise(onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0__init_0());
},
onnrs_NostrRTCSignaling_lambda$start$6 = ($res, $rej) => {
    onnrs_NostrRTCSignaling_$callClinit();
    $res.$accept0(null);
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$5 = ($this, $event) => {
    let $type, var$3, var$4, var$5, $ann, $a, var$8, $listener, $e, $it, $announce, var$13, $platform, $$je;
    a: {
        $type = ($event.$getFirstTag($rt_s(1115))).$get15(0);
        var$3 = (-1);
        switch ($type.$hashCode()) {
            case 530405532:
                if (!$type.$equals($rt_s(1114)))
                    break a;
                var$3 = 1;
                break a;
            case 951351530:
                if (!$type.$equals($rt_s(1113)))
                    break a;
                var$3 = 0;
                break a;
            default:
        }
    }
    switch (var$3) {
        case 0:
            b: {
                var$4 = $this.$seenAnnounces;
                var$4 = var$4.$stream();
                var$5 = onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0__init_0($event);
                var$4 = var$4.$filter(var$5);
                var$4 = var$4.$findFirst();
                var$5 = null;
                $ann = ju_Optional_orElse(var$4, var$5);
                if ($ann === null) {
                    $a = new onnrs_NostrRTCAnnounce;
                    var$4 = $event.$getPubkey();
                    var$5 = $event.$getExpiration();
                    var$8 = $this.$localPeer;
                    onnrs_NostrRTCAnnounce__init_($a, var$4, var$5, var$8.$getPublicMisc());
                    var$4 = $this.$listeners1.$iterator();
                    while (var$4.$hasNext()) {
                        $listener = var$4.$next();
                        c: {
                            try {
                                $listener.$onAddAnnounce($a);
                                break c;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Exception) {
                                    $e = $$je;
                                } else {
                                    throw $$e;
                                }
                            }
                            onnrs_NostrRTCSignaling_$callClinit();
                            var$5 = onnrs_NostrRTCSignaling_logger;
                            jul_Level_$callClinit();
                            var$5.$log(jul_Level_WARNING, $rt_s(1128), $e);
                        }
                    }
                    $this.$seenAnnounces.$add1($a);
                } else {
                    onnrs_NostrRTCSignaling_$callClinit();
                    if (!onnrs_NostrRTCSignaling_$assertionsDisabled && !onp_NGEUtils_dbg(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3__init_0($event)))
                        $rt_throw(jl_AssertionError__init_());
                    $ann.$updateExpireAt($event.$getExpiration());
                    var$5 = $this.$listeners1.$iterator();
                    while (true) {
                        if (!var$5.$hasNext())
                            break b;
                        $listener = var$5.$next();
                        d: {
                            try {
                                $listener.$onUpdateAnnounce($ann);
                                break d;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Exception) {
                                    $e = $$je;
                                } else {
                                    throw $$e;
                                }
                            }
                            var$8 = onnrs_NostrRTCSignaling_logger;
                            jul_Level_$callClinit();
                            var$8.$log(jul_Level_WARNING, $rt_s(1129), $e);
                        }
                    }
                }
            }
            return null;
        case 1:
            onnrs_NostrRTCSignaling_$callClinit();
            var$4 = onnrs_NostrRTCSignaling_logger;
            var$5 = jl_String_valueOf($event.$getPubkey());
            var$8 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1130)), var$5);
            var$4.$finest(jl_StringBuilder_toString(var$8));
            $it = $this.$seenAnnounces.$iterator();
            while ($it.$hasNext()) {
                $announce = $it.$next();
                if (!onnk_NostrPublicKey_equals($announce.$getPubkey(), $event.$getPubkey()))
                    continue;
                $it.$remove();
                var$8 = onnrs_NostrRTCSignaling_logger;
                var$13 = jl_String_valueOf($event.$getPubkey());
                var$4 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(403)), var$13);
                var$8.$finest(jl_StringBuilder_toString(var$4));
                var$4 = $this.$listeners1.$iterator();
                while (var$4.$hasNext()) {
                    $listener = var$4.$next();
                    e: {
                        try {
                            onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit();
                            $listener.$onRemoveAnnounce($announce, onnrs_NostrRTCSignaling$Listener$RemoveReason_DISCONNECTED);
                            break e;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                $e = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        var$5 = onnrs_NostrRTCSignaling_logger;
                        jul_Level_$callClinit();
                        var$5.$log(jul_Level_WARNING, $rt_s(1126), $e);
                    }
                }
            }
            return null;
        default:
    }
    $platform = onp_NGEUtils_getPlatform();
    var$4 = onnrs_NostrRTCSignaling_decrypt($this, $event.$getContent(), $event.$getPubkey());
    var$5 = onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1__init_0();
    var$4 = var$4.$catchException(var$5);
    var$5 = onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2__init_0($this, $platform, $type, $event);
    var$4.$then(var$5);
    return null;
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$4 = ($this, $platform, $type, $event, $decryptedContent) => {
    let $content, var$6, $e, var$8, var$9, var$10, $offer, $listener, $answer, $candidate, $$je;
    a: {
        try {
            b: {
                $content = $platform.$fromJSON($decryptedContent, $rt_cls(ju_Map));
                var$6 = (-1);
                switch ($type.$hashCode()) {
                    case -1412808770:
                        if (!$type.$equals($rt_s(1116)))
                            break b;
                        var$6 = 1;
                        break b;
                    case 105650780:
                        if (!$type.$equals($rt_s(1056)))
                            break b;
                        var$6 = 0;
                        break b;
                    case 508663171:
                        if (!$type.$equals($rt_s(1117)))
                            break b;
                        var$6 = 2;
                        break b;
                    default:
                }
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        c: {
            d: {
                e: {
                    try {
                        switch (var$6) {
                            case 0:
                                break e;
                            case 1:
                                break d;
                            case 2:
                                break c;
                            default:
                        }
                        onnrs_NostrRTCSignaling_$callClinit();
                        var$8 = onnrs_NostrRTCSignaling_logger;
                        var$9 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1131)), $type);
                        var$8.$warning(jl_StringBuilder_toString(var$9));
                        var$8 = null;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $e = $$je;
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                    return var$8;
                }
                try {
                    onnrs_NostrRTCSignaling_$callClinit();
                    var$8 = onnrs_NostrRTCSignaling_logger;
                    var$9 = jl_String_valueOf($event.$getPubkey());
                    var$10 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(1132)), var$9);
                    var$8.$finest(jl_StringBuilder_toString(var$10));
                    $offer = onnrs_NostrRTCOffer__init_0($event.$getPubkey(), $content);
                    var$8 = $this.$listeners1.$iterator();
                    while (var$8.$hasNext()) {
                        $listener = var$8.$next();
                        f: {
                            try {
                                $listener.$onReceiveOffer($offer);
                                break f;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Exception) {
                                    $e = $$je;
                                } else {
                                    throw $$e;
                                }
                            }
                            var$9 = onnrs_NostrRTCSignaling_logger;
                            jul_Level_$callClinit();
                            var$9.$log(jul_Level_WARNING, $rt_s(1133), $e);
                        }
                    }
                    var$8 = null;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
                return var$8;
            }
            try {
                onnrs_NostrRTCSignaling_$callClinit();
                var$8 = onnrs_NostrRTCSignaling_logger;
                var$9 = jl_String_valueOf($event.$getPubkey());
                var$10 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(1134)), var$9);
                var$8.$finest(jl_StringBuilder_toString(var$10));
                $answer = onnrs_NostrRTCAnswer__init_0($event.$getPubkey(), $content);
                var$8 = $this.$listeners1.$iterator();
                while (var$8.$hasNext()) {
                    $listener = var$8.$next();
                    g: {
                        try {
                            $listener.$onReceiveAnswer($answer);
                            break g;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                $e = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        var$9 = onnrs_NostrRTCSignaling_logger;
                        jul_Level_$callClinit();
                        var$9.$log(jul_Level_WARNING, $rt_s(1135), $e);
                    }
                }
                var$8 = null;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$8;
        }
        h: {
            try {
                onnrs_NostrRTCSignaling_$callClinit();
                if (onnrs_NostrRTCSignaling_$assertionsDisabled)
                    break h;
                if (onp_NGEUtils_dbg(onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0__init_0($event)))
                    break h;
                $rt_throw(jl_AssertionError__init_());
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
        }
        try {
            $candidate = onnrs_NostrRTCIceCandidate__init_1($event.$getPubkey(), $content);
            var$8 = $this.$listeners1.$iterator();
            while (var$8.$hasNext()) {
                $listener = var$8.$next();
                i: {
                    try {
                        $listener.$onReceiveCandidates($candidate);
                        break i;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $e = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    var$9 = onnrs_NostrRTCSignaling_logger;
                    jul_Level_$callClinit();
                    var$9.$log(jul_Level_WARNING, $rt_s(1136), $e);
                }
            }
            var$8 = null;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$8;
    }
    onnrs_NostrRTCSignaling_$callClinit();
    var$8 = onnrs_NostrRTCSignaling_logger;
    jul_Level_$callClinit();
    var$8.$log(jul_Level_WARNING, $rt_s(1137), $e);
    return null;
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$3 = $event => {
    let var$2, var$3, var$4;
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = onnrs_NostrRTCSignaling_logger;
    var$3 = jl_String_valueOf($event.$getPubkey());
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1138)), var$3);
    var$2.$finest(jl_StringBuilder_toString(var$4));
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$2 = $exc => {
    let var$2, var$3, var$4;
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = onnrs_NostrRTCSignaling_logger;
    var$3 = $exc.$getMessage();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1139)), var$3);
    var$2.$warning(jl_StringBuilder_toString(var$4));
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$1 = $event => {
    let var$2, var$3, var$4;
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = onnrs_NostrRTCSignaling_logger;
    var$3 = jl_String_valueOf($event.$getPubkey());
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1140)), var$3);
    var$2.$finest(jl_StringBuilder_toString(var$4));
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$0 = ($event, $a) => {
    onnrs_NostrRTCSignaling_$callClinit();
    return onnk_NostrPublicKey_equals($a.$getPubkey(), $event.$getPubkey());
},
onnrs_NostrRTCSignaling__clinit_ = () => {
    onnrs_NostrRTCSignaling_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnrs_NostrRTCSignaling)) ? 0 : 1;
    onnrs_NostrRTCSignaling_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onnrs_NostrRTCSignaling)));
},
onnrs_NostrRTCSignaling_lambda$sendAnnounce$9$exported$0 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return onnrs_NostrRTCSignaling_lambda$sendAnnounce$9(var$1, var$2);
},
onnrs_NostrRTCSignaling_isDiscoveryStarted$exported$1 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    return !!var$1.$isDiscoveryStarted();
},
onnrs_NostrRTCSignaling_lambda$close$16$exported$2 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return onnrs_NostrRTCSignaling_lambda$close$16(var$1, var$2);
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$5$exported$3 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return otji_JSWrapper_javaToJs(onnrs_NostrRTCSignaling_lambda$onSubEvent$5(var$1, var$2));
},
onnrs_NostrRTCSignaling_lambda$start$7$exported$4 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return onnrs_NostrRTCSignaling_lambda$start$7(var$1, var$2, var$3);
},
onnrs_NostrRTCSignaling_sendOffer$exported$5 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$sendOffer(var$2, var$3);
},
onnrs_NostrRTCSignaling_encrypt$exported$6 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return onnrs_NostrRTCSignaling_encrypt(var$1, var$2, var$3);
},
onnrs_NostrRTCSignaling_removeListener$exported$7 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return var$1.$removeListener2(var$2);
},
onnrs_NostrRTCSignaling_sendAnnounce$exported$8 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    return var$1.$sendAnnounce();
},
onnrs_NostrRTCSignaling_start$exported$9 = (var$1, var$2) => {
    let var$3;
    onnrs_NostrRTCSignaling_$callClinit();
    var$3 = var$2 ? 1 : 0;
    return var$1.$start0(var$3);
};
let onnrs_NostrRTCSignaling_loop$exported$10 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    onnrs_NostrRTCSignaling_loop(var$1);
},
onnrs_NostrRTCSignaling_isSignalingStarted$exported$11 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    return !!var$1.$isSignalingStarted();
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$4$exported$12 = (var$1, var$2, var$3, var$4, var$5) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$4 = var$4;
    var$5 = $rt_str(var$5);
    return otji_JSWrapper_javaToJs(onnrs_NostrRTCSignaling_lambda$onSubEvent$4(var$1, var$2, var$3, var$4, var$5));
},
onnrs_NostrRTCSignaling_lambda$sendCandidates$15$exported$13 = (var$1, var$2, var$3, var$4, var$5) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    var$5 = $rt_str(var$5);
    return onnrs_NostrRTCSignaling_lambda$sendCandidates$15(var$1, var$2, var$3, var$4, var$5);
},
onnrs_NostrRTCSignaling_lambda$sendCandidates$14$exported$14 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return onnrs_NostrRTCSignaling_lambda$sendCandidates$14(var$1, var$2);
},
onnrs_NostrRTCSignaling_sendCandidates$exported$15 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$sendCandidates(var$2, var$3);
},
onnrs_NostrRTCSignaling_close$exported$16 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$1.$close();
},
onnrs_NostrRTCSignaling_lambda$sendAnswer$13$exported$17 = (var$1, var$2, var$3, var$4, var$5) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    var$5 = $rt_str(var$5);
    return onnrs_NostrRTCSignaling_lambda$sendAnswer$13(var$1, var$2, var$3, var$4, var$5);
},
onnrs_NostrRTCSignaling_decrypt$exported$18 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return onnrs_NostrRTCSignaling_decrypt(var$1, var$2, var$3);
},
onnrs_NostrRTCSignaling_addListener$exported$19 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return var$1.$addListener(var$2);
},
onnrs_NostrRTCSignaling_lambda$sendOffer$10$exported$20 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return onnrs_NostrRTCSignaling_lambda$sendOffer$10(var$1, var$2);
},
onnrs_NostrRTCSignaling_lambda$loop$8$exported$21 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    return otji_JSWrapper_javaToJs(onnrs_NostrRTCSignaling_lambda$loop$8(var$1));
},
onnrs_NostrRTCSignaling_onSubEvent$exported$22 = (var$1, var$2, var$3) => {
    let var$4;
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    var$1.$onSubEvent(var$2, var$4);
},
onnrs_NostrRTCSignaling_lambda$encrypt$17$exported$23 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return onnrs_NostrRTCSignaling_lambda$encrypt$17(var$1, var$2, var$3);
},
onnrs_NostrRTCSignaling__init_$exported$24 = (var$1, var$2, var$3, var$4) => {
    onnrs_NostrRTCSignaling_$callClinit();
    return onnrs_NostrRTCSignaling__init_(var$1, var$2, var$3, var$4);
},
onnrs_NostrRTCSignaling_lambda$sendOffer$11$exported$25 = (var$1, var$2, var$3, var$4, var$5) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    var$5 = $rt_str(var$5);
    return onnrs_NostrRTCSignaling_lambda$sendOffer$11(var$1, var$2, var$3, var$4, var$5);
},
onnrs_NostrRTCSignaling_getAnnounces$exported$26 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    return var$1.$getAnnounces();
},
onnrs_NostrRTCSignaling_lambda$decrypt$18$exported$27 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return onnrs_NostrRTCSignaling_lambda$decrypt$18(var$1, var$2, var$3);
},
onnrs_NostrRTCSignaling_lambda$sendAnswer$12$exported$28 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    return onnrs_NostrRTCSignaling_lambda$sendAnswer$12(var$1, var$2);
},
onnrs_NostrRTCSignaling_sendAnswer$exported$29 = (var$1, var$2, var$3) => {
    onnrs_NostrRTCSignaling_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return var$1.$sendAnswer(var$2, var$3);
},
onnrs_NostrRTCSignaling_lambda$start$6$exported$0 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrs_NostrRTCSignaling_lambda$start$6(var$1, var$2);
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$3$exported$1 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrs_NostrRTCSignaling_lambda$onSubEvent$3(var$1);
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$2$exported$2 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrs_NostrRTCSignaling_lambda$onSubEvent$2(var$1);
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$1$exported$3 = var$1 => {
    onnrs_NostrRTCSignaling_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnrs_NostrRTCSignaling_lambda$onSubEvent$1(var$1);
},
onnrs_NostrRTCSignaling_lambda$onSubEvent$0$exported$4 = (var$1, var$2) => {
    onnrs_NostrRTCSignaling_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onnrs_NostrRTCSignaling_lambda$onSubEvent$0(var$1, var$2);
},
jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_AltGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_AltGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AltGroupQuantifierSet();
    jur_AltGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet_setNext = ($this, $next) => {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
},
otjc_JSFinalizationRegistryConsumer = $rt_classWithoutFields(0);
function onne_SignedNostrEvent$Identifier() {
    let a = this; jl_Object.call(a);
    a.$id2 = null;
    a.$createdAt0 = Long_ZERO;
    a.$createdAtInstant = null;
}
let onne_SignedNostrEvent$Identifier__init_0 = ($this, $id, $createdAt) => {
    jl_Object__init_($this);
    $this.$id2 = $id;
    $this.$createdAt0 = jt_Instant_getEpochSecond($createdAt);
    $this.$createdAtInstant = $createdAt;
},
onne_SignedNostrEvent$Identifier__init_ = (var_0, var_1) => {
    let var_2 = new onne_SignedNostrEvent$Identifier();
    onne_SignedNostrEvent$Identifier__init_0(var_2, var_0, var_1);
    return var_2;
},
onne_SignedNostrEvent$Identifier_equals = ($this, $obj) => {
    let $e;
    if ($obj !== null && $obj instanceof onne_SignedNostrEvent$Identifier) {
        if ($obj === $this)
            return 1;
        $e = $obj;
        return $e.$id2.$equals($this.$id2);
    }
    return 0;
},
onne_SignedNostrEvent$Identifier_hashCode = $this => {
    return $this.$id2.$hashCode();
},
onne_SignedNostrEvent$Identifier__init_$exported$0 = (var$1, var$2) => {
    return onne_SignedNostrEvent$Identifier__init_($rt_str(var$1), var$2);
},
onne_SignedNostrEvent$Identifier_equals$exported$1 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!var$1.$equals(var$2);
},
onne_SignedNostrEvent$Identifier_hashCode$exported$2 = var$1 => {
    return var$1.$hashCode();
};
function jur_UCIRangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt1 = 0;
}
let jur_UCIRangeSet__init_0 = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars1 = $cc.$getInstance();
    $this.$alt1 = $cc.$alt;
},
jur_UCIRangeSet__init_ = var_0 => {
    let var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
},
jur_UCIRangeSet_accepts = ($this, $strIndex, $testString) => {
    let var$3, var$4;
    var$3 = $this.$chars1;
    var$4 = jl_Character_toUpperCase($testString.$charAt($strIndex));
    return !var$3.$contains0(jl_Character_toLowerCase(var$4)) ? (-1) : 1;
},
jur_UCIRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt1 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars1.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(858)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
};
function juc_CopyOnWriteArrayList$ListIteratorImpl() {
    let a = this; jl_Object.call(a);
    a.$arr = null;
    a.$current = 0;
    a.$size4 = 0;
}
let juc_CopyOnWriteArrayList$ListIteratorImpl__init_ = ($this, $data, $current) => {
    let var$3;
    var$3 = $data.data;
    jl_Object__init_($this);
    $this.$current = $current;
    $this.$arr = $data;
    $this.$size4 = var$3.length;
},
juc_CopyOnWriteArrayList$ListIteratorImpl__init_0 = (var_0, var_1) => {
    let var_2 = new juc_CopyOnWriteArrayList$ListIteratorImpl();
    juc_CopyOnWriteArrayList$ListIteratorImpl__init_(var_2, var_0, var_1);
    return var_2;
},
juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext = $this => {
    return $this.$current >= $this.$size4 ? 0 : 1;
},
juc_CopyOnWriteArrayList$ListIteratorImpl_next = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    if ($this.$hasNext()) {
        var$1 = $this.$arr.data;
        var$2 = $this.$current;
        $this.$current = var$2 + 1 | 0;
        return var$1[var$2];
    }
    var$3 = new ju_NoSuchElementException;
    var$4 = $this.$current;
    var$2 = $this.$size4;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(1141)), var$4), $rt_s(716)), var$2);
    ju_NoSuchElementException__init_0(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
otcic_JsConsolePrintStream = $rt_classWithoutFields(ji_PrintStream),
otcic_JsConsolePrintStream__init_ = $this => {
    ji_PrintStream__init_($this, null, 0, null);
},
otcic_JsConsolePrintStream_println1 = ($this, $s) => {
    $this.$print($s);
    $this.$print($rt_s(85));
},
otcic_JsConsolePrintStream_println0 = $this => {
    $this.$print($rt_s(85));
},
otcic_JsConsolePrintStream_println = ($this, $s) => {
    $this.$println1(ju_Objects_toString($s));
},
otp_Platform = $rt_classWithoutFields(),
otp_Platform_clone = var$1 => {
    let copy = new var$1.constructor();
    for (let field in var$1) {
        if (var$1.hasOwnProperty(field)) {
            copy[field] = var$1[field];
        }
    }
    return copy;
},
otp_Platform_isInstance = (var$1, $cls) => {
    return var$1 !== null && !(typeof var$1.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable(var$1.constructor, $cls) ? 1 : 0;
},
otp_Platform_isAssignable = ($from, $to) => {
    let $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
otp_Platform_getEnumConstants = var$1 => {
    let c = '$$enumConstants$$';
    jtf_TextStyle[c] = jtf_TextStyle_values;
    jtt_ChronoUnit[c] = jtt_ChronoUnit_values;
    onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState[c] = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_values;
    onnrs_NostrRTCSignaling$Listener$RemoveReason[c] = onnrs_NostrRTCSignaling$Listener$RemoveReason_values;
    juc_TimeUnit[c] = juc_TimeUnit_values;
    jt_DayOfWeek[c] = jt_DayOfWeek_values;
    jtz_ZoneOffsetTransitionRule$TimeDefinition[c] = jtz_ZoneOffsetTransitionRule$TimeDefinition_values;
    onns_SdanActionType[c] = onns_SdanActionType_values;
    jtf_DateTimeFormatterBuilder$SettingsParser[c] = jtf_DateTimeFormatterBuilder$SettingsParser_values;
    onnp_NostrMessageAck$Status[c] = onnp_NostrMessageAck$Status_values;
    jtt_ChronoField[c] = jtt_ChronoField_values;
    jtf_SignStyle[c] = jtf_SignStyle_values;
    jus_Collector$Characteristics[c] = jus_Collector$Characteristics_values;
    jt_Month[c] = jt_Month_values;
    onnk_NostrPrivateKey$KeySecurity[c] = onnk_NostrPrivateKey$KeySecurity_values;
    onns_SdanSlotSize[c] = onns_SdanSlotSize_values;
    onns_SdanSlotBid[c] = onns_SdanSlotBid_values;
    jtt_IsoFields$Field[c] = jtt_IsoFields$Field_values;
    onns_SdanMimeType[c] = onns_SdanMimeType_values;
    jtf_ResolverStyle[c] = jtf_ResolverStyle_values;
    jtt_IsoFields$Unit[c] = jtt_IsoFields$Unit_values;
    jm_RoundingMode[c] = jm_RoundingMode_values;
    otp_Platform_getEnumConstants = cls => {
        if (!cls.hasOwnProperty(c)) {
            return null;
        }
        if (typeof cls[c] === "function") {
            cls[c] = cls[c]();
        }
        return cls[c];
    };
    return otp_Platform_getEnumConstants(var$1);
},
otp_Platform_launchThread = var$1 => {
    var$1.$run();
},
otp_Platform_postpone = $runnable => {
    otp_Platform_schedule($runnable, 0);
},
otp_Platform_schedule = (var$1, var$2) => {
    setTimeout(() => {
        otp_Platform_launchThread(var$1);
    }, var$2);
},
otp_Platform_createQueue = () => {
    return otp_Platform_createQueueJs$js_body$_30();
},
otp_Platform_isPrimitive = $cls => {
    return $cls.$meta.primitive ? 1 : 0;
},
otp_Platform_isEnum = $cls => {
    return $cls.$meta.enum ? 1 : 0;
},
otp_Platform_getArrayItem = $cls => {
    return $cls.$meta.item;
},
otp_Platform_getName = $cls => {
    return $rt_str($cls.$meta.name);
},
otp_Platform_createQueueJs$js_body$_30 = () => {
    return [];
};
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name13 = null;
}
let jnc_CodingErrorAction_IGNORE = null,
jnc_CodingErrorAction_REPLACE = null,
jnc_CodingErrorAction_REPORT = null,
jnc_CodingErrorAction_$callClinit = () => {
    jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
    jnc_CodingErrorAction__clinit_();
},
jnc_CodingErrorAction__init_0 = ($this, $name) => {
    jnc_CodingErrorAction_$callClinit();
    jl_Object__init_($this);
    $this.$name13 = $name;
},
jnc_CodingErrorAction__init_ = var_0 => {
    let var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
},
jnc_CodingErrorAction__clinit_ = () => {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(1142));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(1143));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(1144));
};
function jl_Boolean() {
    jl_Object.call(this);
    this.$value5 = 0;
}
let jl_Boolean_TRUE = null,
jl_Boolean_FALSE = null,
jl_Boolean_TYPE = null,
jl_Boolean_$callClinit = () => {
    jl_Boolean_$callClinit = $rt_eraseClinit(jl_Boolean);
    jl_Boolean__clinit_();
},
jl_Boolean__init_0 = ($this, $value) => {
    jl_Boolean_$callClinit();
    jl_Object__init_($this);
    $this.$value5 = $value;
},
jl_Boolean__init_ = var_0 => {
    let var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
},
jl_Boolean_compareTo = ($this, $other) => {
    return jl_Boolean_compare($this.$value5, $other.$value5);
},
jl_Boolean_compare = ($x, $y) => {
    jl_Boolean_$callClinit();
    return $x == $y ? 0 : !$x ? (-1) : 1;
},
jl_Boolean_parseBoolean = $s => {
    jl_Boolean_$callClinit();
    return $s !== null && ($s.$toLowerCase2()).$equals($rt_s(96)) ? 1 : 0;
},
jl_Boolean_booleanValue = $this => {
    return $this.$value5;
},
jl_Boolean_valueOf = $value => {
    jl_Boolean_$callClinit();
    return !$value ? jl_Boolean_FALSE : jl_Boolean_TRUE;
},
jl_Boolean_toString0 = $value => {
    jl_Boolean_$callClinit();
    return !$value ? $rt_s(95) : $rt_s(96);
},
jl_Boolean_toString = $this => {
    return jl_Boolean_toString0($this.$value5);
},
jl_Boolean_hashCode = $this => {
    return jl_Boolean_hashCode0($this.$value5);
},
jl_Boolean_hashCode0 = $value => {
    jl_Boolean_$callClinit();
    return !$value ? 1237 : 1231;
},
jl_Boolean_equals = ($this, $obj) => {
    if ($this === $obj)
        return 1;
    return $obj instanceof jl_Boolean && $obj.$value5 == $this.$value5 ? 1 : 0;
},
jl_Boolean_compareTo0 = ($this, var$1) => {
    return $this.$compareTo14(var$1);
},
jl_Boolean__clinit_ = () => {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls);
},
ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException),
ju_NoSuchElementException__init_1 = $this => {
    jl_RuntimeException__init_($this);
},
ju_NoSuchElementException__init_ = () => {
    let var_0 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_1(var_0);
    return var_0;
},
ju_NoSuchElementException__init_0 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
ju_NoSuchElementException__init_2 = var_0 => {
    let var_1 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_0(var_1, var_0);
    return var_1;
};
function onpt_TeaVMPlatform$1$then$lambda$_5_0() {
    let a = this; jl_Object.call(a);
    a.$_073 = null;
    a.$_141 = null;
}
let onpt_TeaVMPlatform$1$then$lambda$_5_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_073 = var$1;
    var$0.$_141 = var$2;
},
onpt_TeaVMPlatform$1$then$lambda$_5_0__init_0 = (var_0, var_1) => {
    let var_2 = new onpt_TeaVMPlatform$1$then$lambda$_5_0();
    onpt_TeaVMPlatform$1$then$lambda$_5_0__init_(var_2, var_0, var_1);
    return var_2;
},
onpt_TeaVMPlatform$1$then$lambda$_5_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$1$then$lambda$_5_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$1$then$lambda$_5_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$1_lambda$then$1(var$0.$_073, var$0.$_141, var$1, var$2);
},
jtc_ChronoPeriod = $rt_classWithoutFields(),
jtc_ChronoPeriod__init_ = $this => {
    jl_Object__init_($this);
};
function jt_Period() {
    let a = this; jtc_ChronoPeriod.call(a);
    a.$years = 0;
    a.$months = 0;
    a.$days = 0;
}
let jt_Period_ZERO = null,
jt_Period_$callClinit = () => {
    jt_Period_$callClinit = $rt_eraseClinit(jt_Period);
    jt_Period__clinit_();
},
jt_Period_ofDays = $days => {
    jt_Period_$callClinit();
    return jt_Period_create(0, 0, $days);
},
jt_Period_create = ($years, $months, $days) => {
    jt_Period_$callClinit();
    if (!($years | $months | $days))
        return jt_Period_ZERO;
    return jt_Period__init_($years, $months, $days);
},
jt_Period__init_0 = ($this, $years, $months, $days) => {
    jt_Period_$callClinit();
    jtc_ChronoPeriod__init_($this);
    $this.$years = $years;
    $this.$months = $months;
    $this.$days = $days;
},
jt_Period__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jt_Period();
    jt_Period__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jt_Period_isZero = $this => {
    jt_Period_$callClinit();
    return $this !== jt_Period_ZERO ? 0 : 1;
},
jt_Period_toTotalMonths = $this => {
    return Long_add(Long_mul(Long_fromInt($this.$years), Long_fromInt(12)), Long_fromInt($this.$months));
},
jt_Period_addTo = ($this, $temporal) => {
    let var$2;
    ju_Objects_requireNonNull($temporal, $rt_s(532));
    if (!$this.$years) {
        if ($this.$months) {
            var$2 = Long_fromInt($this.$months);
            jtt_ChronoUnit_$callClinit();
            $temporal = $temporal.$plus2(var$2, jtt_ChronoUnit_MONTHS);
        }
    } else if ($this.$months) {
        var$2 = jt_Period_toTotalMonths($this);
        jtt_ChronoUnit_$callClinit();
        $temporal = $temporal.$plus2(var$2, jtt_ChronoUnit_MONTHS);
    } else {
        var$2 = Long_fromInt($this.$years);
        jtt_ChronoUnit_$callClinit();
        $temporal = $temporal.$plus2(var$2, jtt_ChronoUnit_YEARS);
    }
    if ($this.$days) {
        var$2 = Long_fromInt($this.$days);
        jtt_ChronoUnit_$callClinit();
        $temporal = $temporal.$plus2(var$2, jtt_ChronoUnit_DAYS);
    }
    return $temporal;
},
jt_Period__clinit_ = () => {
    jt_Period_ZERO = jt_Period__init_(0, 0, 0);
};
function onn_NostrRelay$lambda$connect$17$lambda$_54_0() {
    let a = this; jl_Object.call(a);
    a.$_0129 = null;
    a.$_168 = null;
}
let onn_NostrRelay$lambda$connect$17$lambda$_54_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0129 = var$1;
    var$0.$_168 = var$2;
},
onn_NostrRelay$lambda$connect$17$lambda$_54_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$lambda$connect$17$lambda$_54_0();
    onn_NostrRelay$lambda$connect$17$lambda$_54_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$lambda$connect$17$lambda$_54_0_run = var$0 => {
    onn_NostrRelay_lambda$connect$15(var$0.$_0129, var$0.$_168);
};
function onn_NostrRelay$lambda$connect$17$lambda$_54_1() {
    let a = this; jl_Object.call(a);
    a.$_0165 = null;
    a.$_183 = null;
}
let onn_NostrRelay$lambda$connect$17$lambda$_54_1__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0165 = var$1;
    var$0.$_183 = var$2;
},
onn_NostrRelay$lambda$connect$17$lambda$_54_1__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$lambda$connect$17$lambda$_54_1();
    onn_NostrRelay$lambda$connect$17$lambda$_54_1__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$lambda$connect$17$lambda$_54_1_accept0 = (var$0, var$1) => {
    onn_NostrRelay$lambda$connect$17$lambda$_54_1_accept(var$0, var$1);
},
onn_NostrRelay$lambda$connect$17$lambda$_54_1_accept = (var$0, var$1) => {
    onn_NostrRelay_lambda$connect$16(var$0.$_0165, var$0.$_183, var$1);
},
jt_Month = $rt_classWithoutFields(jl_Enum),
jt_Month_JANUARY = null,
jt_Month_FEBRUARY = null,
jt_Month_MARCH = null,
jt_Month_APRIL = null,
jt_Month_MAY = null,
jt_Month_JUNE = null,
jt_Month_JULY = null,
jt_Month_AUGUST = null,
jt_Month_SEPTEMBER = null,
jt_Month_OCTOBER = null,
jt_Month_NOVEMBER = null,
jt_Month_DECEMBER = null,
jt_Month_FROM = null,
jt_Month_ENUMS = null,
jt_Month_$VALUES = null,
jt_Month_$callClinit = () => {
    jt_Month_$callClinit = $rt_eraseClinit(jt_Month);
    jt_Month__clinit_();
},
jt_Month_values = () => {
    jt_Month_$callClinit();
    return jt_Month_$VALUES.$clone0();
},
jt_Month__init_0 = ($this, var$1, var$2) => {
    jt_Month_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jt_Month__init_ = (var_0, var_1) => {
    let var_2 = new jt_Month();
    jt_Month__init_0(var_2, var_0, var_1);
    return var_2;
},
jt_Month_of = $month => {
    let var$2, var$3;
    jt_Month_$callClinit();
    if ($month >= 1 && $month <= 12)
        return jt_Month_ENUMS.data[$month - 1 | 0];
    var$2 = new jt_DateTimeException;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(1145)), $month);
    jt_DateTimeException__init_(var$2, jl_StringBuilder_toString(var$3));
    $rt_throw(var$2);
},
jt_Month_getValue = $this => {
    return jl_Enum_ordinal($this) + 1 | 0;
},
jt_Month_plus = ($this, $months) => {
    let $amount;
    $amount = Long_lo(Long_rem($months, Long_fromInt(12)));
    jt_Month_$callClinit();
    return jt_Month_ENUMS.data[(jl_Enum_ordinal($this) + ($amount + 12 | 0) | 0) % 12 | 0];
},
jt_Month_length = ($this, $leapYear) => {
    switch (jl_Enum_ordinal($this)) {
        case 1:
            return !$leapYear ? 28 : 29;
        case 2:
        case 4:
        case 6:
        case 7:
        case 9:
            break;
        case 3:
        case 5:
        case 8:
        case 10:
            return 30;
        default:
    }
    return 31;
},
jt_Month_maxLength = $this => {
    a: {
        switch (jl_Enum_ordinal($this)) {
            case 1:
                break;
            case 2:
            case 4:
            case 6:
            case 7:
            case 9:
                break a;
            case 3:
            case 5:
            case 8:
            case 10:
                return 30;
            default:
                break a;
        }
        return 29;
    }
    return 31;
},
jt_Month_firstDayOfYear = ($this, $leapYear) => {
    let $leap;
    $leap = !$leapYear ? 0 : 1;
    a: {
        switch (jl_Enum_ordinal($this)) {
            case 0:
                break;
            case 1:
                return 32;
            case 2:
                return 60 + $leap | 0;
            case 3:
                return 91 + $leap | 0;
            case 4:
                return 121 + $leap | 0;
            case 5:
                return 152 + $leap | 0;
            case 6:
                return 182 + $leap | 0;
            case 7:
                return 213 + $leap | 0;
            case 8:
                return 244 + $leap | 0;
            case 9:
                return 274 + $leap | 0;
            case 10:
                return 305 + $leap | 0;
            case 11:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 335 + $leap | 0;
},
jt_Month_$values = () => {
    let var$1, var$2;
    jt_Month_$callClinit();
    var$1 = $rt_createArray(jt_Month, 12);
    var$2 = var$1.data;
    var$2[0] = jt_Month_JANUARY;
    var$2[1] = jt_Month_FEBRUARY;
    var$2[2] = jt_Month_MARCH;
    var$2[3] = jt_Month_APRIL;
    var$2[4] = jt_Month_MAY;
    var$2[5] = jt_Month_JUNE;
    var$2[6] = jt_Month_JULY;
    var$2[7] = jt_Month_AUGUST;
    var$2[8] = jt_Month_SEPTEMBER;
    var$2[9] = jt_Month_OCTOBER;
    var$2[10] = jt_Month_NOVEMBER;
    var$2[11] = jt_Month_DECEMBER;
    return var$1;
},
jt_Month__clinit_ = () => {
    jt_Month_JANUARY = jt_Month__init_($rt_s(1146), 0);
    jt_Month_FEBRUARY = jt_Month__init_($rt_s(1147), 1);
    jt_Month_MARCH = jt_Month__init_($rt_s(1148), 2);
    jt_Month_APRIL = jt_Month__init_($rt_s(1149), 3);
    jt_Month_MAY = jt_Month__init_($rt_s(1150), 4);
    jt_Month_JUNE = jt_Month__init_($rt_s(1151), 5);
    jt_Month_JULY = jt_Month__init_($rt_s(1152), 6);
    jt_Month_AUGUST = jt_Month__init_($rt_s(1153), 7);
    jt_Month_SEPTEMBER = jt_Month__init_($rt_s(1154), 8);
    jt_Month_OCTOBER = jt_Month__init_($rt_s(1155), 9);
    jt_Month_NOVEMBER = jt_Month__init_($rt_s(1156), 10);
    jt_Month_DECEMBER = jt_Month__init_($rt_s(1157), 11);
    jt_Month_$VALUES = jt_Month_$values();
    jt_Month_FROM = jt_Month$1__init_0();
    jt_Month_ENUMS = jt_Month_values();
},
jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet),
jur_BackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_BackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_BackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $shift;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $shift = !($testString.$toString()).$startsWith0($group, $stringIndex) ? (-1) : $group.$length();
        if ($shift < 0)
            return (-1);
        $matchResult.$setConsumed($this.$consCounter1, $shift);
        return $this.$next5.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_BackReferenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $group, $strLength, $testStr, var$7;
    $group = $this.$getString($matchResult);
    $strLength = $matchResult.$getLeftBound();
    if ($group !== null && ($strIndex + $group.$length() | 0) <= $strLength) {
        $testStr = $testString.$toString();
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            var$7 = $testStr.$indexOf1($group, $strIndex);
            if (var$7 < 0)
                return (-1);
            if ($this.$next5.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = var$7 + 1 | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_BackReferenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $group, $testStr, var$7;
    $group = $this.$getString($matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString.$toString();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf2($group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next5.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_BackReferenceSet_first = ($this, $set) => {
    return 1;
},
jur_BackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(1158)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
let jur_DotQuantifierSet__init_ = ($this, $innerSet, $next, $type, $lt) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$lt = $lt;
},
jur_DotQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_DotQuantifierSet();
    jur_DotQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_DotQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startSearch;
    $strLength = $matchResult.$getRightBound();
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next5.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_DotQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $res, $nextSearch, var$7, $leftBound;
    $strLength = $matchResult.$getRightBound();
    $res = $this.$next5.$find($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$7 = $this.$next5.$findBack($res, $strLength, $testString, $matchResult);
    var$7 = jl_Math_max($res, var$7);
    $leftBound = var$7 > 0 ? jur_DotQuantifierSet_findBackLineTerminator($this, $stringIndex, var$7 - 1 | 0, $testString) : var$7 ? (-1) : 0;
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= var$7 ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
},
jur_DotQuantifierSet_findLineTerminator = ($this, $i, $to, $testString) => {
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jur_DotQuantifierSet_findBackLineTerminator = ($this, $from, $i, $testString) => {
    while (true) {
        if ($i < $from)
            return (-1);
        if ($this.$lt.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + (-1) | 0;
    }
    return $i;
},
jur_DotQuantifierSet_getName = $this => {
    return $rt_s(1159);
};
function onns_NostrNIP46Signer() {
    let a = this; jl_Object.call(a);
    a.$metadata1 = null;
    a.$transportPubkey = null;
    a.$transportSigner = null;
    a.$pool = null;
    a.$listeners0 = null;
    a.$subscription = null;
    a.$challengeHandler = null;
    a.$pendingChallenges = null;
    a.$executor = null;
    a.$closed0 = 0;
    a.$cachedPublicKey = null;
    a.$relays0 = null;
    a.$requestsTimeout = null;
    a.$challengesTimeout = null;
    a.$signerPubkey = null;
    a.$connectUrl = null;
    a.$connected0 = 0;
}
let onns_NostrNIP46Signer_logger = null,
onns_NostrNIP46Signer_$assertionsDisabled = 0,
onns_NostrNIP46Signer_$callClinit = () => {
    onns_NostrNIP46Signer_$callClinit = $rt_eraseClinit(onns_NostrNIP46Signer);
    onns_NostrNIP46Signer__clinit_();
},
onns_NostrNIP46Signer__init_ = ($this, $metadata, $clientKeyPair) => {
    onns_NostrNIP46Signer_$callClinit();
    jl_Object__init_($this);
    $this.$closed0 = 0;
    $this.$cachedPublicKey = null;
    $this.$relays0 = ju_HashSet__init_1();
    $this.$requestsTimeout = jt_Duration_ofSeconds(Long_fromInt(30));
    $this.$challengesTimeout = jt_Duration_ofSeconds(Long_fromInt(30));
    $this.$connected0 = 0;
    if ($clientKeyPair === null)
        $clientKeyPair = onnk_NostrKeyPair__init_0();
    $this.$metadata1 = $metadata;
    $this.$transportPubkey = onnk_NostrKeyPair_getPublicKey($clientKeyPair);
    $this.$transportSigner = onns_NostrKeyPairSigner__init_($clientKeyPair);
},
onns_NostrNIP46Signer__init_0 = (var_0, var_1) => {
    let var_2 = new onns_NostrNIP46Signer();
    onns_NostrNIP46Signer__init_(var_2, var_0, var_1);
    return var_2;
},
onns_NostrNIP46Signer_toString = $this => {
    let var$1, var$2;
    var$1 = onnk_NostrPublicKey_asHex($this.$transportPubkey);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1160)), var$1);
    return jl_StringBuilder_toString(var$2);
},
onns_NostrNIP46Signer_setRequestsTimeout = ($this, $timeout) => {
    $this.$requestsTimeout = $timeout;
},
onns_NostrNIP46Signer_loop = $this => {
    let $now, $it, $entry, var$4, var$5, var$6, $it2, var$8, $e, $$je;
    a: {
        try {
            b: {
                $now = jt_Instant_now();
                if ($this.$pendingChallenges !== null) {
                    $it = ($this.$pendingChallenges.$entrySet()).$iterator();
                    while (true) {
                        if (!$it.$hasNext())
                            break b;
                        $entry = $it.$next();
                        if (jt_Instant_isBefore(jt_Instant_plus(($entry.$getValue()).$createdAt2, $this.$challengesTimeout), $now)) {
                            onns_NostrNIP46Signer_$callClinit();
                            var$4 = onns_NostrNIP46Signer_logger;
                            var$5 = jl_String_valueOf($entry.$getValue());
                            var$6 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1161)), var$5);
                            var$4.$fine(jl_StringBuilder_toString(var$6));
                            ($entry.$getValue()).$close4.$accept0(jl_Exception__init_0($rt_s(1162)));
                            $it.$remove();
                        }
                    }
                }
            }
            c: {
                if ($this.$listeners0 !== null) {
                    $it2 = ($this.$listeners0.$entrySet()).$iterator();
                    while (true) {
                        if (!$it2.$hasNext())
                            break c;
                        $entry = $it2.$next();
                        if (jt_Instant_isBefore(($entry.$getValue()).$expiredAt, $now)) {
                            onns_NostrNIP46Signer_$callClinit();
                            var$6 = onns_NostrNIP46Signer_logger;
                            var$8 = jl_String_valueOf($entry.$getValue());
                            var$4 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1163)), var$8);
                            var$6.$fine(jl_StringBuilder_toString(var$4));
                            ($entry.$getValue()).$cancel($rt_s(1164));
                            $it2.$remove();
                        }
                    }
                }
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        onns_NostrNIP46Signer_$callClinit();
        var$4 = onns_NostrNIP46Signer_logger;
        var$5 = $e.$getMessage();
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(420)), var$5);
        var$4.$warning(jl_StringBuilder_toString(var$6));
    }
    if ($this.$closed0)
        return;
    var$5 = $this.$executor;
    var$6 = onns_NostrNIP46Signer$loop$lambda$_3_0__init_0($this);
    juc_TimeUnit_$callClinit();
    var$5.$runLater(var$6, Long_fromInt(10), juc_TimeUnit_SECONDS);
},
onns_NostrNIP46Signer_close = $this => {
    let $platform;
    $platform = onp_NGEUtils_getPlatform();
    return $platform.$wrapPromise(onns_NostrNIP46Signer$close$lambda$_4_0__init_0($this));
},
onns_NostrNIP46Signer_connect = ($this, $bunker) => {
    let var$2, var$3, $relay, var$5, var$6, $params;
    if ($this.$connected0) {
        var$2 = onp_NGEPlatform_get();
        var$3 = onns_NostrNIP46Signer$connect$lambda$_5_0__init_0();
        var$2 = var$2.$wrapPromise(var$3);
        return var$2;
    }
    var$2 = $bunker.$relays1.$iterator();
    while (var$2.$hasNext()) {
        $relay = var$2.$next();
        $this.$relays0.$add1($relay);
    }
    onns_NostrNIP46Signer_$callClinit();
    var$2 = onns_NostrNIP46Signer_logger;
    var$3 = jl_String_valueOf($bunker);
    var$5 = jl_String_valueOf($this.$relays0);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1165)), var$3), $rt_s(1166)), var$5);
    var$2.$fine(jl_StringBuilder_toString(var$6));
    $this.$signerPubkey = $bunker.$pubkey0;
    $params = ju_ArrayList__init_();
    $params.$add1(onnk_NostrPublicKey_asHex($this.$signerPubkey));
    $params.$add1($bunker.$secret);
    if ($this.$metadata1.$getPerms() !== null)
        $params.$add1(jl_String_join($rt_s(87), $this.$metadata1.$getPerms()));
    $this.$connectUrl = onnn_NostrconnectUrl__init_($this.$transportPubkey, $bunker.$relays1, $bunker.$secret, $this.$metadata1);
    var$2 = $this.$sendRPC($rt_s(1113), $params, $this.$requestsTimeout);
    var$3 = onns_NostrNIP46Signer$connect$lambda$_5_1__init_0($this, $bunker);
    var$2 = var$2.$then(var$3);
    return var$2;
},
onns_NostrNIP46Signer_listen = ($this, $relays, $onUrl, $timeout) => {
    let $platform, $secret, var$6, $relay, var$8, var$9, var$10, $out;
    $platform = onp_NGEUtils_getPlatform();
    if ($this.$connected0)
        return $platform.$wrapPromise(onns_NostrNIP46Signer$listen$lambda$_6_0__init_0());
    $secret = onp_NGEUtils_bytesToHex($platform.$randomBytes(32));
    var$6 = $relays.$iterator();
    while (var$6.$hasNext()) {
        $relay = var$6.$next();
        $this.$relays0.$add1($relay);
    }
    $this.$connectUrl = onnn_NostrconnectUrl__init_($this.$transportPubkey, $relays, $secret, $this.$metadata1);
    $onUrl.$accept0($this.$connectUrl);
    onns_NostrNIP46Signer_$callClinit();
    var$8 = onns_NostrNIP46Signer_logger;
    var$9 = jl_String_valueOf($this.$connectUrl);
    var$6 = jl_String_valueOf($this.$relays0);
    var$10 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(1167)), var$9), $rt_s(1166)), var$6);
    var$8.$fine(jl_StringBuilder_toString(var$10));
    var$9 = onns_NostrNIP46Signer_check($this);
    var$6 = onns_NostrNIP46Signer$listen$lambda$_6_1__init_0($this, $secret, $timeout);
    $out = var$9.$compose(var$6);
    return $out;
},
onns_NostrNIP46Signer_setChallengeHandler = ($this, $challengeHandler, $challengesTimeout) => {
    $this.$challengeHandler = $challengeHandler;
    $this.$challengesTimeout = $challengesTimeout;
},
onns_NostrNIP46Signer_check = $this => {
    let $p, var$2, $$je;
    if ($this.$closed0)
        $rt_throw(jl_RuntimeException__init_5($rt_s(1168)));
    $p = onp_NGEUtils_getPlatform();
    if ($this.$executor === null) {
        jl_Object_monitorEnterSync($this);
        a: {
            try {
                if ($this.$executor === null) {
                    onns_NostrNIP46Signer_$callClinit();
                    onns_NostrNIP46Signer_logger.$fine($rt_s(1169));
                    $this.$executor = onp_NGEPlatform_newSignerExecutor($p);
                    onns_NostrNIP46Signer_loop($this);
                }
                jl_Object_monitorExitSync($this);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;

            }
            jl_Object_monitorExitSync($this);
            $rt_throw(var$2);
        }
    }
    return $p.$promisify(onns_NostrNIP46Signer$check$lambda$_8_0__init_0($this), $this.$executor);
},
onns_NostrNIP46Signer_onSubEvent = ($this, $event, $stored) => {
    let var$3, var$4, var$5, $e, $isSpontaneousConnection, var$8, $content, $conversationKey, $decryptedContent, $response, $id, $error, $result, $listener, $isChallenge, $close, $challenge, var$20, var$21, $$je;
    a: {
        b: {
            c: {
                try {
                    if ($event.$getKind() == 24133)
                        break c;
                    onns_NostrNIP46Signer_$callClinit();
                    var$3 = onns_NostrNIP46Signer_logger;
                    var$4 = $event.$getKind();
                    var$5 = jl_StringBuilder__init_();
                    jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(1170)), var$4);
                    var$3.$warning(jl_StringBuilder_toString(var$5));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            d: {
                try {
                    $isSpontaneousConnection = 0;
                    if (onnk_NostrPublicKey_equals($event.$getPubkey(), $this.$signerPubkey)) {
                        onns_NostrNIP46Signer_$callClinit();
                        if (!onns_NostrNIP46Signer_$assertionsDisabled && !onp_NGEUtils_dbg(onns_NostrNIP46Signer$onSubEvent$lambda$_9_4__init_0($this, $event)))
                            $rt_throw(jl_AssertionError__init_());
                        var$3 = $this.$signerPubkey;
                        break d;
                    }
                    if ($this.$connected0) {
                        var$3 = new jl_Exception;
                        var$5 = jl_String_valueOf($event.$getPubkey());
                        var$8 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1171)), var$5), $rt_s(1172));
                        jl_Exception__init_(var$3, jl_StringBuilder_toString(var$8));
                        $rt_throw(var$3);
                    }
                    onns_NostrNIP46Signer_$callClinit();
                    if (!onns_NostrNIP46Signer_$assertionsDisabled && !onp_NGEUtils_dbg(onns_NostrNIP46Signer$onSubEvent$lambda$_9_0__init_0($this, $event)))
                        $rt_throw(jl_AssertionError__init_());
                    var$3 = $event.$getPubkey();
                    $isSpontaneousConnection = 1;
                    break d;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            e: {
                try {
                    $content = $event.$getContent();
                    $conversationKey = onnn_Nip44_getConversationKeySync(onnk_NostrKeyPair_getPrivateKey($this.$transportSigner.$getKeyPair()), var$3);
                    $decryptedContent = onnn_Nip44_decryptSync($content, $conversationKey);
                    onns_NostrNIP46Signer_$callClinit();
                    if (onns_NostrNIP46Signer_$assertionsDisabled)
                        break e;
                    if (onp_NGEUtils_dbg(onns_NostrNIP46Signer$onSubEvent$lambda$_9_1__init_0($decryptedContent)))
                        break e;
                    $rt_throw(jl_AssertionError__init_());
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            f: {
                try {
                    $response = (onp_NGEUtils_getPlatform()).$fromJSON($decryptedContent, $rt_cls(ju_Map));
                    if ($isSpontaneousConnection) {
                        $id = $rt_s(1108);
                        break f;
                    }
                    $id = onp_NGEUtils_safeString($response.$get1($rt_s(745)));
                    break f;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            g: {
                try {
                    $error = onp_NGEUtils_safeString($response.$get1($rt_s(1173)));
                    $result = onp_NGEUtils_safeString($response.$get1($rt_s(1174)));
                    $listener = $this.$listeners0.$get1($id);
                    if ($listener !== null)
                        break g;
                    var$3 = onns_NostrNIP46Signer_logger;
                    var$5 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1175)), $id);
                    var$3.$warning(jl_StringBuilder_toString(var$5));
                    var$3 = new jl_Exception;
                    var$5 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1175)), $id);
                    jl_Exception__init_(var$3, jl_StringBuilder_toString(var$5));
                    $rt_throw(var$3);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            h: {
                try {
                    if ($listener.$verifyPayload === null) {
                        if (!$isSpontaneousConnection)
                            break h;
                        $rt_throw(jl_Exception__init_0($rt_s(1176)));
                    }
                    if (!onns_NostrNIP46Signer_$assertionsDisabled && !onp_NGEUtils_dbg(onns_NostrNIP46Signer$onSubEvent$lambda$_9_2__init_0($id, $listener)))
                        $rt_throw(jl_AssertionError__init_());
                    if ($listener.$verifyPayload.$test0($result))
                        break h;
                    var$3 = onns_NostrNIP46Signer_logger;
                    var$5 = $listener.$method;
                    var$8 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1177)), $id), $rt_s(1178)), var$5);
                    var$3.$warning(jl_StringBuilder_toString(var$8));
                    var$3 = new jl_Exception;
                    var$5 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1177)), $id);
                    jl_Exception__init_(var$3, jl_StringBuilder_toString(var$5));
                    $rt_throw(var$3);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            i: {
                try {
                    $isChallenge = $result.$equals($rt_s(1179));
                    if ($isChallenge) {
                        var$3 = onns_NostrNIP46Signer_logger;
                        var$5 = $listener.$method;
                        var$8 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1180)), $id), $rt_s(1178)), var$5), 32), $result), 32), $error);
                        var$3.$fine(jl_StringBuilder_toString(var$8));
                        if ($this.$challengeHandler === null) {
                            onns_NostrNIP46Signer_logger.$warning($rt_s(1181));
                            $rt_throw(jl_Exception__init_0($rt_s(1182)));
                        }
                        var$3 = onns_NostrNIP46Signer_logger;
                        var$5 = $listener.$method;
                        var$8 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1183)), $id), $rt_s(1178)), var$5);
                        var$3.$finest(jl_StringBuilder_toString(var$8));
                        if (!$this.$pendingChallenges.$containsKey($id)) {
                            $close = $this.$challengeHandler.$apply13($result, $error);
                            var$3 = onns_NostrNIP46Signer_logger;
                            var$5 = jl_String_valueOf($close);
                            var$8 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1184)), var$5);
                            var$3.$finest(jl_StringBuilder_toString(var$8));
                            $challenge = onns_NostrNIP46Signer$PendingChallenge__init_0($result, $close);
                            $this.$pendingChallenges.$put1($id, $challenge);
                            break i;
                        }
                        var$3 = onns_NostrNIP46Signer_logger;
                        var$5 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1185)), $id);
                        var$3.$warning(jl_StringBuilder_toString(var$5));
                        var$3 = new jl_Exception;
                        var$5 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1185)), $id);
                        jl_Exception__init_(var$3, jl_StringBuilder_toString(var$5));
                        $rt_throw(var$3);
                    }
                    $challenge = $this.$pendingChallenges.$remove1($id);
                    if ($challenge !== null) {
                        var$5 = onns_NostrNIP46Signer_logger;
                        var$8 = $listener.$method;
                        var$20 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$20, $rt_s(1186)), $id), $rt_s(1178)), var$8);
                        var$5.$fine(jl_StringBuilder_toString(var$20));
                        $challenge.$close3(null);
                    }
                    $this.$listeners0.$remove1($id);
                    if (!$error.$isBlank()) {
                        var$8 = onns_NostrNIP46Signer_logger;
                        var$20 = $listener.$method;
                        var$21 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$21, $rt_s(1187)), $id), $rt_s(1178)), var$20), 32), $result), 32), $error);
                        var$8.$finest(jl_StringBuilder_toString(var$21));
                        $listener.$onError.$accept0(jl_Exception__init_0($error));
                        break i;
                    }
                    if (!onns_NostrNIP46Signer_$assertionsDisabled && !onp_NGEUtils_dbg(onns_NostrNIP46Signer$onSubEvent$lambda$_9_3__init_0($id, $listener, $result)))
                        $rt_throw(jl_AssertionError__init_());
                    if (!$isSpontaneousConnection) {
                        $listener.$onSuccess.$accept0($result);
                        break i;
                    }
                    if ($this.$connected0) {
                        onns_NostrNIP46Signer_logger.$warning($rt_s(1188));
                        $listener.$onError.$accept0(jl_Exception__init_0($rt_s(1189)));
                        break i;
                    }
                    var$5 = onns_NostrNIP46Signer_logger;
                    var$8 = jl_String_valueOf(var$3);
                    var$20 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$20, $rt_s(1190)), var$8);
                    var$5.$fine(jl_StringBuilder_toString(var$20));
                    $this.$signerPubkey = var$3;
                    $listener.$onSuccess.$accept0($result);
                    break i;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            break a;
        }
        onns_NostrNIP46Signer_$callClinit();
        var$3 = onns_NostrNIP46Signer_logger;
        jul_Level_$callClinit();
        var$3.$log(jul_Level_WARNING, $rt_s(1137), $e);
    }
},
onns_NostrNIP46Signer_waitForResponse = ($this, $method, $id, $verifyPayload, $timeout) => {
    let $platform;
    $platform = onp_NGEUtils_getPlatform();
    onns_NostrNIP46Signer_$callClinit();
    if (!onns_NostrNIP46Signer_$assertionsDisabled && !onp_NGEUtils_dbg(onns_NostrNIP46Signer$waitForResponse$lambda$_10_1__init_0($method, $id, $timeout)))
        $rt_throw(jl_AssertionError__init_());
    return $platform.$wrapPromise(onns_NostrNIP46Signer$waitForResponse$lambda$_10_0__init_0($this, $method, $timeout, $verifyPayload, $id));
},
onns_NostrNIP46Signer_waitForResponse0 = ($this, $method, $id, $timeout) => {
    return onns_NostrNIP46Signer_waitForResponse($this, $method, $id, null, $timeout);
},
onns_NostrNIP46Signer_sendRPC = ($this, $method, $params, $timeout) => {
    let var$4, var$5;
    var$4 = onns_NostrNIP46Signer_check($this);
    var$5 = onns_NostrNIP46Signer$sendRPC$lambda$_12_0__init_0($this, $method, $params, $timeout);
    var$4 = var$4.$compose(var$5);
    return var$4;
},
onns_NostrNIP46Signer_sign = ($this, $event) => {
    let $method, $platform, $params, var$5, var$6;
    $method = $rt_s(1191);
    $platform = onp_NGEUtils_getPlatform();
    $params = ju_HashMap__init_();
    $params.$put1($rt_s(741), jl_Integer_valueOf($event.$getKind()));
    $params.$put1($rt_s(742), $event.$getContent());
    $params.$put1($rt_s(747), $event.$getTagRows());
    $params.$put1($rt_s(746), jl_Long_valueOf(jt_Instant_getEpochSecond($event.$getCreatedAt())));
    var$5 = $this.$sendRPC($method, ju_List_of1($platform.$toJSON($params)), $this.$requestsTimeout);
    var$6 = onns_NostrNIP46Signer$sign$lambda$_13_0__init_0($platform);
    var$5 = var$5.$then(var$6);
    return var$5;
},
onns_NostrNIP46Signer_encrypt = ($this, $message, $publicKey) => {
    let $method, $params;
    $method = $rt_s(1192);
    $params = ju_ArrayList__init_();
    $params.$add1(onnk_NostrPublicKey_asHex($publicKey));
    $params.$add1($message);
    return $this.$sendRPC($method, $params, $this.$requestsTimeout);
},
onns_NostrNIP46Signer_decrypt = ($this, $message, $publicKey) => {
    let $method, $params;
    $method = $rt_s(1193);
    $params = ju_ArrayList__init_();
    $params.$add1(onnk_NostrPublicKey_asHex($publicKey));
    $params.$add1($message);
    return $this.$sendRPC($method, $params, $this.$requestsTimeout);
},
onns_NostrNIP46Signer_getPublicKey = $this => {
    let var$1, var$2, $method, $params;
    if ($this.$cachedPublicKey !== null) {
        var$1 = onp_NGEPlatform_get();
        var$2 = onns_NostrNIP46Signer$getPublicKey$lambda$_16_1__init_0($this);
        var$1 = var$1.$wrapPromise(var$2);
        return var$1;
    }
    $method = $rt_s(1194);
    $params = ju_ArrayList__init_();
    var$1 = $this.$sendRPC($method, $params, $this.$requestsTimeout);
    var$2 = onns_NostrNIP46Signer$getPublicKey$lambda$_16_0__init_0($this);
    var$1 = var$1.$then(var$2);
    return var$1;
},
onns_NostrNIP46Signer_lambda$getPublicKey$28 = ($this, $publicKey) => {
    $this.$cachedPublicKey = onnk_NostrPublicKey_fromHex($publicKey);
    return $this.$cachedPublicKey;
},
onns_NostrNIP46Signer_lambda$getPublicKey$27 = ($this, $res, $rej) => {
    $res.$accept0($this.$cachedPublicKey);
},
onns_NostrNIP46Signer_lambda$sign$26 = ($platform, $signed) => {
    let var$3, $e, $$je;
    onns_NostrNIP46Signer_$callClinit();
    a: {
        try {
            var$3 = onne_SignedNostrEvent__init_1($platform.$fromJSON($signed, $rt_cls(ju_Map)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_RuntimeException__init_1($rt_s(1195), $e));
},
onns_NostrNIP46Signer_lambda$sendRPC$25 = ($this, $method, $params, $timeout, $r) => {
    let $platform, $requestId, $reqBody, var$8, var$9, var$10, var$11, $event, var$13, $response, $e, $$je;
    a: {
        try {
            $platform = onp_NGEUtils_getPlatform();
            $requestId = onnu_UniqueId_getNext();
            $reqBody = ju_HashMap__init_();
            $reqBody.$put1($rt_s(745), $requestId);
            $reqBody.$put1($rt_s(1196), $method);
            $reqBody.$put1($rt_s(1197), $params);
            var$8 = onne_UnsignedNostrEvent__init_();
            var$8 = var$8.$withKind(24133);
            var$8 = var$8.$createdAt(jt_Instant_now());
            var$9 = $rt_createArray(jl_String, 1);
            var$10 = var$9.data;
            var$11 = $this.$signerPubkey;
            var$10[0] = onnk_NostrPublicKey_asHex(var$11);
            var$8 = var$8.$withTag0($rt_s(1118), var$9);
            $event = var$8.$withContent($platform.$toJSON($reqBody));
            onns_NostrNIP46Signer_$callClinit();
            if (!onns_NostrNIP46Signer_$assertionsDisabled && !onp_NGEUtils_dbg(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2__init_0($event)))
                $rt_throw(jl_AssertionError__init_());
            var$8 = $this.$transportSigner;
            var$8 = onnn_Nip44_getConversationKey(onnk_NostrKeyPair_getPrivateKey(var$8.$getKeyPair()), $this.$signerPubkey);
            var$13 = onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0__init_0($event);
            var$8 = var$8.$compose(var$13);
            var$13 = onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1__init_0($this, $event, $method, $requestId, $timeout);
            $response = var$8.$compose(var$13);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $response;
    }
    $rt_throw(jl_RuntimeException__init_1($rt_s(1198), $e));
},
onns_NostrNIP46Signer_lambda$sendRPC$24 = ($this, $event, $method, $requestId, $timeout, $encryptedContent) => {
    let $res, var$7, var$8;
    $event.$withContent($encryptedContent);
    $res = onns_NostrNIP46Signer_waitForResponse0($this, $method, $requestId, $timeout);
    var$7 = $this.$transportSigner.$sign($event);
    var$8 = onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0__init_0($this);
    var$7.$then(var$8);
    return $res;
},
onns_NostrNIP46Signer_lambda$sendRPC$23 = ($this, $signed) => {
    $this.$pool.$publish($signed);
    return null;
},
onns_NostrNIP46Signer_lambda$sendRPC$22 = ($event, $conversationKey) => {
    onns_NostrNIP46Signer_$callClinit();
    return onnn_Nip44_encrypt($event.$getContent(), $conversationKey);
},
onns_NostrNIP46Signer_lambda$sendRPC$21 = $event => {
    let var$2, var$3, var$4;
    onns_NostrNIP46Signer_$callClinit();
    var$2 = onns_NostrNIP46Signer_logger;
    var$3 = jl_String_valueOf($event);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1199)), var$3);
    var$2.$finer(jl_StringBuilder_toString(var$4));
},
onns_NostrNIP46Signer_lambda$waitForResponse$20 = ($this, $method, $timeout, $verifyPayload, $id, $res, $rej) => {
    let $listener;
    $listener = onns_NostrNIP46Signer$ResponseListener__init_0($method, $res, $rej, $timeout);
    $listener.$verifyPayload = $verifyPayload;
    $this.$listeners0.$put1($id, $listener);
},
onns_NostrNIP46Signer_lambda$waitForResponse$19 = ($method, $id, $timeout) => {
    let var$4, var$5, var$6;
    onns_NostrNIP46Signer_$callClinit();
    var$4 = onns_NostrNIP46Signer_logger;
    var$5 = jl_String_valueOf($timeout);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1200)), $method), $rt_s(1201)), $id), $rt_s(1202)), var$5);
    var$4.$finest(jl_StringBuilder_toString(var$6));
},
onns_NostrNIP46Signer_lambda$onSubEvent$18 = ($id, $listener, $result) => {
    let var$4, var$5, var$6;
    onns_NostrNIP46Signer_$callClinit();
    var$4 = onns_NostrNIP46Signer_logger;
    var$5 = $listener.$method;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1203)), $id), $rt_s(1178)), var$5), 32), $result);
    var$4.$finest(jl_StringBuilder_toString(var$6));
},
onns_NostrNIP46Signer_lambda$onSubEvent$17 = ($id, $listener) => {
    let var$3, var$4, var$5;
    onns_NostrNIP46Signer_$callClinit();
    var$3 = onns_NostrNIP46Signer_logger;
    var$4 = $listener.$method;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1204)), $id), $rt_s(1178)), var$4);
    var$3.$fine(jl_StringBuilder_toString(var$5));
},
onns_NostrNIP46Signer_lambda$onSubEvent$16 = $decryptedContent => {
    let var$2, var$3;
    onns_NostrNIP46Signer_$callClinit();
    var$2 = onns_NostrNIP46Signer_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1205)), $decryptedContent);
    var$2.$finer(jl_StringBuilder_toString(var$3));
},
onns_NostrNIP46Signer_lambda$onSubEvent$15 = ($this, $event) => {
    let var$2, var$3, var$4, var$5;
    onns_NostrNIP46Signer_$callClinit();
    var$2 = onns_NostrNIP46Signer_logger;
    var$3 = jl_String_valueOf($event.$getPubkey());
    var$4 = jl_String_valueOf($this.$signerPubkey);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1206)), var$3), $rt_s(1207)), var$4);
    var$2.$fine(jl_StringBuilder_toString(var$5));
},
onns_NostrNIP46Signer_lambda$onSubEvent$14 = ($this, $event) => {
    let var$2, var$3, var$4, var$5;
    onns_NostrNIP46Signer_$callClinit();
    var$2 = onns_NostrNIP46Signer_logger;
    var$3 = jl_String_valueOf($event.$getPubkey());
    var$4 = jl_String_valueOf($this.$signerPubkey);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1171)), var$3), $rt_s(1208)), var$4), $rt_s(1209));
    var$3 = jl_StringBuilder_toString(var$5);
    var$2.$fine(var$3);
},
onns_NostrNIP46Signer_lambda$check$13 = ($this, $res, $rej) => {
    let var$3, var$4, $relay, var$6, var$7, $filter, var$9, var$10, $e, $$je;
    a: {
        try {
            if ($this.$listeners0 === null) {
                jl_Object_monitorEnterSync($this);
                b: {
                    try {
                        if ($this.$listeners0 === null) {
                            onns_NostrNIP46Signer_$callClinit();
                            onns_NostrNIP46Signer_logger.$finest($rt_s(1210));
                            $this.$listeners0 = juc_ConcurrentHashMap__init_();
                        }
                        jl_Object_monitorExitSync($this);
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$3 = $$je;

                    }
                    jl_Object_monitorExitSync($this);
                    $rt_throw(var$3);
                }
            }
            if ($this.$pendingChallenges === null) {
                jl_Object_monitorEnterSync($this);
                c: {
                    try {
                        if ($this.$pendingChallenges === null) {
                            onns_NostrNIP46Signer_$callClinit();
                            onns_NostrNIP46Signer_logger.$finest($rt_s(1211));
                            $this.$pendingChallenges = juc_ConcurrentHashMap__init_();
                        }
                        jl_Object_monitorExitSync($this);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$3 = $$je;

                    }
                    jl_Object_monitorExitSync($this);
                    $rt_throw(var$3);
                }
            }
            if ($this.$pool === null) {
                jl_Object_monitorEnterSync($this);
                d: {
                    try {
                        if ($this.$pool === null) {
                            onns_NostrNIP46Signer_$callClinit();
                            onns_NostrNIP46Signer_logger.$finest($rt_s(1212));
                            $this.$pool = onn_NostrPool__init_1();
                        }
                        jl_Object_monitorExitSync($this);
                        break d;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$3 = $$je;

                    }
                    jl_Object_monitorExitSync($this);
                    $rt_throw(var$3);
                }
            }
            var$4 = $this.$relays0.$iterator();
            while (var$4.$hasNext()) {
                $relay = var$4.$next();
                if (!(($this.$pool.$getRelays()).$stream()).$anyMatch(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0__init_0($relay)))
                    $this.$pool.$connectRelay(onn_NostrRelay__init_1($relay));
            }
            if ($this.$subscription === null) {
                jl_Object_monitorEnterSync($this);
                e: {
                    try {
                        if ($this.$subscription === null) {
                            var$3 = onn_NostrFilter__init_();
                            var$3 = var$3.$withKind0(24133);
                            var$6 = $rt_createArray(jl_String, 1);
                            var$7 = var$6.data;
                            var$4 = $this.$transportPubkey;
                            var$7[0] = onnk_NostrPublicKey_asHex(var$4);
                            var$3 = var$3.$withTag2($rt_s(1118), var$6);
                            var$3 = var$3.$limit0(100);
                            $filter = var$3.$since(jt_Instant_minusSeconds(jt_Instant_now(), Long_fromInt(60)));
                            onns_NostrNIP46Signer_$callClinit();
                            var$3 = onns_NostrNIP46Signer_logger;
                            var$9 = jl_String_valueOf($filter);
                            var$4 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1213)), var$9);
                            var$3.$finest(jl_StringBuilder_toString(var$4));
                            $this.$subscription = $this.$pool.$subscribe1($filter);
                            $this.$subscription.$addListener3($this);
                        }
                        jl_Object_monitorExitSync($this);
                        break e;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$3 = $$je;

                    }
                    jl_Object_monitorExitSync($this);
                    $rt_throw(var$3);
                }
            }
            f: {
                if ($this.$subscription.$isOpened()) {
                    onns_NostrNIP46Signer_$callClinit();
                    if (onns_NostrNIP46Signer_$assertionsDisabled)
                        break f;
                    if (onp_NGEUtils_dbg(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3__init_0($this)))
                        break f;
                    $rt_throw(jl_AssertionError__init_());
                }
                jl_Object_monitorEnterSync($this);
                g: {
                    try {
                        if (!$this.$subscription.$isOpened()) {
                            onns_NostrNIP46Signer_$callClinit();
                            var$4 = onns_NostrNIP46Signer_logger;
                            var$10 = jl_String_valueOf($this.$subscription);
                            var$3 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1214)), var$10);
                            var$4.$finest(jl_StringBuilder_toString(var$3));
                            var$3 = $this.$subscription.$open();
                            var$9 = onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1__init_0($rej);
                            var$3 = var$3.$catchException(var$9);
                            var$9 = onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2__init_0($this, $res);
                            var$3.$then(var$9);
                        }
                        jl_Object_monitorExitSync($this);
                        break g;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$3 = $$je;

                    }
                    jl_Object_monitorExitSync($this);
                    $rt_throw(var$3);
                }
            }
            h: {
                try {
                    $res.$accept0(ju_ArrayList__init_());
                    break h;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                    } else {
                        throw $$e;
                    }
                }
                $rej.$accept0($e);
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rej.$accept0($e);
    }
},
onns_NostrNIP46Signer_lambda$check$12 = $this => {
    let var$1, var$2, var$3;
    onns_NostrNIP46Signer_$callClinit();
    var$1 = onns_NostrNIP46Signer_logger;
    var$2 = jl_String_valueOf($this.$subscription);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1215)), var$2);
    var$1.$finest(jl_StringBuilder_toString(var$3));
},
onns_NostrNIP46Signer_lambda$check$11 = ($this, $res, $all) => {
    let var$3, var$4, var$5;
    onns_NostrNIP46Signer_$callClinit();
    var$3 = onns_NostrNIP46Signer_logger;
    var$4 = jl_String_valueOf($this.$subscription);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1216)), var$4);
    var$3.$fine(jl_StringBuilder_toString(var$5));
    $res.$accept0($all);
    return null;
},
onns_NostrNIP46Signer_lambda$check$10 = ($rej, $exc) => {
    onns_NostrNIP46Signer_$callClinit();
    $rej.$accept0($exc);
},
onns_NostrNIP46Signer_lambda$check$9 = ($relay, $s) => {
    onns_NostrNIP46Signer_$callClinit();
    return (onn_NostrRelay_getUrl($s)).$equals($relay);
},
onns_NostrNIP46Signer_lambda$listen$8 = ($this, $secret, $timeout, $r) => {
    let var$4, var$5;
    var$4 = onns_NostrNIP46Signer_waitForResponse($this, $rt_s(1113), $rt_s(1108), onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0__init_0($secret), $timeout);
    var$5 = onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1__init_0($this);
    var$4 = var$4.$then(var$5);
    return var$4;
},
onns_NostrNIP46Signer_lambda$listen$7 = ($this, $s) => {
    let var$2, var$3, var$4, $it, $entry, var$7;
    onns_NostrNIP46Signer_$callClinit();
    var$2 = onns_NostrNIP46Signer_logger;
    var$3 = jl_String_valueOf($this.$relays0);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1217)), $s), $rt_s(1166)), var$3);
    var$2.$fine(jl_StringBuilder_toString(var$4));
    $this.$connected0 = 1;
    $it = ($this.$listeners0.$entrySet()).$iterator();
    while ($it.$hasNext()) {
        $entry = $it.$next();
        if (($entry.$getValue()).$method.$equals($rt_s(1113))) {
            var$7 = onns_NostrNIP46Signer_logger;
            var$2 = jl_String_valueOf($entry.$getValue());
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1218)), var$2);
            var$7.$finer(jl_StringBuilder_toString(var$3));
            ($entry.$getValue()).$cancel($rt_s(1219));
            $it.$remove();
        }
    }
    return $this;
},
onns_NostrNIP46Signer_lambda$listen$6 = ($secret, $payload) => {
    let $v;
    onns_NostrNIP46Signer_$callClinit();
    $v = $payload.$equals($secret);
    if (!onns_NostrNIP46Signer_$assertionsDisabled && !onp_NGEUtils_dbg(onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0__init_0($payload, $secret, $v)))
        $rt_throw(jl_AssertionError__init_());
    return $v;
},
onns_NostrNIP46Signer_lambda$listen$5 = ($payload, $secret, $v) => {
    let var$4, var$5;
    onns_NostrNIP46Signer_$callClinit();
    var$4 = onns_NostrNIP46Signer_logger;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1217)), $payload), $rt_s(1220)), $secret), $rt_s(1221)), $v);
    var$4.$fine(jl_StringBuilder_toString(var$5));
},
onns_NostrNIP46Signer_lambda$listen$4 = ($res, $rej) => {
    onns_NostrNIP46Signer_$callClinit();
    $rej.$accept0(jl_Exception__init_0($rt_s(1189)));
},
onns_NostrNIP46Signer_lambda$connect$3 = ($this, $bunker, $r) => {
    let var$3, var$4, var$5, var$6, $it, $entry;
    onns_NostrNIP46Signer_$callClinit();
    var$3 = onns_NostrNIP46Signer_logger;
    var$4 = jl_String_valueOf($bunker);
    var$5 = jl_String_valueOf($this.$relays0);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1222)), var$4), $rt_s(1166)), var$5);
    var$3.$fine(jl_StringBuilder_toString(var$6));
    $this.$connected0 = 1;
    $it = ($this.$listeners0.$entrySet()).$iterator();
    while ($it.$hasNext()) {
        $entry = $it.$next();
        if (($entry.$getValue()).$method.$equals($rt_s(1113))) {
            var$4 = onns_NostrNIP46Signer_logger;
            var$5 = jl_String_valueOf($entry.$getValue());
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1218)), var$5);
            var$4.$finer(jl_StringBuilder_toString(var$6));
            ($entry.$getValue()).$cancel($rt_s(1223));
            $it.$remove();
        }
    }
    return $this;
},
onns_NostrNIP46Signer_lambda$connect$2 = ($res, $rej) => {
    onns_NostrNIP46Signer_$callClinit();
    $rej.$accept0(jl_Exception__init_0($rt_s(1189)));
},
onns_NostrNIP46Signer_lambda$close$1 = ($this, $res, $rej) => {
    let var$3, var$4, var$5, $e, var$7, $l, $c, $$je;
    a: {
        b: {
            c: {
                try {
                    if (!$this.$closed0)
                        break c;
                    onns_NostrNIP46Signer_$callClinit();
                    var$3 = onns_NostrNIP46Signer_logger;
                    var$4 = jl_String_valueOf($this);
                    var$5 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1224)), var$4);
                    var$3.$finer(jl_StringBuilder_toString(var$5));
                    $res.$accept0($this);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            try {
                onns_NostrNIP46Signer_$callClinit();
                var$5 = onns_NostrNIP46Signer_logger;
                var$7 = jl_String_valueOf($this);
                var$3 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1225)), var$7);
                var$5.$fine(jl_StringBuilder_toString(var$3));
                $this.$closed0 = 1;
                if ($this.$pool !== null)
                    $this.$pool.$close2();
                if ($this.$subscription !== null)
                    $this.$subscription.$close0();
                d: {
                    if ($this.$listeners0 !== null) {
                        var$3 = ($this.$listeners0.$values0()).$iterator();
                        while (true) {
                            if (!var$3.$hasNext())
                                break d;
                            $l = var$3.$next();
                            $l.$cancel($rt_s(1168));
                        }
                    }
                }
                e: {
                    if ($this.$pendingChallenges !== null) {
                        var$3 = ($this.$pendingChallenges.$values0()).$iterator();
                        while (true) {
                            if (!var$3.$hasNext())
                                break e;
                            $c = var$3.$next();
                            $c.$close4.$accept0(jl_Exception__init_0($rt_s(1168)));
                        }
                    }
                }
                $res.$accept0($this);
                if ($this.$executor !== null)
                    $this.$executor.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
        }
        $rej.$accept0($e);
    }
},
onns_NostrNIP46Signer_lambda$loop$0 = $this => {
    onns_NostrNIP46Signer_loop($this);
    return null;
};
let onns_NostrNIP46Signer__clinit_ = () => {
    onns_NostrNIP46Signer_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onns_NostrNIP46Signer)) ? 0 : 1;
    onns_NostrNIP46Signer_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onns_NostrNIP46Signer)));
},
onns_NostrNIP46Signer_lambda$sendRPC$24$exported$0 = (var$1, var$2, var$3, var$4, var$5, var$6) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$4 = $rt_str(var$4);
    var$5 = var$5;
    var$6 = $rt_str(var$6);
    return onns_NostrNIP46Signer_lambda$sendRPC$24(var$1, var$2, var$3, var$4, var$5, var$6);
},
onns_NostrNIP46Signer_lambda$loop$0$exported$1 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    return otji_JSWrapper_javaToJs(onns_NostrNIP46Signer_lambda$loop$0(var$1));
},
onns_NostrNIP46Signer_lambda$check$11$exported$2 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    return otji_JSWrapper_javaToJs(onns_NostrNIP46Signer_lambda$check$11(var$1, var$2, var$3));
},
onns_NostrNIP46Signer_lambda$getPublicKey$27$exported$3 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onns_NostrNIP46Signer_lambda$getPublicKey$27(var$1, var$2, var$3);
},
onns_NostrNIP46Signer_sign$exported$4 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    return var$1.$sign(var$2);
},
onns_NostrNIP46Signer_waitForResponse$exported$5 = (var$1, var$2, var$3, var$4) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = $rt_str(var$3);
    var$4 = var$4;
    return onns_NostrNIP46Signer_waitForResponse0(var$1, var$2, var$3, var$4);
},
onns_NostrNIP46Signer_toString$exported$6 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    return $rt_ustr(var$1.$toString());
},
onns_NostrNIP46Signer_sendRPC$exported$7 = (var$1, var$2, var$3, var$4) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = otji_JSWrapper_jsToJava(var$3);
    var$4 = var$4;
    return var$1.$sendRPC(var$2, var$3, var$4);
},
onns_NostrNIP46Signer_lambda$onSubEvent$15$exported$8 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    onns_NostrNIP46Signer_lambda$onSubEvent$15(var$1, var$2);
},
onns_NostrNIP46Signer_lambda$onSubEvent$14$exported$9 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    onns_NostrNIP46Signer_lambda$onSubEvent$14(var$1, var$2);
},
onns_NostrNIP46Signer_lambda$close$1$exported$10 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onns_NostrNIP46Signer_lambda$close$1(var$1, var$2, var$3);
},
onns_NostrNIP46Signer_encrypt$exported$11 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return var$1.$encrypt0(var$2, var$3);
},
onns_NostrNIP46Signer_lambda$check$13$exported$12 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    onns_NostrNIP46Signer_lambda$check$13(var$1, var$2, var$3);
},
onns_NostrNIP46Signer_loop$exported$13 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    onns_NostrNIP46Signer_loop(var$1);
},
onns_NostrNIP46Signer_lambda$listen$8$exported$14 = (var$1, var$2, var$3, var$4) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    var$4 = var$4;
    return onns_NostrNIP46Signer_lambda$listen$8(var$1, var$2, var$3, var$4);
},
onns_NostrNIP46Signer_lambda$getPublicKey$28$exported$15 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    return onns_NostrNIP46Signer_lambda$getPublicKey$28(var$1, var$2);
},
onns_NostrNIP46Signer_listen$exported$16 = (var$1, var$2, var$3, var$4) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$4 = var$4;
    return var$1.$listen0(var$2, var$3, var$4);
},
onns_NostrNIP46Signer_setChallengeHandler$exported$17 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$1.$setChallengeHandler(var$2, var$3);
},
onns_NostrNIP46Signer_close$exported$18 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    return var$1.$close0();
},
onns_NostrNIP46Signer_lambda$connect$3$exported$19 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return onns_NostrNIP46Signer_lambda$connect$3(var$1, var$2, var$3);
},
onns_NostrNIP46Signer_waitForResponse$exported$20 = (var$1, var$2, var$3, var$4, var$5) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = $rt_str(var$3);
    var$4 = var$4;
    var$5 = var$5;
    return onns_NostrNIP46Signer_waitForResponse(var$1, var$2, var$3, var$4, var$5);
},
onns_NostrNIP46Signer_lambda$sendRPC$23$exported$21 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    return otji_JSWrapper_javaToJs(onns_NostrNIP46Signer_lambda$sendRPC$23(var$1, var$2));
},
onns_NostrNIP46Signer_lambda$sendRPC$25$exported$22 = (var$1, var$2, var$3, var$4, var$5) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = otji_JSWrapper_jsToJava(var$3);
    var$4 = var$4;
    var$5 = var$5;
    return onns_NostrNIP46Signer_lambda$sendRPC$25(var$1, var$2, var$3, var$4, var$5);
},
onns_NostrNIP46Signer_lambda$check$12$exported$23 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    onns_NostrNIP46Signer_lambda$check$12(var$1);
},
onns_NostrNIP46Signer_check$exported$24 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    return onns_NostrNIP46Signer_check(var$1);
},
onns_NostrNIP46Signer_decrypt$exported$25 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    var$3 = var$3;
    return var$1.$decrypt0(var$2, var$3);
},
onns_NostrNIP46Signer_lambda$waitForResponse$20$exported$26 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7) => {
    let var$8;
    onns_NostrNIP46Signer_$callClinit();
    var$8 = $rt_str(var$2);
    var$2 = var$3;
    var$3 = var$4;
    var$4 = $rt_str(var$5);
    var$5 = var$6;
    var$6 = var$7;
    onns_NostrNIP46Signer_lambda$waitForResponse$20(var$1, var$8, var$2, var$3, var$4, var$5, var$6);
},
onns_NostrNIP46Signer_connect$exported$27 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    return var$1.$connect2(var$2);
},
onns_NostrNIP46Signer_setRequestsTimeout$exported$28 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$1.$setRequestsTimeout(var$2);
},
onns_NostrNIP46Signer_lambda$listen$7$exported$29 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    var$2 = $rt_str(var$2);
    return onns_NostrNIP46Signer_lambda$listen$7(var$1, var$2);
},
onns_NostrNIP46Signer_onSubEvent$exported$30 = (var$1, var$2, var$3) => {
    let var$4;
    onns_NostrNIP46Signer_$callClinit();
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    var$1.$onSubEvent(var$2, var$4);
},
onns_NostrNIP46Signer__init_$exported$31 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    return onns_NostrNIP46Signer__init_0(var$1, var$2);
},
onns_NostrNIP46Signer_getPublicKey$exported$32 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    return var$1.$getPublicKey0();
},
onns_NostrNIP46Signer_lambda$sign$26$exported$0 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_NostrNIP46Signer_lambda$sign$26(var$1, $rt_str(var$2));
},
onns_NostrNIP46Signer_lambda$sendRPC$22$exported$1 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_NostrNIP46Signer_lambda$sendRPC$22(var$1, otji_JS_unwrapByteArray(var$2));
},
onns_NostrNIP46Signer_lambda$sendRPC$21$exported$2 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$sendRPC$21(var$1);
},
onns_NostrNIP46Signer_lambda$waitForResponse$19$exported$3 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$waitForResponse$19($rt_str(var$1), $rt_str(var$2), var$3);
},
onns_NostrNIP46Signer_lambda$onSubEvent$18$exported$4 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$onSubEvent$18($rt_str(var$1), var$2, $rt_str(var$3));
},
onns_NostrNIP46Signer_lambda$onSubEvent$17$exported$5 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$onSubEvent$17($rt_str(var$1), var$2);
},
onns_NostrNIP46Signer_lambda$onSubEvent$16$exported$6 = var$1 => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$onSubEvent$16($rt_str(var$1));
},
onns_NostrNIP46Signer_lambda$check$10$exported$7 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$check$10(var$1, var$2);
},
onns_NostrNIP46Signer_lambda$check$9$exported$8 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onns_NostrNIP46Signer_lambda$check$9($rt_str(var$1), var$2);
},
onns_NostrNIP46Signer_lambda$listen$6$exported$9 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onns_NostrNIP46Signer_lambda$listen$6($rt_str(var$1), $rt_str(var$2));
},
onns_NostrNIP46Signer_lambda$listen$5$exported$10 = (var$1, var$2, var$3) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$listen$5($rt_str(var$1), $rt_str(var$2), var$3 ? 1 : 0);
},
onns_NostrNIP46Signer_lambda$listen$4$exported$11 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$listen$4(var$1, var$2);
},
onns_NostrNIP46Signer_lambda$connect$2$exported$12 = (var$1, var$2) => {
    onns_NostrNIP46Signer_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onns_NostrNIP46Signer_lambda$connect$2(var$1, var$2);
},
jt_LocalTime$2 = $rt_classWithoutFields(),
jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField = null,
jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit = null;
let jt_LocalTime$2_$callClinit = () => {
    jt_LocalTime$2_$callClinit = $rt_eraseClinit(jt_LocalTime$2);
    jt_LocalTime$2__clinit_();
},
jt_LocalTime$2__clinit_ = () => {
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit = $rt_createIntArray((jtt_ChronoUnit_values()).data.length);
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_NANOS)] = 1;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MICROS)] = 2;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MILLIS)] = 3;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_SECONDS)] = 4;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MINUTES)] = 5;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_HOURS)] = 6;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_HALF_DAYS)] = 7;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField = $rt_createIntArray((jtt_ChronoField_values()).data.length);
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_NANO_OF_SECOND)] = 1;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_NANO_OF_DAY)] = 2;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MICRO_OF_SECOND)] = 3;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MICRO_OF_DAY)] = 4;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MILLI_OF_SECOND)] = 5;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MILLI_OF_DAY)] = 6;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_SECOND_OF_MINUTE)] = 7;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_SECOND_OF_DAY)] = 8;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MINUTE_OF_HOUR)] = 9;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MINUTE_OF_DAY)] = 10;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_HOUR_OF_AMPM)] = 11;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_CLOCK_HOUR_OF_AMPM)] = 12;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_HOUR_OF_DAY)] = 13;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_CLOCK_HOUR_OF_DAY)] = 14;
    jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_AMPM_OF_DAY)] = 15;
},
jt_LocalTime$1 = $rt_classWithoutFields(),
jt_LocalTime$1__init_ = $this => {
    jl_Object__init_($this);
},
jt_LocalTime$1__init_0 = () => {
    let var_0 = new jt_LocalTime$1();
    jt_LocalTime$1__init_(var_0);
    return var_0;
},
otcit_FloatAnalyzer = $rt_classWithoutFields(),
otcit_FloatAnalyzer_MAX_MANTISSA = 0,
otcit_FloatAnalyzer_mantissa10Table = null,
otcit_FloatAnalyzer_exp10Table = null,
otcit_FloatAnalyzer_$callClinit = () => {
    otcit_FloatAnalyzer_$callClinit = $rt_eraseClinit(otcit_FloatAnalyzer);
    otcit_FloatAnalyzer__clinit_();
},
otcit_FloatAnalyzer_analyze = ($d, $result) => {
    let $bits, $mantissa, $exponent, var$6, $decExponent, var$8, var$9, $binExponentCorrection, $mantissaShift, $decMantissa, var$13, var$14, var$15, $decMantissaHi, $decMantissaLow, $lowerPos, $upperPos, $posCmp;
    otcit_FloatAnalyzer_$callClinit();
    $bits = jl_Float_floatToIntBits($d);
    $result.$sign3 = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent0 = 0;
        return;
    }
    if ($exponent)
        var$6 = $mantissa | 8388608;
    else {
        var$6 = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt(var$6), Long_fromInt(8388608)), Long_ZERO)) {
            var$6 = var$6 << 1;
            $exponent = $exponent + (-1) | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch5(otcit_FloatAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent | 0;
    var$8 = otcit_FloatAnalyzer_exp10Table.data;
    var$9 = $decExponent + 1 | 0;
    $binExponentCorrection = $exponent - var$8[var$9] | 0;
    $mantissaShift = 9 + $binExponentCorrection | 0;
    $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight(var$6, otcit_FloatAnalyzer_mantissa10Table.data[var$9], $mantissaShift);
    if ($decMantissa < otcit_FloatAnalyzer_MAX_MANTISSA) {
        while ($rt_ucmp($decMantissa, otcit_FloatAnalyzer_MAX_MANTISSA) <= 0) {
            $decExponent = $decExponent + (-1) | 0;
            $decMantissa = ($decMantissa * 10 | 0) + 9 | 0;
        }
        var$8 = otcit_FloatAnalyzer_exp10Table.data;
        var$9 = $decExponent + 1 | 0;
        var$13 = $exponent - var$8[var$9] | 0;
        $mantissaShift = 9 + var$13 | 0;
        $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight(var$6, otcit_FloatAnalyzer_mantissa10Table.data[var$9], $mantissaShift);
    }
    var$9 = var$6 << 1;
    var$6 = var$9 + 1 | 0;
    var$8 = otcit_FloatAnalyzer_mantissa10Table.data;
    var$13 = $decExponent + 1 | 0;
    var$14 = var$8[var$13];
    var$15 = $mantissaShift - 1 | 0;
    $decMantissaHi = otcit_FloatAnalyzer_mulAndShiftRight(var$6, var$14, var$15);
    $decMantissaLow = otcit_FloatAnalyzer_mulAndShiftRight(var$9 - 1 | 0, otcit_FloatAnalyzer_mantissa10Table.data[var$13], var$15);
    $lowerPos = otcit_FloatAnalyzer_findLowerDistance($decMantissa, $decMantissaLow);
    $upperPos = otcit_FloatAnalyzer_findUpperDistance($decMantissa, $decMantissaHi);
    $posCmp = $rt_ucmp($lowerPos, $upperPos);
    var$9 = $posCmp > 0 ? $rt_imul($rt_udiv($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? $rt_imul($rt_udiv($decMantissa, $upperPos), $upperPos) + $upperPos | 0 : $rt_imul($rt_udiv(($decMantissa + ($upperPos / 2 | 0) | 0), $upperPos), $upperPos);
    if (jl_Long_compareUnsigned(Long_fromInt(var$9), Long_fromInt(1000000000)) >= 0)
        while (true) {
            $decExponent = $decExponent + 1 | 0;
            var$9 = $rt_udiv(var$9, 10);
            if ($rt_ucmp(var$9, 1000000000) < 0)
                break;
        }
    else if ($rt_ucmp(var$9, 100000000) < 0) {
        $decExponent = $decExponent + (-1) | 0;
        var$9 = var$9 * 10 | 0;
    }
    $result.$mantissa = var$9;
    $result.$exponent0 = $decExponent - 50 | 0;
},
otcit_FloatAnalyzer_findLowerDistance = ($mantissa, $lower) => {
    let $pos, $pos_0, var$5, var$6;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 1;
    while (true) {
        $pos_0 = $pos * 10 | 0;
        var$5 = $rt_udiv($mantissa, $pos_0);
        var$6 = $rt_udiv($lower, $pos_0);
        if ($rt_ucmp(var$5, var$6) <= 0)
            break;
        $pos = $pos_0;
    }
    return $pos;
},
otcit_FloatAnalyzer_findUpperDistance = ($mantissa, $upper) => {
    let $pos, $pos_0, var$5, var$6;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 1;
    while (true) {
        $pos_0 = $pos * 10 | 0;
        var$5 = $rt_udiv($mantissa, $pos_0);
        var$6 = $rt_udiv($upper, $pos_0);
        if ($rt_ucmp(var$5, var$6) >= 0)
            break;
        $pos = $pos_0;
    }
    return $pos;
},
otcit_FloatAnalyzer_mulAndShiftRight = ($a, $b, $shift) => {
    let $result;
    otcit_FloatAnalyzer_$callClinit();
    $result = Long_mul(Long_and(Long_fromInt($a), Long_create(4294967295, 0)), Long_and(Long_fromInt($b), Long_create(4294967295, 0)));
    return Long_lo(Long_shru($result, 32 - $shift | 0));
},
otcit_FloatAnalyzer__clinit_ = () => {
    otcit_FloatAnalyzer_MAX_MANTISSA = $rt_udiv((-1), 10);
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArrayFromData([(-18543760), (-873828468), (-1558056233), (-2105438446), (-791721136), (-1492370368), (-2052889754), (-707643228), (-1425108042), (-1999079893), (-621547450), (-1356231419), (-1943978595), (-533385374), (-1285701758), (-1887554866), (-443107408), (-1213479385), (-1829776968), (-350662770), (-1139523676), (-1770612400), (-255999462), (-1063793029), (-1710027882), (-159064234), (-986244846), (-1647989336), (-59802560), (-906835507), (-1584461865),
    (-2126562952), (-825520345), (-1519409735), (-2074521247), (-742253618), (-1452796353), (-2021230542), (-656988489), (-1384584251), (-1966660860), (-569676998), (-1314735058), (-1910781505), (-480270031), (-1243209484), (-1853561046), (-388717296), (-1169967296), (-1794967296), (-294967296), (-1094967296), (-1734967296), (-198967296), (-1018167296), (-1673527296), (-100663296), (-939524096), (-1610612736), (-2147483648), (-858993460), (-1546188227), (-2095944041), (-776530088), (-1480217529), (-2043167483),
    (-692087595), (-1412663535), (-1989124287), (-605618482), (-1343488245), (-1933784055), (-517074110), (-1272652747), (-1877115657), (-426404674), (-1200117198), (-1819087218), (-333559171), (-1125840796), (-1759666096), (-238485376), (-1049781760), (-1698818867), (-141129810), (-971897307), (-1636511305), (-41437710), (-892143627), (-1572708361), (-2117160148), (-810475859), (-1507374147), (-2064892777), (-726848065), (-1440471911), (-2011370988), (-641213203), (-1371964022), (-1956564688)]);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArrayFromData([(-37), (-34), (-31), (-28), (-24), (-21), (-18), (-14), (-11), (-8), (-4), (-1), 2, 6, 9, 12, 16, 19, 22, 26, 29, 32, 36, 39, 42, 46, 49, 52, 56, 59, 62, 65, 69, 72, 75, 79, 82, 85, 89, 92, 95, 99, 102, 105, 109, 112, 115, 119, 122, 125, 129, 132, 135, 139, 142, 145, 149, 152, 155, 158, 162, 165, 168, 172, 175, 178, 182, 185, 188, 192, 195, 198, 202, 205, 208, 212, 215, 218, 222, 225, 228, 232, 235, 238, 242, 245, 248, 252, 255, 258, 261, 265,
    268, 271, 275, 278, 281, 285, 288, 291]);
};
function onpt_TeaVMWebsocketTransport$send$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_0161 = null;
    a.$_180 = null;
}
let onpt_TeaVMWebsocketTransport$send$lambda$_4_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0161 = var$1;
    var$0.$_180 = var$2;
},
onpt_TeaVMWebsocketTransport$send$lambda$_4_0__init_0 = (var_0, var_1) => {
    let var_2 = new onpt_TeaVMWebsocketTransport$send$lambda$_4_0();
    onpt_TeaVMWebsocketTransport$send$lambda$_4_0__init_(var_2, var_0, var_1);
    return var_2;
},
onpt_TeaVMWebsocketTransport$send$lambda$_4_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMWebsocketTransport$send$lambda$_4_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMWebsocketTransport$send$lambda$_4_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMWebsocketTransport_lambda$send$6(var$0.$_0161, var$0.$_180, var$1, var$2);
},
ju_HashMap$ValueIterator = $rt_classWithoutFields(ju_HashMap$AbstractMapIterator),
ju_HashMap$ValueIterator__init_ = ($this, $map) => {
    ju_HashMap$AbstractMapIterator__init_($this, $map);
},
ju_HashMap$ValueIterator__init_0 = var_0 => {
    let var_1 = new ju_HashMap$ValueIterator();
    ju_HashMap$ValueIterator__init_(var_1, var_0);
    return var_1;
},
ju_HashMap$ValueIterator_next = $this => {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry.$value;
},
otcir_MethodInfo = $rt_classWithoutFields();
function onne_NostrEvent$TagValue() {
    jl_Object.call(this);
    this.$values13 = null;
}
let onne_NostrEvent$TagValue__init_2 = ($this, $values) => {
    jl_Object__init_($this);
    $this.$values13 = ju_Collections_unmodifiableList($values);
},
onne_NostrEvent$TagValue__init_ = var_0 => {
    let var_1 = new onne_NostrEvent$TagValue();
    onne_NostrEvent$TagValue__init_2(var_1, var_0);
    return var_1;
},
onne_NostrEvent$TagValue__init_1 = ($this, $values) => {
    jl_Object__init_($this);
    $this.$values13 = ju_Arrays_asList($values);
},
onne_NostrEvent$TagValue__init_4 = var_0 => {
    let var_1 = new onne_NostrEvent$TagValue();
    onne_NostrEvent$TagValue__init_1(var_1, var_0);
    return var_1;
},
onne_NostrEvent$TagValue__init_0 = ($this, $value) => {
    let var$2;
    jl_Object__init_($this);
    var$2 = $rt_createArray(jl_String, 1);
    var$2.data[0] = $value;
    $this.$values13 = ju_Arrays_asList(var$2);
},
onne_NostrEvent$TagValue__init_3 = var_0 => {
    let var_1 = new onne_NostrEvent$TagValue();
    onne_NostrEvent$TagValue__init_0(var_1, var_0);
    return var_1;
},
onne_NostrEvent$TagValue_size = $this => {
    return $this.$values13.$size();
},
onne_NostrEvent$TagValue_get = ($this, $index) => {
    if ($index >= 0 && $index < $this.$values13.$size())
        return $this.$values13.$get($index);
    return null;
},
onne_NostrEvent$TagValue_getAll = $this => {
    return $this.$values13;
},
onne_NostrEvent$TagValue__init_$exported$0 = var$1 => {
    return onne_NostrEvent$TagValue__init_(var$1);
};
function onne_NostrEvent$TagValue__init_$exported$1() {
    return onne_NostrEvent$TagValue__init_4(otji_JS_unwrapStringArray($rt_skip(arguments, 1)));
}
let onne_NostrEvent$TagValue_get$exported$2 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return $rt_ustr(var$1.$get15(var$3));
},
onne_NostrEvent$TagValue_getAll$exported$3 = var$1 => {
    return var$1.$getAll();
},
onne_NostrEvent$TagValue__init_$exported$4 = var$1 => {
    return onne_NostrEvent$TagValue__init_3($rt_str(var$1));
},
onne_NostrEvent$TagValue_size$exported$5 = var$1 => {
    return var$1.$size();
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$030 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_ = ($this, $this$0) => {
    $this.$this$030 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains = ($this, $ch) => {
    return jl_Character_isJavaIdentifierStart($ch);
},
ju_Arrays = $rt_classWithoutFields(),
ju_Arrays_copyOf1 = ($array, $length) => {
    let var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createCharArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf = ($array, $length) => {
    let var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createByteArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf2 = ($array, $length) => {
    let var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createIntArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf0 = ($original, $newLength) => {
    let var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($original)), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOfRange = ($array, $from, $to) => {
    let $result, $i, var$6, var$7;
    $result = $rt_createByteArray($to - $from | 0);
    $i = $from;
    while ($i < $to) {
        var$6 = $result.data;
        var$7 = $array.data;
        var$6[$i - $from | 0] = var$7[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOfRange0 = ($original, $from, $to) => {
    let $result, $i, var$6, var$7;
    $result = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($original)), $to - $from | 0);
    $i = $from;
    while ($i < $to) {
        var$6 = $result.data;
        var$7 = $original.data;
        var$6[$i - $from | 0] = var$7[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_toString5 = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append10(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_toString = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append3(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_toString6 = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append3(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_toString2 = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append0(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_toString0 = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append3(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_toString4 = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append13(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_toString1 = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append14(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_toString3 = $a => {
    let $sb, $i, var$4;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    $sb.$append1($rt_s(714));
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append1($rt_s(12));
        $sb.$append17(var$4[$i]);
        $i = $i + 1 | 0;
    }
    $sb.$append1($rt_s(62));
    return $sb.$toString();
},
ju_Arrays_fill1 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill = ($a, $val) => {
    ju_Arrays_fill1($a, 0, $a.data.length, $val);
},
ju_Arrays_fill3 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill2 = ($a, $val) => {
    ju_Arrays_fill3($a, 0, $a.data.length, $val);
},
ju_Arrays_fill0 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill4 = ($a, $val) => {
    ju_Arrays_fill0($a, 0, $a.data.length, $val);
},
ju_Arrays_sort = ($a, $c) => {
    let var$3, $second, $chunkSize, var$6, $i, var$8, var$9, $i_0, var$11, var$12;
    var$3 = $a.data.length;
    if (!var$3)
        return;
    if ($c === null)
        $c = ju_Comparator$NaturalOrder_instance();
    $second = $rt_createArray(jl_Object, var$3);
    $chunkSize = 1;
    var$6 = $a;
    while ($chunkSize < var$3) {
        $i = 0;
        while (true) {
            var$8 = var$6.data.length;
            if ($i >= var$8)
                break;
            var$9 = jl_Math_min(var$8, $i + $chunkSize | 0);
            $i_0 = $i + (2 * $chunkSize | 0) | 0;
            var$11 = jl_Math_min(var$8, $i_0);
            ju_Arrays_merge(var$6, $second, $i, var$9, var$11, $c);
            $i = $i_0;
        }
        $chunkSize = $chunkSize * 2 | 0;
        var$12 = var$6;
        var$6 = $second;
        $second = var$12;
    }
    a: {
        if (var$6 !== $a) {
            $i = 0;
            while (true) {
                var$12 = var$6.data;
                if ($i >= var$12.length)
                    break a;
                $second.data[$i] = var$12[$i];
                $i = $i + 1 | 0;
            }
        }
    }
},
ju_Arrays_merge = ($a, $b, $from, $split, $to, $comp) => {
    let var$7, $from2, var$9, $p, $q, var$12, var$13, var$14;
    var$7 = $from;
    $from2 = $split;
    a: {
        b: {
            while ($from != $split) {
                if ($from2 == $to)
                    break b;
                var$9 = $a.data;
                $p = var$9[$from];
                $q = var$9[$from2];
                if ($comp.$compare5($p, $q) > 0) {
                    var$9 = $b.data;
                    var$12 = var$7 + 1 | 0;
                    var$9[var$7] = $q;
                    $from2 = $from2 + 1 | 0;
                } else {
                    var$9 = $b.data;
                    var$12 = var$7 + 1 | 0;
                    var$9[var$7] = $p;
                    $from = $from + 1 | 0;
                }
                var$7 = var$12;
            }
            while (true) {
                if ($from2 >= $to)
                    break a;
                var$13 = $b.data;
                var$9 = $a.data;
                var$12 = var$7 + 1 | 0;
                var$14 = $from2 + 1 | 0;
                var$13[var$7] = var$9[$from2];
                var$7 = var$12;
                $from2 = var$14;
            }
        }
        while (true) {
            if ($from >= $split)
                break a;
            var$13 = $b.data;
            var$9 = $a.data;
            var$14 = var$7 + 1 | 0;
            var$12 = $from + 1 | 0;
            var$13[var$7] = var$9[$from];
            var$7 = var$14;
            $from = var$12;
        }
    }
},
ju_Arrays_binarySearch5 = ($a, $key) => {
    return ju_Arrays_binarySearch6($a, 0, $a.data.length, $key);
},
ju_Arrays_binarySearch6 = ($a, $fromIndex, $toIndex, $key) => {
    let $u, var$6, $i, $e;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $u = $toIndex - 1 | 0;
    while (true) {
        if ($fromIndex > $u)
            return ( -$fromIndex | 0) - 1 | 0;
        var$6 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$6[$i];
        if ($e == $key)
            break;
        if ($key >= $e)
            $fromIndex = $i + 1 | 0;
        else
            $u = $i - 1 | 0;
    }
    return $i;
},
ju_Arrays_binarySearch = ($a, $key) => {
    return ju_Arrays_binarySearch2($a, 0, $a.data.length, $key);
},
ju_Arrays_binarySearch2 = ($a, $fromIndex, $toIndex, $key) => {
    let $u, var$6, $i, $e, var$9;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $u = $toIndex - 1 | 0;
    while (true) {
        if ($fromIndex > $u)
            return ( -$fromIndex | 0) - 1 | 0;
        var$6 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$6[$i];
        var$9 = Long_compare($e, $key);
        if (!var$9)
            break;
        if (var$9 <= 0)
            $fromIndex = $i + 1 | 0;
        else
            $u = $i - 1 | 0;
    }
    return $i;
},
ju_Arrays_binarySearch0 = ($a, $key) => {
    return ju_Arrays_binarySearch7($a, 0, $a.data.length, $key);
},
ju_Arrays_binarySearch7 = ($a, $fromIndex, $toIndex, $key) => {
    let $u, var$6, $i, $e, var$9;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $u = $toIndex - 1 | 0;
    while (true) {
        if ($fromIndex > $u)
            return ( -$fromIndex | 0) - 1 | 0;
        var$6 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$6[$i];
        var$9 = $rt_compare($e, $key);
        if (!var$9)
            break;
        if (var$9 <= 0)
            $fromIndex = $i + 1 | 0;
        else
            $u = $i - 1 | 0;
    }
    return $i;
},
ju_Arrays_binarySearch1 = ($a, $key) => {
    return ju_Arrays_binarySearch3($a, 0, $a.data.length, $key);
},
ju_Arrays_binarySearch3 = ($a, $fromIndex, $toIndex, $key) => {
    return ju_Arrays_binarySearch4($a, $fromIndex, $toIndex, $key, ju_Comparator$NaturalOrder_instance());
},
ju_Arrays_binarySearch4 = ($a, $fromIndex, $toIndex, $key, $c) => {
    let $u, var$7, $i, $e, $cmp;
    if ($c === null)
        $c = ju_Comparator$NaturalOrder_instance();
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $u = $toIndex - 1 | 0;
    while (true) {
        if ($fromIndex > $u)
            return ( -$fromIndex | 0) - 1 | 0;
        var$7 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$7[$i];
        $cmp = $c.$compare5($key, $e);
        if (!$cmp)
            break;
        if ($cmp >= 0)
            $fromIndex = $i + 1 | 0;
        else
            $u = $i - 1 | 0;
    }
    return $i;
},
ju_Arrays_mismatchImpl1 = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i, var$7;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        var$7 = $a2.data;
        if (Long_ne($a.data[$i + $aStart | 0], var$7[$i + $a2Start | 0]))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals0 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl1($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl5 = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i, var$7;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        var$7 = $a2.data;
        if ($a.data[$i + $aStart | 0] != var$7[$i + $a2Start | 0])
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals1 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl5($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl4 = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i, var$7;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        var$7 = $a2.data;
        if ($a.data[$i + $aStart | 0] != var$7[$i + $a2Start | 0])
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals5 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl4($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl2 = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i, var$7;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        var$7 = $a2.data;
        if ($a.data[$i + $aStart | 0] != var$7[$i + $a2Start | 0])
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals6 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl2($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl3 = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i, var$7;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        var$7 = $a2.data;
        if ($a.data[$i + $aStart | 0] != var$7[$i + $a2Start | 0])
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals2 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl3($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        if (jl_Float_compare($a.data[$i + $aStart | 0], $a2.data[$i + $a2Start | 0]))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals7 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl6 = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        if (jl_Double_compare($a.data[$i + $aStart | 0], $a2.data[$i + $a2Start | 0]))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals3 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl6($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl0 = ($a, $a2, $length) => {
    let $i, var$5;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        var$5 = $a2.data;
        if ($a.data[$i] != var$5[$i])
            break;
        $i = $i + 1 | 0;
    }
    return $i;
};
let ju_Arrays_equals4 = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl0($a, $a2, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_mismatchImpl7 = ($a, $aStart, $a2, $a2Start, $length) => {
    let $i, var$7;
    $i = 0;
    while (true) {
        if ($i >= $length)
            return (-1);
        var$7 = $a2.data;
        if (!ju_Objects_equals($a.data[$i + $aStart | 0], var$7[$i + $a2Start | 0]))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
ju_Arrays_equals = ($a, $a2) => {
    let var$3, var$4;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data.length;
        if (var$4 == var$3.length)
            return ju_Arrays_mismatchImpl7($a, 0, $a2, 0, var$4) >= 0 ? 0 : 1;
    }
    return 0;
},
ju_Arrays_hashCode0 = $a => {
    let $hash, $i, var$4;
    if ($a === null)
        return 0;
    $hash = 1;
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        $hash = (31 * $hash | 0) + jl_Long_hashCode(var$4[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return $hash;
},
ju_Arrays_hashCode = $a => {
    let $hash, $i, var$4;
    if ($a === null)
        return 0;
    $hash = 1;
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        $hash = (31 * $hash | 0) + ju_Objects_hashCode(var$4[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return $hash;
},
ju_Arrays_deepEquals = ($a1, $a2) => {
    let var$3, var$4, var$5, $i, $e1, $e2;
    if ($a1 === $a2)
        return 1;
    if ($a1 !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a1.data;
        var$5 = var$4.length;
        if (var$5 == var$3.length) {
            $i = 0;
            while ($i < var$5) {
                $e1 = var$4[$i];
                $e2 = var$3[$i];
                if (!ju_Objects_deepEquals($e1, $e2))
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
    }
    return 0;
},
ju_Arrays_asList = $a => {
    ju_Objects_requireNonNull0($a);
    return ju_Arrays$ArrayAsList__init_0($a);
},
ju_Arrays_deepToString = $a => {
    let $sb;
    if ($a === null)
        return $rt_s(94);
    $sb = jl_StringBuilder__init_();
    ju_Arrays_deepToString0($a, $sb, ju_ArrayList__init_());
    return $sb.$toString();
},
ju_Arrays_deepToString0 = ($a, $out, $visited) => {
    let var$4, var$5, $i;
    $out.$append0(91);
    if ($visited.$contains($a))
        $out.$append1($rt_s(434));
    else {
        a: {
            var$4 = $a.data;
            $visited.$add1($a);
            var$5 = var$4.length;
            if (var$5 > 0) {
                ju_Arrays_deepToString1(var$4[0], $out, $visited);
                $i = 1;
                while (true) {
                    if ($i >= var$5)
                        break a;
                    $out.$append1($rt_s(12));
                    ju_Arrays_deepToString1(var$4[$i], $out, $visited);
                    $i = $i + 1 | 0;
                }
            }
        }
        $visited.$remove0($visited.$size() - 1 | 0);
    }
    $out.$append0(93);
},
ju_Arrays_deepToString1 = ($a, $out, $visited) => {
    a: {
        if ($rt_isInstance($a, $rt_arraycls(jl_Object))) {
            ju_Arrays_deepToString0($a, $out, $visited);
            break a;
        }
        if ($rt_isInstance($a, $rt_arraycls($rt_booleancls))) {
            $out.$append1(ju_Arrays_toString5($a));
            break a;
        }
        if ($rt_isInstance($a, $rt_arraycls($rt_bytecls))) {
            $out.$append1(ju_Arrays_toString($a));
            break a;
        }
        if ($rt_isInstance($a, $rt_arraycls($rt_shortcls))) {
            $out.$append1(ju_Arrays_toString6($a));
            break a;
        }
        if ($rt_isInstance($a, $rt_arraycls($rt_charcls))) {
            $out.$append1(ju_Arrays_toString2($a));
            break a;
        }
        if ($rt_isInstance($a, $rt_arraycls($rt_intcls))) {
            $out.$append1(ju_Arrays_toString0($a));
            break a;
        }
        if ($rt_isInstance($a, $rt_arraycls($rt_longcls))) {
            $out.$append1(ju_Arrays_toString4($a));
            break a;
        }
        if ($rt_isInstance($a, $rt_arraycls($rt_floatcls))) {
            $out.$append1(ju_Arrays_toString1($a));
            break a;
        }
        if (!$rt_isInstance($a, $rt_arraycls($rt_doublecls))) {
            $out.$append($a);
            break a;
        }
        $out.$append1(ju_Arrays_toString3($a));
    }
},
onnk_NostrPrivateKey$KeySecurity = $rt_classWithoutFields(jl_Enum),
onnk_NostrPrivateKey$KeySecurity_UNTRUSTED = null,
onnk_NostrPrivateKey$KeySecurity_NORMAL = null,
onnk_NostrPrivateKey$KeySecurity_UNKNOWN = null,
onnk_NostrPrivateKey$KeySecurity_$VALUES = null,
onnk_NostrPrivateKey$KeySecurity_$callClinit = () => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit = $rt_eraseClinit(onnk_NostrPrivateKey$KeySecurity);
    onnk_NostrPrivateKey$KeySecurity__clinit_();
},
onnk_NostrPrivateKey$KeySecurity_values = () => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    return onnk_NostrPrivateKey$KeySecurity_$VALUES.$clone0();
},
onnk_NostrPrivateKey$KeySecurity_valueOf = $name => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    return jl_Enum_valueOf($rt_cls(onnk_NostrPrivateKey$KeySecurity), $name);
},
onnk_NostrPrivateKey$KeySecurity__init_0 = ($this, var$1, var$2) => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
onnk_NostrPrivateKey$KeySecurity__init_ = (var_0, var_1) => {
    let var_2 = new onnk_NostrPrivateKey$KeySecurity();
    onnk_NostrPrivateKey$KeySecurity__init_0(var_2, var_0, var_1);
    return var_2;
},
onnk_NostrPrivateKey$KeySecurity_$values = () => {
    let var$1, var$2;
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    var$1 = $rt_createArray(onnk_NostrPrivateKey$KeySecurity, 3);
    var$2 = var$1.data;
    var$2[0] = onnk_NostrPrivateKey$KeySecurity_UNTRUSTED;
    var$2[1] = onnk_NostrPrivateKey$KeySecurity_NORMAL;
    var$2[2] = onnk_NostrPrivateKey$KeySecurity_UNKNOWN;
    return var$1;
},
onnk_NostrPrivateKey$KeySecurity__clinit_ = () => {
    onnk_NostrPrivateKey$KeySecurity_UNTRUSTED = onnk_NostrPrivateKey$KeySecurity__init_($rt_s(1226), 0);
    onnk_NostrPrivateKey$KeySecurity_NORMAL = onnk_NostrPrivateKey$KeySecurity__init_($rt_s(1035), 1);
    onnk_NostrPrivateKey$KeySecurity_UNKNOWN = onnk_NostrPrivateKey$KeySecurity__init_($rt_s(602), 2);
    onnk_NostrPrivateKey$KeySecurity_$VALUES = onnk_NostrPrivateKey$KeySecurity_$values();
},
onnk_NostrPrivateKey$KeySecurity__init_$exported$0 = (var$1, var$2) => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    return onnk_NostrPrivateKey$KeySecurity__init_($rt_str(var$1), var$2);
},
onnk_NostrPrivateKey$KeySecurity_values$exported$0 = () => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnk_NostrPrivateKey$KeySecurity_values());
},
onnk_NostrPrivateKey$KeySecurity_valueOf$exported$1 = var$1 => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPrivateKey$KeySecurity_valueOf($rt_str(var$1));
},
onnk_NostrPrivateKey$KeySecurity_$values$exported$2 = () => {
    onnk_NostrPrivateKey$KeySecurity_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onnk_NostrPrivateKey$KeySecurity_$values());
};
function jur_CharClass$3() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$cc1 = null;
    a.$this$011 = null;
}
let jur_CharClass$3__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$011 = $this$0;
    $this.$val$curAlt0 = var$2;
    $this.$val$cc1 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$3__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$3();
    jur_CharClass$3__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$3_contains = ($this, $ch) => {
    return !($this.$val$curAlt0 ^ $this.$this$011.$bits.$get13($ch)) && !($this.$val$curAlt0 ^ $this.$this$011.$inverted ^ $this.$val$cc1.$contains0($ch)) ? 0 : 1;
};
function jur_CharClass$4() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$nb3 = null;
    a.$val$cc2 = null;
    a.$this$051 = null;
}
let jur_CharClass$4__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$051 = $this$0;
    $this.$val$curAlt1 = var$2;
    $this.$val$nb3 = var$3;
    $this.$val$cc2 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$4__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$4();
    jur_CharClass$4__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$4_contains = ($this, $ch) => {
    return $this.$val$curAlt1 ^ (!$this.$val$nb3.$contains0($ch) && !$this.$val$cc2.$contains0($ch) ? 0 : 1) ? 0 : 1;
};
function jur_CharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$cc3 = null;
    a.$this$043 = null;
}
let jur_CharClass$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$043 = $this$0;
    $this.$val$cc3 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$1();
    jur_CharClass$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$1_contains = ($this, $ch) => {
    return $this.$val$cc3.$contains0($ch);
};
function jur_CharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc0 = null;
    a.$this$08 = null;
}
let jur_CharClass$2__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$08 = $this$0;
    $this.$val$curAlt = var$2;
    $this.$val$cc0 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$2__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$2();
    jur_CharClass$2__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$2_contains = ($this, $ch) => {
    return !($this.$val$curAlt ^ $this.$this$08.$bits.$get13($ch)) && !($this.$val$curAlt ^ $this.$this$08.$inverted ^ $this.$val$cc0.$contains0($ch)) ? 1 : 0;
};
function jur_CharClass$7() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$052 = null;
}
let jur_CharClass$7__init_ = ($this, $this$0, var$2) => {
    $this.$this$052 = $this$0;
    $this.$val$clazz1 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$7__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$7();
    jur_CharClass$7__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$7_contains = ($this, $ch) => {
    return $this.$val$clazz1.$contains0($ch);
};
function jtf_DateTimeFormatterBuilder$1() {
    let a = this; jtf_DateTimeTextProvider.call(a);
    a.$val$store = null;
    a.$this$032 = null;
}
let jtf_DateTimeFormatterBuilder$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$032 = $this$0;
    $this.$val$store = var$2;
    jtf_DateTimeTextProvider__init_($this);
},
jtf_DateTimeFormatterBuilder$1__init_0 = (var_0, var_1) => {
    let var_2 = new jtf_DateTimeFormatterBuilder$1();
    jtf_DateTimeFormatterBuilder$1__init_(var_2, var_0, var_1);
    return var_2;
},
jtf_DateTimeFormatterBuilder$1_getTextIterator = ($this, $field, $style, $locale) => {
    return jtf_SimpleDateTimeTextProvider$LocaleStore_getTextIterator($this.$val$store, $style);
};
function jur_CharClass$8() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$val$curAlt6 = 0;
    a.$this$015 = null;
}
let jur_CharClass$8__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$015 = $this$0;
    $this.$val$clazz4 = var$2;
    $this.$val$curAlt6 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$8__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$8();
    jur_CharClass$8__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$8_contains = ($this, $ch) => {
    return !$this.$val$clazz4.$contains0($ch) && !($this.$val$curAlt6 ^ $this.$this$015.$bits.$get13($ch)) ? 1 : 0;
};
function onn_NostrPool$1() {
    jl_Object.call(this);
    this.$this$00 = null;
}
let onn_NostrPool$1__init_ = ($this, $this$0) => {
    $this.$this$00 = $this$0;
    jl_Object__init_($this);
},
onn_NostrPool$1__init_0 = var_0 => {
    let var_1 = new onn_NostrPool$1();
    onn_NostrPool$1__init_(var_1, var_0);
    return var_1;
},
onn_NostrPool$1_onRelayConnectRequest = ($this, $relay) => {
    return $this.$this$00.$onRelayConnectRequest($relay);
},
onn_NostrPool$1_onRelayConnect = ($this, $relay) => {
    return $this.$this$00.$onRelayConnect($relay);
},
onn_NostrPool$1_onRelayMessage = ($this, $relay, $message) => {
    return $this.$this$00.$onRelayMessage($relay, $message);
},
onn_NostrPool$1_onRelayError = ($this, $relay, $error) => {
    return $this.$this$00.$onRelayError($relay, $error);
},
onn_NostrPool$1_onRelayLoop = ($this, $relay, $nowInstant) => {
    return $this.$this$00.$onRelayLoop($relay, $nowInstant);
},
onn_NostrPool$1_onRelayDisconnect = ($this, $relay, $reason, $byClient) => {
    return $this.$this$00.$onRelayDisconnect($relay, $reason, $byClient);
},
onn_NostrPool$1_onRelaySend = ($this, $relay, $message) => {
    return $this.$this$00.$onRelaySend($relay, $message);
},
onn_NostrPool$1_onRelayDisconnectRequest = ($this, $relay, $reason) => {
    return $this.$this$00.$onRelayDisconnectRequest($relay, $reason);
},
onn_NostrPool$1_onRelayBeforeSend = ($this, $relay, $message) => {
    return $this.$this$00.$onBeforeRelaySend($relay, $message);
},
onn_NostrPool$1_onRelayAfterSend = ($this, $relay, $message) => {
    return $this.$this$00.$onAfterRelaySend($relay, $message);
},
onn_NostrPool$1__init_$exported$0 = var$1 => {
    return onn_NostrPool$1__init_0(var$1);
},
onn_NostrPool$1_onRelayDisconnect$exported$1 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$5 = var$4 ? 1 : 0;
    return !!var$1.$onRelayDisconnect(var$2, var$3, var$5);
},
onn_NostrPool$1_onRelayAfterSend$exported$2 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayAfterSend(var$2, var$3);
},
onn_NostrPool$1_onRelayMessage$exported$3 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayMessage(var$2, var$3);
},
onn_NostrPool$1_onRelayConnectRequest$exported$4 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$onRelayConnectRequest(var$2);
},
onn_NostrPool$1_onRelayDisconnectRequest$exported$5 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    return !!var$1.$onRelayDisconnectRequest(var$2, var$3);
},
onn_NostrPool$1_onRelayLoop$exported$6 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayLoop(var$2, var$3);
},
onn_NostrPool$1_onRelaySend$exported$7 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelaySend(var$2, var$3);
},
onn_NostrPool$1_onRelayError$exported$8 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayError(var$2, var$3);
},
onn_NostrPool$1_onRelayBeforeSend$exported$9 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = var$3;
    return !!var$1.$onRelayBeforeSend(var$2, var$3);
},
onn_NostrPool$1_onRelayConnect$exported$10 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$onRelayConnect(var$2);
};
function jur_CharClass$5() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt10 = 0;
    a.$val$nb0 = null;
    a.$val$cc = null;
    a.$this$038 = null;
}
let jur_CharClass$5__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$038 = $this$0;
    $this.$val$curAlt10 = var$2;
    $this.$val$nb0 = var$3;
    $this.$val$cc = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$5__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$5();
    jur_CharClass$5__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$5_contains = ($this, $ch) => {
    return $this.$val$curAlt10 ^ (!$this.$val$nb0.$contains0($ch) && !$this.$val$cc.$contains0($ch) ? 0 : 1);
};
function jur_CharClass$6() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$this$039 = null;
}
let jur_CharClass$6__init_ = ($this, $this$0, var$2) => {
    $this.$this$039 = $this$0;
    $this.$val$clazz9 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$6__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$6();
    jur_CharClass$6__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$6_contains = ($this, $ch) => {
    return $this.$val$clazz9.$contains0($ch) ? 0 : 1;
},
onnet_PassthroughEventTracker = $rt_classWithoutFields(),
onnet_PassthroughEventTracker__init_ = $this => {
    jl_Object__init_($this);
},
onnet_PassthroughEventTracker__init_0 = () => {
    let var_0 = new onnet_PassthroughEventTracker();
    onnet_PassthroughEventTracker__init_(var_0);
    return var_0;
},
onnet_PassthroughEventTracker_seen = ($this, $event) => {
    return 0;
},
onnet_PassthroughEventTracker_tuneFor = ($this, $sub) => {
    return;
},
onnet_PassthroughEventTracker__init_$exported$0 = () => {
    return onnet_PassthroughEventTracker__init_0();
},
onnet_PassthroughEventTracker_seen$exported$1 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$seen(var$2);
},
onnet_PassthroughEventTracker_tuneFor$exported$2 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$tuneFor(var$2);
};
function jm_BigDecimal() {
    let a = this; jl_Number.call(a);
    a.$intVal = null;
    a.$bitLength3 = 0;
    a.$smallValue = Long_ZERO;
    a.$scale = 0;
    a.$precision0 = 0;
}
let jm_BigDecimal_ZERO = null,
jm_BigDecimal_ONE = null,
jm_BigDecimal_TEN = null,
jm_BigDecimal_FIVE_POW = null,
jm_BigDecimal_TEN_POW = null,
jm_BigDecimal_LONG_TEN_POW = null,
jm_BigDecimal_LONG_FIVE_POW = null,
jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH = null,
jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH = null,
jm_BigDecimal_BI_SCALED_BY_ZERO = null,
jm_BigDecimal_ZERO_SCALED_BY = null,
jm_BigDecimal_CH_ZEROS = null,
jm_BigDecimal_$callClinit = () => {
    jm_BigDecimal_$callClinit = $rt_eraseClinit(jm_BigDecimal);
    jm_BigDecimal__clinit_();
},
jm_BigDecimal__init_5 = ($this, $smallValue, $scale) => {
    jm_BigDecimal_$callClinit();
    jl_Number__init_($this);
    $this.$smallValue = $smallValue;
    $this.$scale = $scale;
    $this.$bitLength3 = jm_BigDecimal_bitLength($smallValue);
},
jm_BigDecimal__init_4 = (var_0, var_1) => {
    let var_2 = new jm_BigDecimal();
    jm_BigDecimal__init_5(var_2, var_0, var_1);
    return var_2;
},
jm_BigDecimal__init_2 = ($this, $smallValue, $scale) => {
    jm_BigDecimal_$callClinit();
    jl_Number__init_($this);
    $this.$smallValue = Long_fromInt($smallValue);
    $this.$scale = $scale;
    $this.$bitLength3 = jm_BigDecimal_bitLength0($smallValue);
},
jm_BigDecimal__init_0 = (var_0, var_1) => {
    let var_2 = new jm_BigDecimal();
    jm_BigDecimal__init_2(var_2, var_0, var_1);
    return var_2;
},
jm_BigDecimal__init_1 = ($this, $unscaledVal, $scale) => {
    jm_BigDecimal_$callClinit();
    jl_Number__init_($this);
    if ($unscaledVal !== null) {
        $this.$scale = $scale;
        jm_BigDecimal_setUnscaledValue($this, $unscaledVal);
        return;
    }
    $rt_throw(jl_NullPointerException__init_());
},
jm_BigDecimal__init_ = (var_0, var_1) => {
    let var_2 = new jm_BigDecimal();
    jm_BigDecimal__init_1(var_2, var_0, var_1);
    return var_2;
},
jm_BigDecimal__init_3 = ($this, $val) => {
    jm_BigDecimal_$callClinit();
    jm_BigDecimal__init_2($this, $val, 0);
},
jm_BigDecimal__init_6 = var_0 => {
    let var_1 = new jm_BigDecimal();
    jm_BigDecimal__init_3(var_1, var_0);
    return var_1;
},
jm_BigDecimal_valueOf = ($unscaledVal, $scale) => {
    jm_BigDecimal_$callClinit();
    if (!$scale)
        return jm_BigDecimal_valueOf0($unscaledVal);
    if (Long_eq($unscaledVal, Long_ZERO) && $scale >= 0 && $scale < jm_BigDecimal_ZERO_SCALED_BY.data.length)
        return jm_BigDecimal_ZERO_SCALED_BY.data[$scale];
    return jm_BigDecimal__init_4($unscaledVal, $scale);
},
jm_BigDecimal_valueOf0 = $unscaledVal => {
    jm_BigDecimal_$callClinit();
    if (Long_ge($unscaledVal, Long_ZERO) && Long_lt($unscaledVal, Long_fromInt(11)))
        return jm_BigDecimal_BI_SCALED_BY_ZERO.data[Long_lo($unscaledVal)];
    return jm_BigDecimal__init_4($unscaledVal, 0);
},
jm_BigDecimal_add = ($this, $augend) => {
    let $diffScale;
    a: {
        $diffScale = $this.$scale - $augend.$scale | 0;
        if (jm_BigDecimal_isZero($this)) {
            if ($diffScale <= 0)
                return $augend;
            if (!jm_BigDecimal_isZero($augend))
                break a;
            return $this;
        }
        if (jm_BigDecimal_isZero($augend) && $diffScale >= 0)
            return $this;
    }
    if ($diffScale) {
        if ($diffScale > 0)
            return jm_BigDecimal_addAndMult10($this, $augend, $diffScale);
        return jm_BigDecimal_addAndMult10($augend, $this,  -$diffScale | 0);
    }
    if ((jl_Math_max($this.$bitLength3, $augend.$bitLength3) + 1 | 0) < 64)
        return jm_BigDecimal_valueOf(Long_add($this.$smallValue, $augend.$smallValue), $this.$scale);
    return jm_BigDecimal__init_((jm_BigDecimal_getUnscaledValue($this)).$add4(jm_BigDecimal_getUnscaledValue($augend)), $this.$scale);
},
jm_BigDecimal_addAndMult10 = ($thisValue, $augend, $diffScale) => {
    let var$4, var$5, var$6, var$7, var$8;
    jm_BigDecimal_$callClinit();
    if ($diffScale < jm_BigDecimal_LONG_TEN_POW.data.length) {
        var$4 = $thisValue.$bitLength3;
        var$5 = $augend.$bitLength3 + jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data[$diffScale] | 0;
        if ((jl_Math_max(var$4, var$5) + 1 | 0) < 64)
            return jm_BigDecimal_valueOf(Long_add($thisValue.$smallValue, Long_mul($augend.$smallValue, jm_BigDecimal_LONG_TEN_POW.data[$diffScale])), $thisValue.$scale);
    }
    var$6 = new jm_BigDecimal;
    var$7 = jm_BigDecimal_getUnscaledValue($thisValue);
    var$8 = jm_Multiplication_multiplyByTenPow(jm_BigDecimal_getUnscaledValue($augend), Long_fromInt($diffScale));
    jm_BigDecimal__init_1(var$6, var$7.$add4(var$8), $thisValue.$scale);
    return var$6;
},
jm_BigDecimal_subtract = ($this, $subtrahend) => {
    let $diffScale, var$3, var$4, var$5, var$6, var$7, var$8;
    a: {
        $diffScale = $this.$scale - $subtrahend.$scale | 0;
        if (jm_BigDecimal_isZero($this)) {
            if ($diffScale <= 0)
                return $subtrahend.$negate0();
            if (!jm_BigDecimal_isZero($subtrahend))
                break a;
            return $this;
        }
        if (jm_BigDecimal_isZero($subtrahend) && $diffScale >= 0)
            return $this;
    }
    if (!$diffScale) {
        if ((jl_Math_max($this.$bitLength3, $subtrahend.$bitLength3) + 1 | 0) < 64)
            return jm_BigDecimal_valueOf(Long_sub($this.$smallValue, $subtrahend.$smallValue), $this.$scale);
        return jm_BigDecimal__init_((jm_BigDecimal_getUnscaledValue($this)).$subtract2(jm_BigDecimal_getUnscaledValue($subtrahend)), $this.$scale);
    }
    if ($diffScale > 0) {
        if ($diffScale < jm_BigDecimal_LONG_TEN_POW.data.length) {
            var$3 = $this.$bitLength3;
            var$4 = $subtrahend.$bitLength3 + jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data[$diffScale] | 0;
            if ((jl_Math_max(var$3, var$4) + 1 | 0) < 64)
                return jm_BigDecimal_valueOf(Long_sub($this.$smallValue, Long_mul($subtrahend.$smallValue, jm_BigDecimal_LONG_TEN_POW.data[$diffScale])), $this.$scale);
        }
        var$5 = new jm_BigDecimal;
        var$6 = jm_BigDecimal_getUnscaledValue($this);
        var$7 = jm_Multiplication_multiplyByTenPow(jm_BigDecimal_getUnscaledValue($subtrahend), Long_fromInt($diffScale));
        jm_BigDecimal__init_1(var$5, var$6.$subtract2(var$7), $this.$scale);
        return var$5;
    }
    var$3 =  -$diffScale | 0;
    if (var$3 < jm_BigDecimal_LONG_TEN_POW.data.length) {
        var$4 = $this.$bitLength3 + jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data[var$3] | 0;
        var$8 = $subtrahend.$bitLength3;
        if ((jl_Math_max(var$4, var$8) + 1 | 0) < 64)
            return jm_BigDecimal_valueOf(Long_sub(Long_mul($this.$smallValue, jm_BigDecimal_LONG_TEN_POW.data[var$3]), $subtrahend.$smallValue), $subtrahend.$scale);
    }
    var$5 = new jm_BigDecimal;
    var$6 = jm_Multiplication_multiplyByTenPow(jm_BigDecimal_getUnscaledValue($this), Long_fromInt(var$3));
    jm_BigDecimal__init_1(var$5, var$6.$subtract2(jm_BigDecimal_getUnscaledValue($subtrahend)), $subtrahend.$scale);
    return var$5;
},
jm_BigDecimal_multiply = ($this, $multiplicand) => {
    let $newScale, var$3, var$4, var$5;
    $newScale = Long_add(Long_fromInt($this.$scale), Long_fromInt($multiplicand.$scale));
    if (!jm_BigDecimal_isZero($this) && !jm_BigDecimal_isZero($multiplicand)) {
        if (($this.$bitLength3 + $multiplicand.$bitLength3 | 0) < 64)
            return jm_BigDecimal_valueOf(Long_mul($this.$smallValue, $multiplicand.$smallValue), jm_BigDecimal_toIntScale($newScale));
        var$3 = new jm_BigDecimal;
        var$4 = jm_BigDecimal_getUnscaledValue($this);
        var$5 = jm_BigDecimal_getUnscaledValue($multiplicand);
        var$4 = var$4.$multiply(var$5);
        jm_BigDecimal__init_1(var$3, var$4, jm_BigDecimal_toIntScale($newScale));
        return var$3;
    }
    return jm_BigDecimal_zeroScaledBy($newScale);
},
jm_BigDecimal_divideBigIntegers = ($scaledDividend, $scaledDivisor, $scale, $roundingMode) => {
    let $quotAndRem, var$6, $quotient, $remainder, $sign, $compRem, var$11, $rem, $divisor, var$14;
    jm_BigDecimal_$callClinit();
    $quotAndRem = $scaledDividend.$divideAndRemainder($scaledDivisor);
    var$6 = $quotAndRem.data;
    $quotient = var$6[0];
    $remainder = var$6[1];
    if (!$remainder.$signum())
        return jm_BigDecimal__init_($quotient, $scale);
    $sign = $rt_imul($scaledDividend.$signum(), $scaledDivisor.$signum());
    if ($scaledDivisor.$bitLength() >= 63) {
        $compRem = (($remainder.$abs1()).$shiftLeftOneBit1()).$compareTo15($scaledDivisor.$abs1());
        var$11 = jm_BigDecimal_roundingBehavior(!$quotient.$testBit(0) ? 0 : 1, $rt_imul($sign, 5 + $compRem | 0), $roundingMode);
    } else {
        $rem = $remainder.$longValue();
        $divisor = $scaledDivisor.$longValue();
        $compRem = jm_BigDecimal_longCompareTo(Long_shl(jl_Math_abs0($rem), 1), jl_Math_abs0($divisor));
        var$11 = jm_BigDecimal_roundingBehavior(!$quotient.$testBit(0) ? 0 : 1, $rt_imul($sign, 5 + $compRem | 0), $roundingMode);
    }
    if (!var$11)
        return jm_BigDecimal__init_($quotient, $scale);
    if ($quotient.$bitLength() < 63)
        return jm_BigDecimal_valueOf(Long_add($quotient.$longValue(), Long_fromInt(var$11)), $scale);
    var$14 = $quotient.$add4(jm_BigInteger_valueOf(Long_fromInt(var$11)));
    return jm_BigDecimal__init_(var$14, $scale);
},
jm_BigDecimal_dividePrimitiveLongs = ($scaledDividend, $scaledDivisor, $scale, $roundingMode) => {
    let $quotient, $remainder, $sign, $compRem;
    jm_BigDecimal_$callClinit();
    $quotient = Long_div($scaledDividend, $scaledDivisor);
    $remainder = Long_rem($scaledDividend, $scaledDivisor);
    $sign = $rt_imul(jl_Long_signum($scaledDividend), jl_Long_signum($scaledDivisor));
    if (Long_ne($remainder, Long_ZERO)) {
        $compRem = jm_BigDecimal_longCompareTo(Long_shl(jl_Math_abs0($remainder), 1), jl_Math_abs0($scaledDivisor));
        $quotient = Long_add($quotient, Long_fromInt(jm_BigDecimal_roundingBehavior(Long_lo($quotient) & 1, $rt_imul($sign, 5 + $compRem | 0), $roundingMode)));
    }
    return jm_BigDecimal_valueOf($quotient, $scale);
},
jm_BigDecimal_negate = $this => {
    a: {
        if ($this.$bitLength3 >= 63) {
            if ($this.$bitLength3 != 63)
                break a;
            if (Long_eq($this.$smallValue, Long_create(0, 2147483648)))
                break a;
        }
        return jm_BigDecimal_valueOf(Long_neg($this.$smallValue), $this.$scale);
    }
    return jm_BigDecimal__init_((jm_BigDecimal_getUnscaledValue($this)).$negate(), $this.$scale);
},
jm_BigDecimal_isZero = $this => {
    return !$this.$bitLength3 && Long_ne($this.$smallValue, Long_fromInt(-1)) ? 1 : 0;
},
jm_BigDecimal_setScale = ($this, $newScale, $roundingMode) => {
    let $diffScale, var$4, var$5, var$6, var$7;
    if ($roundingMode === null)
        $rt_throw(jl_NullPointerException__init_());
    $diffScale = Long_sub(Long_fromInt($newScale), Long_fromInt($this.$scale));
    var$4 = Long_compare($diffScale, Long_ZERO);
    if (!var$4)
        return $this;
    if (var$4 <= 0) {
        if ($this.$bitLength3 < 64) {
            var$5 = Long_neg($diffScale);
            jm_BigDecimal_$callClinit();
            if (Long_lt(var$5, Long_fromInt(jm_BigDecimal_LONG_TEN_POW.data.length)))
                return jm_BigDecimal_dividePrimitiveLongs($this.$smallValue, jm_BigDecimal_LONG_TEN_POW.data[Long_lo(var$5)], $newScale, $roundingMode);
        }
        return jm_BigDecimal_divideBigIntegers(jm_BigDecimal_getUnscaledValue($this), jm_Multiplication_powerOf10(Long_neg($diffScale)), $newScale, $roundingMode);
    }
    jm_BigDecimal_$callClinit();
    if (Long_lt($diffScale, Long_fromInt(jm_BigDecimal_LONG_TEN_POW.data.length))) {
        var$4 = $this.$bitLength3;
        var$6 = jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data;
        var$7 = Long_lo($diffScale);
        if ((var$4 + var$6[var$7] | 0) < 64)
            return jm_BigDecimal_valueOf(Long_mul($this.$smallValue, jm_BigDecimal_LONG_TEN_POW.data[var$7]), $newScale);
    }
    return jm_BigDecimal__init_(jm_Multiplication_multiplyByTenPow(jm_BigDecimal_getUnscaledValue($this), Long_fromInt(Long_lo($diffScale))), $newScale);
},
jm_BigDecimal_movePointLeft = ($this, $n) => {
    return jm_BigDecimal_movePoint($this, Long_add(Long_fromInt($this.$scale), Long_fromInt($n)));
},
jm_BigDecimal_movePoint = ($this, $newScale) => {
    let var$2, var$3, var$4, var$5;
    if (jm_BigDecimal_isZero($this))
        return jm_BigDecimal_zeroScaledBy(jl_Math_max0($newScale, Long_ZERO));
    if (Long_ge($newScale, Long_ZERO)) {
        if ($this.$bitLength3 < 64)
            return jm_BigDecimal_valueOf($this.$smallValue, jm_BigDecimal_toIntScale($newScale));
        return jm_BigDecimal__init_(jm_BigDecimal_getUnscaledValue($this), jm_BigDecimal_toIntScale($newScale));
    }
    var$2 = Long_neg($newScale);
    if (Long_lt(var$2, Long_fromInt(jm_BigDecimal_LONG_TEN_POW.data.length))) {
        var$3 = $this.$bitLength3;
        var$4 = jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data;
        var$5 = Long_lo(var$2);
        if ((var$3 + var$4[var$5] | 0) < 64)
            return jm_BigDecimal_valueOf(Long_mul($this.$smallValue, jm_BigDecimal_LONG_TEN_POW.data[var$5]), 0);
    }
    return jm_BigDecimal__init_(jm_Multiplication_multiplyByTenPow(jm_BigDecimal_getUnscaledValue($this), Long_fromInt(Long_lo(var$2))), 0);
},
jm_BigDecimal_toBigIntegerExact = $this => {
    let $integerAndFraction, var$2;
    if ($this.$scale && !jm_BigDecimal_isZero($this)) {
        if ($this.$scale < 0)
            return (jm_BigDecimal_getUnscaledValue($this)).$multiply(jm_Multiplication_powerOf10(Long_neg(Long_fromInt($this.$scale))));
        if ($this.$scale <= jm_BigDecimal_aproxPrecision($this) && $this.$scale <= (jm_BigDecimal_getUnscaledValue($this)).$getLowestSetBit()) {
            $integerAndFraction = (jm_BigDecimal_getUnscaledValue($this)).$divideAndRemainder(jm_Multiplication_powerOf10(Long_fromInt($this.$scale)));
            var$2 = $integerAndFraction.data;
            if (!var$2[1].$signum())
                return var$2[0];
            $rt_throw(jl_ArithmeticException__init_($rt_s(1227)));
        }
        $rt_throw(jl_ArithmeticException__init_($rt_s(1227)));
    }
    return jm_BigDecimal_getUnscaledValue($this);
},
jm_BigDecimal_longValueExact = $this => {
    return jm_BigDecimal_valueExact($this, 64);
},
jm_BigDecimal_longCompareTo = ($value1, $value2) => {
    let var$3;
    jm_BigDecimal_$callClinit();
    var$3 = Long_compare($value1, $value2);
    return var$3 > 0 ? 1 : var$3 >= 0 ? 0 : (-1);
},
jm_BigDecimal_roundingBehavior = ($parityBit, $fraction, $roundingMode) => {
    let $increment;
    jm_BigDecimal_$callClinit();
    a: {
        $increment = 0;
        jm_BigDecimal$1_$callClinit();
        switch (jm_BigDecimal$1_$SwitchMap$org$teavm$classlib$java$math$TRoundingMode.data[jl_Enum_ordinal($roundingMode)]) {
            case 1:
                if (!$fraction)
                    break a;
                $rt_throw(jl_ArithmeticException__init_($rt_s(1227)));
            case 2:
                $increment = jl_Integer_signum($fraction);
                break a;
            case 3:
                break;
            case 4:
                $increment = jl_Math_max(jl_Integer_signum($fraction), 0);
                break a;
            case 5:
                $increment = jl_Math_min(jl_Integer_signum($fraction), 0);
                break a;
            case 6:
                if (jl_Math_abs($fraction) < 5)
                    break a;
                $increment = jl_Integer_signum($fraction);
                break a;
            case 7:
                if (jl_Math_abs($fraction) <= 5)
                    break a;
                $increment = jl_Integer_signum($fraction);
                break a;
            case 8:
                if ((jl_Math_abs($fraction) + $parityBit | 0) <= 5)
                    break a;
                $increment = jl_Integer_signum($fraction);
                break a;
            default:
                break a;
        }
    }
    return $increment;
},
jm_BigDecimal_valueExact = ($this, $bitLengthOfType) => {
    let $bigInteger;
    $bigInteger = $this.$toBigIntegerExact();
    if ($bigInteger.$bitLength() < $bitLengthOfType)
        return $bigInteger.$longValue();
    $rt_throw(jl_ArithmeticException__init_($rt_s(1227)));
},
jm_BigDecimal_aproxPrecision = $this => {
    return $this.$precision0 > 0 ? $this.$precision0 : (($this.$bitLength3 - 1 | 0) * 0.3010299956639812 | 0) + 1 | 0;
},
jm_BigDecimal_toIntScale = $longScale => {
    jm_BigDecimal_$callClinit();
    if (Long_lt($longScale, Long_fromInt(-2147483648)))
        $rt_throw(jl_ArithmeticException__init_($rt_s(1228)));
    if (Long_le($longScale, Long_fromInt(2147483647)))
        return Long_lo($longScale);
    $rt_throw(jl_ArithmeticException__init_($rt_s(1229)));
},
jm_BigDecimal_zeroScaledBy = $longScale => {
    let var$2;
    jm_BigDecimal_$callClinit();
    var$2 = Long_lo($longScale);
    if (Long_eq($longScale, Long_fromInt(var$2)))
        return jm_BigDecimal_valueOf(Long_ZERO, var$2);
    if (Long_lt($longScale, Long_ZERO))
        return jm_BigDecimal__init_0(0, (-2147483648));
    return jm_BigDecimal__init_0(0, 2147483647);
},
jm_BigDecimal_getUnscaledValue = $this => {
    if ($this.$intVal === null)
        $this.$intVal = jm_BigInteger_valueOf($this.$smallValue);
    return $this.$intVal;
},
jm_BigDecimal_setUnscaledValue = ($this, $unscaledValue) => {
    $this.$intVal = $unscaledValue;
    $this.$bitLength3 = $unscaledValue.$bitLength();
    if ($this.$bitLength3 < 64)
        $this.$smallValue = $unscaledValue.$longValue();
},
jm_BigDecimal_bitLength = $smallValue => {
    jm_BigDecimal_$callClinit();
    if (Long_lt($smallValue, Long_ZERO))
        $smallValue = Long_xor($smallValue, Long_fromInt(-1));
    return 64 - jl_Long_numberOfLeadingZeros($smallValue) | 0;
},
jm_BigDecimal_bitLength0 = $smallValue => {
    jm_BigDecimal_$callClinit();
    if ($smallValue < 0)
        $smallValue = $smallValue ^ (-1);
    return 32 - jl_Integer_numberOfLeadingZeros($smallValue) | 0;
},
jm_BigDecimal__clinit_ = () => {
    let $i, $j;
    jm_BigDecimal_ZERO = jm_BigDecimal__init_0(0, 0);
    jm_BigDecimal_ONE = jm_BigDecimal__init_0(1, 0);
    jm_BigDecimal_TEN = jm_BigDecimal__init_0(10, 0);
    jm_BigDecimal_LONG_TEN_POW = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(1000), Long_fromInt(10000), Long_fromInt(100000), Long_fromInt(1000000), Long_fromInt(10000000), Long_fromInt(100000000), Long_fromInt(1000000000), Long_create(1410065408, 2), Long_create(1215752192, 23), Long_create(3567587328, 232), Long_create(1316134912, 2328), Long_create(276447232, 23283), Long_create(2764472320, 232830), Long_create(1874919424, 2328306), Long_create(1569325056, 23283064),
    Long_create(2808348672, 232830643)]);
    jm_BigDecimal_LONG_FIVE_POW = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(5), Long_fromInt(25), Long_fromInt(125), Long_fromInt(625), Long_fromInt(3125), Long_fromInt(15625), Long_fromInt(78125), Long_fromInt(390625), Long_fromInt(1953125), Long_fromInt(9765625), Long_fromInt(48828125), Long_fromInt(244140625), Long_fromInt(1220703125), Long_create(1808548329, 1), Long_create(452807053, 7), Long_create(2264035265, 35), Long_create(2730241733, 177), Long_create(766306777, 888), Long_create(3831533885, 4440),
    Long_create(1977800241, 22204), Long_create(1299066613, 111022), Long_create(2200365769, 555111), Long_create(2411894253, 2775557), Long_create(3469536673, 13877787), Long_create(167814181, 69388939), Long_create(839070905, 346944695), Long_create(4195354525, 1734723475)]);
    jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH = $rt_createIntArray(jm_BigDecimal_LONG_FIVE_POW.data.length);
    jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH = $rt_createIntArray(jm_BigDecimal_LONG_TEN_POW.data.length);
    jm_BigDecimal_BI_SCALED_BY_ZERO = $rt_createArray(jm_BigDecimal, 11);
    jm_BigDecimal_ZERO_SCALED_BY = $rt_createArray(jm_BigDecimal, 11);
    jm_BigDecimal_CH_ZEROS = $rt_createCharArray(100);
    $i = 0;
    while ($i < jm_BigDecimal_ZERO_SCALED_BY.data.length) {
        jm_BigDecimal_BI_SCALED_BY_ZERO.data[$i] = jm_BigDecimal__init_0($i, 0);
        jm_BigDecimal_ZERO_SCALED_BY.data[$i] = jm_BigDecimal__init_0(0, $i);
        jm_BigDecimal_CH_ZEROS.data[$i] = 48;
        $i = $i + 1 | 0;
    }
    while ($i < jm_BigDecimal_CH_ZEROS.data.length) {
        jm_BigDecimal_CH_ZEROS.data[$i] = 48;
        $i = $i + 1 | 0;
    }
    $j = 0;
    while ($j < jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH.data.length) {
        jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH.data[$j] = jm_BigDecimal_bitLength(jm_BigDecimal_LONG_FIVE_POW.data[$j]);
        $j = $j + 1 | 0;
    }
    $j = 0;
    while ($j < jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data.length) {
        jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data[$j] = jm_BigDecimal_bitLength(jm_BigDecimal_LONG_TEN_POW.data[$j]);
        $j = $j + 1 | 0;
    }
    jm_Multiplication_$callClinit();
    jm_BigDecimal_TEN_POW = jm_Multiplication_bigTenPows;
    jm_BigDecimal_FIVE_POW = jm_Multiplication_bigFivePows;
};
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt0 = null;
}
let jur_DotSet__init_ = ($this, $lt) => {
    jur_JointSet__init_($this);
    $this.$lt0 = $lt;
},
jur_DotSet__init_0 = var_0 => {
    let var_1 = new jur_DotSet();
    jur_DotSet__init_(var_1, var_0);
    return var_1;
},
jur_DotSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt0.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next5.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$lt0.$isLineTerminator($high) ? (-1) : $this.$next5.$matches(var$5, $testString, $matchResult);
},
jur_DotSet_getName = $this => {
    return $rt_s(1230);
},
jur_DotSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_DotSet_getType = $this => {
    return (-2147483602);
},
jur_DotSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_CharClass$9() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$val$curAlt4 = 0;
    a.$this$017 = null;
}
let jur_CharClass$9__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$017 = $this$0;
    $this.$val$clazz3 = var$2;
    $this.$val$curAlt4 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$9__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$9();
    jur_CharClass$9__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$9_contains = ($this, $ch) => {
    return !$this.$val$clazz3.$contains0($ch) && !($this.$val$curAlt4 ^ $this.$this$017.$bits.$get13($ch)) ? 0 : 1;
};
function jl_Character() {
    jl_Object.call(this);
    this.$value6 = 0;
}
let jl_Character_TYPE = null,
jl_Character_digitMapping = null,
jl_Character_upperCaseMapping = null,
jl_Character_lowerCaseMapping = null,
jl_Character_classMapping = null,
jl_Character_characterCache = null,
jl_Character_$$metadata$$0 = null,
jl_Character_$$metadata$$1 = null,
jl_Character_$$metadata$$3 = null,
jl_Character_$$metadata$$4 = null,
jl_Character_$callClinit = () => {
    jl_Character_$callClinit = $rt_eraseClinit(jl_Character);
    jl_Character__clinit_();
},
jl_Character__init_ = ($this, $value) => {
    jl_Character_$callClinit();
    jl_Object__init_($this);
    $this.$value6 = $value;
},
jl_Character__init_0 = var_0 => {
    let var_1 = new jl_Character();
    jl_Character__init_(var_1, var_0);
    return var_1;
},
jl_Character_valueOf = $value => {
    let $result;
    jl_Character_$callClinit();
    if ($value >= jl_Character_characterCache.data.length)
        return jl_Character__init_0($value);
    $result = jl_Character_characterCache.data[$value];
    if ($result === null) {
        $result = jl_Character__init_0($value);
        jl_Character_characterCache.data[$value] = $result;
    }
    return $result;
},
jl_Character_toString0 = $this => {
    return jl_Character_toString($this.$value6);
},
jl_Character_equals = ($this, $other) => {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Character && $other.$value6 == $this.$value6 ? 1 : 0;
},
jl_Character_hashCode0 = $this => {
    return jl_Character_hashCode($this.$value6);
},
jl_Character_hashCode = $value => {
    jl_Character_$callClinit();
    return $value;
},
jl_Character_toString = $c => {
    let var$2, var$3;
    jl_Character_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_3(var$2, var$3);
    return var$2;
},
jl_Character_isValidCodePoint = $codePoint => {
    jl_Character_$callClinit();
    return $codePoint >= 0 && $codePoint <= 1114111 ? 1 : 0;
},
jl_Character_isBmpCodePoint = $codePoint => {
    jl_Character_$callClinit();
    return $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
},
jl_Character_isSupplementaryCodePoint = $codePoint => {
    jl_Character_$callClinit();
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
},
jl_Character_isHighSurrogate = $ch => {
    jl_Character_$callClinit();
    return ($ch & 64512) != 55296 ? 0 : 1;
},
jl_Character_isLowSurrogate = $ch => {
    jl_Character_$callClinit();
    return ($ch & 64512) != 56320 ? 0 : 1;
},
jl_Character_isSurrogate = $ch => {
    jl_Character_$callClinit();
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
},
jl_Character_isSurrogatePair = ($high, $low) => {
    jl_Character_$callClinit();
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
},
jl_Character_toCodePoint = ($high, $low) => {
    jl_Character_$callClinit();
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
},
jl_Character_codePointAt = ($a, $index) => {
    jl_Character_$callClinit();
    return jl_Character_codePointAt0($a, $index, $a.data.length);
},
jl_Character_codePointAt0 = ($a, $index, $limit) => {
    let var$4, var$5;
    jl_Character_$callClinit();
    if ($index < $limit && $index >= 0) {
        var$4 = $a.data;
        if ($limit <= var$4.length) {
            if ($index < ($limit - 1 | 0) && jl_Character_isHighSurrogate(var$4[$index])) {
                var$5 = $index + 1 | 0;
                if (jl_Character_isLowSurrogate(var$4[var$5]))
                    return jl_Character_toCodePoint(var$4[$index], var$4[var$5]);
            }
            return var$4[$index];
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_Character_highSurrogate = $codePoint => {
    let var$2;
    jl_Character_$callClinit();
    var$2 = $codePoint - 65536 | 0;
    return (55296 | var$2 >> 10 & 1023) & 65535;
},
jl_Character_lowSurrogate = $codePoint => {
    jl_Character_$callClinit();
    return (56320 | $codePoint & 1023) & 65535;
},
jl_Character_toLowerCase = $ch => {
    jl_Character_$callClinit();
    return jl_Character_toLowerCase0($ch) & 65535;
},
jl_Character_toLowerCase0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_mapChar(jl_Character_getLowerCaseMapping(), $ch);
},
jl_Character_getLowerCaseMapping = () => {
    let var$1;
    jl_Character_$callClinit();
    if (jl_Character_lowerCaseMapping === null) {
        var$1 = otciu_UnicodeHelper_decodeCaseMapping(((jl_Character_acquireLowerCaseMapping()).value !== null ? $rt_str((jl_Character_acquireLowerCaseMapping()).value) : null));
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(var$1);
    }
    return jl_Character_lowerCaseMapping;
},
jl_Character_acquireLowerCaseMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$0 === null)
        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
    return jl_Character_$$metadata$$0;
},
jl_Character_toUpperCase = $ch => {
    jl_Character_$callClinit();
    return jl_Character_toUpperCase0($ch) & 65535;
},
jl_Character_toUpperCase0 = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_mapChar(jl_Character_getUpperCaseMapping(), $codePoint);
},
jl_Character_getUpperCaseMapping = () => {
    let var$1;
    jl_Character_$callClinit();
    if (jl_Character_upperCaseMapping === null) {
        var$1 = otciu_UnicodeHelper_decodeCaseMapping(((jl_Character_acquireUpperCaseMapping()).value !== null ? $rt_str((jl_Character_acquireUpperCaseMapping()).value) : null));
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(var$1);
    }
    return jl_Character_upperCaseMapping;
},
jl_Character_acquireUpperCaseMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$1 === null)
        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
    return jl_Character_$$metadata$$1;
},
jl_Character_mapChar = ($table, $codePoint) => {
    let $binSearchTable, $index, var$5, var$6;
    jl_Character_$callClinit();
    if ($codePoint < $table.$fastTable.data.length)
        return $codePoint + $table.$fastTable.data[$codePoint] | 0;
    $binSearchTable = $table.$binarySearchTable0;
    $index = jl_Character_binarySearchTable($binSearchTable, $codePoint);
    if ($index >= 0) {
        var$5 = $binSearchTable.data;
        var$6 = $index * 2 | 0;
        if (var$6 < var$5.length)
            return $codePoint + var$5[var$6 + 1 | 0] | 0;
    }
    return 0;
},
jl_Character_binarySearchTable = ($data, $key) => {
    let var$3, $l, $u, $i, $e, var$8;
    jl_Character_$callClinit();
    var$3 = $data.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while (true) {
        $i = ($l + $u | 0) / 2 | 0;
        $e = var$3[$i * 2 | 0];
        var$8 = $rt_compare($e, $key);
        if (!var$8)
            break;
        if (var$8 <= 0) {
            $l = $i + 1 | 0;
            if ($l > $u)
                return $i;
        } else {
            $u = $i - 1 | 0;
            if ($u < $l)
                return $u;
        }
    }
    return $i;
},
jl_Character_digit = ($ch, $radix) => {
    jl_Character_$callClinit();
    return jl_Character_digit0($ch, $radix);
},
jl_Character_digit0 = ($codePoint, $radix) => {
    let $d;
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        $d = jl_Character_getNumericValue($codePoint);
        if ($d >= $radix)
            $d = (-1);
        return $d;
    }
    return (-1);
},
jl_Character_getNumericValue = $codePoint => {
    let $digitMapping, var$3, $l, $u, $idx, var$7, $val, var$9;
    jl_Character_$callClinit();
    $digitMapping = jl_Character_getDigitMapping();
    var$3 = $digitMapping.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$7 = $idx * 2 | 0;
        $val = var$3[var$7];
        var$9 = $rt_compare($codePoint, $val);
        if (var$9 > 0)
            $l = $idx + 1 | 0;
        else {
            if (var$9 >= 0)
                return var$3[var$7 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
},
jl_Character_forDigit = ($digit, $radix) => {
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36 && $digit >= 0 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
},
jl_Character_isDigit0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_isDigit($ch);
},
jl_Character_isDigit = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 9 ? 0 : 1;
},
jl_Character_getDigitMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_digitMapping === null)
        jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntPairsDiff(((jl_Character_obtainDigitMapping()).value !== null ? $rt_str((jl_Character_obtainDigitMapping()).value) : null));
    return jl_Character_digitMapping;
},
jl_Character_obtainDigitMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$3 === null)
        jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
    return jl_Character_$$metadata$$3;
},
jl_Character_getClasses = () => {
    jl_Character_$callClinit();
    if (jl_Character_classMapping === null)
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle(((jl_Character_obtainClasses()).value !== null ? $rt_str((jl_Character_obtainClasses()).value) : null));
    return jl_Character_classMapping;
};
let jl_Character_obtainClasses = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$4 === null)
        jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
    return jl_Character_$$metadata$$4;
},
jl_Character_toChars = $codePoint => {
    let var$2, var$3;
    jl_Character_$callClinit();
    if (!jl_Character_isValidCodePoint($codePoint))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($codePoint < 65536) {
        var$2 = $rt_createCharArray(1);
        var$2.data[0] = $codePoint & 65535;
        return var$2;
    }
    var$2 = $rt_createCharArray(2);
    var$3 = var$2.data;
    var$3[0] = jl_Character_highSurrogate($codePoint);
    var$3[1] = jl_Character_lowSurrogate($codePoint);
    return var$2;
},
jl_Character_isISOControl0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_isISOControl($ch);
},
jl_Character_isISOControl = $codePoint => {
    let var$2;
    jl_Character_$callClinit();
    a: {
        b: {
            if (!($codePoint >= 0 && $codePoint <= 31)) {
                if ($codePoint < 127)
                    break b;
                if ($codePoint > 159)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
jl_Character_getType0 = $c => {
    jl_Character_$callClinit();
    return jl_Character_getType($c);
},
jl_Character_getType = $codePoint => {
    let $classes, var$3, $l, $u, $i, $range;
    jl_Character_$callClinit();
    if (jl_Character_isBmpCodePoint($codePoint) && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    $classes = jl_Character_getClasses();
    var$3 = $classes.data;
    $l = 0;
    $u = var$3.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = var$3[$i];
        if ($codePoint >= $range.$end4)
            $l = $i + 1 | 0;
        else {
            if ($codePoint >= $range.$start5)
                return $range.$data6.data[$codePoint - $range.$start5 | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
},
jl_Character_isLowerCase = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 2 ? 0 : 1;
},
jl_Character_isUpperCase = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 1 ? 0 : 1;
},
jl_Character_isTitleCase = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 3 ? 0 : 1;
},
jl_Character_isDefined = $codePoint => {
    jl_Character_$callClinit();
    return !jl_Character_getType($codePoint) ? 0 : 1;
},
jl_Character_isLetter = $codePoint => {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            return 0;
    }
    return 1;
},
jl_Character_isLetterOrDigit0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_isLetterOrDigit($ch);
},
jl_Character_isLetterOrDigit = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
},
jl_Character_isJavaIdentifierStart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
            case 23:
            case 26:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isJavaIdentifierPart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
            case 26:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isUnicodeIdentifierStart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isUnicodeIdentifierPart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isIdentifierIgnorable = $codePoint => {
    jl_Character_$callClinit();
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
},
jl_Character_isSpaceChar = $codePoint => {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
},
jl_Character_isWhitespace0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_isWhitespace($ch);
},
jl_Character_isWhitespace = $codePoint => {
    jl_Character_$callClinit();
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
},
jl_Character_compareTo = ($this, $anotherCharacter) => {
    return jl_Character_compare($this.$value6, $anotherCharacter.$value6);
},
jl_Character_compare = ($x, $y) => {
    jl_Character_$callClinit();
    return $x - $y | 0;
},
jl_Character_compareTo0 = ($this, var$1) => {
    return $this.$compareTo16(var$1);
},
jl_Character__clinit_ = () => {
    jl_Character_TYPE = $rt_cls($rt_charcls);
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
},
jl_Character_acquireLowerCaseMapping$$create = () => {
    return {"value" : "TW  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
    + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 a$#%# -mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
    + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%"
    + "# #%# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# #$$r#%# \'%# +%# #%# #%# #P6rM \'%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# .\'F#S HB#F#b o@5F#b Jo=N#f "};
},
jl_Character_acquireUpperCaseMapping$$create = () => {
    return {"value" : "NY  ,%H#U :#>b# vH#O #H#/:+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #,5# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'#(;#N1# %\'# #\'# %\'# \'\'# +\'# %6)# \'\'#*/#N6r# %_+# %\'# #\'# #\'# %\'# )\'# %\'# \'\'# #\'# %\'# \'\'# #J%# +\'#+# #\'#+# #\'#+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#L\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'#+# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
    + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3#!$r#:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'"
    + "# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d# #\'- (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'#"
    + " #\'# #\'# -\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
    + "\'# #\'# #\'# #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'# %\'\' #\'% )\'# #\'# #\'# U\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#t {nm%:# V%H#^ >B#H#b o@5H#b No=P#f "};
},
jl_Character_obtainDigitMapping$$create = () => {
    return {"value" : "kE*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%_fG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%B\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%oYG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%ow?G%%%%%%%%%%%%%%%%%%s4%G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%"
    + "%%%%:OG%%%%%%%%%%%%%%%%%%V*OG%%%%%%%%%%%%%%%%%%VZ%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%k5G%%%%%%%%%%%%%%%%%%.lG%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
},
jl_Character_obtainClasses$$create = () => {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A&G*FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"

    + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F) Y#J+Y(^+G*^*Y$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
    + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*!#A&BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0"
    + "G.H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^jA7^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?6767676"
    + "7Y&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^1-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^GA*=F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#B##A#!# # #!#!#!#!A6E$!#&"
    + "E##F(\'F$\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F"
    + "\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#A$FUA-b&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+A\'J+F%%&B7A$G&5%C7A)Z#b 1$ L@ FK G#5A#F#A1F$AXG%F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'"
    + "F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+A\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&A,F+ &A#& FG &I$G\' )A#) I% I#\')\'&\'&Y# Y#A)G#A>FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+A\'J5A=F<A#\')\'I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%"
    + "Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W# FB9A/J+A\'F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+\'b 6! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0A+b&<` A&b&(* b ZK!F?G-I$G$J+b \'< b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q\' E$FIE#Y$J+b \'$ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AJF#A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =_ b=Q$ J+A\'b=U\'"
    + " AnGOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b 7$ F?G#&J+A%9b A( F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% "
    + "F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^-A%^#A`b=5& A-^/A#^.A$^+A&^YA(^0A#^,A\'^*A(b=4#  b==! J+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&A0&b M* &b CG b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
};
function jur_CICharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$ch3 = 0;
    a.$supplement = 0;
}
let jur_CICharSet__init_ = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch3 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
},
jur_CICharSet__init_0 = var_0 => {
    let var_1 = new jur_CICharSet();
    jur_CICharSet__init_(var_1, var_0);
    return var_1;
},
jur_CICharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch3 != $testString.$charAt($strIndex) && $this.$supplement != $testString.$charAt($strIndex) ? (-1) : 1;
},
jur_CICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch3;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(1231)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jur_SupplCharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$high0 = 0;
    a.$low0 = 0;
    a.$ch1 = 0;
}
let jur_SupplCharSet__init_ = ($this, $ch) => {
    let $chUTF16, var$3;
    jur_LeafSet__init_($this);
    $this.$charCount0 = 2;
    $this.$ch1 = $ch;
    $chUTF16 = jl_Character_toChars($ch);
    var$3 = $chUTF16.data;
    $this.$high0 = var$3[0];
    $this.$low0 = var$3[1];
},
jur_SupplCharSet__init_0 = var_0 => {
    let var_1 = new jur_SupplCharSet();
    jur_SupplCharSet__init_(var_1, var_0);
    return var_1;
},
jur_SupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$high0 == $high && $this.$low0 == $low ? 2 : (-1);
},
jur_SupplCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while ($strIndex < $strLength) {
        var$6 = $testStr.$indexOf0($this.$high0, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = $testStr.$charAt($strIndex);
        if ($this.$low0 == $ch && $this.$next5.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
},
jur_SupplCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf0($this.$low0, $lastIndex);
            var$7 = var$6 + (-1) | 0;
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$high0 == $testStr.$charAt(var$7) && $this.$next5.$matches(var$7 + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_SupplCharSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$high0;
    var$2 = $this.$low0;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append0(var$3, var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_SupplCharSet_getCodePoint = $this => {
    return $this.$ch1;
},
jur_SupplCharSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return $set.$getCodePoint() != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains0($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
};
function onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0() {
    jl_Object.call(this);
    this.$_0130 = null;
}
let onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0130 = var$1;
},
onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0__init_0 = var_0 => {
    let var_1 = new onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0();
    onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0__init_(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0_apply0 = (var$0, var$1) => {
    return onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0_apply(var$0, var$1);
},
onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0_apply = (var$0, var$1) => {
    return onnrt_NostrTURN_lambda$onReceivedPacketChunk$3(var$0.$_0130, var$1);
};
function onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_0162 = null;
    a.$_181 = null;
}
let onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0162 = var$1;
    var$0.$_181 = var$2;
},
onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0();
    onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0_call = var$0 => {
    return onnrs_NostrRTCSignaling_lambda$onSubEvent$5(var$0.$_0162, var$0.$_181);
},
otjc_JSNumber = $rt_classWithoutFields(),
otjc_JSNumber_intValue$static = $this => {
    return $this;
},
otjc_JSNumber_byteValue$static = $this => {
    return $this;
},
jt_ZonedDateTime$1 = $rt_classWithoutFields(),
jt_ZonedDateTime$1_$SwitchMap$org$threeten$bp$temporal$ChronoField = null,
jt_ZonedDateTime$1_$callClinit = () => {
    jt_ZonedDateTime$1_$callClinit = $rt_eraseClinit(jt_ZonedDateTime$1);
    jt_ZonedDateTime$1__clinit_();
},
jt_ZonedDateTime$1__clinit_ = () => {
    jt_ZonedDateTime$1_$SwitchMap$org$threeten$bp$temporal$ChronoField = $rt_createIntArray((jtt_ChronoField_values()).data.length);
    jt_ZonedDateTime$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_INSTANT_SECONDS)] = 1;
    jt_ZonedDateTime$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_OFFSET_SECONDS)] = 2;
};
function onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0() {
    jl_Object.call(this);
    this.$_0134 = null;
}
let onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0134 = var$1;
},
onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0();
    onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform_lambda$awaitAllSettled$7(var$0.$_0134, var$1, var$2);
};
function onns_SdanSlotSize() {
    jl_Enum.call(this);
    this.$value17 = null;
}
let onns_SdanSlotSize_SIZE_120x90 = null,
onns_SdanSlotSize_SIZE_180x150 = null,
onns_SdanSlotSize_SIZE_728x90 = null,
onns_SdanSlotSize_SIZE_300x250 = null,
onns_SdanSlotSize_SIZE_720x300 = null,
onns_SdanSlotSize_SIZE_240x400 = null,
onns_SdanSlotSize_SIZE_250x250 = null,
onns_SdanSlotSize_SIZE_300x600 = null,
onns_SdanSlotSize_SIZE_160x600 = null,
onns_SdanSlotSize_SIZE_336x280 = null,
onns_SdanSlotSize_$VALUES = null,
onns_SdanSlotSize_$callClinit = () => {
    onns_SdanSlotSize_$callClinit = $rt_eraseClinit(onns_SdanSlotSize);
    onns_SdanSlotSize__clinit_();
},
onns_SdanSlotSize_values = () => {
    onns_SdanSlotSize_$callClinit();
    return onns_SdanSlotSize_$VALUES.$clone0();
},
onns_SdanSlotSize_valueOf = $name => {
    onns_SdanSlotSize_$callClinit();
    return jl_Enum_valueOf($rt_cls(onns_SdanSlotSize), $name);
},
onns_SdanSlotSize__init_0 = ($this, var$1, var$2, $value) => {
    onns_SdanSlotSize_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value17 = $value;
},
onns_SdanSlotSize__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onns_SdanSlotSize();
    onns_SdanSlotSize__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_SdanSlotSize_getValue = $this => {
    return $this.$value17;
},
onns_SdanSlotSize_$values = () => {
    let var$1, var$2;
    onns_SdanSlotSize_$callClinit();
    var$1 = $rt_createArray(onns_SdanSlotSize, 10);
    var$2 = var$1.data;
    var$2[0] = onns_SdanSlotSize_SIZE_120x90;
    var$2[1] = onns_SdanSlotSize_SIZE_180x150;
    var$2[2] = onns_SdanSlotSize_SIZE_728x90;
    var$2[3] = onns_SdanSlotSize_SIZE_300x250;
    var$2[4] = onns_SdanSlotSize_SIZE_720x300;
    var$2[5] = onns_SdanSlotSize_SIZE_240x400;
    var$2[6] = onns_SdanSlotSize_SIZE_250x250;
    var$2[7] = onns_SdanSlotSize_SIZE_300x600;
    var$2[8] = onns_SdanSlotSize_SIZE_160x600;
    var$2[9] = onns_SdanSlotSize_SIZE_336x280;
    return var$1;
},
onns_SdanSlotSize__clinit_ = () => {
    onns_SdanSlotSize_SIZE_120x90 = onns_SdanSlotSize__init_($rt_s(1232), 0, $rt_s(1233));
    onns_SdanSlotSize_SIZE_180x150 = onns_SdanSlotSize__init_($rt_s(1234), 1, $rt_s(1235));
    onns_SdanSlotSize_SIZE_728x90 = onns_SdanSlotSize__init_($rt_s(1236), 2, $rt_s(1237));
    onns_SdanSlotSize_SIZE_300x250 = onns_SdanSlotSize__init_($rt_s(1238), 3, $rt_s(1239));
    onns_SdanSlotSize_SIZE_720x300 = onns_SdanSlotSize__init_($rt_s(1240), 4, $rt_s(1241));
    onns_SdanSlotSize_SIZE_240x400 = onns_SdanSlotSize__init_($rt_s(1242), 5, $rt_s(1243));
    onns_SdanSlotSize_SIZE_250x250 = onns_SdanSlotSize__init_($rt_s(1244), 6, $rt_s(1245));
    onns_SdanSlotSize_SIZE_300x600 = onns_SdanSlotSize__init_($rt_s(1246), 7, $rt_s(1247));
    onns_SdanSlotSize_SIZE_160x600 = onns_SdanSlotSize__init_($rt_s(1248), 8, $rt_s(1249));
    onns_SdanSlotSize_SIZE_336x280 = onns_SdanSlotSize__init_($rt_s(1250), 9, $rt_s(1251));
    onns_SdanSlotSize_$VALUES = onns_SdanSlotSize_$values();
},
onns_SdanSlotSize__init_$exported$0 = (var$1, var$2, var$3) => {
    onns_SdanSlotSize_$callClinit();
    return onns_SdanSlotSize__init_($rt_str(var$1), var$2, $rt_str(var$3));
},
onns_SdanSlotSize_getValue$exported$1 = var$1 => {
    onns_SdanSlotSize_$callClinit();
    return $rt_ustr(onns_SdanSlotSize_getValue(var$1));
},
onns_SdanSlotSize_values$exported$0 = () => {
    onns_SdanSlotSize_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanSlotSize_values());
},
onns_SdanSlotSize_valueOf$exported$1 = var$1 => {
    onns_SdanSlotSize_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_SdanSlotSize_valueOf($rt_str(var$1));
},
onns_SdanSlotSize_$values$exported$2 = () => {
    onns_SdanSlotSize_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanSlotSize_$values());
},
juc_ConcurrentHashMap$ValueIterator = $rt_classWithoutFields(juc_ConcurrentHashMap$AbstractMapIterator),
juc_ConcurrentHashMap$ValueIterator__init_ = ($this, $map) => {
    juc_ConcurrentHashMap$AbstractMapIterator__init_($this, $map);
},
juc_ConcurrentHashMap$ValueIterator__init_0 = var_0 => {
    let var_1 = new juc_ConcurrentHashMap$ValueIterator();
    juc_ConcurrentHashMap$ValueIterator__init_(var_1, var_0);
    return var_1;
},
juc_ConcurrentHashMap$ValueIterator_next = $this => {
    juc_ConcurrentHashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry0.$value4;
},
jnci_Iso8859Encoder = $rt_classWithoutFields(jnci_BufferedEncoder),
jnci_Iso8859Encoder__init_ = ($this, $cs) => {
    jnci_BufferedEncoder__init_($this, $cs, 1.0, 1.0);
},
jnci_Iso8859Encoder__init_0 = var_0 => {
    let var_1 = new jnci_Iso8859Encoder();
    jnci_Iso8859Encoder__init_(var_1, var_0);
    return var_1;
},
jnci_Iso8859Encoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            if (jl_Character_isHighSurrogate($c)) {
                if (var$9 == $inSize) {
                    if ($controller.$hasMoreInput(2)) {
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $next = var$10[var$9];
                if (!jl_Character_isLowSurrogate($next)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(2);
                break a;
            }
            if (jl_Character_isLowSurrogate($c))
                $result = jnc_CoderResult_malformedForLength(1);
            if ($c >= 256) {
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(1);
                break a;
            }
            var$10 = $outArray.data;
            var$13 = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = var$13;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
};
function onns_NostrKeyPairSigner$close$lambda$_11_0() {
    jl_Object.call(this);
    this.$_0100 = null;
}
let onns_NostrKeyPairSigner$close$lambda$_11_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0100 = var$1;
},
onns_NostrKeyPairSigner$close$lambda$_11_0__init_0 = var_0 => {
    let var_1 = new onns_NostrKeyPairSigner$close$lambda$_11_0();
    onns_NostrKeyPairSigner$close$lambda$_11_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrKeyPairSigner$close$lambda$_11_0_accept0 = (var$0, var$1, var$2) => {
    onns_NostrKeyPairSigner$close$lambda$_11_0_accept(var$0, var$1, var$2);
},
onns_NostrKeyPairSigner$close$lambda$_11_0_accept = (var$0, var$1, var$2) => {
    onns_NostrKeyPairSigner_lambda$close$5(var$0.$_0100, var$1, var$2);
},
jnc_StandardCharsets = $rt_classWithoutFields(),
jnc_StandardCharsets_UTF_8 = null,
jnc_StandardCharsets_US_ASCII = null,
jnc_StandardCharsets_ISO_8859_1 = null,
jnc_StandardCharsets_UTF_16 = null,
jnc_StandardCharsets_UTF_16BE = null,
jnc_StandardCharsets_UTF_16LE = null,
jnc_StandardCharsets_$callClinit = () => {
    jnc_StandardCharsets_$callClinit = $rt_eraseClinit(jnc_StandardCharsets);
    jnc_StandardCharsets__clinit_();
},
jnc_StandardCharsets__clinit_ = () => {
    jnci_UTF8Charset_$callClinit();
    jnc_StandardCharsets_UTF_8 = jnci_UTF8Charset_INSTANCE;
    jnc_StandardCharsets_US_ASCII = jnci_AsciiCharset__init_0();
    jnc_StandardCharsets_ISO_8859_1 = jnci_Iso8859Charset__init_0();
    jnc_StandardCharsets_UTF_16 = jnci_UTF16Charset__init_($rt_s(1252), 1, 0);
    jnc_StandardCharsets_UTF_16BE = jnci_UTF16Charset__init_($rt_s(1253), 0, 0);
    jnc_StandardCharsets_UTF_16LE = jnci_UTF16Charset__init_($rt_s(1254), 0, 1);
};
function otcit_DateTimeZoneBuilder$DSTZone() {
    let a = this; otcit_StorableDateTimeZone.call(a);
    a.$iStandardOffset0 = 0;
    a.$iStartRecurrence = null;
    a.$iEndRecurrence = null;
    a.$calendar = null;
}
let otcit_DateTimeZoneBuilder$DSTZone__init_ = ($this, $id, $standardOffset, $startRecurrence, $endRecurrence) => {
    otcit_StorableDateTimeZone__init_($this, $id);
    $this.$calendar = ju_GregorianCalendar__init_0(otcit_DateTimeZoneBuilder_getGMT());
    $this.$iStandardOffset0 = $standardOffset;
    $this.$iStartRecurrence = $startRecurrence;
    $this.$iEndRecurrence = $endRecurrence;
},
otcit_DateTimeZoneBuilder$DSTZone__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new otcit_DateTimeZoneBuilder$DSTZone();
    otcit_DateTimeZoneBuilder$DSTZone__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
otcit_DateTimeZoneBuilder$DSTZone_getOffset = ($this, $instant) => {
    return $this.$iStandardOffset0 + otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis(otcit_DateTimeZoneBuilder$DSTZone_findMatchingRecurrence($this, $instant)) | 0;
},
otcit_DateTimeZoneBuilder$DSTZone_getStandardOffset = ($this, $instant) => {
    return $this.$iStandardOffset0;
},
otcit_DateTimeZoneBuilder$DSTZone_nextTransition = ($this, $end) => {
    let $standardOffset, $startRecurrence, $endRecurrence, $start, $end_0, $$je;
    $standardOffset = $this.$iStandardOffset0;
    $startRecurrence = $this.$iStartRecurrence;
    $endRecurrence = $this.$iEndRecurrence;
    a: {
        b: {
            try {
                c: {
                    try {
                        $start = otcit_DateTimeZoneBuilder$Recurrence_next($startRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($endRecurrence), $this.$calendar);
                        if (Long_le($end, Long_ZERO))
                            break c;
                        if (Long_ge($start, Long_ZERO))
                            break c;
                        $start = $end;
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IllegalArgumentException) {
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ArithmeticException) {
                } else {
                    throw $$e;
                }
            }
        }
        $start = $end;
    }
    d: {
        e: {
            try {
                f: {
                    try {
                        $end_0 = otcit_DateTimeZoneBuilder$Recurrence_next($endRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($startRecurrence), $this.$calendar);
                        if (Long_le($end, Long_ZERO))
                            break f;
                        if (Long_ge($end_0, Long_ZERO))
                            break f;
                        $end_0 = $end;
                        break f;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IllegalArgumentException) {
                            break e;
                        } else {
                            throw $$e;
                        }
                    }
                }
                break d;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ArithmeticException) {
                } else {
                    throw $$e;
                }
            }
        }
        $end_0 = $end;
    }
    if (Long_gt($start, $end_0))
        $start = $end_0;
    return $start;
},
otcit_DateTimeZoneBuilder$DSTZone_findMatchingRecurrence = ($this, $end) => {
    let $standardOffset, $startRecurrence, $endRecurrence, $start, $end_0, $$je;
    $standardOffset = $this.$iStandardOffset0;
    $startRecurrence = $this.$iStartRecurrence;
    $endRecurrence = $this.$iEndRecurrence;
    a: {
        b: {
            try {
                $start = otcit_DateTimeZoneBuilder$Recurrence_next($startRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($endRecurrence), $this.$calendar);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_IllegalArgumentException) {
                    break b;
                } else if ($$je instanceof jl_ArithmeticException) {
                    break b;
                } else {
                    throw $$e;
                }
            }
            break a;
        }
        $start = $end;
    }
    c: {
        d: {
            try {
                $end_0 = otcit_DateTimeZoneBuilder$Recurrence_next($endRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($startRecurrence), $this.$calendar);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_IllegalArgumentException) {
                    break d;
                } else if ($$je instanceof jl_ArithmeticException) {
                    break d;
                } else {
                    throw $$e;
                }
            }
            break c;
        }
        $end_0 = $end;
    }
    if (Long_gt($start, $end_0))
        $endRecurrence = $startRecurrence;
    return $endRecurrence;
},
otcit_DateTimeZoneBuilder$DSTZone_readZone = ($id, $flow) => {
    let $standardOffset, $startRecurrence, $endRecurrence;
    $standardOffset = Long_lo((otcit_StorableDateTimeZone_readTime($flow)));
    $startRecurrence = otcit_DateTimeZoneBuilder$Recurrence_read($flow);
    $endRecurrence = otcit_DateTimeZoneBuilder$Recurrence_read($flow);
    return otcit_DateTimeZoneBuilder$DSTZone__init_0($id, $standardOffset, $startRecurrence, $endRecurrence);
},
otcit_DateTimeZoneBuilder$DSTZone_asZoneRules = $this => {
    return null;
},
otcir_ClassList = $rt_classWithoutFields();
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$027 = null;
}
let jur_AbstractCharClass$LazyJavaMirrored$1__init_ = ($this, $this$0) => {
    $this.$this$027 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaMirrored$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaMirrored$1();
    jur_AbstractCharClass$LazyJavaMirrored$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaMirrored$1_contains = ($this, $ch) => {
    return 0;
};
function onnpi_NostrClosedMessage() {
    let a = this; onnp_NostrMessage.call(a);
    a.$subId1 = null;
    a.$reason = null;
}
let onnpi_NostrClosedMessage__init_ = ($this, $subId, $reason) => {
    onnp_NostrMessage__init_($this);
    $this.$subId1 = $subId;
    $this.$reason = $reason;
},
onnpi_NostrClosedMessage__init_0 = (var_0, var_1) => {
    let var_2 = new onnpi_NostrClosedMessage();
    onnpi_NostrClosedMessage__init_(var_2, var_0, var_1);
    return var_2;
},
onnpi_NostrClosedMessage_getSubId = $this => {
    return $this.$subId1;
},
onnpi_NostrClosedMessage_getReason = $this => {
    return $this.$reason;
},
onnpi_NostrClosedMessage_getPrefix = $this => {
    return $rt_s(1255);
},
onnpi_NostrClosedMessage_getFragments = $this => {
    return ju_List_of2($this.$subId1, $this.$reason);
},
onnpi_NostrClosedMessage_parse = $doc => {
    let $prefix, $subId, $reason;
    $prefix = onp_NGEUtils_safeString($doc.$get(0));
    if ($doc.$size() >= 2 && $prefix.$equals($rt_s(1255))) {
        $subId = onp_NGEUtils_safeString($doc.$get(1));
        $reason = $doc.$size() <= 2 ? $rt_s(23) : onp_NGEUtils_safeString($doc.$get(2));
        return onnpi_NostrClosedMessage__init_0($subId, $reason);
    }
    return null;
},
onnpi_NostrClosedMessage__init_$exported$0 = (var$1, var$2) => {
    return onnpi_NostrClosedMessage__init_0($rt_str(var$1), $rt_str(var$2));
},
onnpi_NostrClosedMessage_getSubId$exported$1 = var$1 => {
    return $rt_ustr(var$1.$getSubId());
},
onnpi_NostrClosedMessage_getReason$exported$2 = var$1 => {
    return $rt_ustr(var$1.$getReason());
},
onnpi_NostrClosedMessage_parse$exported$0 = var$1 => {
    onn_Nostr4jsModule_$callClinit();
    return onnpi_NostrClosedMessage_parse(var$1);
};
function ju_AbstractMap$KeySet() {
    ju_AbstractSet.call(this);
    this.$this$012 = null;
}
let ju_AbstractMap$KeySet__init_0 = ($this, var$1) => {
    $this.$this$012 = var$1;
    ju_AbstractSet__init_($this);
},
ju_AbstractMap$KeySet__init_ = var_0 => {
    let var_1 = new ju_AbstractMap$KeySet();
    ju_AbstractMap$KeySet__init_0(var_1, var_0);
    return var_1;
},
ju_AbstractMap$KeySet_iterator = $this => {
    let $it;
    $it = ($this.$this$012.$entrySet()).$iterator();
    return ju_AbstractMap$KeySet$1__init_0($this, $it);
},
ju_AbstractMap$KeySet_size = $this => {
    return $this.$this$012.$size();
};
function jtf_DateTimeParseContext$Parsed() {
    let a = this; jl_Object.call(a);
    a.$chrono1 = null;
    a.$zone1 = null;
    a.$fieldValues0 = null;
    a.$leapSecond = 0;
    a.$excessDays0 = null;
    a.$this$05 = null;
}
let jtf_DateTimeParseContext$Parsed__init_0 = ($this, $this$0) => {
    $this.$this$05 = $this$0;
    jl_Object__init_($this);
    $this.$fieldValues0 = ju_HashMap__init_();
    jt_Period_$callClinit();
    $this.$excessDays0 = jt_Period_ZERO;
},
jtf_DateTimeParseContext$Parsed__init_ = var_0 => {
    let var_1 = new jtf_DateTimeParseContext$Parsed();
    jtf_DateTimeParseContext$Parsed__init_0(var_1, var_0);
    return var_1;
},
jtf_DateTimeParseContext$Parsed_copy = $this => {
    let $cloned;
    $cloned = jtf_DateTimeParseContext$Parsed__init_($this.$this$05);
    $cloned.$chrono1 = $this.$chrono1;
    $cloned.$zone1 = $this.$zone1;
    $cloned.$fieldValues0.$putAll($this.$fieldValues0);
    $cloned.$leapSecond = $this.$leapSecond;
    return $cloned;
},
jtf_DateTimeParseContext$Parsed_toString = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$fieldValues0.$toString();
    var$2 = jl_String_valueOf($this.$chrono1);
    var$3 = jl_String_valueOf($this.$zone1);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, var$1), 44), var$2), 44), var$3);
    return jl_StringBuilder_toString(var$4);
},
jtf_DateTimeParseContext$Parsed_toBuilder = $this => {
    let $builder;
    $builder = jtf_DateTimeBuilder__init_0();
    $builder.$fieldValues.$putAll($this.$fieldValues0);
    $builder.$chrono = jtf_DateTimeParseContext_getEffectiveChronology($this.$this$05);
    if ($this.$zone1 !== null)
        $builder.$zone0 = $this.$zone1;
    else
        $builder.$zone0 = $this.$this$05.$overrideZone;
    $builder.$leapSecond0 = $this.$leapSecond;
    $builder.$excessDays = $this.$excessDays0;
    return $builder;
};
function onnrs_NostrRTCSignaling$close$lambda$_13_0() {
    jl_Object.call(this);
    this.$_0132 = null;
}
let onnrs_NostrRTCSignaling$close$lambda$_13_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0132 = var$1;
},
onnrs_NostrRTCSignaling$close$lambda$_13_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$close$lambda$_13_0();
    onnrs_NostrRTCSignaling$close$lambda$_13_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$close$lambda$_13_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$close$lambda$_13_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$close$lambda$_13_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$close$16(var$0.$_0132, var$1);
};
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
let jur_UEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter3 = $counter;
},
jur_UEOLSet__init_0 = var_0 => {
    let var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_UEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter3, 0);
        return $this.$next5.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && $testString.$charAt($strIndex) == 10) {
        $matchResult.$setConsumed($this.$consCounter3, 1);
        return $this.$next5.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_UEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter3) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter3, (-1));
    return $res;
},
jur_UEOLSet_getName = $this => {
    return $rt_s(1006);
};
function onnr_NostrRTCRoom$PendingConnection() {
    let a = this; jl_Object.call(a);
    a.$createdAt3 = null;
    a.$socket = null;
}
let onnr_NostrRTCRoom$PendingConnection__init_0 = $this => {
    jl_Object__init_($this);
},
onnr_NostrRTCRoom$PendingConnection__init_ = () => {
    let var_0 = new onnr_NostrRTCRoom$PendingConnection();
    onnr_NostrRTCRoom$PendingConnection__init_0(var_0);
    return var_0;
},
onnr_NostrRTCRoom$PendingConnection__init_$exported$0 = () => {
    return onnr_NostrRTCRoom$PendingConnection__init_();
};
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch4 = 0;
}
let jur_UCICharSet__init_ = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch4 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
},
jur_UCICharSet__init_0 = var_0 => {
    let var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_(var_1, var_0);
    return var_1;
},
jur_UCICharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch4 != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex))) ? (-1) : 1;
},
jur_UCICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch4;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(857)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jnci_Iso8859Charset = $rt_classWithoutFields(jnc_Charset),
jnci_Iso8859Charset__init_ = $this => {
    jnc_Charset__init_($this, $rt_s(1256), $rt_createArray(jl_String, 0));
},
jnci_Iso8859Charset__init_0 = () => {
    let var_0 = new jnci_Iso8859Charset();
    jnci_Iso8859Charset__init_(var_0);
    return var_0;
},
jnci_Iso8859Charset_newDecoder = $this => {
    return jnci_Iso8859Decoder__init_0($this);
},
jnci_Iso8859Charset_newEncoder = $this => {
    return jnci_Iso8859Encoder__init_0($this);
};
function onnrs_NostrRTCPeer() {
    let a = this; jl_Object.call(a);
    a.$pubkey = null;
    a.$misc = null;
    a.$turnServer1 = null;
    a.$lastSeen = null;
    a.$publicMisc = null;
}
let onnrs_NostrRTCPeer__init_0 = ($this, $pubkey, $turnServer, $misc) => {
    jl_Object__init_($this);
    ju_Objects_requireNonNull0($turnServer);
    ju_Objects_requireNonNull0($pubkey);
    ju_Objects_requireNonNull0($misc);
    if ($turnServer.$isEmpty())
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1055)));
    $this.$pubkey = $pubkey;
    $this.$turnServer1 = $turnServer;
    $this.$misc = ju_HashMap__init_5($misc);
},
onnrs_NostrRTCPeer__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onnrs_NostrRTCPeer();
    onnrs_NostrRTCPeer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onnrs_NostrRTCPeer_getPubkey = $this => {
    return $this.$pubkey;
},
onnrs_NostrRTCPeer_getMisc = $this => {
    return $this.$misc;
},
onnrs_NostrRTCPeer_getPublicMisc = $this => {
    let var$1, $entry;
    a: {
        if ($this.$publicMisc === null) {
            $this.$publicMisc = ju_HashMap__init_();
            var$1 = ($this.$misc.$entrySet()).$iterator();
            while (true) {
                if (!var$1.$hasNext())
                    break a;
                $entry = var$1.$next();
                if (($entry.$getKey()).$startsWith($rt_s(1257)))
                    $this.$publicMisc.$put1($entry.$getKey(), $entry.$getValue());
            }
        }
    }
    return $this.$publicMisc;
},
onnrs_NostrRTCPeer_getTurnServer = $this => {
    return $this.$turnServer1;
},
onnrs_NostrRTCPeer_getLastSeen = $this => {
    if ($this.$lastSeen !== null)
        return $this.$lastSeen;
    return jt_Instant_now();
},
onnrs_NostrRTCPeer_setLastSeen = ($this, $lastSeen) => {
    $this.$lastSeen = $lastSeen;
},
onnrs_NostrRTCPeer_equals = ($this, $obj) => {
    let $that;
    if ($this === $obj)
        return 1;
    if ($obj !== null && jl_Object_getClass($this) === jl_Object_getClass($obj)) {
        $that = $obj;
        return onnk_NostrPublicKey_equals($this.$pubkey, $that.$pubkey);
    }
    return 0;
},
onnrs_NostrRTCPeer_hashCode = $this => {
    return onnk_NostrPublicKey_hashCode($this.$pubkey);
},
onnrs_NostrRTCPeer_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = jl_String_valueOf($this.$pubkey);
    var$2 = jl_String_valueOf($this.$misc);
    var$3 = $this.$turnServer1;
    var$4 = jl_String_valueOf($this.$lastSeen);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1258)), var$1), $rt_s(1259)), var$2), $rt_s(1260)), var$3), $rt_s(1261)), var$4), 125);
    return jl_StringBuilder_toString(var$5);
},
onnrs_NostrRTCPeer__init_$exported$0 = (var$1, var$2, var$3) => {
    return onnrs_NostrRTCPeer__init_(var$1, $rt_str(var$2), var$3);
},
onnrs_NostrRTCPeer_getMisc$exported$1 = var$1 => {
    return var$1.$getMisc();
},
onnrs_NostrRTCPeer_getPubkey$exported$2 = var$1 => {
    return var$1.$getPubkey();
},
onnrs_NostrRTCPeer_getTurnServer$exported$3 = var$1 => {
    return $rt_ustr(var$1.$getTurnServer());
},
onnrs_NostrRTCPeer_setLastSeen$exported$4 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$setLastSeen(var$2);
},
onnrs_NostrRTCPeer_equals$exported$5 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!var$1.$equals(var$2);
},
onnrs_NostrRTCPeer_toString$exported$6 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnrs_NostrRTCPeer_hashCode$exported$7 = var$1 => {
    return var$1.$hashCode();
},
onnrs_NostrRTCPeer_getPublicMisc$exported$8 = var$1 => {
    return var$1.$getPublicMisc();
},
onnrs_NostrRTCPeer_getLastSeen$exported$9 = var$1 => {
    return var$1.$getLastSeen();
};
function jur_CompositeGroupQuantifierSet() {
    let a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier = null;
    a.$setCounter = 0;
}
let jur_CompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
    $this.$setCounter = $setCounter;
},
jur_CompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_CompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, var$5, var$6, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max0())
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    var$6 = $enterCounter + 1 | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $nextIndex;
    }
    var$5 = $this.$setCounter;
    var$6 = var$6 + (-1) | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    if (var$6 >= $this.$quantifier.$min0())
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    $matchResult.$setEnterCounter($this.$setCounter, 0);
    return (-1);
},
jur_CompositeGroupQuantifierSet_getName = $this => {
    return $this.$quantifier.$toString();
},
jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_RelCompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_CompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter);
},
jur_RelCompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_RelCompositeGroupQuantifierSet();
    jur_RelCompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_RelCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max0()) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < $this.$quantifier.$min0()) {
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next5.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $matchResult.$setEnterCounter($this.$setCounter, 0);
            return $nextIndex;
        }
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
};
function ju_ArrayList() {
    let a = this; ju_AbstractList.call(a);
    a.$array1 = null;
    a.$size0 = 0;
}
let ju_ArrayList__init_3 = $this => {
    ju_ArrayList__init_2($this, 10);
},
ju_ArrayList__init_ = () => {
    let var_0 = new ju_ArrayList();
    ju_ArrayList__init_3(var_0);
    return var_0;
},
ju_ArrayList__init_2 = ($this, $initialCapacity) => {
    ju_AbstractList__init_($this);
    if ($initialCapacity >= 0) {
        $this.$array1 = $rt_createArray(jl_Object, $initialCapacity);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
ju_ArrayList__init_1 = var_0 => {
    let var_1 = new ju_ArrayList();
    ju_ArrayList__init_2(var_1, var_0);
    return var_1;
},
ju_ArrayList__init_4 = ($this, $c) => {
    let $iter, $i;
    ju_ArrayList__init_2($this, $c.$size());
    $iter = $c.$iterator();
    $i = 0;
    while ($i < $this.$array1.data.length) {
        $this.$array1.data[$i] = $iter.$next();
        $i = $i + 1 | 0;
    }
    $this.$size0 = $this.$array1.data.length;
},
ju_ArrayList__init_0 = var_0 => {
    let var_1 = new ju_ArrayList();
    ju_ArrayList__init_4(var_1, var_0);
    return var_1;
},
ju_ArrayList_ensureCapacity = ($this, $minCapacity) => {
    let $newLength;
    if ($this.$array1.data.length < $minCapacity) {
        $newLength = $this.$array1.data.length >= 1073741823 ? 2147483647 : jl_Math_max($minCapacity, jl_Math_max($this.$array1.data.length * 2 | 0, 5));
        $this.$array1 = ju_Arrays_copyOf0($this.$array1, $newLength);
    }
},
ju_ArrayList_get = ($this, $index) => {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array1.data[$index];
},
ju_ArrayList_size = $this => {
    return $this.$size0;
},
ju_ArrayList_set = ($this, $index, $element) => {
    let $old;
    ju_ArrayList_checkIndex($this, $index);
    $old = $this.$array1.data[$index];
    $this.$array1.data[$index] = $element;
    return $old;
},
ju_ArrayList_add = ($this, $element) => {
    let var$2, var$3;
    $this.$ensureCapacity($this.$size0 + 1 | 0);
    var$2 = $this.$array1.data;
    var$3 = $this.$size0;
    $this.$size0 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount = $this.$modCount + 1 | 0;
    return 1;
},
ju_ArrayList_add0 = ($this, $index, $element) => {
    let $i;
    ju_ArrayList_checkIndexForAdd($this, $index);
    $this.$ensureCapacity($this.$size0 + 1 | 0);
    $i = $this.$size0;
    while ($i > $index) {
        $this.$array1.data[$i] = $this.$array1.data[$i - 1 | 0];
        $i = $i + (-1) | 0;
    }
    $this.$array1.data[$index] = $element;
    $this.$size0 = $this.$size0 + 1 | 0;
    $this.$modCount = $this.$modCount + 1 | 0;
},
ju_ArrayList_remove = ($this, $i) => {
    let $old, var$3, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    $old = $this.$array1.data[$i];
    $this.$size0 = $this.$size0 - 1 | 0;
    while ($i < $this.$size0) {
        var$3 = $this.$array1.data;
        var$4 = $this.$array1.data;
        $i_0 = $i + 1 | 0;
        var$3[$i] = var$4[$i_0];
        $i = $i_0;
    }
    $this.$array1.data[$this.$size0] = null;
    $this.$modCount = $this.$modCount + 1 | 0;
    return $old;
},
ju_ArrayList_remove0 = ($this, $o) => {
    let $index;
    $index = $this.$indexOf2($o);
    if ($index < 0)
        return 0;
    $this.$remove0($index);
    return 1;
},
ju_ArrayList_clear = $this => {
    ju_Arrays_fill0($this.$array1, 0, $this.$size0, null);
    $this.$size0 = 0;
    $this.$modCount = $this.$modCount + 1 | 0;
},
ju_ArrayList_checkIndex = ($this, $index) => {
    if ($index >= 0 && $index < $this.$size0)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_ArrayList_checkIndexForAdd = ($this, $index) => {
    if ($index >= 0 && $index <= $this.$size0)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_ArrayList_forEach = ($this, $action) => {
    let $i;
    $i = 0;
    while ($i < $this.$size0) {
        $action.$accept0($this.$array1.data[$i]);
        $i = $i + 1 | 0;
    }
},
ju_ArrayList_toString = $this => {
    let $length, $buffer, $i;
    if (!$this.$size0)
        return $rt_s(1262);
    $length = $this.$size0 - 1 | 0;
    $buffer = jl_StringBuilder__init_0($this.$size0 * 16 | 0);
    $buffer.$append0(91);
    $i = 0;
    while ($i < $length) {
        ($buffer.$append($this.$array1.data[$i] === $this ? $rt_s(11) : $this.$array1.data[$i])).$append1($rt_s(12));
        $i = $i + 1 | 0;
    }
    $buffer.$append($this.$array1.data[$length] === $this ? $rt_s(11) : $this.$array1.data[$length]);
    return ($buffer.$append0(93)).$toString();
},
ju_ArrayList_hashCode = $this => {
    let $result, $i;
    $result = 1;
    $i = 0;
    while ($i < $this.$size0) {
        $result = (31 * $result | 0) + ju_Objects_hashCode($this.$array1.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return $result;
},
jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalMonitorStateException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IllegalMonitorStateException__init_ = () => {
    let var_0 = new jl_IllegalMonitorStateException();
    jl_IllegalMonitorStateException__init_0(var_0);
    return var_0;
},
ju_LinkedHashMapIterator$EntryIterator = $rt_classWithoutFields(ju_LinkedHashMapIterator),
ju_LinkedHashMapIterator$EntryIterator__init_ = ($this, $map, $reversed) => {
    ju_LinkedHashMapIterator__init_($this, $map, $reversed);
},
ju_LinkedHashMapIterator$EntryIterator__init_0 = (var_0, var_1) => {
    let var_2 = new ju_LinkedHashMapIterator$EntryIterator();
    ju_LinkedHashMapIterator$EntryIterator__init_(var_2, var_0, var_1);
    return var_2;
},
ju_LinkedHashMapIterator$EntryIterator_next = $this => {
    ju_LinkedHashMapIterator_makeNext($this);
    return $this.$currentEntry2;
},
ju_LinkedHashMapIterator$EntryIterator_next0 = $this => {
    return $this.$next3();
};
function jusi_FilteringStreamImpl$wrap$lambda$_1_0() {
    let a = this; jl_Object.call(a);
    a.$_081 = null;
    a.$_147 = null;
}
let jusi_FilteringStreamImpl$wrap$lambda$_1_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_081 = var$1;
    var$0.$_147 = var$2;
},
jusi_FilteringStreamImpl$wrap$lambda$_1_0__init_0 = (var_0, var_1) => {
    let var_2 = new jusi_FilteringStreamImpl$wrap$lambda$_1_0();
    jusi_FilteringStreamImpl$wrap$lambda$_1_0__init_(var_2, var_0, var_1);
    return var_2;
},
jusi_FilteringStreamImpl$wrap$lambda$_1_0_test = (var$0, var$1) => {
    return jusi_FilteringStreamImpl_lambda$wrap$0(var$0.$_081, var$0.$_147, var$1);
},
jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_RelAltGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltGroupQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_RelAltGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_RelAltGroupQuantifierSet();
    jur_RelAltGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_RelAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next5.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next5.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
},
otcir_Flags = $rt_classWithoutFields(),
otcir_Flags_getModifiers = ($flags, $access) => {
    let $modifiers, var$4, var$5;
    a: {
        $modifiers = 0;
        switch ($access) {
            case 1:
                $modifiers = 2;
                break a;
            case 2:
                $modifiers = 4;
                break a;
            case 3:
                $modifiers = 1;
                break a;
            default:
        }
    }
    var$4 = $flags >>> 6 | 0;
    var$5 = $modifiers | var$4 & 8;
    var$5 = var$5 | $flags << 2 & 16;
    var$4 = var$5 | var$4 & 32;
    var$4 = var$4 | ($flags >>> 8 | 0) & 64;
    var$4 = var$4 | ($flags >>> 5 | 0) & 128;
    var$4 = var$4 | $flags & 256;
    var$4 = var$4 | $flags << 8 & 512;
    var$4 = var$4 | $flags << 10 & 1024;
    var$4 = var$4 | $flags << 1 & 2048;
    return var$4;
},
onnu_Bech32 = $rt_classWithoutFields(),
onnu_Bech32_ZEROES = null,
onnu_Bech32_GENERATORS = null,
onnu_Bech32_$callClinit = () => {
    onnu_Bech32_$callClinit = $rt_eraseClinit(onnu_Bech32);
    onnu_Bech32__clinit_();
},
onnu_Bech32__init_ = $this => {
    onnu_Bech32_$callClinit();
    jl_Object__init_($this);
},
onnu_Bech32__init_0 = () => {
    let var_0 = new onnu_Bech32();
    onnu_Bech32__init_(var_0);
    return var_0;
},
onnu_Bech32_bech32Encode = ($hrp, $data) => {
    let $chk;
    onnu_Bech32_$callClinit();
    $chk = $rt_createByteArray(6);
    return onnu_Bech32_bech32Encode0($hrp, $data, $chk);
},
onnu_Bech32_bech32Encode0 = ($hrp, $data, $chkOut) => {
    let var$4, var$5, var$6, $xlatLength, $i, var$9, $ret, $j, $b, var$13, var$14, var$15;
    onnu_Bech32_$callClinit();
    if ($chkOut !== null) {
        var$4 = $chkOut.data;
        if (var$4.length >= 6) {
            var$5 = onnu_Bech32_convertBits($data, 0, 8, 5, 1);
            if (jn_Buffer_position(var$5))
                $rt_throw(onnu_Bech32$Bech32EncodingException__init_0($rt_s(1263)));
            var$6 = $hrp.data;
            $xlatLength = 6 + jn_Buffer_limit(var$5) | 0;
            $i = 0;
            var$9 = var$6.length;
            $ret = $rt_createByteArray((var$9 + $xlatLength | 0) + 1 | 0);
            $j = 0;
            while ($j < var$9) {
                $b = var$6[$j];
                if ($b >= 65 && $b <= 90)
                    $b = ($b + 32 | 0) << 24 >> 24;
                var$13 = $ret.data;
                var$14 = $i + 1 | 0;
                var$13[$i] = $b;
                $j = $j + 1 | 0;
                $i = var$14;
            }
            var$13 = $ret.data;
            onnu_Bech32_createChecksum($ret, var$9, var$5, $chkOut);
            var$14 = $i + 1 | 0;
            var$13[$i] = 49;
            $j = 0;
            while ($j < jn_Buffer_limit(var$5)) {
                var$15 = var$14 + 1 | 0;
                var$13[var$14] = $rt_s(1264).$charAt(var$5.$get6($j)) << 24 >> 24;
                $j = $j + 1 | 0;
                var$14 = var$15;
            }
            $j = 0;
            while ($j < 6) {
                var$15 = var$14 + 1 | 0;
                var$13[var$14] = $rt_s(1264).$charAt(var$4[$j]) << 24 >> 24;
                $j = $j + 1 | 0;
                var$14 = var$15;
            }
            var$5 = new jl_String;
            jnc_StandardCharsets_$callClinit();
            jl_String__init_0(var$5, $ret, jnc_StandardCharsets_UTF_8);
            return var$5;
        }
    }
    $rt_throw(onnu_Bech32$Bech32EncodingException__init_0($rt_s(1265)));
},
onnu_Bech32_bech32Decode = $bech => {
    let $bytes, var$3, $hrpLength, var$5, $i, var$7, $i_0, $out, var$10, $v, var$12;
    onnu_Bech32_$callClinit();
    $bytes = onnu_Bech32_getLowerCaseBytes($bech);
    var$3 = $bytes.data;
    $hrpLength = 0;
    var$5 = var$3.length;
    $i = var$5 - 1 | 0;
    a: {
        while (true) {
            if ($i < 0) {
                $i = $hrpLength;
                break a;
            }
            if (var$3[$i] == 49)
                break;
            $i = $i + (-1) | 0;
        }
    }
    if ($i && $i != var$5) {
        var$7 = $i + 1 | 0;
        $i_0 = var$7;
        while (true) {
            if ($i_0 >= var$5) {
                if (!onnu_Bech32_verifyChecksum($bytes, $i, var$7))
                    $rt_throw(onnu_Bech32$Bech32InvalidChecksumException__init_0($rt_s(1266)));
                $out = jn_ByteBuffer_wrap($bytes, var$7, (var$5 - var$7 | 0) - 6 | 0);
                var$10 = onnu_Bech32_convertBits($out, var$7, 5, 8, 0);
                return var$10.$slice();
            }
            $v = $rt_s(1264).$indexOf(var$3[$i_0]);
            if ($v == (-1))
                break;
            var$3[$i_0] = $v << 24 >> 24;
            $i_0 = $i_0 + 1 | 0;
        }
        var$10 = new onnu_Bech32$Bech32DecodingException;
        var$7 = var$3[$i_0];
        var$12 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(var$12, $rt_s(1267)), var$7 << 24 >> 24);
        onnu_Bech32$Bech32DecodingException__init_(var$10, jl_StringBuilder_toString(var$12));
        $rt_throw(var$10);
    }
    $rt_throw(onnu_Bech32$Bech32DecodingException__init_0($rt_s(1268)));
},
onnu_Bech32_polymod0 = ($hrp, $hrpLength, $data, $zeroes, $i) => {
    let $chk, $i_0, $b, var$9, var$10;
    onnu_Bech32_$callClinit();
    $chk = 1;
    $i_0 = 0;
    while ($i_0 < $hrpLength) {
        $b = $hrp.data[$i_0];
        var$9 = $b >> 5 << 24 >> 24;
        $chk = onnu_Bech32_polymod(var$9, $chk);
        $i_0 = $i_0 + 1 | 0;
    }
    var$9 = onnu_Bech32_polymod(0, $chk);
    $i_0 = 0;
    while ($i_0 < $hrpLength) {
        $b = ($hrp.data[$i_0] & 31) << 24 >> 24;
        var$9 = onnu_Bech32_polymod($b, var$9);
        $i_0 = $i_0 + 1 | 0;
    }
    if ($data !== null) {
        $i_0 = 0;
        while ($i_0 < jn_Buffer_limit($data)) {
            $b = $data.$get6($i_0);
            var$9 = onnu_Bech32_polymod($b, var$9);
            $i_0 = $i_0 + 1 | 0;
        }
    }
    if ($zeroes !== null)
        while (true) {
            var$10 = $zeroes.data;
            if ($i >= var$10.length)
                break;
            $b = var$10[$i];
            var$9 = onnu_Bech32_polymod($b, var$9);
            $i = $i + 1 | 0;
        }
    return var$9;
},
onnu_Bech32_verifyChecksum = ($combinedData, $hrpLength, $dataOffset) => {
    let $p;
    onnu_Bech32_$callClinit();
    $p = onnu_Bech32_polymod0($combinedData, $hrpLength, null, $combinedData, $dataOffset);
    return 1 != $p ? 0 : 1;
},
onnu_Bech32_createChecksum = ($hrp, $hrpLength, $data, $ret) => {
    let $polymod, $i;
    onnu_Bech32_$callClinit();
    $polymod = onnu_Bech32_polymod0($hrp, $hrpLength, $data, onnu_Bech32_ZEROES, 0) ^ 1;
    $i = 0;
    while ($i < 6) {
        $ret.data[$i] = ($polymod >> (5 * (5 - $i | 0) | 0) & 31) << 24 >> 24;
        $i = $i + 1 | 0;
    }
},
onnu_Bech32_polymod = ($b, $chk) => {
    let $top, var$4, $i;
    onnu_Bech32_$callClinit();
    $top = $chk >> 25 << 24 >> 24;
    var$4 = $b ^ ($chk & 33554431) << 5;
    $i = 0;
    while ($i < 5) {
        var$4 = var$4 ^ (($top >> $i & 1) != 1 ? 0 : onnu_Bech32_GENERATORS.data[$i]);
        $i = $i + 1 | 0;
    }
    return var$4;
},
onnu_Bech32_getLowerCaseBytes = $bech => {
    let $length, $result, $i, $c;
    onnu_Bech32_$callClinit();
    $length = $bech.$length();
    $result = $rt_createByteArray($length);
    $i = 0;
    a: {
        while ($i < $length) {
            $c = $bech.$charAt($i);
            if ($c >= 65 && $c <= 90)
                $c = ($c + 32 | 0) & 65535;
            if ($c < 33)
                break a;
            if ($c > 126)
                break a;
            $result.data[$i] = $c << 24 >> 24;
            $i = $i + 1 | 0;
        }
        return $result;
    }
    $rt_throw(onnu_Bech32$Bech32InvalidRangeException__init_0($rt_s(1269)));
},
onnu_Bech32_convertBits = ($in, $i, $fromBits, $toBits, $pad) => {
    let $outCapacity, $output, $acc, $bits, $maxv, $word, $value;
    onnu_Bech32_$callClinit();
    $outCapacity = (($rt_imul(jn_Buffer_limit($in), $fromBits) + $toBits | 0) - 1 | 0) / $toBits | 0;
    $output = jn_ByteBuffer_allocate($outCapacity);
    $acc = 0;
    $bits = 0;
    $maxv = (1 << $toBits) - 1 | 0;
    while (true) {
        if ($i >= jn_Buffer_limit($in)) {
            a: {
                if (!$pad) {
                    if ($bits >= $fromBits)
                        break a;
                    if ($acc << ($toBits - $bits | 0) & $maxv)
                        break a;
                } else if ($bits > 0) {
                    $word = $acc << ($toBits - $bits | 0) & $maxv;
                    $output.$put4($word << 24 >> 24);
                }
                jn_ByteBuffer_flip($output);
                return $output;
            }
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(1270)));
        }
        $value = $in.$get6($i) & 255;
        if ($value >> $fromBits)
            break;
        $acc = $acc << $fromBits | $value;
        $bits = $bits + $fromBits | 0;
        while ($bits >= $toBits) {
            $bits = $bits - $toBits | 0;
            $word = $acc >> $bits & $maxv;
            $output.$put4($word << 24 >> 24);
        }
        $i = $i + 1 | 0;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1271)));
},
onnu_Bech32__clinit_ = () => {
    onnu_Bech32_ZEROES = $rt_createByteArrayFromData([0, 0, 0, 0, 0, 0]);
    onnu_Bech32_GENERATORS = $rt_createIntArrayFromData([996825010, 642813549, 513874426, 1027748829, 705979059]);
},
onnu_Bech32__init_$exported$0 = () => {
    onnu_Bech32_$callClinit();
    return onnu_Bech32__init_0();
},
onnu_Bech32_bech32Encode$exported$0 = (var$1, var$2) => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnu_Bech32_bech32Encode(otji_JS_unwrapByteArray(var$1), var$2));
},
onnu_Bech32_bech32Encode$exported$1 = (var$1, var$2, var$3) => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnu_Bech32_bech32Encode0(otji_JS_unwrapByteArray(var$1), var$2, otji_JS_unwrapByteArray(var$3)));
},
onnu_Bech32_bech32Decode$exported$2 = var$1 => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView(onnu_Bech32_bech32Decode($rt_str(var$1))));
},
onnu_Bech32_polymod$exported$3 = (var$1, var$2, var$3, var$4, var$5) => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnu_Bech32_polymod0(otji_JS_unwrapByteArray(var$1), var$2, var$3, otji_JS_unwrapByteArray(var$4), var$5);
},
onnu_Bech32_verifyChecksum$exported$4 = (var$1, var$2, var$3) => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onnu_Bech32_verifyChecksum(otji_JS_unwrapByteArray(var$1), var$2, var$3);
},
onnu_Bech32_createChecksum$exported$5 = (var$1, var$2, var$3, var$4) => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnu_Bech32_createChecksum(otji_JS_unwrapByteArray(var$1), var$2, var$3, otji_JS_unwrapByteArray(var$4));
},
onnu_Bech32_polymod$exported$6 = (var$1, var$2) => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnu_Bech32_polymod(var$1, var$2);
},
onnu_Bech32_getLowerCaseBytes$exported$7 = var$1 => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap0(onnu_Bech32_getLowerCaseBytes($rt_str(var$1)));
},
onnu_Bech32_convertBits$exported$8 = (var$1, var$2, var$3, var$4, var$5) => {
    onnu_Bech32_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView(onnu_Bech32_convertBits(var$1, var$2, var$3, var$4, var$5 ? 1 : 0)));
},
jnc_Charset$Charsets = $rt_classWithoutFields(),
jnc_Charset$Charsets_value = null,
jnc_Charset$Charsets_$callClinit = () => {
    jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    jnc_Charset$Charsets__clinit_();
},
jnc_Charset$Charsets__clinit_ = () => {
    let $charsets, var$2, var$3, var$4, $charset;
    jnc_Charset$Charsets_value = ju_HashMap__init_();
    $charsets = $rt_createArray(jnc_Charset, 6);
    var$2 = $charsets.data;
    jnc_StandardCharsets_$callClinit();
    var$2[0] = jnc_StandardCharsets_UTF_8;
    var$2[1] = jnc_StandardCharsets_US_ASCII;
    var$2[2] = jnc_StandardCharsets_ISO_8859_1;
    var$2[3] = jnc_StandardCharsets_UTF_16;
    var$2[4] = jnc_StandardCharsets_UTF_16BE;
    var$2[5] = jnc_StandardCharsets_UTF_16LE;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $charset = var$2[var$4];
        jnc_Charset$Charsets_value.$put1(jnc_Charset_name($charset), $charset);
        var$4 = var$4 + 1 | 0;
    }
},
otjt_Uint16Array = $rt_classWithoutFields(otjt_TypedArray);
function onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0() {
    jl_Object.call(this);
    this.$_0145 = null;
}
let onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0145 = var$1;
},
onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0();
    onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0_call = var$0 => {
    return onn_NostrRelay_lambda$onConnectionClosedByServer$34(var$0.$_0145);
};
function onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0() {
    let a = this; jl_Object.call(a);
    a.$_057 = null;
    a.$_130 = null;
}
let onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_057 = var$1;
    var$0.$_130 = var$2;
},
onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0();
    onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0_run = var$0 => {
    onn_NostrRelay_lambda$sendMessage$6(var$0.$_057, var$0.$_130);
},
jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet),
jur_FSet$PossessiveFSet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_FSet$PossessiveFSet__init_0 = () => {
    let var_0 = new jur_FSet$PossessiveFSet();
    jur_FSet$PossessiveFSet__init_(var_0);
    return var_0;
},
jur_FSet$PossessiveFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_FSet$PossessiveFSet_getName = $this => {
    return $rt_s(1272);
},
jur_FSet$PossessiveFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_PosCompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_CompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PosCompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_PosCompositeGroupQuantifierSet();
    jur_PosCompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_PosCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier.$max0();
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier.$min0())
        return (-1);
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
};
function ju_AbstractMap$KeySet$1() {
    let a = this; jl_Object.call(a);
    a.$val$it = null;
    a.$this$10 = null;
}
let ju_AbstractMap$KeySet$1__init_ = ($this, $this$1, var$2) => {
    $this.$this$10 = $this$1;
    $this.$val$it = var$2;
    jl_Object__init_($this);
},
ju_AbstractMap$KeySet$1__init_0 = (var_0, var_1) => {
    let var_2 = new ju_AbstractMap$KeySet$1();
    ju_AbstractMap$KeySet$1__init_(var_2, var_0, var_1);
    return var_2;
},
ju_AbstractMap$KeySet$1_hasNext = $this => {
    return $this.$val$it.$hasNext();
},
ju_AbstractMap$KeySet$1_next = $this => {
    return ($this.$val$it.$next()).$getKey();
},
ju_AbstractMap$KeySet$1_remove = $this => {
    $this.$val$it.$remove();
},
onne_SignedNostrEvent$_init_$lambda$_1_0 = $rt_classWithoutFields(),
onne_SignedNostrEvent$_init_$lambda$_1_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onne_SignedNostrEvent$_init_$lambda$_1_0__init_0 = () => {
    let var_0 = new onne_SignedNostrEvent$_init_$lambda$_1_0();
    onne_SignedNostrEvent$_init_$lambda$_1_0__init_(var_0);
    return var_0;
},
onne_SignedNostrEvent$_init_$lambda$_1_0_apply0 = (var$0, var$1) => {
    return onne_SignedNostrEvent$_init_$lambda$_1_0_apply(var$0, var$1);
},
onne_SignedNostrEvent$_init_$lambda$_1_0_apply = (var$0, var$1) => {
    return onne_SignedNostrEvent_lambda$new$1(var$1);
};
function onns_NostrNIP46Signer$sendRPC$lambda$_12_0() {
    let a = this; jl_Object.call(a);
    a.$_012 = null;
    a.$_17 = null;
    a.$_24 = null;
    a.$_31 = null;
}
let onns_NostrNIP46Signer$sendRPC$lambda$_12_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_012 = var$1;
    var$0.$_17 = var$2;
    var$0.$_24 = var$3;
    var$0.$_31 = var$4;
},
onns_NostrNIP46Signer$sendRPC$lambda$_12_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onns_NostrNIP46Signer$sendRPC$lambda$_12_0();
    onns_NostrNIP46Signer$sendRPC$lambda$_12_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onns_NostrNIP46Signer$sendRPC$lambda$_12_0_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$sendRPC$lambda$_12_0_apply(var$0, var$1);
},
onns_NostrNIP46Signer$sendRPC$lambda$_12_0_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$sendRPC$25(var$0.$_012, var$0.$_17, var$0.$_24, var$0.$_31, var$1);
};
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$046 = null;
}
let jur_AbstractCharClass$LazyJavaDigit$1__init_ = ($this, $this$0) => {
    $this.$this$046 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDigit$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaDigit$1();
    jur_AbstractCharClass$LazyJavaDigit$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaDigit$1_contains = ($this, $ch) => {
    return jl_Character_isDigit($ch);
},
jl_NoSuchMethodException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jl_NoSuchMethodException__init_ = $this => {
    jl_ReflectiveOperationException__init_($this);
},
jl_NoSuchMethodException__init_0 = () => {
    let var_0 = new jl_NoSuchMethodException();
    jl_NoSuchMethodException__init_(var_0);
    return var_0;
},
jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException),
jl_NullPointerException__init_2 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_NullPointerException__init_0 = var_0 => {
    let var_1 = new jl_NullPointerException();
    jl_NullPointerException__init_2(var_1, var_0);
    return var_1;
},
jl_NullPointerException__init_1 = $this => {
    jl_RuntimeException__init_($this);
},
jl_NullPointerException__init_ = () => {
    let var_0 = new jl_NullPointerException();
    jl_NullPointerException__init_1(var_0);
    return var_0;
};
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$028 = null;
}
let jur_AbstractCharClass$LazyJavaSpaceChar$1__init_ = ($this, $this$0) => {
    $this.$this$028 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1();
    jur_AbstractCharClass$LazyJavaSpaceChar$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaSpaceChar$1_contains = ($this, $ch) => {
    return jl_Character_isSpaceChar($ch);
};
function jt_LocalTime() {
    let a = this; jl_Object.call(a);
    a.$hour = 0;
    a.$minute = 0;
    a.$second = 0;
    a.$nano = 0;
}
let jt_LocalTime_MIN = null,
jt_LocalTime_MAX = null,
jt_LocalTime_MIDNIGHT = null,
jt_LocalTime_NOON = null,
jt_LocalTime_FROM = null,
jt_LocalTime_HOURS = null,
jt_LocalTime_$callClinit = () => {
    jt_LocalTime_$callClinit = $rt_eraseClinit(jt_LocalTime);
    jt_LocalTime__clinit_();
},
jt_LocalTime_of = ($hour, $minute) => {
    jt_LocalTime_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_HOUR_OF_DAY, Long_fromInt($hour));
    if (!$minute)
        return jt_LocalTime_HOURS.data[$hour];
    jtt_ChronoField_checkValidValue(jtt_ChronoField_MINUTE_OF_HOUR, Long_fromInt($minute));
    return jt_LocalTime__init_($hour, $minute, 0, 0);
},
jt_LocalTime_of1 = ($hour, $minute, $second) => {
    jt_LocalTime_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_HOUR_OF_DAY, Long_fromInt($hour));
    if (!($minute | $second))
        return jt_LocalTime_HOURS.data[$hour];
    jtt_ChronoField_checkValidValue(jtt_ChronoField_MINUTE_OF_HOUR, Long_fromInt($minute));
    jtt_ChronoField_checkValidValue(jtt_ChronoField_SECOND_OF_MINUTE, Long_fromInt($second));
    return jt_LocalTime__init_($hour, $minute, $second, 0);
},
jt_LocalTime_of0 = ($hour, $minute, $second, $nanoOfSecond) => {
    jt_LocalTime_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_HOUR_OF_DAY, Long_fromInt($hour));
    jtt_ChronoField_checkValidValue(jtt_ChronoField_MINUTE_OF_HOUR, Long_fromInt($minute));
    jtt_ChronoField_checkValidValue(jtt_ChronoField_SECOND_OF_MINUTE, Long_fromInt($second));
    jtt_ChronoField_checkValidValue(jtt_ChronoField_NANO_OF_SECOND, Long_fromInt($nanoOfSecond));
    return jt_LocalTime_create($hour, $minute, $second, $nanoOfSecond);
},
jt_LocalTime_ofSecondOfDay = $secondOfDay => {
    let $hours, var$3, $minutes;
    jt_LocalTime_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_SECOND_OF_DAY, $secondOfDay);
    $hours = Long_lo(Long_div($secondOfDay, Long_fromInt(3600)));
    var$3 = Long_sub($secondOfDay, Long_fromInt($hours * 3600 | 0));
    $minutes = Long_lo(Long_div(var$3, Long_fromInt(60)));
    var$3 = Long_sub(var$3, Long_fromInt($minutes * 60 | 0));
    return jt_LocalTime_create($hours, $minutes, Long_lo(var$3), 0);
},
jt_LocalTime_ofSecondOfDay0 = ($secondOfDay, $nanoOfSecond) => {
    let $hours, var$4, $minutes;
    jt_LocalTime_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_SECOND_OF_DAY, $secondOfDay);
    jtt_ChronoField_checkValidValue(jtt_ChronoField_NANO_OF_SECOND, Long_fromInt($nanoOfSecond));
    $hours = Long_lo(Long_div($secondOfDay, Long_fromInt(3600)));
    var$4 = Long_sub($secondOfDay, Long_fromInt($hours * 3600 | 0));
    $minutes = Long_lo(Long_div(var$4, Long_fromInt(60)));
    var$4 = Long_sub(var$4, Long_fromInt($minutes * 60 | 0));
    return jt_LocalTime_create($hours, $minutes, Long_lo(var$4), $nanoOfSecond);
},
jt_LocalTime_ofNanoOfDay = $nanoOfDay => {
    let $hours, var$3, $minutes, $seconds;
    jt_LocalTime_$callClinit();
    jtt_ChronoField_$callClinit();
    jtt_ChronoField_checkValidValue(jtt_ChronoField_NANO_OF_DAY, $nanoOfDay);
    $hours = Long_lo(Long_div($nanoOfDay, Long_create(817405952, 838)));
    var$3 = Long_sub($nanoOfDay, Long_mul(Long_fromInt($hours), Long_create(817405952, 838)));
    $minutes = Long_lo(Long_div(var$3, Long_create(4165425152, 13)));
    var$3 = Long_sub(var$3, Long_mul(Long_fromInt($minutes), Long_create(4165425152, 13)));
    $seconds = Long_lo(Long_div(var$3, Long_fromInt(1000000000)));
    var$3 = Long_sub(var$3, Long_mul(Long_fromInt($seconds), Long_fromInt(1000000000)));
    return jt_LocalTime_create($hours, $minutes, $seconds, Long_lo(var$3));
},
jt_LocalTime_create = ($hour, $minute, $second, $nanoOfSecond) => {
    jt_LocalTime_$callClinit();
    if ($minute | $second | $nanoOfSecond)
        return jt_LocalTime__init_($hour, $minute, $second, $nanoOfSecond);
    return jt_LocalTime_HOURS.data[$hour];
},
jt_LocalTime__init_0 = ($this, $hour, $minute, $second, $nanoOfSecond) => {
    jt_LocalTime_$callClinit();
    jl_Object__init_($this);
    $this.$hour = $hour << 24 >> 24;
    $this.$minute = $minute << 24 >> 24;
    $this.$second = $second << 24 >> 24;
    $this.$nano = $nanoOfSecond;
},
jt_LocalTime__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jt_LocalTime();
    jt_LocalTime__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jt_LocalTime_isSupported = ($this, $field) => {
    if ($field instanceof jtt_ChronoField)
        return $field.$isTimeBased();
    return $field !== null && $field.$isSupportedBy($this) ? 1 : 0;
},
jt_LocalTime_range = ($this, $field) => {
    return jtt_TemporalAccessor_range($this, $field);
},
jt_LocalTime_get = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return jtt_TemporalAccessor_get($this, $field);
    return jt_LocalTime_get0($this, $field);
},
jt_LocalTime_getLong = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return $field.$getFrom($this);
    jtt_ChronoField_$callClinit();
    if ($field === jtt_ChronoField_NANO_OF_DAY)
        return jt_LocalTime_toNanoOfDay($this);
    if ($field !== jtt_ChronoField_MICRO_OF_DAY)
        return Long_fromInt(jt_LocalTime_get0($this, $field));
    return Long_div(jt_LocalTime_toNanoOfDay($this), Long_fromInt(1000));
},
jt_LocalTime_get0 = ($this, $field) => {
    let var$2, var$3, var$4, $ham;
    jt_LocalTime$2_$callClinit();
    switch (jt_LocalTime$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal($field)]) {
        case 1:
            break;
        case 2:
            var$2 = new jt_DateTimeException;
            var$3 = jl_String_valueOf($field);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(365)), var$3);
            jt_DateTimeException__init_(var$2, jl_StringBuilder_toString(var$4));
            $rt_throw(var$2);
        case 3:
            return $this.$nano / 1000 | 0;
        case 4:
            var$2 = new jt_DateTimeException;
            var$3 = jl_String_valueOf($field);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(365)), var$3);
            jt_DateTimeException__init_(var$2, jl_StringBuilder_toString(var$4));
            $rt_throw(var$2);
        case 5:
            return $this.$nano / 1000000 | 0;
        case 6:
            return Long_lo(Long_div(jt_LocalTime_toNanoOfDay($this), Long_fromInt(1000000)));
        case 7:
            return $this.$second;
        case 8:
            return jt_LocalTime_toSecondOfDay($this);
        case 9:
            return $this.$minute;
        case 10:
            return ($this.$hour * 60 | 0) + $this.$minute | 0;
        case 11:
            return $this.$hour % 12 | 0;
        case 12:
            $ham = $this.$hour % 12 | 0;
            if (!($ham % 12 | 0))
                $ham = 12;
            return $ham;
        case 13:
            return $this.$hour;
        case 14:
            return $this.$hour ? $this.$hour : 24;
        case 15:
            return $this.$hour / 12 | 0;
        default:
            var$2 = new jtt_UnsupportedTemporalTypeException;
            var$3 = jl_String_valueOf($field);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(51)), var$3);
            jtt_UnsupportedTemporalTypeException__init_(var$2, jl_StringBuilder_toString(var$4));
            $rt_throw(var$2);
    }
    return $this.$nano;
},
jt_LocalTime_getSecond = $this => {
    return $this.$second;
},
jt_LocalTime_getNano = $this => {
    return $this.$nano;
},
jt_LocalTime_query = ($this, $query) => {
    if ($query === jtt_TemporalQueries_precision()) {
        jtt_ChronoUnit_$callClinit();
        return jtt_ChronoUnit_NANOS;
    }
    if ($query === jtt_TemporalQueries_localTime())
        return $this;
    if ($query !== jtt_TemporalQueries_chronology() && $query !== jtt_TemporalQueries_zoneId() && $query !== jtt_TemporalQueries_zone() && $query !== jtt_TemporalQueries_offset() && $query !== jtt_TemporalQueries_localDate())
        return $query.$queryFrom($this);
    return null;
},
jt_LocalTime_toSecondOfDay = $this => {
    let $total, var$2;
    $total = $this.$hour * 3600 | 0;
    var$2 = $total + ($this.$minute * 60 | 0) | 0;
    var$2 = var$2 + $this.$second | 0;
    return var$2;
},
jt_LocalTime_toNanoOfDay = $this => {
    let $total, var$2;
    $total = Long_mul(Long_fromInt($this.$hour), Long_create(817405952, 838));
    var$2 = Long_add($total, Long_mul(Long_fromInt($this.$minute), Long_create(4165425152, 13)));
    var$2 = Long_add(var$2, Long_mul(Long_fromInt($this.$second), Long_fromInt(1000000000)));
    var$2 = Long_add(var$2, Long_fromInt($this.$nano));
    return var$2;
},
jt_LocalTime_compareTo = ($this, $other) => {
    let $cmp;
    $cmp = jl_Integer_compare($this.$hour, $other.$hour);
    if (!$cmp) {
        $cmp = jl_Integer_compare($this.$minute, $other.$minute);
        if (!$cmp) {
            $cmp = jl_Integer_compare($this.$second, $other.$second);
            if (!$cmp)
                $cmp = jl_Integer_compare($this.$nano, $other.$nano);
        }
    }
    return $cmp;
},
jt_LocalTime_equals = ($this, $obj) => {
    let $other;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jt_LocalTime))
        return 0;
    $other = $obj;
    return $this.$hour == $other.$hour && $this.$minute == $other.$minute && $this.$second == $other.$second && $this.$nano == $other.$nano ? 1 : 0;
},
jt_LocalTime_hashCode = $this => {
    let $nod;
    $nod = jt_LocalTime_toNanoOfDay($this);
    return Long_lo(Long_xor($nod, Long_shru($nod, 32)));
},
jt_LocalTime_toString = $this => {
    let $buf, $hourValue, $minuteValue, $secondValue, $nanoValue, var$6, var$7;
    $buf = jl_StringBuilder__init_0(18);
    $hourValue = $this.$hour;
    $minuteValue = $this.$minute;
    $secondValue = $this.$second;
    $nanoValue = $this.$nano;
    var$6 = $hourValue >= 10 ? $rt_s(23) : $rt_s(707);
    var$6 = ($buf.$append1(var$6)).$append3($hourValue);
    var$7 = $minuteValue >= 10 ? $rt_s(708) : $rt_s(709);
    (var$6.$append1(var$7)).$append3($minuteValue);
    if (!($secondValue <= 0 && $nanoValue <= 0)) {
        ($buf.$append1($secondValue >= 10 ? $rt_s(708) : $rt_s(709))).$append3($secondValue);
        if ($nanoValue > 0) {
            $buf.$append0(46);
            if (!($nanoValue % 1000000 | 0))
                $buf.$append1((jl_Integer_toString(($nanoValue / 1000000 | 0) + 1000 | 0)).$substring0(1));
            else if ($nanoValue % 1000 | 0)
                $buf.$append1((jl_Integer_toString($nanoValue + 1000000000 | 0)).$substring0(1));
            else
                $buf.$append1((jl_Integer_toString(($nanoValue / 1000 | 0) + 1000000 | 0)).$substring0(1));
        }
    }
    return $buf.$toString();
},
jt_LocalTime__clinit_ = () => {
    let $i;
    jt_LocalTime_FROM = jt_LocalTime$1__init_0();
    jt_LocalTime_HOURS = $rt_createArray(jt_LocalTime, 24);
    $i = 0;
    while ($i < jt_LocalTime_HOURS.data.length) {
        jt_LocalTime_HOURS.data[$i] = jt_LocalTime__init_($i, 0, 0, 0);
        $i = $i + 1 | 0;
    }
    jt_LocalTime_MIDNIGHT = jt_LocalTime_HOURS.data[0];
    jt_LocalTime_NOON = jt_LocalTime_HOURS.data[12];
    jt_LocalTime_MIN = jt_LocalTime_HOURS.data[0];
    jt_LocalTime_MAX = jt_LocalTime__init_(23, 59, 59, 999999999);
},
jl_Math = $rt_classWithoutFields(),
jl_Math_ceil = var$1 => {
    return Math.ceil(var$1);
},
jl_Math_floorDiv = (var$1, $b) => {
    return jl_Math_floorDiv0(var$1, Long_fromInt($b));
},
jl_Math_floorDiv0 = ($a, $b) => {
    let $div;
    $div = Long_div($a, $b);
    if (Long_lt(Long_xor($a, $b), Long_ZERO) && Long_ne(Long_mul($div, $b), $a))
        $div = Long_sub($div, Long_fromInt(1));
    return $div;
},
jl_Math_floorMod = ($a, $b) => {
    return Long_lo((jl_Math_floorMod0($a, Long_fromInt($b))));
},
jl_Math_floorMod0 = ($a, $b) => {
    let $mod;
    $mod = Long_rem($a, $b);
    if (Long_lt(Long_xor($a, $b), Long_ZERO) && Long_ne($mod, Long_ZERO))
        $mod = Long_add($mod, $b);
    return $mod;
},
jl_Math_toIntExact = $value => {
    if (Long_le($value, Long_fromInt(2147483647)) && Long_ge($value, Long_fromInt(-2147483648)))
        return Long_lo($value);
    $rt_throw(jl_ArithmeticException__init_0());
},
jl_Math_addExact = ($a, $b) => {
    let $sum;
    $sum = Long_add($a, $b);
    if (Long_lt(Long_xor($a, $sum), Long_ZERO) && Long_ge(Long_xor($a, $b), Long_ZERO))
        $rt_throw(jl_ArithmeticException__init_0());
    return $sum;
},
jl_Math_subtractExact0 = ($a, $b) => {
    let $result;
    $result = $a - $b | 0;
    if (($a ^ $result) < 0 && ($a ^ $b) < 0)
        $rt_throw(jl_ArithmeticException__init_0());
    return $result;
},
jl_Math_subtractExact = ($a, $b) => {
    let $result;
    $result = Long_sub($a, $b);
    if (Long_lt(Long_xor($a, $result), Long_ZERO) && Long_lt(Long_xor($a, $b), Long_ZERO))
        $rt_throw(jl_ArithmeticException__init_0());
    return $result;
},
jl_Math_multiplyExact = ($a, $b) => {
    return jl_Math_multiplyExact0($a, Long_fromInt($b));
},
jl_Math_multiplyExact0 = ($a, $b) => {
    let $total;
    if (Long_eq($b, Long_fromInt(1)))
        return $a;
    if (Long_eq($a, Long_fromInt(1)))
        return $b;
    if (Long_ne($a, Long_ZERO) && Long_ne($b, Long_ZERO)) {
        $total = Long_mul($a, $b);
        if (!(Long_eq($a, Long_create(0, 2147483648)) && Long_eq($b, Long_fromInt(-1))) && !(Long_eq($b, Long_create(0, 2147483648)) && Long_eq($a, Long_fromInt(-1))) && Long_eq(Long_div($total, $b), $a))
            return $total;
        $rt_throw(jl_ArithmeticException__init_0());
    }
    return Long_ZERO;
},
jl_Math_random = () => {
    return jl_Math_randomImpl();
},
jl_Math_randomImpl = () => {
    return Math.random();
},
jl_Math_min = ($a, $b) => {
    if ($a < $b)
        $b = $a;
    return $b;
},
jl_Math_max = ($a, $b) => {
    if ($a > $b)
        $b = $a;
    return $b;
},
jl_Math_min0 = ($a, $b) => {
    if (Long_lt($a, $b))
        $b = $a;
    return $b;
},
jl_Math_max0 = ($a, $b) => {
    if (Long_gt($a, $b))
        $b = $a;
    return $b;
},
jl_Math_abs = $n => {
    if ($n < 0)
        $n =  -$n | 0;
    return $n;
};
let jl_Math_abs0 = $n => {
    if (Long_lt($n, Long_ZERO))
        $n = Long_neg($n);
    return $n;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function jur_PatternSyntaxException() {
    let a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern1 = null;
    a.$index3 = 0;
}
let jur_PatternSyntaxException__init_0 = ($this, $description, $pattern, $index) => {
    jl_IllegalArgumentException__init_2($this);
    $this.$index3 = (-1);
    $this.$desc = $description;
    $this.$pattern1 = $pattern;
    $this.$index3 = $index;
},
jur_PatternSyntaxException__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PatternSyntaxException_getMessage = $this => {
    let $filler, $temp, var$3, var$4, var$5, var$6;
    $filler = $rt_s(23);
    if ($this.$index3 >= 1) {
        $temp = $rt_createCharArray($this.$index3);
        ju_Arrays_fill2($temp, 32);
        $filler = jl_String__init_($temp);
    }
    var$3 = $this.$desc;
    if ($this.$pattern1 !== null && $this.$pattern1.$length()) {
        var$4 = $this.$index3;
        var$5 = $this.$pattern1;
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$6, var$4), $rt_s(12)), var$5), $rt_s(12)), $filler);
        var$5 = jl_StringBuilder_toString(var$6);
    } else
        var$5 = $rt_s(23);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$3), var$5);
    return jl_StringBuilder_toString(var$6);
},
ju_AbstractSequentialList = $rt_classWithoutFields(ju_AbstractList),
ju_AbstractSequentialList__init_ = $this => {
    ju_AbstractList__init_($this);
},
ju_AbstractSequentialList_get = ($this, $index) => {
    let $iter;
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $iter = $this.$listIterator0($index);
    return $iter.$next();
},
ju_AbstractSequentialList_add = ($this, $index, $element) => {
    let $iter;
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $iter = $this.$listIterator0($index);
    $iter.$add9($element);
},
ju_AbstractSequentialList_remove = ($this, $index) => {
    let $iter, $elem;
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $iter = $this.$listIterator0($index);
    $elem = $iter.$next();
    $iter.$remove();
    return $elem;
},
ju_AbstractSequentialList_iterator = $this => {
    return $this.$listIterator();
},
jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDefined__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDefined__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDefined_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDefined$1__init_0($this);
    $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function onnn_Nip01UserMetadataListener() {
    let a = this; jl_Object.call(a);
    a.$pubkey2 = null;
    a.$consumer = null;
}
let onnn_Nip01UserMetadataListener_logger = null,
onnn_Nip01UserMetadataListener_$callClinit = () => {
    onnn_Nip01UserMetadataListener_$callClinit = $rt_eraseClinit(onnn_Nip01UserMetadataListener);
    onnn_Nip01UserMetadataListener__clinit_();
},
onnn_Nip01UserMetadataListener__init_ = ($this, $pubkey, $consumer) => {
    onnn_Nip01UserMetadataListener_$callClinit();
    jl_Object__init_($this);
    $this.$pubkey2 = $pubkey;
    $this.$consumer = $consumer;
},
onnn_Nip01UserMetadataListener__init_2 = (var_0, var_1) => {
    let var_2 = new onnn_Nip01UserMetadataListener();
    onnn_Nip01UserMetadataListener__init_(var_2, var_0, var_1);
    return var_2;
},
onnn_Nip01UserMetadataListener__init_0 = ($this, $consumer) => {
    onnn_Nip01UserMetadataListener_$callClinit();
    onnn_Nip01UserMetadataListener__init_($this, null, $consumer);
},
onnn_Nip01UserMetadataListener__init_4 = var_0 => {
    let var_1 = new onnn_Nip01UserMetadataListener();
    onnn_Nip01UserMetadataListener__init_0(var_1, var_0);
    return var_1;
},
onnn_Nip01UserMetadataListener__init_1 = $this => {
    onnn_Nip01UserMetadataListener_$callClinit();
    jl_Object__init_($this);
    $this.$pubkey2 = null;
},
onnn_Nip01UserMetadataListener__init_3 = () => {
    let var_0 = new onnn_Nip01UserMetadataListener();
    onnn_Nip01UserMetadataListener__init_1(var_0);
    return var_0;
},
onnn_Nip01UserMetadataListener_onSubEvent = ($this, $event, $stored) => {
    let $e, $profile, var$5, $$je;
    a: {
        b: {
            c: {
                try {
                    if (!$event.$getKind()) {
                        if ($this.$pubkey2 === null)
                            break c;
                        if (onnk_NostrPublicKey_equals($this.$pubkey2, $event.$getPubkey()))
                            break c;
                    }
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            d: {
                try {
                    $profile = onnn_Nip24ExtraMetadata__init_2($event);
                    if ($this.$consumer === null)
                        break d;
                    $this.$consumer.$accept0($profile);
                    break d;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
            }
            break a;
        }
        onnn_Nip01UserMetadataListener_$callClinit();
        var$5 = onnn_Nip01UserMetadataListener_logger;
        jul_Level_$callClinit();
        var$5.$log(jul_Level_WARNING, $rt_s(1273), $e);
    }
},
onnn_Nip01UserMetadataListener__clinit_ = () => {
    onnn_Nip01UserMetadataListener_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onnn_Nip01UserMetadataListener)));
},
onnn_Nip01UserMetadataListener__init_$exported$0 = () => {
    onnn_Nip01UserMetadataListener_$callClinit();
    return onnn_Nip01UserMetadataListener__init_3();
},
onnn_Nip01UserMetadataListener__init_$exported$1 = var$1 => {
    onnn_Nip01UserMetadataListener_$callClinit();
    return onnn_Nip01UserMetadataListener__init_4(var$1);
},
onnn_Nip01UserMetadataListener_onSubEvent$exported$2 = (var$1, var$2, var$3) => {
    let var$4;
    onnn_Nip01UserMetadataListener_$callClinit();
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    var$1.$onSubEvent(var$2, var$4);
},
onnn_Nip01UserMetadataListener__init_$exported$3 = (var$1, var$2) => {
    onnn_Nip01UserMetadataListener_$callClinit();
    return onnn_Nip01UserMetadataListener__init_2(var$1, var$2);
};
function jur_Pattern() {
    let a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags0 = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount0 = 0;
    a.$consCount0 = 0;
    a.$start4 = null;
}
let jur_Pattern_matcher = ($this, $input) => {
    return jur_Matcher__init_0($this, $input);
},
jur_Pattern_split = ($this, $inputSeq, $limit) => {
    let $res, $mat, $index, $curPos, var$7, var$8;
    $res = ju_ArrayList__init_();
    $mat = jur_Pattern_matcher($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    if (!$inputSeq.$length()) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(23);
        return var$7;
    }
    while (jur_Matcher_find0($mat)) {
        var$8 = $index + 1 | 0;
        if (var$8 >= $limit && $limit > 0)
            break;
        $res.$add1(($inputSeq.$subSequence($curPos, jur_Matcher_start($mat))).$toString());
        $curPos = jur_Matcher_end0($mat);
        $index = var$8;
    }
    a: {
        $res.$add1(($inputSeq.$subSequence($curPos, $inputSeq.$length())).$toString());
        var$8 = $index + 1 | 0;
        if (!$limit)
            while (true) {
                var$8 = var$8 + (-1) | 0;
                if (var$8 < 0)
                    break;
                if ((($res.$get(var$8)).$toString()).$length())
                    break a;
                $res.$remove0(var$8);
            }
    }
    if (var$8 < 0)
        var$8 = 0;
    return $res.$toArray($rt_createArray(jl_String, var$8));
},
jur_Pattern_split0 = ($this, $input) => {
    return jur_Pattern_split($this, $input, 0);
},
jur_Pattern_pattern = $this => {
    return $this.$lexemes.$toString();
},
jur_Pattern_compile0 = ($pattern, $flags) => {
    if ($pattern === null)
        $rt_throw(jl_NullPointerException__init_0($rt_s(1274)));
    if ($flags && ($flags | 255) != 255)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(23)));
    jur_AbstractSet_$callClinit();
    jur_AbstractSet_counter = 1;
    return jur_Pattern_compileImpl(jur_Pattern__init_0(), $pattern, $flags);
},
jur_Pattern_compileImpl = ($this, $pattern, $flags) => {
    $this.$lexemes = jur_Lexer__init_0($pattern, $flags);
    $this.$flags0 = $flags;
    $this.$start4 = jur_Pattern_processExpression($this, (-1), $this.$flags0, null);
    if ($this.$lexemes.$isEmpty()) {
        jur_Pattern_finalizeCompile($this);
        return $this;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
},
jur_Pattern_processAlternations = ($this, $last) => {
    let $auxRange, var$3, $rangeSet;
    $auxRange = jur_CharClass__init_4(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    while (!$this.$lexemes.$isEmpty()) {
        var$3 = $this.$lexemes;
        if (!var$3.$isLetter0())
            break;
        var$3 = $this.$lexemes;
        if (var$3.$lookAhead() && $this.$lexemes.$lookAhead() != (-536870788)) {
            var$3 = $this.$lexemes;
            if (var$3.$lookAhead() != (-536870871))
                break;
        }
        $auxRange.$add($this.$lexemes.$next4());
        if ($this.$lexemes.$peek() != (-536870788))
            continue;
        $this.$lexemes.$next4();
    }
    $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
},
jur_Pattern_processExpression = ($this, $ch, $newFlags, $last) => {
    let $children, $saveFlags, $saveChangedFlags, $fSet, var$8, $child;
    $children = ju_ArrayList__init_();
    $saveFlags = $this.$flags0;
    $saveChangedFlags = 0;
    if ($newFlags != $this.$flags0)
        $this.$flags0 = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                var$8 = $this.$consCount0 + 1 | 0;
                $this.$consCount0 = var$8;
                jur_NonCapFSet__init_($fSet, var$8);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$8 = $this.$consCount0 + 1 | 0;
                $this.$consCount0 = var$8;
                jur_BehindFSet__init_($fSet, var$8);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$8 = $this.$consCount0 + 1 | 0;
                $this.$consCount0 = var$8;
                jur_AtomicFSet__init_($fSet, var$8);
                break a;
            default:
                $this.$globalGroupIndex = $this.$globalGroupIndex + 1 | 0;
                if ($last !== null)
                    $fSet = jur_FSet__init_0($this.$globalGroupIndex);
                else {
                    $fSet = jur_FinalSet__init_0();
                    $saveChangedFlags = 1;
                }
                if ($this.$globalGroupIndex <= (-1))
                    break a;
                if ($this.$globalGroupIndex >= 10)
                    break a;
                $this.$backRefs.data[$this.$globalGroupIndex] = $fSet;
                break a;
        }
        $fSet = jur_AheadFSet__init_0();
    }
    while (true) {
        if ($this.$lexemes.$isLetter0() && $this.$lexemes.$lookAhead() == (-536870788))
            $child = jur_Pattern_processAlternations($this, $fSet);
        else if ($this.$lexemes.$peek() == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            $this.$lexemes.$next4();
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            if ($this.$lexemes.$peek() == (-536870788))
                $this.$lexemes.$next4();
        }
        if ($child !== null)
            $children.$add1($child);
        if ($this.$lexemes.$isEmpty())
            break;
        if ($this.$lexemes.$peek() == (-536870871))
            break;
    }
    if ($this.$lexemes.$back() == (-536870788))
        $children.$add1(jur_EmptySet__init_($fSet));
    if ($this.$flags0 != $saveFlags && !$saveChangedFlags) {
        $this.$flags0 = $saveFlags;
        $this.$lexemes.$restoreFlags($this.$flags0);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            return jur_PositiveLookAhead__init_0($children, $fSet);
        case -268435416:
            return jur_NegativeLookAhead__init_0($children, $fSet);
        case -134217688:
            return jur_PositiveLookBehind__init_0($children, $fSet);
        case -67108824:
            return jur_NegativeLookBehind__init_0($children, $fSet);
        case -33554392:
            return jur_AtomicJointSet__init_0($children, $fSet);
        default:
            switch ($children.$size()) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_0($children.$get(0), $fSet);
                default:
                    return jur_JointSet__init_1($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    return jur_NonCapJointSet__init_0($children, $fSet);
},
jur_Pattern_processSequence = $this => {
    let $substring, var$2, $ch;
    $substring = jl_StringBuffer__init_1();
    while (!$this.$lexemes.$isEmpty()) {
        var$2 = $this.$lexemes;
        if (!var$2.$isLetter0())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isHighSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isLowSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (!(!var$2.$isNextSpecial() && !$this.$lexemes.$lookAhead())) {
            var$2 = $this.$lexemes;
            if (!(!var$2.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead()))) {
                var$2 = $this.$lexemes;
                if (var$2.$lookAhead() != (-536870871)) {
                    var$2 = $this.$lexemes;
                    if ((var$2.$lookAhead() & (-2147418113)) != (-2147483608)) {
                        var$2 = $this.$lexemes;
                        if (var$2.$lookAhead() != (-536870788)) {
                            var$2 = $this.$lexemes;
                            if (var$2.$lookAhead() != (-536870876))
                                break;
                        }
                    }
                }
            }
        }
        $ch = $this.$lexemes.$next4();
        if (!jl_Character_isSupplementaryCodePoint($ch))
            $substring.$append16($ch & 65535);
        else
            $substring.$append18(jl_Character_toChars($ch));
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_SequenceSet__init_0($substring);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCISequenceSet__init_0($substring);
    return jur_CISequenceSet__init_0($substring);
},
jur_Pattern_processDecomposedChar = $this => {
    let $codePoints, $readCodePoints, $curSymb, $curSymbIndex, var$5, $codePointsHangul, var$7, var$8, var$9, var$10;
    $codePoints = $rt_createIntArray(4);
    $readCodePoints = 0;
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        $curSymb = $this.$lexemes.$next4();
        var$5[$readCodePoints] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        var$5 = $codePointsHangul.data;
        var$5[$readCodePoints] = $curSymb & 65535;
        var$7 = $this.$lexemes.$peek();
        var$8 = var$7 - 4449 | 0;
        if (var$8 >= 0 && var$8 < 21) {
            var$5[1] = var$7 & 65535;
            $this.$lexemes.$next4();
            var$9 = $this.$lexemes.$peek();
            var$7 = var$9 - 4519 | 0;
            if (var$7 >= 0 && var$7 < 28) {
                var$5[2] = var$9 & 65535;
                $this.$lexemes.$next4();
                return jur_HangulDecomposedCharSet__init_0($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_0($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_(var$5[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_0(var$5[0]);
        return jur_CICharSet__init_0(var$5[0]);
    }
    var$10 = 1;
    while (var$10 < 4 && !$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        var$9 = var$10 + 1 | 0;
        var$5[var$10] = $this.$lexemes.$next4();
        var$10 = var$9;
    }
    if (var$10 == 1) {
        var$5 = $codePoints.data;
        if (!jur_Lexer_hasSingleCodepointDecomposition(var$5[0]))
            return jur_Pattern_processCharSet($this, var$5[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_0($codePoints, var$10);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCIDecomposedCharSet__init_0($codePoints, var$10);
    return jur_CIDecomposedCharSet__init_0($codePoints, var$10);
},
jur_Pattern_processSubExpression = ($this, $last) => {
    let $cur, $term, var$4, $next;
    if ($this.$lexemes.$isLetter0() && !$this.$lexemes.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead())) {
        if (!jur_Pattern_hasFlag($this, 128)) {
            if (!$this.$lexemes.$isHighSurrogate1() && !$this.$lexemes.$isLowSurrogate1())
                $cur = jur_Pattern_processSequence($this);
            else {
                $term = jur_Pattern_processTerminal($this, $last);
                $cur = jur_Pattern_processQuantifier($this, $last, $term);
            }
        } else {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!$this.$lexemes.$isEmpty()) {
                var$4 = $this.$lexemes;
                if (!(var$4.$peek() == (-536870871) && !($last instanceof jur_FinalSet))) {
                    var$4 = $this.$lexemes;
                    if (var$4.$peek() != (-536870788) && !$this.$lexemes.$isLetter0())
                        $cur = jur_Pattern_processQuantifier($this, $last, $cur);
                }
            }
        }
    } else if ($this.$lexemes.$peek() != (-536870871)) {
        $term = jur_Pattern_processTerminal($this, $last);
        $cur = jur_Pattern_processQuantifier($this, $last, $term);
    } else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
        $cur = jur_EmptySet__init_($last);
    }
    a: {
        if (!$this.$lexemes.$isEmpty()) {
            var$4 = $this.$lexemes;
            if (!(var$4.$peek() == (-536870871) && !($last instanceof jur_FinalSet))) {
                var$4 = $this.$lexemes;
                if (var$4.$peek() != (-536870788)) {
                    $next = jur_Pattern_processSubExpression($this, $last);
                    if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                        var$4 = $cur;
                        if (!$next.$first(var$4.$getInnerSet()))
                            $cur = jur_UnifiedQuantifierSet__init_0(var$4);
                    }
                    if (($next.$getType() & 65535) != 43)
                        $cur.$setNext($next);
                    else
                        $cur.$setNext($next.$getInnerSet());
                    break a;
                }
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType() & 65535) != 43)
        return $cur;
    return $cur.$getInnerSet();
},
jur_Pattern_processQuantifier = ($this, $last, $term) => {
    let $quant, var$4, var$5, var$6, $q, var$8, $leaf;
    $quant = $this.$lexemes.$peek();
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                $this.$lexemes.$next4();
                return jur_PossessiveGroupQuantifierSet__init_0($term, $last, $quant);
            case -2147483605:
                $this.$lexemes.$next4();
                return jur_PosPlusGroupQuantifierSet__init_0($term, $last, (-2147483606));
            case -2147483585:
                $this.$lexemes.$next4();
                return jur_PosAltGroupQuantifierSet__init_0($term, $last, (-536870849));
            case -2147483525:
                var$4 = new jur_PosCompositeGroupQuantifierSet;
                var$5 = $this.$lexemes.$nextSpecial();
                var$6 = $this.$compCount0 + 1 | 0;
                $this.$compCount0 = var$6;
                jur_PosCompositeGroupQuantifierSet__init_(var$4, var$5, $term, $last, (-536870849), var$6);
                return var$4;
            case -1073741782:
            case -1073741781:
                $this.$lexemes.$next4();
                $q = jur_ReluctantGroupQuantifierSet__init_0($term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                $this.$lexemes.$next4();
                $q = jur_RelAltGroupQuantifierSet__init_0($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q = new jur_RelCompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$8 = $this.$compCount0 + 1 | 0;
                $this.$compCount0 = var$8;
                jur_RelCompositeGroupQuantifierSet__init_($q, var$4, $term, $last, (-536870849), var$8);
                $term.$setNext($q);
                return $q;
            case -536870870:
            case -536870869:
                $this.$lexemes.$next4();
                $q = $term.$getType() != (-2147483602) ? jur_GroupQuantifierSet__init_0($term, $last, $quant) : jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_0($term, $last, $quant) : jur_DotQuantifierSet__init_0($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags0));
                $term.$setNext($q);
                return $q;
            case -536870849:
                $this.$lexemes.$next4();
                $q = jur_AltGroupQuantifierSet__init_0($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q = new jur_CompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$6 = $this.$compCount0 + 1 | 0;
                $this.$compCount0 = var$6;
                jur_CompositeGroupQuantifierSet__init_($q, var$4, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            $this.$lexemes.$next4();
            $q = jur_PossessiveQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -2147483585:
            $this.$lexemes.$next4();
            return jur_PossessiveAltQuantifierSet__init_0($leaf, $last, (-2147483585));
        case -2147483525:
            return jur_PossessiveCompositeQuantifierSet__init_0($this.$lexemes.$nextSpecial(), $leaf, $last, (-2147483525));
        case -1073741782:
        case -1073741781:
            $this.$lexemes.$next4();
            $q = jur_ReluctantQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -1073741761:
            $this.$lexemes.$next4();
            return jur_ReluctantAltQuantifierSet__init_0($leaf, $last, (-1073741761));
        case -1073741701:
            return jur_ReluctantCompositeQuantifierSet__init_0($this.$lexemes.$nextSpecial(), $leaf, $last, (-1073741701));
        case -536870870:
        case -536870869:
            $this.$lexemes.$next4();
            $q = jur_LeafQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -536870849:
            $this.$lexemes.$next4();
            return jur_AltQuantifierSet__init_0($leaf, $last, (-536870849));
        case -536870789:
            return jur_CompositeQuantifierSet__init_0($this.$lexemes.$nextSpecial(), $leaf, $last, (-536870789));
        default:
    }
    return $term;
},
jur_Pattern_processTerminal = ($this, $last) => {
    let $term, $ch, $newFlags, var$5, $negative, $cc, $number, var$9, var$10, var$11;
    $term = null;
    while (true) {
        a: {
            $ch = $this.$lexemes.$peek();
            if (($ch & (-2147418113)) == (-2147483608)) {
                $this.$lexemes.$next4();
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags0 = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags0;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    if ($this.$lexemes.$peek() != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next4();
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                break c;
                            case -2147483583:
                                break;
                            case -2147483582:
                                $this.$lexemes.$next4();
                                $term = jur_WordBoundary__init_0(0);
                                break a;
                            case -2147483577:
                                $this.$lexemes.$next4();
                                $term = jur_PreviousMatch__init_0();
                                break a;
                            case -2147483558:
                                $this.$lexemes.$next4();
                                $term = new jur_EOLSet;
                                var$5 = $this.$consCount0 + 1 | 0;
                                $this.$consCount0 = var$5;
                                jur_EOLSet__init_($term, var$5);
                                break a;
                            case -2147483550:
                                $this.$lexemes.$next4();
                                $term = jur_WordBoundary__init_0(1);
                                break a;
                            case -2147483526:
                                $this.$lexemes.$next4();
                                $term = jur_EOISet__init_0();
                                break a;
                            case -536870876:
                                $this.$lexemes.$next4();
                                $this.$consCount0 = $this.$consCount0 + 1 | 0;
                                if (jur_Pattern_hasFlag($this, 8)) {
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UMultiLineEOLSet__init_0($this.$consCount0);
                                        break a;
                                    }
                                    $term = jur_MultiLineEOLSet__init_0($this.$consCount0);
                                    break a;
                                }
                                if (jur_Pattern_hasFlag($this, 1)) {
                                    $term = jur_UEOLSet__init_0($this.$consCount0);
                                    break a;
                                }
                                $term = jur_EOLSet__init_0($this.$consCount0);
                                break a;
                            case -536870866:
                                $this.$lexemes.$next4();
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_0();
                                    break a;
                                }
                                $term = jur_DotSet__init_0(jur_AbstractLineTerminator_getInstance($this.$flags0));
                                break a;
                            case -536870821:
                                $this.$lexemes.$next4();
                                $negative = 0;
                                if ($this.$lexemes.$peek() == (-536870818)) {
                                    $negative = 1;
                                    $this.$lexemes.$next4();
                                }
                                $term = jur_Pattern_processRange($this, $negative, $last);
                                if ($this.$lexemes.$peek() != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$setMode(1);
                                $this.$lexemes.$next4();
                                break a;
                            case -536870818:
                                $this.$lexemes.$next4();
                                $this.$consCount0 = $this.$consCount0 + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_0();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_0(jur_AbstractLineTerminator_getInstance($this.$flags0));
                                break a;
                            case 0:
                                $cc = $this.$lexemes.$peekSpecial();
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if ($this.$lexemes.$isEmpty()) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                $this.$lexemes.$next4();
                                break a;
                            default:
                                break b;
                        }
                        $this.$lexemes.$next4();
                        $term = jur_SOLSet__init_0();
                        break a;
                    }
                    $number = ($ch & 2147483647) - 48 | 0;
                    if ($this.$globalGroupIndex < $number)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next4();
                    $this.$consCount0 = $this.$consCount0 + 1 | 0;
                    $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_0($number, $this.$consCount0) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_0($number, $this.$consCount0) : jur_CIBackReferenceSet__init_0($number, $this.$consCount0);
                    $this.$backRefs.data[$number].$isBackReferenced = 1;
                    $this.$needsBackRefReplacement = 1;
                    break a;
                }
                if ($ch >= 0 && !$this.$lexemes.$isSpecial()) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    $this.$lexemes.$next4();
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        var$9 = new jur_PatternSyntaxException;
                        var$10 = !$this.$lexemes.$isSpecial() ? jl_Character_toString($ch & 65535) : ($this.$lexemes.$peekSpecial()).$toString();
                        var$11 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0(var$9, var$10, var$11.$toString(), $this.$lexemes.$getIndex());
                        $rt_throw(var$9);
                    }
                    if ($last instanceof jur_FinalSet)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
},
jur_Pattern_processRange = ($this, $negative, $last) => {
    let $res, $rangeSet;
    $res = jur_Pattern_processRangeExpression($this, $negative);
    $rangeSet = jur_Pattern_processRangeSet($this, $res);
    $rangeSet.$setNext($last);
    return $rangeSet;
},
jur_Pattern_processRangeExpression = ($this, $alt) => {
    let $res, $buffer, $intersection, $notClosed, $firstInClass, var$7, $cur, $negative, $cs, $$je;
    $res = jur_CharClass__init_3($alt, jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if ($this.$lexemes.$isEmpty())
                    break a;
                $notClosed = $this.$lexemes.$peek() == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($this.$lexemes.$peek()) {
                        case -536870874:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = $this.$lexemes.$next4();
                            if ($this.$lexemes.$peek() != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($this.$lexemes.$lookAhead() == (-536870821)) {
                                $this.$lexemes.$next4();
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            $this.$lexemes.$next4();
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$peek() == (-536870819))
                                break d;
                            $res.$intersection(jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && $this.$lexemes.$lookAhead() != (-536870819)) {
                                var$7 = $this.$lexemes;
                                if (var$7.$lookAhead() != (-536870821) && $buffer >= 0) {
                                    $this.$lexemes.$next4();
                                    $cur = $this.$lexemes.$peek();
                                    if ($this.$lexemes.$isSpecial())
                                        break c;
                                    if ($cur < 0) {
                                        var$7 = $this.$lexemes;
                                        if (var$7.$lookAhead() != (-536870819)) {
                                            var$7 = $this.$lexemes;
                                            if (var$7.$lookAhead() != (-536870821) && $buffer >= 0)
                                                break c;
                                        }
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        $res.$add0($buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    $this.$lexemes.$next4();
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 45;
                            $this.$lexemes.$next4();
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                $res.$add($buffer);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next4();
                            $negative = 0;
                            if ($this.$lexemes.$peek() == (-536870818)) {
                                $this.$lexemes.$next4();
                                $negative = 1;
                            }
                            if (!$intersection)
                                $res.$union(jur_Pattern_processRangeExpression($this, $negative));
                            else
                                $res.$intersection(jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            $this.$lexemes.$next4();
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 93;
                            $this.$lexemes.$next4();
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 94;
                            $this.$lexemes.$next4();
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $cs = $this.$lexemes.$peekSpecial();
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                $res.$add10($cs);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next4();
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        $res.$add($buffer);
                    $buffer = $this.$lexemes.$next4();
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            $res.$add($buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(23), jur_Pattern_pattern($this), $this.$lexemes.$getIndex() - 1 | 0));
},
jur_Pattern_processCharSet = ($this, $ch) => {
    let $isSupplCodePoint;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_0($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint)
                return jur_UCISupplCharSet__init_0($ch);
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_0($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_0($ch & 65535);
            return jur_HighSurrogateCharSet__init_0($ch & 65535);
        }
    }
    if ($isSupplCodePoint)
        return jur_SupplCharSet__init_0($ch);
    if (jur_Lexer_isLowSurrogate($ch))
        return jur_LowSurrogateCharSet__init_0($ch & 65535);
    if (!jur_Lexer_isHighSurrogate($ch))
        return jur_CharSet__init_($ch & 65535);
    return jur_HighSurrogateCharSet__init_0($ch & 65535);
},
jur_Pattern_processRangeSet = ($this, $charClass) => {
    let $surrogates, $lowHighSurrRangeSet;
    if (!$charClass.$hasLowHighSurrogates()) {
        if (!$charClass.$mayContainSupplCodepoints()) {
            if ($charClass.$hasUCI())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_0($charClass);
        }
        if ($charClass.$hasUCI())
            return jur_UCISupplRangeSet__init_0($charClass);
        return jur_SupplRangeSet__init_0($charClass);
    }
    $surrogates = $charClass.$getSurrogates();
    $lowHighSurrRangeSet = jur_LowHighSurrogateRangeSet__init_0($surrogates);
    if (!$charClass.$mayContainSupplCodepoints()) {
        if ($charClass.$hasUCI())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_0($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    }
    if ($charClass.$hasUCI())
        return jur_CompositeRangeSet__init_(jur_UCISupplRangeSet__init_0($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_0($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
},
jur_Pattern_compile = $pattern => {
    return jur_Pattern_compile0($pattern, 0);
},
jur_Pattern_finalizeCompile = $this => {
    if ($this.$needsBackRefReplacement)
        $this.$start4.$processSecondPass();
},
jur_Pattern_quote = $s => {
    let $sb, $apos, var$4, $apos_0;
    $sb = (jl_StringBuilder__init_()).$append1($rt_s(1275));
    $apos = 0;
    while (true) {
        var$4 = $s.$indexOf1($rt_s(1276), $apos);
        if (var$4 < 0)
            break;
        $apos_0 = var$4 + 2 | 0;
        ($sb.$append1($s.$substring($apos, $apos_0))).$append1($rt_s(1277));
        $apos = $apos_0;
    }
    return (($sb.$append1($s.$substring0($apos))).$append1($rt_s(1276))).$toString();
},
jur_Pattern_groupCount = $this => {
    return $this.$globalGroupIndex;
},
jur_Pattern_compCount = $this => {
    return $this.$compCount0 + 1 | 0;
},
jur_Pattern_consCount = $this => {
    return $this.$consCount0 + 1 | 0;
},
jur_Pattern_getSupplement = $ch => {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
},
jur_Pattern_hasFlag = ($this, $flag) => {
    return ($this.$flags0 & $flag) != $flag ? 0 : 1;
},
jur_Pattern__init_ = $this => {
    jl_Object__init_($this);
    $this.$backRefs = $rt_createArray(jur_FSet, 10);
    $this.$globalGroupIndex = (-1);
    $this.$compCount0 = (-1);
    $this.$consCount0 = (-1);
},
jur_Pattern__init_0 = () => {
    let var_0 = new jur_Pattern();
    jur_Pattern__init_(var_0);
    return var_0;
},
ji_UnsupportedEncodingException = $rt_classWithoutFields(ji_IOException),
ji_UnsupportedEncodingException__init_ = $this => {
    ji_IOException__init_0($this);
},
ji_UnsupportedEncodingException__init_2 = () => {
    let var_0 = new ji_UnsupportedEncodingException();
    ji_UnsupportedEncodingException__init_(var_0);
    return var_0;
},
ji_UnsupportedEncodingException__init_1 = ($this, $message) => {
    ji_IOException__init_($this, $message);
},
ji_UnsupportedEncodingException__init_0 = var_0 => {
    let var_1 = new ji_UnsupportedEncodingException();
    ji_UnsupportedEncodingException__init_1(var_1, var_0);
    return var_1;
};
function jtf_DateTimeFormatterBuilder$FractionPrinterParser() {
    let a = this; jl_Object.call(a);
    a.$field1 = null;
    a.$minWidth0 = 0;
    a.$maxWidth0 = 0;
    a.$decimalPoint = 0;
}
let jtf_DateTimeFormatterBuilder$FractionPrinterParser__init_ = ($this, $field, $minWidth, $maxWidth, $decimalPoint) => {
    let var$5, var$6, var$7;
    jl_Object__init_($this);
    ju_Objects_requireNonNull($field, $rt_s(33));
    if (!jtt_ValueRange_isFixed($field.$range())) {
        var$5 = new jl_IllegalArgumentException;
        var$6 = jl_String_valueOf($field);
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(1278)), var$6);
        jl_IllegalArgumentException__init_1(var$5, jl_StringBuilder_toString(var$7));
        $rt_throw(var$5);
    }
    if ($minWidth >= 0 && $minWidth <= 9) {
        if ($maxWidth >= 1 && $maxWidth <= 9) {
            if ($maxWidth >= $minWidth) {
                $this.$field1 = $field;
                $this.$minWidth0 = $minWidth;
                $this.$maxWidth0 = $maxWidth;
                $this.$decimalPoint = $decimalPoint;
                return;
            }
            var$5 = new jl_IllegalArgumentException;
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(1279)), $maxWidth), $rt_s(37)), $minWidth);
            jl_IllegalArgumentException__init_1(var$5, jl_StringBuilder_toString(var$6));
            $rt_throw(var$5);
        }
        var$5 = new jl_IllegalArgumentException;
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(1280)), $maxWidth);
        jl_IllegalArgumentException__init_1(var$5, jl_StringBuilder_toString(var$6));
        $rt_throw(var$5);
    }
    var$5 = new jl_IllegalArgumentException;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(1281)), $minWidth);
    jl_IllegalArgumentException__init_1(var$5, jl_StringBuilder_toString(var$6));
    $rt_throw(var$5);
},
jtf_DateTimeFormatterBuilder$FractionPrinterParser__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jtf_DateTimeFormatterBuilder$FractionPrinterParser();
    jtf_DateTimeFormatterBuilder$FractionPrinterParser__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jtf_DateTimeFormatterBuilder$FractionPrinterParser_parse = ($this, $context, $text, $position) => {
    let $effectiveMin, $effectiveMax, $length, $minEndPos, $maxEndPos, $total, $pos, $pos_0, $ch, $digit, $fraction, $value;
    $effectiveMin = !jtf_DateTimeParseContext_isStrict($context) ? 0 : $this.$minWidth0;
    $effectiveMax = !jtf_DateTimeParseContext_isStrict($context) ? 9 : $this.$maxWidth0;
    $length = $text.$length();
    if ($position == $length) {
        if ($effectiveMin > 0)
            $position = $position ^ (-1);
        return $position;
    }
    if ($this.$decimalPoint) {
        if ($text.$charAt($position) != jtf_DecimalStyle_getDecimalSeparator(jtf_DateTimeParseContext_getSymbols($context))) {
            if ($effectiveMin > 0)
                $position = $position ^ (-1);
            return $position;
        }
        $position = $position + 1 | 0;
    }
    $minEndPos = $position + $effectiveMin | 0;
    if ($minEndPos > $length)
        return $position ^ (-1);
    $maxEndPos = jl_Math_min($position + $effectiveMax | 0, $length);
    $total = 0;
    $pos = $position;
    a: {
        while ($pos < $maxEndPos) {
            $pos_0 = $pos + 1 | 0;
            $ch = $text.$charAt($pos);
            $digit = jtf_DecimalStyle_convertToDigit(jtf_DateTimeParseContext_getSymbols($context), $ch);
            if ($digit < 0) {
                if ($pos_0 < $minEndPos)
                    return $position ^ (-1);
                $pos = $pos_0 + (-1) | 0;
                break a;
            }
            $total = ($total * 10 | 0) + $digit | 0;
            $pos = $pos_0;
        }
    }
    $fraction = (jm_BigDecimal__init_6($total)).$movePointLeft($pos - $position | 0);
    $value = jtf_DateTimeFormatterBuilder$FractionPrinterParser_convertFromFraction($this, $fraction);
    return jtf_DateTimeParseContext_setParsedField($context, $this.$field1, $value, $position, $pos);
},
jtf_DateTimeFormatterBuilder$FractionPrinterParser_convertFromFraction = ($this, $fraction) => {
    let $range, $minBD, $rangeBD, var$5, $valueBD;
    $range = $this.$field1.$range();
    $minBD = jm_BigDecimal_valueOf0(jtt_ValueRange_getMinimum($range));
    $rangeBD = ((jm_BigDecimal_valueOf0(jtt_ValueRange_getMaximum($range))).$subtract3($minBD)).$add11(jm_BigDecimal_ONE);
    var$5 = $fraction.$multiply1($rangeBD);
    jm_RoundingMode_$callClinit();
    $valueBD = (var$5.$setScale(0, jm_RoundingMode_FLOOR)).$add11($minBD);
    return $valueBD.$longValueExact();
},
jtf_DateTimeFormatterBuilder$FractionPrinterParser_toString = $this => {
    let $decimal, var$2, var$3, var$4, var$5;
    $decimal = !$this.$decimalPoint ? $rt_s(23) : $rt_s(1282);
    var$2 = jl_String_valueOf($this.$field1);
    var$3 = $this.$minWidth0;
    var$4 = $this.$maxWidth0;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1283)), var$2), 44), var$3), 44), var$4), $decimal), 41);
    return jl_StringBuilder_toString(var$5);
},
jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_PosAltGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltGroupQuantifierSet__init_($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PosAltGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PosAltGroupQuantifierSet();
    jur_PosAltGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PosAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next5.$matches($nextIndex, $testString, $matchResult);
},
jur_PosAltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
};
function ju_Collections$14() {
    ju_AbstractSet.call(this);
    this.$val$c = null;
}
let ju_Collections$14__init_ = ($this, var$1) => {
    $this.$val$c = var$1;
    ju_AbstractSet__init_($this);
},
ju_Collections$14__init_0 = var_0 => {
    let var_1 = new ju_Collections$14();
    ju_Collections$14__init_(var_1, var_0);
    return var_1;
},
ju_Collections$14_size = $this => {
    return $this.$val$c.$size();
},
ju_Collections$14_iterator = $this => {
    return ju_Collections_unmodifiableMapEntryIterator($this.$val$c.$iterator());
};
function ju_Collections$15() {
    jl_Object.call(this);
    this.$val$c2 = null;
}
let ju_Collections$15__init_ = ($this, var$1) => {
    $this.$val$c2 = var$1;
    jl_Object__init_($this);
},
ju_Collections$15__init_0 = var_0 => {
    let var_1 = new ju_Collections$15();
    ju_Collections$15__init_(var_1, var_0);
    return var_1;
},
ju_Collections$15_hasNext = $this => {
    return $this.$val$c2.$hasNext();
},
ju_Collections$15_next0 = $this => {
    return ju_AbstractMap$SimpleImmutableEntry__init_2($this.$val$c2.$next());
},
ju_Collections$15_remove = $this => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
ju_Collections$15_next = $this => {
    return $this.$next3();
};
function ju_Collections$12() {
    ju_AbstractSet.call(this);
    this.$val$s = null;
}
let ju_Collections$12__init_ = ($this, var$1) => {
    $this.$val$s = var$1;
    ju_AbstractSet__init_($this);
},
ju_Collections$12__init_0 = var_0 => {
    let var_1 = new ju_Collections$12();
    ju_Collections$12__init_(var_1, var_0);
    return var_1;
},
ju_Collections$12_iterator = $this => {
    return ju_Collections_unmodifiableIterator($this.$val$s.$iterator());
},
ju_Collections$12_size = $this => {
    return $this.$val$s.$size();
};
function ju_Collections$13() {
    ju_AbstractMap.call(this);
    this.$val$m = null;
}
let ju_Collections$13__init_ = ($this, var$1) => {
    $this.$val$m = var$1;
    ju_AbstractMap__init_($this);
},
ju_Collections$13__init_0 = var_0 => {
    let var_1 = new ju_Collections$13();
    ju_Collections$13__init_(var_1, var_0);
    return var_1;
},
ju_Collections$13_entrySet = $this => {
    return ju_Collections_unmodifiableMapEntrySet($this.$val$m.$entrySet());
},
ju_Collections$13_remove = ($this, $o) => {
    $rt_throw(jl_UnsupportedOperationException__init_());
};
function jt_ParsePosition() {
    let a = this; jl_Object.call(a);
    a.$currentPosition = 0;
    a.$errorIndex = 0;
}
let jt_ParsePosition__init_ = ($this, $index) => {
    jl_Object__init_($this);
    $this.$errorIndex = (-1);
    $this.$currentPosition = $index;
},
jt_ParsePosition__init_0 = var_0 => {
    let var_1 = new jt_ParsePosition();
    jt_ParsePosition__init_(var_1, var_0);
    return var_1;
},
jt_ParsePosition_getErrorIndex = $this => {
    return $this.$errorIndex;
},
jt_ParsePosition_getIndex = $this => {
    return $this.$currentPosition;
},
jt_ParsePosition_setErrorIndex = ($this, $index) => {
    $this.$errorIndex = $index;
},
jt_ParsePosition_setIndex = ($this, $index) => {
    $this.$currentPosition = $index;
};
function ju_TemplateCollections$ImmutableArrayList() {
    ju_TemplateCollections$AbstractImmutableList.call(this);
    this.$list = null;
}
let ju_TemplateCollections$ImmutableArrayList__init_ = ($this, $list) => {
    ju_TemplateCollections$AbstractImmutableList__init_($this);
    $this.$list = $list;
},
ju_TemplateCollections$ImmutableArrayList__init_0 = var_0 => {
    let var_1 = new ju_TemplateCollections$ImmutableArrayList();
    ju_TemplateCollections$ImmutableArrayList__init_(var_1, var_0);
    return var_1;
},
ju_TemplateCollections$ImmutableArrayList_get = ($this, $index) => {
    return $this.$list.data[$index];
},
ju_TemplateCollections$ImmutableArrayList_size = $this => {
    return $this.$list.data.length;
},
ju_TemplateCollections$ImmutableArrayList_remove = ($this, var$1) => {
    return ju_TemplateCollections$AbstractImmutableList_remove($this, var$1);
},
ju_Queue = $rt_classWithoutFields(0),
ju_Deque = $rt_classWithoutFields(0);
function onn_NostrPool$onRelayMessage$lambda$_23_1() {
    jl_Object.call(this);
    this.$_089 = null;
}
let onn_NostrPool$onRelayMessage$lambda$_23_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_089 = var$1;
},
onn_NostrPool$onRelayMessage$lambda$_23_1__init_0 = var_0 => {
    let var_1 = new onn_NostrPool$onRelayMessage$lambda$_23_1();
    onn_NostrPool$onRelayMessage$lambda$_23_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrPool$onRelayMessage$lambda$_23_1_run = var$0 => {
    onn_NostrPool_lambda$onRelayMessage$19(var$0.$_089);
};
function onn_NostrPool$onRelayMessage$lambda$_23_0() {
    let a = this; jl_Object.call(a);
    a.$_051 = null;
    a.$_129 = null;
}
let onn_NostrPool$onRelayMessage$lambda$_23_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_051 = var$1;
    var$0.$_129 = var$2;
},
onn_NostrPool$onRelayMessage$lambda$_23_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$onRelayMessage$lambda$_23_0();
    onn_NostrPool$onRelayMessage$lambda$_23_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$onRelayMessage$lambda$_23_0_run = var$0 => {
    onn_NostrPool_lambda$onRelayMessage$18(var$0.$_051, var$0.$_129);
};
function cjj_Inflate$Return() {
    let a = this; jl_Exception.call(a);
    a.$r0 = 0;
    a.$this$045 = null;
}
let cjj_Inflate$Return__init_0 = ($this, var$1, $r) => {
    $this.$this$045 = var$1;
    jl_Exception__init_1($this);
    $this.$r0 = $r;
},
cjj_Inflate$Return__init_ = (var_0, var_1) => {
    let var_2 = new cjj_Inflate$Return();
    cjj_Inflate$Return__init_0(var_2, var_0, var_1);
    return var_2;
};
function onn_NostrPool$onRelayMessage$lambda$_23_3() {
    let a = this; jl_Object.call(a);
    a.$_0157 = null;
    a.$_178 = null;
}
let onn_NostrPool$onRelayMessage$lambda$_23_3__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0157 = var$1;
    var$0.$_178 = var$2;
},
onn_NostrPool$onRelayMessage$lambda$_23_3__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$onRelayMessage$lambda$_23_3();
    onn_NostrPool$onRelayMessage$lambda$_23_3__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$onRelayMessage$lambda$_23_3_run = var$0 => {
    onn_NostrPool_lambda$onRelayMessage$21(var$0.$_0157, var$0.$_178);
};
function jusi_FilteringStreamImpl() {
    jusi_WrappingStreamImpl.call(this);
    this.$filter0 = null;
}
let jusi_FilteringStreamImpl__init_ = ($this, $innerStream, $filter) => {
    jusi_WrappingStreamImpl__init_($this, $innerStream);
    $this.$filter0 = $filter;
},
jusi_FilteringStreamImpl__init_0 = (var_0, var_1) => {
    let var_2 = new jusi_FilteringStreamImpl();
    jusi_FilteringStreamImpl__init_(var_2, var_0, var_1);
    return var_2;
},
jusi_FilteringStreamImpl_wrap = ($this, $consumer) => {
    return jusi_FilteringStreamImpl$wrap$lambda$_1_0__init_0($this, $consumer);
},
jusi_FilteringStreamImpl_lambda$wrap$0 = ($this, $consumer, $t) => {
    if ($this.$filter0.$test0($t))
        return $consumer.$test0($t);
    return 1;
};
function onn_NostrPool$onRelayMessage$lambda$_23_2() {
    let a = this; jl_Object.call(a);
    a.$_013 = null;
    a.$_15 = null;
}
let onn_NostrPool$onRelayMessage$lambda$_23_2__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_013 = var$1;
    var$0.$_15 = var$2;
},
onn_NostrPool$onRelayMessage$lambda$_23_2__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$onRelayMessage$lambda$_23_2();
    onn_NostrPool$onRelayMessage$lambda$_23_2__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$onRelayMessage$lambda$_23_2_run = var$0 => {
    onn_NostrPool_lambda$onRelayMessage$20(var$0.$_013, var$0.$_15);
};
function ju_Collections$10() {
    ju_AbstractCollection.call(this);
    this.$val$c0 = null;
}
let ju_Collections$10__init_ = ($this, var$1) => {
    $this.$val$c0 = var$1;
    ju_AbstractCollection__init_($this);
},
ju_Collections$10__init_0 = var_0 => {
    let var_1 = new ju_Collections$10();
    ju_Collections$10__init_(var_1, var_0);
    return var_1;
},
ju_Collections$10_iterator = $this => {
    return ju_Collections_unmodifiableIterator($this.$val$c0.$iterator());
},
ju_Collections$10_size = $this => {
    return $this.$val$c0.$size();
};
function ju_Collections$11() {
    jl_Object.call(this);
    this.$val$c1 = null;
}
let ju_Collections$11__init_ = ($this, var$1) => {
    $this.$val$c1 = var$1;
    jl_Object__init_($this);
},
ju_Collections$11__init_0 = var_0 => {
    let var_1 = new ju_Collections$11();
    ju_Collections$11__init_(var_1, var_0);
    return var_1;
},
ju_Collections$11_hasNext = $this => {
    return $this.$val$c1.$hasNext();
},
ju_Collections$11_next = $this => {
    return $this.$val$c1.$next();
};
function onnrs_NostrRTCLocalPeer() {
    let a = this; onnrs_NostrRTCPeer.call(a);
    a.$signer = null;
    a.$stunServers = null;
}
let onnrs_NostrRTCLocalPeer__init_ = ($this, $signer, $stunServers, $turnServer, $misc) => {
    onnrs_NostrRTCPeer__init_0($this, onp_NGEUtils_awaitNoThrow($signer.$getPublicKey0()), $turnServer, $misc);
    ju_Objects_requireNonNull0($signer);
    ju_Objects_requireNonNull0($stunServers);
    $this.$signer = $signer;
    $this.$stunServers = $stunServers;
},
onnrs_NostrRTCLocalPeer__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCLocalPeer();
    onnrs_NostrRTCLocalPeer__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCLocalPeer_getSigner = $this => {
    return $this.$signer;
},
onnrs_NostrRTCLocalPeer_getStunServers = $this => {
    return $this.$stunServers;
},
onnrs_NostrRTCLocalPeer_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = jl_String_valueOf($this.$getPubkey());
    var$2 = jl_String_valueOf($this.$getMisc());
    var$3 = $this.$getTurnServer();
    var$4 = jl_String_valueOf($this.$getLastSeen());
    var$5 = jl_String_valueOf($this.$stunServers);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1284)), var$1), $rt_s(1259)), var$2), $rt_s(1260)), var$3), $rt_s(1261)), var$4), $rt_s(1285)), var$5), 125);
    var$1 = jl_StringBuilder_toString(var$6);
    return var$1;
},
onnrs_NostrRTCLocalPeer_getStunServers$exported$0 = var$1 => {
    return var$1.$getStunServers();
},
onnrs_NostrRTCLocalPeer_getSigner$exported$1 = var$1 => {
    return var$1.$getSigner();
},
onnrs_NostrRTCLocalPeer__init_$exported$2 = (var$1, var$2, var$3, var$4) => {
    return onnrs_NostrRTCLocalPeer__init_0(var$1, var$2, $rt_str(var$3), var$4);
};
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category = 0;
}
let jur_UnicodeCategory__init_ = ($this, $category) => {
    jur_AbstractCharClass__init_($this);
    $this.$category = $category;
},
jur_UnicodeCategory__init_0 = var_0 => {
    let var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_(var_1, var_0);
    return var_1;
},
jur_UnicodeCategory_contains = ($this, $ch) => {
    return $this.$alt ^ ($this.$category != jl_Character_getType0($ch & 65535) ? 0 : 1);
},
jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory),
jur_UnicodeCategoryScope__init_ = ($this, $category) => {
    jur_UnicodeCategory__init_($this, $category);
},
jur_UnicodeCategoryScope__init_0 = var_0 => {
    let var_1 = new jur_UnicodeCategoryScope();
    jur_UnicodeCategoryScope__init_(var_1, var_0);
    return var_1;
},
jur_UnicodeCategoryScope_contains = ($this, $ch) => {
    return $this.$alt ^ (!($this.$category >> jl_Character_getType0($ch & 65535) & 1) ? 0 : 1);
};
function onn_NostrRelay$afterSendMessage$lambda$_17_1() {
    jl_Object.call(this);
    this.$_024 = null;
}
let onn_NostrRelay$afterSendMessage$lambda$_17_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_024 = var$1;
},
onn_NostrRelay$afterSendMessage$lambda$_17_1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$afterSendMessage$lambda$_17_1();
    onn_NostrRelay$afterSendMessage$lambda$_17_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$afterSendMessage$lambda$_17_1_run = var$0 => {
    onn_NostrRelay_lambda$afterSendMessage$4(var$0.$_024);
};
function onn_NostrRelay$afterSendMessage$lambda$_17_0() {
    jl_Object.call(this);
    this.$_084 = null;
}
let onn_NostrRelay$afterSendMessage$lambda$_17_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_084 = var$1;
},
onn_NostrRelay$afterSendMessage$lambda$_17_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$afterSendMessage$lambda$_17_0();
    onn_NostrRelay$afterSendMessage$lambda$_17_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$afterSendMessage$lambda$_17_0_run = var$0 => {
    onn_NostrRelay_lambda$afterSendMessage$3(var$0.$_084);
};
function onnrs_NostrRTCSignaling$loop$lambda$_8_0() {
    jl_Object.call(this);
    this.$_023 = null;
}
let onnrs_NostrRTCSignaling$loop$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_023 = var$1;
},
onnrs_NostrRTCSignaling$loop$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$loop$lambda$_8_0();
    onnrs_NostrRTCSignaling$loop$lambda$_8_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$loop$lambda$_8_0_call = var$0 => {
    return onnrs_NostrRTCSignaling_lambda$loop$8(var$0.$_023);
},
onnu_UniqueId = $rt_classWithoutFields(),
onnu_UniqueId_COUNTER = null,
onnu_UniqueId_INSTANCE_ID = null,
onnu_UniqueId_$callClinit = () => {
    onnu_UniqueId_$callClinit = $rt_eraseClinit(onnu_UniqueId);
    onnu_UniqueId__clinit_();
},
onnu_UniqueId__init_ = $this => {
    onnu_UniqueId_$callClinit();
    jl_Object__init_($this);
},
onnu_UniqueId__init_0 = () => {
    let var_0 = new onnu_UniqueId();
    onnu_UniqueId__init_(var_0);
    return var_0;
},
onnu_UniqueId_getNext = () => {
    let $current, var$2, var$3, var$4;
    onnu_UniqueId_$callClinit();
    $current = juca_AtomicLong_incrementAndGet(onnu_UniqueId_COUNTER);
    var$2 = onnu_UniqueId_INSTANCE_ID;
    var$3 = onnu_UniqueId_random();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append2(jl_StringBuilder_append(var$4, $rt_s(1286)), $current), 106), var$2), 106), var$3);
    return jl_StringBuilder_toString(var$4);
},
onnu_UniqueId_random = () => {
    let $i;
    onnu_UniqueId_$callClinit();
    $i = jl_Math_random() * 2.147483647E9 | 0;
    return jl_Integer_toHexString($i);
},
onnu_UniqueId__clinit_ = () => {
    let var$1, var$2, var$3;
    onnu_UniqueId_COUNTER = juca_AtomicLong__init_0(Long_ZERO);
    var$1 = jl_System_currentTimeMillis();
    var$2 = onnu_UniqueId_random();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append2(var$3, var$1), 106), var$2);
    onnu_UniqueId_INSTANCE_ID = jl_StringBuilder_toString(var$3);
},
onnu_UniqueId__init_$exported$0 = () => {
    onnu_UniqueId_$callClinit();
    return onnu_UniqueId__init_0();
},
onnu_UniqueId_getNext$exported$0 = () => {
    onnu_UniqueId_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnu_UniqueId_getNext());
},
onnu_UniqueId_random$exported$1 = () => {
    onnu_UniqueId_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return $rt_ustr(onnu_UniqueId_random());
};
function onnr_NostrRTCSocket$connect$lambda$_9_0() {
    jl_Object.call(this);
    this.$_0184 = null;
}
let onnr_NostrRTCSocket$connect$lambda$_9_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0184 = var$1;
},
onnr_NostrRTCSocket$connect$lambda$_9_0__init_0 = var_0 => {
    let var_1 = new onnr_NostrRTCSocket$connect$lambda$_9_0();
    onnr_NostrRTCSocket$connect$lambda$_9_0__init_(var_1, var_0);
    return var_1;
};
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length6 = 0;
}
let jnc_UnmappableCharacterException__init_ = ($this, $length) => {
    jnc_CharacterCodingException__init_($this);
    $this.$length6 = $length;
},
jnc_UnmappableCharacterException__init_0 = var_0 => {
    let var_1 = new jnc_UnmappableCharacterException();
    jnc_UnmappableCharacterException__init_(var_1, var_0);
    return var_1;
},
jnc_UnmappableCharacterException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length6;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(1287)), var$1);
    return jl_StringBuilder_toString(var$2);
},
onnu_Bech32$Bech32DecodingException = $rt_classWithoutFields(onnu_Bech32$Bech32Exception),
onnu_Bech32$Bech32DecodingException__init_ = ($this, $message) => {
    onnu_Bech32$Bech32Exception__init_($this, $message);
},
onnu_Bech32$Bech32DecodingException__init_0 = var_0 => {
    let var_1 = new onnu_Bech32$Bech32DecodingException();
    onnu_Bech32$Bech32DecodingException__init_(var_1, var_0);
    return var_1;
};
function cjj_InfTree() {
    let a = this; jl_Object.call(a);
    a.$hn = null;
    a.$v = null;
    a.$c = null;
    a.$r = null;
    a.$u = null;
    a.$x = null;
}
let cjj_InfTree_fixed_tl = null,
cjj_InfTree_fixed_td = null,
cjj_InfTree_cplens = null,
cjj_InfTree_cplext = null,
cjj_InfTree_cpdist = null,
cjj_InfTree_cpdext = null,
cjj_InfTree_$callClinit = () => {
    cjj_InfTree_$callClinit = $rt_eraseClinit(cjj_InfTree);
    cjj_InfTree__clinit_();
},
cjj_InfTree__init_ = $this => {
    cjj_InfTree_$callClinit();
    jl_Object__init_($this);
    $this.$hn = null;
    $this.$v = null;
    $this.$c = null;
    $this.$r = null;
    $this.$u = null;
    $this.$x = null;
},
cjj_InfTree__init_0 = () => {
    let var_0 = new cjj_InfTree();
    cjj_InfTree__init_(var_0);
    return var_0;
},
cjj_InfTree_huft_build = ($this, $b, $bindex, $n, $s, $d, $e, $t, $m, $hp, $hn, $v) => {
    let $p, $i, var$14, var$15, var$16, var$17, $l, $j, var$20, $y, var$22, var$23, var$24, $xp, var$26, var$27, var$28, $h, $w, $q, $z, $a, $a_0, var$35, var$36, var$37, var$38, $f, $mask;
    $p = 0;
    $i = $n;
    while (true) {
        var$14 = $b.data;
        var$15 = $this.$c.data;
        var$16 = var$14[$bindex + $p | 0];
        var$15[var$16] = var$15[var$16] + 1 | 0;
        $p = $p + 1 | 0;
        $i = $i + (-1) | 0;
        if (!$i)
            break;
    }
    if ($this.$c.data[0] == $n) {
        var$15 = $t.data;
        var$17 = $m.data;
        var$15[0] = (-1);
        var$17[0] = 0;
        return 0;
    }
    var$17 = $m.data;
    $l = var$17[0];
    $j = 1;
    a: {
        while (true) {
            if ($j > 15)
                break a;
            if ($this.$c.data[$j])
                break;
            $j = $j + 1 | 0;
        }
    }
    if ($l < $j)
        $l = $j;
    var$20 = 15;
    b: {
        while (true) {
            if (!var$20)
                break b;
            if ($this.$c.data[var$20])
                break;
            var$20 = var$20 + (-1) | 0;
        }
    }
    if ($l > var$20)
        $l = var$20;
    var$17[0] = $l;
    $y = 1 << $j;
    var$22 = $j;
    while (true) {
        if (var$22 >= var$20) {
            var$23 = $y - $this.$c.data[var$20] | 0;
            if (var$23 < 0)
                return (-3);
            var$15 = $this.$c.data;
            var$15[var$20] = var$15[var$20] + var$23 | 0;
            var$15 = $this.$x.data;
            var$24 = 0;
            var$15[1] = var$24;
            var$22 = 1;
            $xp = 2;
            var$26 = var$20;
            while (true) {
                var$26 = var$26 + (-1) | 0;
                if (!var$26)
                    break;
                var$17 = $this.$x.data;
                var$24 = var$24 + $this.$c.data[var$22] | 0;
                var$17[$xp] = var$24;
                $xp = $xp + 1 | 0;
                var$22 = var$22 + 1 | 0;
            }
            var$22 = 0;
            var$26 = 0;
            while (true) {
                var$27 = var$14[$bindex + var$26 | 0];
                if (var$27) {
                    var$17 = $v.data;
                    var$15 = $this.$x.data;
                    var$16 = var$15[var$27];
                    var$15[var$27] = var$16 + 1 | 0;
                    var$17[var$16] = var$22;
                }
                var$26 = var$26 + 1 | 0;
                var$22 = var$22 + 1 | 0;
                if (var$22 >= $n)
                    break;
            }
            var$26 = $this.$x.data[var$20];
            var$15 = $this.$x.data;
            var$27 = 0;
            var$15[0] = var$27;
            var$28 = 0;
            $h = (-1);
            $w =  -$l | 0;
            $this.$u.data[0] = 0;
            $q = 0;
            $z = 0;
            c: while (true) {
                if ($j > var$20)
                    return var$23 && var$20 != 1 ? (-5) : 0;
                $a = $this.$c.data[$j];
                while (true) {
                    $a_0 = $a + (-1) | 0;
                    if (!$a)
                        break;
                    while (true) {
                        var$35 = $w + $l | 0;
                        if ($j <= var$35)
                            break;
                        $h = $h + 1 | 0;
                        var$36 = var$20 - var$35 | 0;
                        if (var$36 > $l)
                            var$36 = $l;
                        d: {
                            var$37 = $j - var$35 | 0;
                            var$16 = 1 << var$37;
                            var$24 = $a_0 + 1 | 0;
                            if (var$16 > var$24) {
                                var$16 = var$16 - var$24 | 0;
                                if (var$37 < var$36) {
                                    var$24 = $j;
                                    while (true) {
                                        var$37 = var$37 + 1 | 0;
                                        if (var$37 >= var$36)
                                            break;
                                        var$16 = var$16 << 1;
                                        var$15 = $this.$c.data;
                                        var$24 = var$24 + 1 | 0;
                                        if (var$16 <= var$15[var$24])
                                            break d;
                                        var$16 = var$16 - $this.$c.data[var$24] | 0;
                                    }
                                }
                            }
                        }
                        var$15 = $hn.data;
                        $z = 1 << var$37;
                        if ((var$15[0] + $z | 0) > 1440)
                            break c;
                        var$17 = $this.$u.data;
                        $q = var$15[0];
                        var$17[$h] = $q;
                        var$15[0] = var$15[0] + $z | 0;
                        if (!$h) {
                            $t.data[0] = $q;
                            $w = var$35;
                            continue;
                        }
                        $this.$x.data[$h] = var$27;
                        $this.$r.data[0] = var$37 << 24 >> 24;
                        $this.$r.data[1] = $l << 24 >> 24;
                        var$16 = var$27 >>> (var$35 - $l | 0) | 0;
                        var$17 = $this.$r.data;
                        var$15 = $this.$u.data;
                        var$22 = $h - 1 | 0;
                        var$17[2] = ($q - var$15[var$22] | 0) - var$16 | 0;
                        jl_System_fastArraycopy($this.$r, 0, $hp, ($this.$u.data[var$22] + var$16 | 0) * 3 | 0, 3);
                        $w = var$35;
                    }
                    var$15 = $this.$r.data;
                    var$36 = $j - $w | 0;
                    var$15[1] = var$36 << 24 >> 24;
                    if (var$28 >= var$26)
                        $this.$r.data[0] = 192;
                    else {
                        var$38 = $v.data;
                        if (var$38[var$28] >= $s) {
                            var$17 = $e.data;
                            var$14 = $d.data;
                            $this.$r.data[0] = ((var$17[var$38[var$28] - $s | 0] + 16 | 0) + 64 | 0) << 24 >> 24;
                            var$15 = $this.$r.data;
                            var$24 = var$28 + 1 | 0;
                            var$15[2] = var$14[var$38[var$28] - $s | 0];
                            var$28 = var$24;
                        } else {
                            var$15 = $this.$r;
                            var$15.data[0] = (var$38[var$28] >= 256 ? 96 : 0) << 24 >> 24;
                            var$15 = $this.$r.data;
                            var$24 = var$28 + 1 | 0;
                            var$15[2] = var$38[var$28];
                            var$28 = var$24;
                        }
                    }
                    $f = 1 << var$36;
                    var$16 = var$27 >>> $w | 0;
                    while (var$16 < $z) {
                        jl_System_fastArraycopy($this.$r, 0, $hp, ($q + var$16 | 0) * 3 | 0, 3);
                        var$16 = var$16 + $f | 0;
                    }
                    var$16 = 1 << ($j - 1 | 0);
                    while (var$27 & var$16) {
                        var$27 = var$27 ^ var$16;
                        var$16 = var$16 >>> 1 | 0;
                    }
                    var$27 = var$27 ^ var$16;
                    $mask = (1 << $w) - 1 | 0;
                    while ((var$27 & $mask) != $this.$x.data[$h]) {
                        $h = $h + (-1) | 0;
                        $w = $w - $l | 0;
                        $mask = (1 << $w) - 1 | 0;
                    }
                    $a = $a_0;
                }
                $j = $j + 1 | 0;
            }
            return (-3);
        }
        var$16 = $y - $this.$c.data[var$22] | 0;
        if (var$16 < 0)
            break;
        var$22 = var$22 + 1 | 0;
        $y = var$16 << 1;
    }
    return (-3);
},
cjj_InfTree_inflate_trees_bits = ($this, $c, $bb, $tb, $hp, $z) => {
    let $result;
    cjj_InfTree_initWorkArea($this, 19);
    $this.$hn.data[0] = 0;
    $result = cjj_InfTree_huft_build($this, $c, 0, 19, 19, null, null, $tb, $bb, $hp, $this.$hn, $this.$v);
    if ($result == (-3))
        $z.$msg = $rt_s(1288);
    else if (!($result != (-5) && $bb.data[0])) {
        $z.$msg = $rt_s(1289);
        $result = (-3);
    }
    return $result;
},
cjj_InfTree_inflate_trees_dynamic = ($this, $nl, $nd, $c, $bl, $bd, $tl, $td, $hp, $z) => {
    let $result, var$11;
    cjj_InfTree_initWorkArea($this, 288);
    $this.$hn.data[0] = 0;
    $result = cjj_InfTree_huft_build($this, $c, 0, $nl, 257, cjj_InfTree_cplens, cjj_InfTree_cplext, $tl, $bl, $hp, $this.$hn, $this.$v);
    if (!$result && $bl.data[0]) {
        cjj_InfTree_initWorkArea($this, 288);
        var$11 = cjj_InfTree_huft_build($this, $c, $nl, $nd, 0, cjj_InfTree_cpdist, cjj_InfTree_cpdext, $td, $bd, $hp, $this.$hn, $this.$v);
        if (!var$11 && !(!$bd.data[0] && $nl > 257))
            return 0;
        if (var$11 == (-3))
            $z.$msg = $rt_s(1290);
        else if (var$11 == (-5)) {
            $z.$msg = $rt_s(1291);
            var$11 = (-3);
        } else if (var$11 != (-4)) {
            $z.$msg = $rt_s(1292);
            var$11 = (-3);
        }
        return var$11;
    }
    if ($result == (-3))
        $z.$msg = $rt_s(1293);
    else if ($result != (-4)) {
        $z.$msg = $rt_s(1294);
        $result = (-3);
    }
    return $result;
},
cjj_InfTree_inflate_trees_fixed = ($bl, $bd, $tl, $td, $z) => {
    let var$6, var$7, var$8;
    cjj_InfTree_$callClinit();
    var$6 = $td.data;
    var$7 = $tl.data;
    var$8 = $bd.data;
    $bl.data[0] = 9;
    var$8[0] = 5;
    var$7[0] = cjj_InfTree_fixed_tl;
    var$6[0] = cjj_InfTree_fixed_td;
    return 0;
},
cjj_InfTree_initWorkArea = ($this, $vsize) => {
    let $i;
    if ($this.$hn === null) {
        $this.$hn = $rt_createIntArray(1);
        $this.$v = $rt_createIntArray($vsize);
        $this.$c = $rt_createIntArray(16);
        $this.$r = $rt_createIntArray(3);
        $this.$u = $rt_createIntArray(15);
        $this.$x = $rt_createIntArray(16);
    }
    if ($this.$v.data.length < $vsize)
        $this.$v = $rt_createIntArray($vsize);
    $i = 0;
    while ($i < $vsize) {
        $this.$v.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 16) {
        $this.$c.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 3) {
        $this.$r.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    jl_System_fastArraycopy($this.$c, 0, $this.$u, 0, 15);
    jl_System_fastArraycopy($this.$c, 0, $this.$x, 0, 16);
},
cjj_InfTree__clinit_ = () => {
    cjj_InfTree_fixed_tl = $rt_createIntArrayFromData([96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 192, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 160, 0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 224, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 144, 83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 208, 81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 176, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 240, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 200, 81, 7, 13, 0, 8, 100, 0, 8, 36, 0,
    9, 168, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 232, 80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 152, 84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 216, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 184, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 248, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 196, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 164, 0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 228, 80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 148, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 212, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 180,
    0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 244, 80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 204, 81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 172, 0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 236, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 156, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 220, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 188, 0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 252, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 194, 80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 162, 0,
    8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 226, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 146, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 210, 81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 178, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 242, 80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 202, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 170, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 234, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 154, 84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 218, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 186, 0, 8, 13,
    0, 8, 141, 0, 8, 77, 0, 9, 250, 80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 198, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 166, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 230, 80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 150, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 214, 82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 182, 0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 246, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 206, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 174, 0, 8, 7, 0, 8,
    135, 0, 8, 71, 0, 9, 238, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 158, 84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 222, 82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 190, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 254, 96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 193, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 161, 0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 225, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 145, 83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 209, 81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 177, 0, 8, 8, 0, 8, 136,
    0, 8, 72, 0, 9, 241, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 201, 81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 169, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 233, 80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 153, 84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 217, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 185, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 249, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 197, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 165, 0, 8, 2, 0, 8, 130, 0,
    8, 66, 0, 9, 229, 80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 149, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 213, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 181, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 245, 80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 205, 81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 173, 0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 237, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 157, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 221, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 189, 0, 8, 14, 0, 8, 142, 0, 8,
    78, 0, 9, 253, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 195, 80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 163, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 227, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 147, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 211, 81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 179, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 243, 80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 203, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 171, 0, 8, 5, 0, 8, 133, 0, 8, 69,
    0, 9, 235, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 155, 84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 219, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 187, 0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 251, 80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 199, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 167, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 231, 80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 151, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 215, 82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 183, 0, 8, 11, 0, 8, 139, 0, 8, 75, 0,
    9, 247, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 207, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 175, 0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 239, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 159, 84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 223, 82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 191, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 255]);
    cjj_InfTree_fixed_td = $rt_createIntArrayFromData([80, 5, 1, 87, 5, 257, 83, 5, 17, 91, 5, 4097, 81, 5, 5, 89, 5, 1025, 85, 5, 65, 93, 5, 16385, 80, 5, 3, 88, 5, 513, 84, 5, 33, 92, 5, 8193, 82, 5, 9, 90, 5, 2049, 86, 5, 129, 192, 5, 24577, 80, 5, 2, 87, 5, 385, 83, 5, 25, 91, 5, 6145, 81, 5, 7, 89, 5, 1537, 85, 5, 97, 93, 5, 24577, 80, 5, 4, 88, 5, 769, 84, 5, 49, 92, 5, 12289, 82, 5, 13, 90, 5, 3073, 86, 5, 193, 192, 5, 24577]);
    cjj_InfTree_cplens = $rt_createIntArrayFromData([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]);
    cjj_InfTree_cplext = $rt_createIntArrayFromData([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112]);
    cjj_InfTree_cpdist = $rt_createIntArrayFromData([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577]);
    cjj_InfTree_cpdext = $rt_createIntArrayFromData([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]);
};
function onns_SdanSlotBid() {
    jl_Enum.call(this);
    this.$value16 = null;
}
let onns_SdanSlotBid_BTC10_000 = null,
onns_SdanSlotBid_BTC100_000 = null,
onns_SdanSlotBid_BTC1_000_000 = null,
onns_SdanSlotBid_BTC2_000_000 = null,
onns_SdanSlotBid_BTC5_000_000 = null,
onns_SdanSlotBid_BTC10_000_000 = null,
onns_SdanSlotBid_BTC50_000_000 = null,
onns_SdanSlotBid_$VALUES = null,
onns_SdanSlotBid_$callClinit = () => {
    onns_SdanSlotBid_$callClinit = $rt_eraseClinit(onns_SdanSlotBid);
    onns_SdanSlotBid__clinit_();
},
onns_SdanSlotBid_values = () => {
    onns_SdanSlotBid_$callClinit();
    return onns_SdanSlotBid_$VALUES.$clone0();
},
onns_SdanSlotBid_valueOf = $name => {
    onns_SdanSlotBid_$callClinit();
    return jl_Enum_valueOf($rt_cls(onns_SdanSlotBid), $name);
},
onns_SdanSlotBid__init_0 = ($this, var$1, var$2, $value) => {
    onns_SdanSlotBid_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value16 = $value;
},
onns_SdanSlotBid__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onns_SdanSlotBid();
    onns_SdanSlotBid__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_SdanSlotBid_getValue = $this => {
    return $this.$value16;
},
onns_SdanSlotBid_$values = () => {
    let var$1, var$2;
    onns_SdanSlotBid_$callClinit();
    var$1 = $rt_createArray(onns_SdanSlotBid, 7);
    var$2 = var$1.data;
    var$2[0] = onns_SdanSlotBid_BTC10_000;
    var$2[1] = onns_SdanSlotBid_BTC100_000;
    var$2[2] = onns_SdanSlotBid_BTC1_000_000;
    var$2[3] = onns_SdanSlotBid_BTC2_000_000;
    var$2[4] = onns_SdanSlotBid_BTC5_000_000;
    var$2[5] = onns_SdanSlotBid_BTC10_000_000;
    var$2[6] = onns_SdanSlotBid_BTC50_000_000;
    return var$1;
},
onns_SdanSlotBid__clinit_ = () => {
    onns_SdanSlotBid_BTC10_000 = onns_SdanSlotBid__init_($rt_s(1295), 0, $rt_s(1295));
    onns_SdanSlotBid_BTC100_000 = onns_SdanSlotBid__init_($rt_s(1296), 1, $rt_s(1296));
    onns_SdanSlotBid_BTC1_000_000 = onns_SdanSlotBid__init_($rt_s(1297), 2, $rt_s(1297));
    onns_SdanSlotBid_BTC2_000_000 = onns_SdanSlotBid__init_($rt_s(1298), 3, $rt_s(1298));
    onns_SdanSlotBid_BTC5_000_000 = onns_SdanSlotBid__init_($rt_s(1299), 4, $rt_s(1299));
    onns_SdanSlotBid_BTC10_000_000 = onns_SdanSlotBid__init_($rt_s(1300), 5, $rt_s(1300));
    onns_SdanSlotBid_BTC50_000_000 = onns_SdanSlotBid__init_($rt_s(1301), 6, $rt_s(1301));
    onns_SdanSlotBid_$VALUES = onns_SdanSlotBid_$values();
},
onns_SdanSlotBid__init_$exported$0 = (var$1, var$2, var$3) => {
    onns_SdanSlotBid_$callClinit();
    return onns_SdanSlotBid__init_($rt_str(var$1), var$2, $rt_str(var$3));
},
onns_SdanSlotBid_getValue$exported$1 = var$1 => {
    onns_SdanSlotBid_$callClinit();
    return $rt_ustr(onns_SdanSlotBid_getValue(var$1));
},
onns_SdanSlotBid_values$exported$0 = () => {
    onns_SdanSlotBid_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanSlotBid_values());
},
onns_SdanSlotBid_valueOf$exported$1 = var$1 => {
    onns_SdanSlotBid_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_SdanSlotBid_valueOf($rt_str(var$1));
},
onns_SdanSlotBid_$values$exported$2 = () => {
    onns_SdanSlotBid_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanSlotBid_$values());
};
function otcit_FloatAnalyzer$Result() {
    let a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent0 = 0;
    a.$sign3 = 0;
}
let otcit_FloatAnalyzer$Result__init_ = $this => {
    jl_Object__init_($this);
},
otcit_FloatAnalyzer$Result__init_0 = () => {
    let var_0 = new otcit_FloatAnalyzer$Result();
    otcit_FloatAnalyzer$Result__init_(var_0);
    return var_0;
},
jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_UCIDecomposedCharSet__init_ = ($this, $decomp, $decomposedCharLength) => {
    jur_DecomposedCharSet__init_($this, $decomp, $decomposedCharLength);
},
jur_UCIDecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_UCIDecomposedCharSet();
    jur_UCIDecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jl_String$_clinit_$lambda$_115_0 = $rt_classWithoutFields(),
jl_String$_clinit_$lambda$_115_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jl_String$_clinit_$lambda$_115_0__init_0 = () => {
    let var_0 = new jl_String$_clinit_$lambda$_115_0();
    jl_String$_clinit_$lambda$_115_0__init_(var_0);
    return var_0;
};
function jtf_DateTimeBuilder() {
    let a = this; jl_Object.call(a);
    a.$fieldValues = null;
    a.$chrono = null;
    a.$zone0 = null;
    a.$date = null;
    a.$time1 = null;
    a.$leapSecond0 = 0;
    a.$excessDays = null;
}
let jtf_DateTimeBuilder__init_ = $this => {
    jl_Object__init_($this);
    $this.$fieldValues = ju_HashMap__init_();
},
jtf_DateTimeBuilder__init_0 = () => {
    let var_0 = new jtf_DateTimeBuilder();
    jtf_DateTimeBuilder__init_(var_0);
    return var_0;
},
jtf_DateTimeBuilder_getFieldValue0 = ($this, $field) => {
    return $this.$fieldValues.$get1($field);
},
jtf_DateTimeBuilder_addFieldValue = ($this, $field, $value) => {
    let $old, var$4, var$5, var$6, var$7, var$8;
    ju_Objects_requireNonNull($field, $rt_s(33));
    $old = jtf_DateTimeBuilder_getFieldValue0($this, $field);
    if ($old !== null && Long_ne($old.$longValue(), $value)) {
        var$4 = new jt_DateTimeException;
        var$5 = jl_String_valueOf($field);
        var$6 = jl_String_valueOf($field);
        var$7 = jl_String_valueOf($this);
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1302)), var$5), 32), $old), $rt_s(1303)), var$6), 32), $value), $rt_s(17)), var$7);
        jt_DateTimeException__init_(var$4, jl_StringBuilder_toString(var$8));
        $rt_throw(var$4);
    }
    return jtf_DateTimeBuilder_putFieldValue0($this, $field, $value);
},
jtf_DateTimeBuilder_putFieldValue0 = ($this, $field, $value) => {
    $this.$fieldValues.$put1($field, jl_Long_valueOf($value));
    return $this;
},
jtf_DateTimeBuilder_addObject0 = ($this, $date) => {
    $this.$date = $date;
},
jtf_DateTimeBuilder_addObject = ($this, $time) => {
    $this.$time1 = $time;
},
jtf_DateTimeBuilder_resolve = ($this, $resolverStyle, $resolverFields) => {
    if ($resolverFields !== null)
        ($this.$fieldValues.$keySet()).$retainAll($resolverFields);
    jtf_DateTimeBuilder_mergeInstantFields($this);
    jtf_DateTimeBuilder_mergeDate($this, $resolverStyle);
    jtf_DateTimeBuilder_mergeTime($this, $resolverStyle);
    if (jtf_DateTimeBuilder_resolveFields($this, $resolverStyle)) {
        jtf_DateTimeBuilder_mergeInstantFields($this);
        jtf_DateTimeBuilder_mergeDate($this, $resolverStyle);
        jtf_DateTimeBuilder_mergeTime($this, $resolverStyle);
    }
    jtf_DateTimeBuilder_resolveTimeInferZeroes($this, $resolverStyle);
    jtf_DateTimeBuilder_crossCheck0($this);
    if ($this.$excessDays !== null && !jt_Period_isZero($this.$excessDays) && $this.$date !== null && $this.$time1 !== null) {
        $this.$date = $this.$date.$plus4($this.$excessDays);
        $this.$excessDays = jt_Period_ZERO;
    }
    jtf_DateTimeBuilder_resolveFractional($this);
    jtf_DateTimeBuilder_resolveInstant($this);
    return $this;
},
jtf_DateTimeBuilder_resolveFields = ($this, $resolverStyle) => {
    let $changes, var$3, var$4, $entry, $targetField, $resolvedObject, $czdt, var$9, var$10, $cldt;
    $changes = 0;
    a: {
        b: while (true) {
            var$3 = $rt_compare($changes, 100);
            if (var$3 >= 0)
                break a;
            var$4 = ($this.$fieldValues.$entrySet()).$iterator();
            c: {
                while (true) {
                    if (!var$4.$hasNext())
                        break a;
                    $entry = var$4.$next();
                    $targetField = $entry.$getKey();
                    $resolvedObject = $targetField.$resolve0($this.$fieldValues, $this, $resolverStyle);
                    if ($resolvedObject !== null)
                        break c;
                    if (!$this.$fieldValues.$containsKey($targetField))
                        break;
                }
                $changes = $changes + 1 | 0;
                continue b;
            }
            if ($resolvedObject instanceof jtc_ChronoZonedDateTime) {
                $czdt = $resolvedObject;
                if ($this.$zone0 === null)
                    $this.$zone0 = $czdt.$getZone();
                else if (!$this.$zone0.$equals($czdt.$getZone())) {
                    var$9 = new jt_DateTimeException;
                    var$4 = jl_String_valueOf($this.$zone0);
                    var$10 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(1304)), var$4);
                    jt_DateTimeException__init_(var$9, jl_StringBuilder_toString(var$10));
                    $rt_throw(var$9);
                }
                $resolvedObject = $czdt.$toLocalDateTime();
            }
            if ($resolvedObject instanceof jtc_ChronoLocalDate) {
                jtf_DateTimeBuilder_resolveMakeChanges($this, $targetField, $resolvedObject);
                $changes = $changes + 1 | 0;
                continue;
            }
            if ($resolvedObject instanceof jt_LocalTime) {
                jtf_DateTimeBuilder_resolveMakeChanges0($this, $targetField, $resolvedObject);
                $changes = $changes + 1 | 0;
                continue;
            }
            if (!($resolvedObject instanceof jtc_ChronoLocalDateTime))
                break;
            $cldt = $resolvedObject;
            jtf_DateTimeBuilder_resolveMakeChanges($this, $targetField, $cldt.$toLocalDate());
            jtf_DateTimeBuilder_resolveMakeChanges0($this, $targetField, $cldt.$toLocalTime());
            $changes = $changes + 1 | 0;
        }
        var$9 = new jt_DateTimeException;
        var$4 = jl_Class_getName(jl_Object_getClass($resolvedObject));
        var$10 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(1305)), var$4);
        jt_DateTimeException__init_(var$9, jl_StringBuilder_toString(var$10));
        $rt_throw(var$9);
    }
    if (!var$3)
        $rt_throw(jt_DateTimeException__init_0($rt_s(1306)));
    return $changes <= 0 ? 0 : 1;
},
jtf_DateTimeBuilder_resolveMakeChanges = ($this, $targetField, $date) => {
    let var$3, var$4, var$5, $epochDay, $old, var$8, var$9;
    if (!$this.$chrono.$equals($date.$getChronology())) {
        var$3 = new jt_DateTimeException;
        var$4 = jl_String_valueOf($this.$chrono);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1307)), var$4);
        jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$5));
        $rt_throw(var$3);
    }
    $epochDay = $date.$toEpochDay();
    var$3 = $this.$fieldValues;
    jtt_ChronoField_$callClinit();
    $old = var$3.$put1(jtt_ChronoField_EPOCH_DAY, jl_Long_valueOf($epochDay));
    if ($old !== null && Long_ne($old.$longValue(), $epochDay)) {
        var$3 = new jt_DateTimeException;
        var$4 = jl_String_valueOf(jt_LocalDate_ofEpochDay($old.$longValue()));
        var$5 = jl_String_valueOf(jt_LocalDate_ofEpochDay($epochDay));
        var$8 = jl_String_valueOf($targetField);
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1302)), var$4), $rt_s(1303)), var$5), $rt_s(1308)), var$8);
        jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$9));
        $rt_throw(var$3);
    }
},
jtf_DateTimeBuilder_resolveMakeChanges0 = ($this, $targetField, $time) => {
    let $nanOfDay, var$4, $old, var$6, var$7, var$8, var$9;
    $nanOfDay = jt_LocalTime_toNanoOfDay($time);
    var$4 = $this.$fieldValues;
    jtt_ChronoField_$callClinit();
    $old = var$4.$put1(jtt_ChronoField_NANO_OF_DAY, jl_Long_valueOf($nanOfDay));
    if ($old !== null && Long_ne($old.$longValue(), $nanOfDay)) {
        var$6 = new jt_DateTimeException;
        var$4 = jl_String_valueOf(jt_LocalTime_ofNanoOfDay($old.$longValue()));
        var$7 = jl_String_valueOf($time);
        var$8 = jl_String_valueOf($targetField);
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1302)), var$4), $rt_s(1303)), var$7), $rt_s(1308)), var$8);
        jt_DateTimeException__init_(var$6, jl_StringBuilder_toString(var$9));
        $rt_throw(var$6);
    }
},
jtf_DateTimeBuilder_mergeDate = ($this, $resolverStyle) => {
    let var$2;
    if ($this.$chrono instanceof jtc_IsoChronology) {
        jtc_IsoChronology_$callClinit();
        jtf_DateTimeBuilder_checkDate($this, jtc_IsoChronology_resolveDate(jtc_IsoChronology_INSTANCE, $this.$fieldValues, $resolverStyle));
    } else {
        var$2 = $this.$fieldValues;
        jtt_ChronoField_$callClinit();
        if (var$2.$containsKey(jtt_ChronoField_EPOCH_DAY))
            jtf_DateTimeBuilder_checkDate($this, jt_LocalDate_ofEpochDay(($this.$fieldValues.$remove1(jtt_ChronoField_EPOCH_DAY)).$longValue()));
    }
},
jtf_DateTimeBuilder_checkDate = ($this, $date) => {
    let var$2, $field, $val1, $val2, var$6, var$7, var$8, var$9, $$je;
    a: {
        if ($date !== null) {
            jtf_DateTimeBuilder_addObject0($this, $date);
            var$2 = ($this.$fieldValues.$keySet()).$iterator();
            b: while (true) {
                if (!var$2.$hasNext())
                    break a;
                $field = var$2.$next();
                if ($field instanceof jtt_ChronoField && $field.$isDateBased()) {
                    c: {
                        try {
                            $val1 = jt_LocalDate_getLong($date, $field);
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jt_DateTimeException) {
                            } else {
                                throw $$e;
                            }
                        }
                        continue b;
                    }
                    $val2 = $this.$fieldValues.$get1($field);
                    if (Long_ne($val1, $val2.$longValue())) {
                        var$6 = new jt_DateTimeException;
                        var$2 = jl_String_valueOf($field);
                        var$7 = jl_String_valueOf($field);
                        var$8 = jl_String_valueOf($date);
                        var$9 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(1309)), var$2), 32), $val1), $rt_s(1303)), var$7), 32), $val2), $rt_s(1310)), var$8);
                        jt_DateTimeException__init_(var$6, jl_StringBuilder_toString(var$9));
                        $rt_throw(var$6);
                    }
                }
            }
        }
    }
},
jtf_DateTimeBuilder_mergeTime = ($this, $resolverStyle) => {
    let var$2, $ch, var$4, $ap, $hap, $nod, $cod, $lod, $sod, $mod, $los, $cos, $nos;
    var$2 = $this.$fieldValues;
    jtt_ChronoField_$callClinit();
    if (var$2.$containsKey(jtt_ChronoField_CLOCK_HOUR_OF_DAY)) {
        $ch = ($this.$fieldValues.$remove1(jtt_ChronoField_CLOCK_HOUR_OF_DAY)).$longValue();
        jtf_ResolverStyle_$callClinit();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT && !($resolverStyle === jtf_ResolverStyle_SMART && Long_eq($ch, Long_ZERO)))
            jtt_ChronoField_checkValidValue(jtt_ChronoField_CLOCK_HOUR_OF_DAY, $ch);
        var$4 = jtt_ChronoField_HOUR_OF_DAY;
        if (Long_eq($ch, Long_fromInt(24)))
            $ch = Long_ZERO;
        jtf_DateTimeBuilder_addFieldValue($this, var$4, $ch);
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_CLOCK_HOUR_OF_AMPM)) {
        $ch = ($this.$fieldValues.$remove1(jtt_ChronoField_CLOCK_HOUR_OF_AMPM)).$longValue();
        jtf_ResolverStyle_$callClinit();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT && !($resolverStyle === jtf_ResolverStyle_SMART && Long_eq($ch, Long_ZERO)))
            jtt_ChronoField_checkValidValue(jtt_ChronoField_CLOCK_HOUR_OF_AMPM, $ch);
        var$4 = jtt_ChronoField_HOUR_OF_AMPM;
        if (Long_eq($ch, Long_fromInt(12)))
            $ch = Long_ZERO;
        jtf_DateTimeBuilder_addFieldValue($this, var$4, $ch);
    }
    jtf_ResolverStyle_$callClinit();
    if ($resolverStyle !== jtf_ResolverStyle_LENIENT) {
        if ($this.$fieldValues.$containsKey(jtt_ChronoField_AMPM_OF_DAY))
            jtt_ChronoField_checkValidValue(jtt_ChronoField_AMPM_OF_DAY, ($this.$fieldValues.$get1(jtt_ChronoField_AMPM_OF_DAY)).$longValue());
        if ($this.$fieldValues.$containsKey(jtt_ChronoField_HOUR_OF_AMPM))
            jtt_ChronoField_checkValidValue(jtt_ChronoField_HOUR_OF_AMPM, ($this.$fieldValues.$get1(jtt_ChronoField_HOUR_OF_AMPM)).$longValue());
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_AMPM_OF_DAY) && $this.$fieldValues.$containsKey(jtt_ChronoField_HOUR_OF_AMPM)) {
        $ap = ($this.$fieldValues.$remove1(jtt_ChronoField_AMPM_OF_DAY)).$longValue();
        $hap = ($this.$fieldValues.$remove1(jtt_ChronoField_HOUR_OF_AMPM)).$longValue();
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_HOUR_OF_DAY, Long_add(Long_mul($ap, Long_fromInt(12)), $hap));
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_NANO_OF_DAY)) {
        $nod = ($this.$fieldValues.$remove1(jtt_ChronoField_NANO_OF_DAY)).$longValue();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT)
            jtt_ChronoField_checkValidValue(jtt_ChronoField_NANO_OF_DAY, $nod);
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_SECOND_OF_DAY, Long_div($nod, Long_fromInt(1000000000)));
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_NANO_OF_SECOND, Long_rem($nod, Long_fromInt(1000000000)));
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_MICRO_OF_DAY)) {
        $cod = ($this.$fieldValues.$remove1(jtt_ChronoField_MICRO_OF_DAY)).$longValue();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT)
            jtt_ChronoField_checkValidValue(jtt_ChronoField_MICRO_OF_DAY, $cod);
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_SECOND_OF_DAY, Long_div($cod, Long_fromInt(1000000)));
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_MICRO_OF_SECOND, Long_rem($cod, Long_fromInt(1000000)));
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_MILLI_OF_DAY)) {
        $lod = ($this.$fieldValues.$remove1(jtt_ChronoField_MILLI_OF_DAY)).$longValue();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT)
            jtt_ChronoField_checkValidValue(jtt_ChronoField_MILLI_OF_DAY, $lod);
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_SECOND_OF_DAY, Long_div($lod, Long_fromInt(1000)));
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_MILLI_OF_SECOND, Long_rem($lod, Long_fromInt(1000)));
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_SECOND_OF_DAY)) {
        $sod = ($this.$fieldValues.$remove1(jtt_ChronoField_SECOND_OF_DAY)).$longValue();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT)
            jtt_ChronoField_checkValidValue(jtt_ChronoField_SECOND_OF_DAY, $sod);
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_HOUR_OF_DAY, Long_div($sod, Long_fromInt(3600)));
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_MINUTE_OF_HOUR, Long_rem(Long_div($sod, Long_fromInt(60)), Long_fromInt(60)));
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_SECOND_OF_MINUTE, Long_rem($sod, Long_fromInt(60)));
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_MINUTE_OF_DAY)) {
        $mod = ($this.$fieldValues.$remove1(jtt_ChronoField_MINUTE_OF_DAY)).$longValue();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT)
            jtt_ChronoField_checkValidValue(jtt_ChronoField_MINUTE_OF_DAY, $mod);
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_HOUR_OF_DAY, Long_div($mod, Long_fromInt(60)));
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_MINUTE_OF_HOUR, Long_rem($mod, Long_fromInt(60)));
    }
    if ($resolverStyle !== jtf_ResolverStyle_LENIENT) {
        if ($this.$fieldValues.$containsKey(jtt_ChronoField_MILLI_OF_SECOND))
            jtt_ChronoField_checkValidValue(jtt_ChronoField_MILLI_OF_SECOND, ($this.$fieldValues.$get1(jtt_ChronoField_MILLI_OF_SECOND)).$longValue());
        if ($this.$fieldValues.$containsKey(jtt_ChronoField_MICRO_OF_SECOND))
            jtt_ChronoField_checkValidValue(jtt_ChronoField_MICRO_OF_SECOND, ($this.$fieldValues.$get1(jtt_ChronoField_MICRO_OF_SECOND)).$longValue());
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_MILLI_OF_SECOND) && $this.$fieldValues.$containsKey(jtt_ChronoField_MICRO_OF_SECOND)) {
        $los = ($this.$fieldValues.$remove1(jtt_ChronoField_MILLI_OF_SECOND)).$longValue();
        $cos = ($this.$fieldValues.$get1(jtt_ChronoField_MICRO_OF_SECOND)).$longValue();
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_MICRO_OF_SECOND, Long_add(Long_mul($los, Long_fromInt(1000)), Long_rem($cos, Long_fromInt(1000))));
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_MICRO_OF_SECOND) && $this.$fieldValues.$containsKey(jtt_ChronoField_NANO_OF_SECOND)) {
        $nos = ($this.$fieldValues.$get1(jtt_ChronoField_NANO_OF_SECOND)).$longValue();
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_MICRO_OF_SECOND, Long_div($nos, Long_fromInt(1000)));
        $this.$fieldValues.$remove1(jtt_ChronoField_MICRO_OF_SECOND);
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_MILLI_OF_SECOND) && $this.$fieldValues.$containsKey(jtt_ChronoField_NANO_OF_SECOND)) {
        $nos = ($this.$fieldValues.$get1(jtt_ChronoField_NANO_OF_SECOND)).$longValue();
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_MILLI_OF_SECOND, Long_div($nos, Long_fromInt(1000000)));
        $this.$fieldValues.$remove1(jtt_ChronoField_MILLI_OF_SECOND);
    }
    if ($this.$fieldValues.$containsKey(jtt_ChronoField_MICRO_OF_SECOND)) {
        $cos = ($this.$fieldValues.$remove1(jtt_ChronoField_MICRO_OF_SECOND)).$longValue();
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_NANO_OF_SECOND, Long_mul($cos, Long_fromInt(1000)));
    } else if ($this.$fieldValues.$containsKey(jtt_ChronoField_MILLI_OF_SECOND)) {
        $los = ($this.$fieldValues.$remove1(jtt_ChronoField_MILLI_OF_SECOND)).$longValue();
        jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_NANO_OF_SECOND, Long_mul($los, Long_fromInt(1000000)));
    }
},
jtf_DateTimeBuilder_resolveTimeInferZeroes = ($this, $resolverStyle) => {
    let var$2, $hod, $moh, $som, $nos, $hodVal, $excessDays, var$9, $totalSecs, $sod, $totalNanos, $nod, $hodVal_0, $mohVal, $somVal, $nosVal;
    var$2 = $this.$fieldValues;
    jtt_ChronoField_$callClinit();
    $hod = var$2.$get1(jtt_ChronoField_HOUR_OF_DAY);
    $moh = $this.$fieldValues.$get1(jtt_ChronoField_MINUTE_OF_HOUR);
    $som = $this.$fieldValues.$get1(jtt_ChronoField_SECOND_OF_MINUTE);
    $nos = $this.$fieldValues.$get1(jtt_ChronoField_NANO_OF_SECOND);
    if ($hod === null)
        return;
    if ($moh === null && !($som === null && $nos === null))
        return;
    if ($moh !== null && $som === null && $nos !== null)
        return;
    jtf_ResolverStyle_$callClinit();
    if ($resolverStyle === jtf_ResolverStyle_LENIENT) {
        if ($hod !== null) {
            $hodVal = $hod.$longValue();
            if ($moh === null) {
                $excessDays = jl_Math_toIntExact(jl_Math_floorDiv0($hodVal, Long_fromInt(24)));
                var$9 = Long_fromInt(jl_Math_floorMod($hodVal, 24));
                jtf_DateTimeBuilder_addObject($this, jt_LocalTime_of(Long_lo(var$9), 0));
                $this.$excessDays = jt_Period_ofDays($excessDays);
            } else if ($som === null) {
                $totalSecs = jl_Math_multiplyExact0($hodVal, Long_fromInt(3600));
                var$9 = jl_Math_addExact($totalSecs, jl_Math_multiplyExact0($moh.$longValue(), Long_fromInt(60)));
                $excessDays = Long_lo((jl_Math_floorDiv0(var$9, Long_fromInt(86400))));
                $sod = jl_Math_floorMod0(var$9, Long_fromInt(86400));
                jtf_DateTimeBuilder_addObject($this, jt_LocalTime_ofSecondOfDay($sod));
                $this.$excessDays = jt_Period_ofDays($excessDays);
            } else {
                if ($nos === null)
                    $nos = jl_Long_valueOf(Long_ZERO);
                $totalNanos = jl_Math_multiplyExact0($hodVal, Long_create(817405952, 838));
                var$9 = jl_Math_addExact($totalNanos, jl_Math_multiplyExact0($moh.$longValue(), Long_create(4165425152, 13)));
                var$9 = jl_Math_addExact(var$9, jl_Math_multiplyExact0($som.$longValue(), Long_fromInt(1000000000)));
                var$9 = jl_Math_addExact(var$9, $nos.$longValue());
                $excessDays = Long_lo((jl_Math_floorDiv0(var$9, Long_create(2437873664, 20116))));
                $nod = jl_Math_floorMod0(var$9, Long_create(2437873664, 20116));
                jtf_DateTimeBuilder_addObject($this, jt_LocalTime_ofNanoOfDay($nod));
                $this.$excessDays = jt_Period_ofDays($excessDays);
            }
        }
    } else if ($hod !== null) {
        if ($resolverStyle === jtf_ResolverStyle_SMART && Long_eq($hod.$longValue(), Long_fromInt(24)) && !($moh !== null && Long_ne($moh.$longValue(), Long_ZERO)) && !($som !== null && Long_ne($som.$longValue(), Long_ZERO)) && !($nos !== null && Long_ne($nos.$longValue(), Long_ZERO))) {
            $hod = jl_Long_valueOf(Long_ZERO);
            $this.$excessDays = jt_Period_ofDays(1);
        }
        $hodVal_0 = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_HOUR_OF_DAY, $hod.$longValue());
        if ($moh !== null) {
            $mohVal = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_MINUTE_OF_HOUR, $moh.$longValue());
            if ($som !== null) {
                $somVal = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_SECOND_OF_MINUTE, $som.$longValue());
                if ($nos === null)
                    jtf_DateTimeBuilder_addObject($this, jt_LocalTime_of1($hodVal_0, $mohVal, $somVal));
                else {
                    $nosVal = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_NANO_OF_SECOND, $nos.$longValue());
                    jtf_DateTimeBuilder_addObject($this, jt_LocalTime_of0($hodVal_0, $mohVal, $somVal, $nosVal));
                }
            } else if ($nos === null)
                jtf_DateTimeBuilder_addObject($this, jt_LocalTime_of($hodVal_0, $mohVal));
        } else if ($som === null && $nos === null)
            jtf_DateTimeBuilder_addObject($this, jt_LocalTime_of($hodVal_0, 0));
    }
    $this.$fieldValues.$remove1(jtt_ChronoField_HOUR_OF_DAY);
    $this.$fieldValues.$remove1(jtt_ChronoField_MINUTE_OF_HOUR);
    $this.$fieldValues.$remove1(jtt_ChronoField_SECOND_OF_MINUTE);
    $this.$fieldValues.$remove1(jtt_ChronoField_NANO_OF_SECOND);
},
jtf_DateTimeBuilder_mergeInstantFields = $this => {
    let var$1, $offsetSecs, $offset;
    var$1 = $this.$fieldValues;
    jtt_ChronoField_$callClinit();
    if (var$1.$containsKey(jtt_ChronoField_INSTANT_SECONDS)) {
        if ($this.$zone0 !== null)
            jtf_DateTimeBuilder_mergeInstantFields0($this, $this.$zone0);
        else {
            $offsetSecs = $this.$fieldValues.$get1(jtt_ChronoField_OFFSET_SECONDS);
            if ($offsetSecs !== null) {
                $offset = jt_ZoneOffset_ofTotalSeconds($offsetSecs.$intValue());
                jtf_DateTimeBuilder_mergeInstantFields0($this, $offset);
            }
        }
    }
},
jtf_DateTimeBuilder_mergeInstantFields0 = ($this, $selectedZone) => {
    let var$2, $instant, $zdt;
    var$2 = $this.$fieldValues;
    jtt_ChronoField_$callClinit();
    $instant = jt_Instant_ofEpochSecond((var$2.$remove1(jtt_ChronoField_INSTANT_SECONDS)).$longValue());
    $zdt = $this.$chrono.$zonedDateTime0($instant, $selectedZone);
    if ($this.$date === null)
        jtf_DateTimeBuilder_addObject0($this, $zdt.$toLocalDate());
    else
        jtf_DateTimeBuilder_resolveMakeChanges($this, jtt_ChronoField_INSTANT_SECONDS, $zdt.$toLocalDate());
    jtf_DateTimeBuilder_addFieldValue($this, jtt_ChronoField_SECOND_OF_DAY, Long_fromInt(jt_LocalTime_toSecondOfDay($zdt.$toLocalTime())));
},
jtf_DateTimeBuilder_crossCheck0 = $this => {
    if ($this.$fieldValues.$size() > 0) {
        if ($this.$date !== null && $this.$time1 !== null)
            jtf_DateTimeBuilder_crossCheck($this, $this.$date.$atTime0($this.$time1));
        else if ($this.$date !== null)
            jtf_DateTimeBuilder_crossCheck($this, $this.$date);
        else if ($this.$time1 !== null)
            jtf_DateTimeBuilder_crossCheck($this, $this.$time1);
    }
},
jtf_DateTimeBuilder_crossCheck = ($this, $temporal) => {
    let $it, $entry, $field, $value, $temporalValue, var$7, var$8, var$9, var$10, $$je;
    $it = ($this.$fieldValues.$entrySet()).$iterator();
    a: while ($it.$hasNext()) {
        $entry = $it.$next();
        $field = $entry.$getKey();
        $value = ($entry.$getValue()).$longValue();
        if ($temporal.$isSupported($field)) {
            b: {
                try {
                    $temporalValue = $temporal.$getLong($field);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_RuntimeException) {
                    } else {
                        throw $$e;
                    }
                }
                continue a;
            }
            if (Long_ne($temporalValue, $value)) {
                var$7 = new jt_DateTimeException;
                var$8 = jl_String_valueOf($field);
                var$9 = jl_String_valueOf($field);
                var$10 = jl_StringBuilder__init_();
                jl_StringBuilder_append2(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(1311)), var$8), 32), $temporalValue), $rt_s(1312)), var$9), 32), $value);
                jt_DateTimeException__init_(var$7, jl_StringBuilder_toString(var$10));
                $rt_throw(var$7);
            }
            $it.$remove();
        }
    }
},
jtf_DateTimeBuilder_resolveFractional = $this => {
    let var$1, var$2, $nos;
    a: {
        if ($this.$time1 === null) {
            var$1 = $this.$fieldValues;
            jtt_ChronoField_$callClinit();
            var$2 = jtt_ChronoField_INSTANT_SECONDS;
            if (!var$1.$containsKey(var$2)) {
                var$2 = $this.$fieldValues;
                var$1 = jtt_ChronoField_SECOND_OF_DAY;
                if (!var$2.$containsKey(var$1)) {
                    var$2 = $this.$fieldValues;
                    var$1 = jtt_ChronoField_SECOND_OF_MINUTE;
                    if (!var$2.$containsKey(var$1))
                        break a;
                }
            }
            if (!$this.$fieldValues.$containsKey(jtt_ChronoField_NANO_OF_SECOND)) {
                $this.$fieldValues.$put1(jtt_ChronoField_NANO_OF_SECOND, jl_Long_valueOf(Long_ZERO));
                $this.$fieldValues.$put1(jtt_ChronoField_MICRO_OF_SECOND, jl_Long_valueOf(Long_ZERO));
                $this.$fieldValues.$put1(jtt_ChronoField_MILLI_OF_SECOND, jl_Long_valueOf(Long_ZERO));
            } else {
                $nos = ($this.$fieldValues.$get1(jtt_ChronoField_NANO_OF_SECOND)).$longValue();
                $this.$fieldValues.$put1(jtt_ChronoField_MICRO_OF_SECOND, jl_Long_valueOf(Long_div($nos, Long_fromInt(1000))));
                $this.$fieldValues.$put1(jtt_ChronoField_MILLI_OF_SECOND, jl_Long_valueOf(Long_div($nos, Long_fromInt(1000000))));
            }
        }
    }
},
jtf_DateTimeBuilder_resolveInstant = $this => {
    let var$1, $offsetSecs, $offset, $instant;
    if ($this.$date !== null && $this.$time1 !== null) {
        var$1 = $this.$fieldValues;
        jtt_ChronoField_$callClinit();
        $offsetSecs = var$1.$get1(jtt_ChronoField_OFFSET_SECONDS);
        if ($offsetSecs !== null) {
            $offset = jt_ZoneOffset_ofTotalSeconds($offsetSecs.$intValue());
            $instant = (($this.$date.$atTime0($this.$time1)).$atZone0($offset)).$getLong(jtt_ChronoField_INSTANT_SECONDS);
            $this.$fieldValues.$put1(jtt_ChronoField_INSTANT_SECONDS, jl_Long_valueOf($instant));
        } else if ($this.$zone0 !== null) {
            $instant = (($this.$date.$atTime0($this.$time1)).$atZone0($this.$zone0)).$getLong(jtt_ChronoField_INSTANT_SECONDS);
            $this.$fieldValues.$put1(jtt_ChronoField_INSTANT_SECONDS, jl_Long_valueOf($instant));
        }
    }
},
jtf_DateTimeBuilder_build = ($this, $type) => {
    return $type.$queryFrom($this);
},
jtf_DateTimeBuilder_isSupported = ($this, $field) => {
    let var$2, var$3;
    if ($field === null)
        return 0;
    a: {
        b: {
            c: {
                if (!$this.$fieldValues.$containsKey($field)) {
                    if ($this.$date !== null) {
                        var$2 = $this.$date;
                        if (var$2.$isSupported($field))
                            break c;
                    }
                    if ($this.$time1 === null)
                        break b;
                    var$2 = $this.$time1;
                    if (!jt_LocalTime_isSupported(var$2, $field))
                        break b;
                }
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
},
jtf_DateTimeBuilder_getLong = ($this, $field) => {
    let $value, var$3, var$4, var$5;
    ju_Objects_requireNonNull($field, $rt_s(33));
    $value = jtf_DateTimeBuilder_getFieldValue0($this, $field);
    if ($value !== null)
        return $value.$longValue();
    if ($this.$date !== null && $this.$date.$isSupported($field))
        return $this.$date.$getLong($field);
    if ($this.$time1 !== null && jt_LocalTime_isSupported($this.$time1, $field))
        return jt_LocalTime_getLong($this.$time1, $field);
    var$3 = new jt_DateTimeException;
    var$4 = jl_String_valueOf($field);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1313)), var$4);
    jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
jtf_DateTimeBuilder_toString = $this => {
    let $buf;
    $buf = jl_StringBuilder__init_0(128);
    $buf.$append1($rt_s(1314));
    if ($this.$fieldValues.$size() > 0)
        ($buf.$append1($rt_s(1315))).$append($this.$fieldValues);
    ($buf.$append1($rt_s(12))).$append($this.$chrono);
    ($buf.$append1($rt_s(12))).$append($this.$zone0);
    ($buf.$append1($rt_s(12))).$append($this.$date);
    ($buf.$append1($rt_s(12))).$append($this.$time1);
    $buf.$append0(93);
    return $buf.$toString();
};
function onn_NostrRelay$lambda$disconnect$21$lambda$_50_0() {
    let a = this; jl_Object.call(a);
    a.$_0125 = null;
    a.$_165 = null;
    a.$_234 = null;
    a.$_312 = null;
    a.$_43 = null;
}
let onn_NostrRelay$lambda$disconnect$21$lambda$_50_0__init_ = (var$0, var$1, var$2, var$3, var$4, var$5) => {
    jl_Object__init_(var$0);
    var$0.$_0125 = var$1;
    var$0.$_165 = var$2;
    var$0.$_234 = var$3;
    var$0.$_312 = var$4;
    var$0.$_43 = var$5;
},
onn_NostrRelay$lambda$disconnect$21$lambda$_50_0__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onn_NostrRelay$lambda$disconnect$21$lambda$_50_0();
    onn_NostrRelay$lambda$disconnect$21$lambda$_50_0__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onn_NostrRelay$lambda$disconnect$21$lambda$_50_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$lambda$disconnect$21$lambda$_50_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$lambda$disconnect$21$lambda$_50_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$disconnect$20(var$0.$_0125, var$0.$_165, var$0.$_234, var$0.$_312, var$0.$_43, var$1, var$2);
};
function cjj_Deflate() {
    let a = this; jl_Object.call(a);
    a.$strm = null;
    a.$status = 0;
    a.$pending_buf = null;
    a.$pending_buf_size = 0;
    a.$pending_out = 0;
    a.$pending = 0;
    a.$wrap10 = 0;
    a.$data_type = 0;
    a.$method1 = 0;
    a.$last_flush = 0;
    a.$w_size = 0;
    a.$w_bits = 0;
    a.$w_mask = 0;
    a.$window = null;
    a.$window_size = 0;
    a.$prev = null;
    a.$head = null;
    a.$ins_h = 0;
    a.$hash_size = 0;
    a.$hash_bits = 0;
    a.$hash_mask = 0;
    a.$hash_shift = 0;
    a.$block_start = 0;
    a.$match_length = 0;
    a.$prev_match = 0;
    a.$match_available = 0;
    a.$strstart = 0;
    a.$match_start = 0;
    a.$lookahead = 0;
    a.$prev_length = 0;
    a.$max_chain_length = 0;
    a.$max_lazy_match = 0;
    a.$level = 0;
    a.$strategy = 0;
    a.$good_match = 0;
    a.$nice_match = 0;
    a.$dyn_ltree = null;
    a.$dyn_dtree = null;
    a.$bl_tree = null;
    a.$l_desc = null;
    a.$d_desc = null;
    a.$bl_desc = null;
    a.$bl_count = null;
    a.$next_code = null;
    a.$heap = null;
    a.$heap_len = 0;
    a.$heap_max = 0;
    a.$depth = null;
    a.$l_buf = null;
    a.$lit_bufsize = 0;
    a.$last_lit = 0;
    a.$d_buf = 0;
    a.$opt_len = 0;
    a.$static_len = 0;
    a.$matches1 = 0;
    a.$last_eob_len = 0;
    a.$bi_buf = 0;
    a.$bi_valid = 0;
    a.$gheader0 = null;
}
let cjj_Deflate_config_table = null,
cjj_Deflate_z_errmsg = null,
cjj_Deflate_$callClinit = () => {
    cjj_Deflate_$callClinit = $rt_eraseClinit(cjj_Deflate);
    cjj_Deflate__clinit_();
},
cjj_Deflate__init_ = ($this, $strm) => {
    cjj_Deflate_$callClinit();
    jl_Object__init_($this);
    $this.$wrap10 = 1;
    $this.$l_desc = cjj_Tree__init_();
    $this.$d_desc = cjj_Tree__init_();
    $this.$bl_desc = cjj_Tree__init_();
    $this.$bl_count = $rt_createShortArray(16);
    $this.$next_code = $rt_createShortArray(16);
    $this.$heap = $rt_createIntArray(573);
    $this.$depth = $rt_createByteArray(573);
    $this.$gheader0 = null;
    $this.$strm = $strm;
    $this.$dyn_ltree = $rt_createShortArray(1146);
    $this.$dyn_dtree = $rt_createShortArray(122);
    $this.$bl_tree = $rt_createShortArray(78);
},
cjj_Deflate__init_0 = var_0 => {
    let var_1 = new cjj_Deflate();
    cjj_Deflate__init_(var_1, var_0);
    return var_1;
},
cjj_Deflate_lm_init = $this => {
    let $i;
    $this.$window_size = 2 * $this.$w_size | 0;
    $this.$head.data[$this.$hash_size - 1 | 0] = 0;
    $i = 0;
    while ($i < ($this.$hash_size - 1 | 0)) {
        $this.$head.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    cjj_Deflate_$callClinit();
    $this.$max_lazy_match = cjj_Deflate_config_table.data[$this.$level].$max_lazy;
    $this.$good_match = cjj_Deflate_config_table.data[$this.$level].$good_length;
    $this.$nice_match = cjj_Deflate_config_table.data[$this.$level].$nice_length;
    $this.$max_chain_length = cjj_Deflate_config_table.data[$this.$level].$max_chain;
    $this.$strstart = 0;
    $this.$block_start = 0;
    $this.$lookahead = 0;
    $this.$prev_length = 2;
    $this.$match_length = 2;
    $this.$match_available = 0;
    $this.$ins_h = 0;
},
cjj_Deflate_tr_init = $this => {
    let var$1;
    $this.$l_desc.$dyn_tree = $this.$dyn_ltree;
    var$1 = $this.$l_desc;
    cjj_StaticTree_$callClinit();
    var$1.$stat_desc = cjj_StaticTree_static_l_desc;
    $this.$d_desc.$dyn_tree = $this.$dyn_dtree;
    $this.$d_desc.$stat_desc = cjj_StaticTree_static_d_desc;
    $this.$bl_desc.$dyn_tree = $this.$bl_tree;
    $this.$bl_desc.$stat_desc = cjj_StaticTree_static_bl_desc;
    $this.$bi_buf = 0;
    $this.$bi_valid = 0;
    $this.$last_eob_len = 8;
    cjj_Deflate_init_block($this);
},
cjj_Deflate_init_block = $this => {
    let $i;
    $i = 0;
    while ($i < 286) {
        $this.$dyn_ltree.data[$i * 2 | 0] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 30) {
        $this.$dyn_dtree.data[$i * 2 | 0] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 19) {
        $this.$bl_tree.data[$i * 2 | 0] = 0;
        $i = $i + 1 | 0;
    }
    $this.$dyn_ltree.data[512] = 1;
    $this.$static_len = 0;
    $this.$opt_len = 0;
    $this.$matches1 = 0;
    $this.$last_lit = 0;
},
cjj_Deflate_pqdownheap = ($this, $tree, $k) => {
    let $v, $j, var$5, var$6;
    $v = $this.$heap.data[$k];
    $j = $k << 1;
    a: {
        while (true) {
            if ($j > $this.$heap_len)
                break a;
            if ($j >= $this.$heap_len)
                var$5 = $j;
            else {
                var$6 = $this.$heap.data;
                var$5 = $j + 1 | 0;
                if (!cjj_Deflate_smaller($tree, var$6[var$5], $this.$heap.data[$j], $this.$depth))
                    var$5 = $j;
            }
            if (cjj_Deflate_smaller($tree, $v, $this.$heap.data[var$5], $this.$depth))
                break;
            $this.$heap.data[$k] = $this.$heap.data[var$5];
            $j = var$5 << 1;
            $k = var$5;
        }
    }
    $this.$heap.data[$k] = $v;
},
cjj_Deflate_smaller = ($tree, $n, $m, $depth) => {
    let var$5, $tn2, $tm2, var$8;
    cjj_Deflate_$callClinit();
    a: {
        b: {
            var$5 = $tree.data;
            $tn2 = var$5[$n * 2 | 0];
            $tm2 = var$5[$m * 2 | 0];
            var$8 = $rt_compare($tn2, $tm2);
            if (var$8 >= 0) {
                if (var$8)
                    break b;
                var$5 = $depth.data;
                if (var$5[$n] > var$5[$m])
                    break b;
            }
            var$8 = 1;
            break a;
        }
        var$8 = 0;
    }
    return var$8;
},
cjj_Deflate_scan_tree = ($this, $tree, $max_code) => {
    let var$3, $prevlen, $nextlen, $count, $max_count, $min_count, $n, var$10, var$11, var$12, var$13;
    var$3 = $tree.data;
    $prevlen = (-1);
    $nextlen = var$3[1];
    $count = 0;
    $max_count = 7;
    $min_count = 4;
    if (!$nextlen) {
        $max_count = 138;
        $min_count = 3;
    }
    var$3[(($max_code + 1 | 0) * 2 | 0) + 1 | 0] = (-1);
    $n = 0;
    while ($n <= $max_code) {
        $n = $n + 1 | 0;
        var$10 = var$3[($n * 2 | 0) + 1 | 0];
        $count = $count + 1 | 0;
        if (!($count < $max_count && $nextlen == var$10)) {
            if ($count < $min_count) {
                var$11 = $this.$bl_tree.data;
                var$12 = $nextlen * 2 | 0;
                var$11[var$12] = (var$11[var$12] + $count | 0) << 16 >> 16;
            } else if (!$nextlen) {
                if ($count > 10) {
                    var$11 = $this.$bl_tree.data;
                    var$11[36] = (var$11[36] + 1 | 0) << 16 >> 16;
                } else {
                    var$11 = $this.$bl_tree.data;
                    var$11[34] = (var$11[34] + 1 | 0) << 16 >> 16;
                }
            } else {
                if ($nextlen != $prevlen) {
                    var$11 = $this.$bl_tree.data;
                    var$13 = $nextlen * 2 | 0;
                    var$11[var$13] = (var$11[var$13] + 1 | 0) << 16 >> 16;
                }
                var$11 = $this.$bl_tree.data;
                var$11[32] = (var$11[32] + 1 | 0) << 16 >> 16;
            }
            $count = 0;
            if (!var$10) {
                $max_count = 138;
                $min_count = 3;
                $prevlen = $nextlen;
            } else if ($nextlen != var$10) {
                $max_count = 7;
                $min_count = 4;
                $prevlen = $nextlen;
            } else {
                $max_count = 6;
                $min_count = 3;
                $prevlen = $nextlen;
            }
        }
        $nextlen = var$10;
    }
},
cjj_Deflate_build_bl_tree = $this => {
    let $max_blindex;
    cjj_Deflate_scan_tree($this, $this.$dyn_ltree, $this.$l_desc.$max_code);
    cjj_Deflate_scan_tree($this, $this.$dyn_dtree, $this.$d_desc.$max_code);
    cjj_Tree_build_tree($this.$bl_desc, $this);
    $max_blindex = 18;
    a: {
        while (true) {
            if ($max_blindex < 3)
                break a;
            if ($this.$bl_tree.data[(cjj_Tree_bl_order.data[$max_blindex] * 2 | 0) + 1 | 0])
                break;
            $max_blindex = $max_blindex + (-1) | 0;
        }
    }
    $this.$opt_len = $this.$opt_len + ((((3 * ($max_blindex + 1 | 0) | 0) + 5 | 0) + 5 | 0) + 4 | 0) | 0;
    return $max_blindex;
},
cjj_Deflate_send_all_trees = ($this, $lcodes, $dcodes, $blcodes) => {
    let var$4, $rank, var$6;
    cjj_Deflate_send_bits($this, $lcodes - 257 | 0, 5);
    var$4 = $dcodes - 1 | 0;
    cjj_Deflate_send_bits($this, var$4, 5);
    cjj_Deflate_send_bits($this, $blcodes - 4 | 0, 4);
    $rank = 0;
    while ($rank < $blcodes) {
        var$6 = $this.$bl_tree.data;
        cjj_Tree_$callClinit();
        cjj_Deflate_send_bits($this, var$6[(cjj_Tree_bl_order.data[$rank] * 2 | 0) + 1 | 0], 3);
        $rank = $rank + 1 | 0;
    }
    cjj_Deflate_send_tree($this, $this.$dyn_ltree, $lcodes - 1 | 0);
    cjj_Deflate_send_tree($this, $this.$dyn_dtree, var$4);
},
cjj_Deflate_send_tree = ($this, $tree, $max_code) => {
    let var$3, $prevlen, $nextlen, $count, $max_count, $min_count, $n, var$10;
    var$3 = $tree.data;
    $prevlen = (-1);
    $nextlen = var$3[1];
    $count = 0;
    $max_count = 7;
    $min_count = 4;
    if (!$nextlen) {
        $max_count = 138;
        $min_count = 3;
    }
    $n = 0;
    while ($n <= $max_code) {
        $n = $n + 1 | 0;
        var$10 = var$3[($n * 2 | 0) + 1 | 0];
        $count = $count + 1 | 0;
        if (!($count < $max_count && $nextlen == var$10)) {
            if ($count < $min_count)
                while (true) {
                    cjj_Deflate_send_code($this, $nextlen, $this.$bl_tree);
                    $count = $count + (-1) | 0;
                    if (!$count)
                        break;
                }
            else if (!$nextlen) {
                if ($count > 10) {
                    cjj_Deflate_send_code($this, 18, $this.$bl_tree);
                    cjj_Deflate_send_bits($this, $count - 11 | 0, 7);
                } else {
                    cjj_Deflate_send_code($this, 17, $this.$bl_tree);
                    cjj_Deflate_send_bits($this, $count - 3 | 0, 3);
                }
            } else {
                if ($nextlen != $prevlen) {
                    cjj_Deflate_send_code($this, $nextlen, $this.$bl_tree);
                    $count = $count + (-1) | 0;
                }
                cjj_Deflate_send_code($this, 16, $this.$bl_tree);
                cjj_Deflate_send_bits($this, $count - 3 | 0, 2);
            }
            $count = 0;
            if (!var$10) {
                $max_count = 138;
                $min_count = 3;
                $prevlen = $nextlen;
            } else if ($nextlen != var$10) {
                $max_count = 7;
                $min_count = 4;
                $prevlen = $nextlen;
            } else {
                $max_count = 6;
                $min_count = 3;
                $prevlen = $nextlen;
            }
        }
        $nextlen = var$10;
    }
},
cjj_Deflate_put_byte0 = ($this, $p, $start, $len) => {
    jl_System_fastArraycopy($p, $start, $this.$pending_buf, $this.$pending, $len);
    $this.$pending = $this.$pending + $len | 0;
},
cjj_Deflate_put_byte = ($this, $c) => {
    let var$2, var$3;
    var$2 = $this.$pending_buf.data;
    var$3 = $this.$pending;
    $this.$pending = var$3 + 1 | 0;
    var$2[var$3] = $c;
},
cjj_Deflate_put_short = ($this, $w) => {
    cjj_Deflate_put_byte($this, $w << 24 >> 24);
    cjj_Deflate_put_byte($this, ($w >>> 8 | 0) << 24 >> 24);
},
cjj_Deflate_putShortMSB = ($this, $b) => {
    cjj_Deflate_put_byte($this, $b >> 8 << 24 >> 24);
    cjj_Deflate_put_byte($this, $b << 24 >> 24);
},
cjj_Deflate_send_code = ($this, $c, $tree) => {
    let var$3, $c2;
    var$3 = $tree.data;
    $c2 = $c * 2 | 0;
    cjj_Deflate_send_bits($this, var$3[$c2] & 65535, var$3[$c2 + 1 | 0] & 65535);
},
cjj_Deflate_send_bits = ($this, $value, $length) => {
    if ($this.$bi_valid <= (16 - $length | 0)) {
        $this.$bi_buf = ($this.$bi_buf | $value << $this.$bi_valid & 65535) << 16 >> 16;
        $this.$bi_valid = $this.$bi_valid + $length | 0;
    } else {
        $this.$bi_buf = ($this.$bi_buf | $value << $this.$bi_valid & 65535) << 16 >> 16;
        cjj_Deflate_put_short($this, $this.$bi_buf);
        $this.$bi_buf = ($value >>> (16 - $this.$bi_valid | 0) | 0) << 16 >> 16;
        $this.$bi_valid = $this.$bi_valid + ($length - 16 | 0) | 0;
    }
},
cjj_Deflate__tr_align = $this => {
    cjj_Deflate_send_bits($this, 2, 3);
    cjj_StaticTree_$callClinit();
    cjj_Deflate_send_code($this, 256, cjj_StaticTree_static_ltree);
    cjj_Deflate_bi_flush($this);
    if ((((1 + $this.$last_eob_len | 0) + 10 | 0) - $this.$bi_valid | 0) < 9) {
        cjj_Deflate_send_bits($this, 2, 3);
        cjj_Deflate_send_code($this, 256, cjj_StaticTree_static_ltree);
        cjj_Deflate_bi_flush($this);
    }
    $this.$last_eob_len = 7;
},
cjj_Deflate__tr_tally = ($this, $dist, $lc) => {
    let var$3, var$4, var$5, var$6, $out_length, $in_length, $dcode, var$10, var$11;
    $this.$pending_buf.data[$this.$d_buf + ($this.$last_lit * 2 | 0) | 0] = ($dist >>> 8 | 0) << 24 >> 24;
    $this.$pending_buf.data[($this.$d_buf + ($this.$last_lit * 2 | 0) | 0) + 1 | 0] = $dist << 24 >> 24;
    $this.$l_buf.data[$this.$last_lit] = $lc << 24 >> 24;
    $this.$last_lit = $this.$last_lit + 1 | 0;
    if (!$dist) {
        var$3 = $this.$dyn_ltree.data;
        var$4 = $lc * 2 | 0;
        var$3[var$4] = (var$3[var$4] + 1 | 0) << 16 >> 16;
    } else {
        $this.$matches1 = $this.$matches1 + 1 | 0;
        var$4 = $dist + (-1) | 0;
        var$5 = $this.$dyn_ltree.data;
        cjj_Tree_$callClinit();
        var$6 = ((cjj_Tree__length_code.data[$lc] + 256 | 0) + 1 | 0) * 2 | 0;
        var$5[var$6] = (var$5[var$6] + 1 | 0) << 16 >> 16;
        var$3 = $this.$dyn_dtree.data;
        var$4 = cjj_Tree_d_code(var$4) * 2 | 0;
        var$3[var$4] = (var$3[var$4] + 1 | 0) << 16 >> 16;
    }
    if (!($this.$last_lit & 8191) && $this.$level > 2) {
        $out_length = $this.$last_lit * 8 | 0;
        $in_length = $this.$strstart - $this.$block_start | 0;
        $dcode = 0;
        while ($dcode < 30) {
            var$10 = Long_fromInt($out_length);
            var$11 = Long_fromInt($this.$dyn_dtree.data[$dcode * 2 | 0]);
            cjj_Tree_$callClinit();
            $out_length = Long_lo(Long_add(var$10, Long_mul(var$11, Long_add(Long_fromInt(5), Long_fromInt(cjj_Tree_extra_dbits.data[$dcode])))));
            $dcode = $dcode + 1 | 0;
        }
        var$4 = $out_length >>> 3 | 0;
        if ($this.$matches1 < ($this.$last_lit / 2 | 0) && var$4 < ($in_length / 2 | 0))
            return 1;
    }
    return $this.$last_lit != ($this.$lit_bufsize - 1 | 0) ? 0 : 1;
},
cjj_Deflate_compress_block = ($this, $ltree, $dtree) => {
    let $lx, var$4, var$5, var$6, $dist, $lc, $code, $extra, var$11;
    a: {
        $lx = 0;
        if ($this.$last_lit)
            while (true) {
                var$4 = $this.$pending_buf.data;
                var$5 = $this.$d_buf;
                var$6 = $lx * 2 | 0;
                $dist = var$4[var$5 + var$6 | 0] << 8 & 65280 | $this.$pending_buf.data[($this.$d_buf + var$6 | 0) + 1 | 0] & 255;
                $lc = $this.$l_buf.data[$lx] & 255;
                $lx = $lx + 1 | 0;
                if (!$dist)
                    cjj_Deflate_send_code($this, $lc, $ltree);
                else {
                    cjj_Tree_$callClinit();
                    $code = cjj_Tree__length_code.data[$lc];
                    cjj_Deflate_send_code($this, ($code + 256 | 0) + 1 | 0, $ltree);
                    $extra = cjj_Tree_extra_lbits.data[$code];
                    if ($extra) {
                        var$11 = $lc - cjj_Tree_base_length.data[$code] | 0;
                        cjj_Deflate_send_bits($this, var$11, $extra);
                    }
                    var$11 = $dist + (-1) | 0;
                    var$6 = cjj_Tree_d_code(var$11);
                    cjj_Deflate_send_code($this, var$6, $dtree);
                    var$5 = cjj_Tree_extra_dbits.data[var$6];
                    if (var$5) {
                        var$11 = var$11 - cjj_Tree_base_dist.data[var$6] | 0;
                        cjj_Deflate_send_bits($this, var$11, var$5);
                    }
                }
                if ($lx >= $this.$last_lit)
                    break a;
            }
    }
    var$4 = $ltree.data;
    cjj_Deflate_send_code($this, 256, $ltree);
    $this.$last_eob_len = var$4[513];
},
cjj_Deflate_set_data_type = $this => {
    let $n, $ascii_freq, $bin_freq;
    $n = 0;
    $ascii_freq = 0;
    $bin_freq = 0;
    while ($n < 7) {
        $bin_freq = $bin_freq + $this.$dyn_ltree.data[$n * 2 | 0] | 0;
        $n = $n + 1 | 0;
    }
    while ($n < 128) {
        $ascii_freq = $ascii_freq + $this.$dyn_ltree.data[$n * 2 | 0] | 0;
        $n = $n + 1 | 0;
    }
    while ($n < 256) {
        $bin_freq = $bin_freq + $this.$dyn_ltree.data[$n * 2 | 0] | 0;
        $n = $n + 1 | 0;
    }
    $this.$data_type = ($bin_freq <= ($ascii_freq >>> 2 | 0) ? 1 : 0) << 24 >> 24;
},
cjj_Deflate_bi_flush = $this => {
    if ($this.$bi_valid == 16) {
        cjj_Deflate_put_short($this, $this.$bi_buf);
        $this.$bi_buf = 0;
        $this.$bi_valid = 0;
    } else if ($this.$bi_valid >= 8) {
        cjj_Deflate_put_byte($this, $this.$bi_buf << 24 >> 24);
        $this.$bi_buf = ($this.$bi_buf >>> 8 | 0) << 16 >> 16;
        $this.$bi_valid = $this.$bi_valid - 8 | 0;
    }
},
cjj_Deflate_bi_windup = $this => {
    if ($this.$bi_valid > 8)
        cjj_Deflate_put_short($this, $this.$bi_buf);
    else if ($this.$bi_valid > 0)
        cjj_Deflate_put_byte($this, $this.$bi_buf << 24 >> 24);
    $this.$bi_buf = 0;
    $this.$bi_valid = 0;
},
cjj_Deflate_copy_block = ($this, $buf, $len, $header) => {
    cjj_Deflate_bi_windup($this);
    $this.$last_eob_len = 8;
    if ($header) {
        cjj_Deflate_put_short($this, $len << 16 >> 16);
        cjj_Deflate_put_short($this, ($len ^ (-1)) << 16 >> 16);
    }
    cjj_Deflate_put_byte0($this, $this.$window, $buf, $len);
},
cjj_Deflate_flush_block_only = ($this, $eof) => {
    cjj_Deflate__tr_flush_block($this, $this.$block_start < 0 ? (-1) : $this.$block_start, $this.$strstart - $this.$block_start | 0, $eof);
    $this.$block_start = $this.$strstart;
    $this.$strm.$flush_pending();
},
cjj_Deflate_deflate_stored = ($this, $flush) => {
    let $max_block_size, var$3, $max_start;
    $max_block_size = 65535;
    if ($max_block_size > ($this.$pending_buf_size - 5 | 0))
        $max_block_size = $this.$pending_buf_size - 5 | 0;
    while (true) {
        if ($this.$lookahead <= 1) {
            cjj_Deflate_fill_window($this);
            if (!$this.$lookahead && !$flush)
                return 0;
            if (!$this.$lookahead) {
                var$3 = $rt_compare($flush, 4);
                cjj_Deflate_flush_block_only($this, var$3 ? 0 : 1);
                if ($this.$strm.$avail_out)
                    return var$3 ? 1 : 3;
                return var$3 ? 0 : 2;
            }
        }
        $this.$strstart = $this.$strstart + $this.$lookahead | 0;
        $this.$lookahead = 0;
        $max_start = $this.$block_start + $max_block_size | 0;
        if (!($this.$strstart && $this.$strstart < $max_start)) {
            $this.$lookahead = $this.$strstart - $max_start | 0;
            $this.$strstart = $max_start;
            cjj_Deflate_flush_block_only($this, 0);
            if (!$this.$strm.$avail_out)
                return 0;
        }
        if (($this.$strstart - $this.$block_start | 0) < ($this.$w_size - 262 | 0))
            continue;
        cjj_Deflate_flush_block_only($this, 0);
        if (!$this.$strm.$avail_out)
            break;
    }
    return 0;
},
cjj_Deflate__tr_stored_block = ($this, $buf, $stored_len, $eof) => {
    cjj_Deflate_send_bits($this, 0 + (!$eof ? 0 : 1) | 0, 3);
    cjj_Deflate_copy_block($this, $buf, $stored_len, 1);
},
cjj_Deflate__tr_flush_block = ($this, $buf, $stored_len, $eof) => {
    let $max_blindex, $static_lenb, $opt_lenb;
    $max_blindex = 0;
    if ($this.$level <= 0) {
        $static_lenb = $stored_len + 5 | 0;
        $opt_lenb = $static_lenb;
    } else {
        if ($this.$data_type == 2)
            cjj_Deflate_set_data_type($this);
        cjj_Tree_build_tree($this.$l_desc, $this);
        cjj_Tree_build_tree($this.$d_desc, $this);
        $max_blindex = cjj_Deflate_build_bl_tree($this);
        $opt_lenb = (($this.$opt_len + 3 | 0) + 7 | 0) >>> 3 | 0;
        $static_lenb = (($this.$static_len + 3 | 0) + 7 | 0) >>> 3 | 0;
        if ($static_lenb <= $opt_lenb)
            $opt_lenb = $static_lenb;
    }
    if (($stored_len + 4 | 0) <= $opt_lenb && $buf != (-1))
        cjj_Deflate__tr_stored_block($this, $buf, $stored_len, $eof);
    else if ($static_lenb == $opt_lenb) {
        cjj_Deflate_send_bits($this, 2 + (!$eof ? 0 : 1) | 0, 3);
        cjj_StaticTree_$callClinit();
        cjj_Deflate_compress_block($this, cjj_StaticTree_static_ltree, cjj_StaticTree_static_dtree);
    } else {
        cjj_Deflate_send_bits($this, 4 + (!$eof ? 0 : 1) | 0, 3);
        cjj_Deflate_send_all_trees($this, $this.$l_desc.$max_code + 1 | 0, $this.$d_desc.$max_code + 1 | 0, $max_blindex + 1 | 0);
        cjj_Deflate_compress_block($this, $this.$dyn_ltree, $this.$dyn_dtree);
    }
    cjj_Deflate_init_block($this);
    if ($eof)
        cjj_Deflate_bi_windup($this);
},
cjj_Deflate_fill_window = $this => {
    let $more, $n, $p, var$4, $m, var$6, var$7, var$8;
    while (true) {
        $more = ($this.$window_size - $this.$lookahead | 0) - $this.$strstart | 0;
        if (!$more && !$this.$strstart && !$this.$lookahead)
            $more = $this.$w_size;
        else if ($more == (-1))
            $more = $more + (-1) | 0;
        else if ($this.$strstart >= (($this.$w_size + $this.$w_size | 0) - 262 | 0)) {
            jl_System_fastArraycopy($this.$window, $this.$w_size, $this.$window, 0, $this.$w_size);
            $this.$match_start = $this.$match_start - $this.$w_size | 0;
            $this.$strstart = $this.$strstart - $this.$w_size | 0;
            $this.$block_start = $this.$block_start - $this.$w_size | 0;
            $n = $this.$hash_size;
            $p = $n;
            while (true) {
                var$4 = $this.$head.data;
                $p = $p + (-1) | 0;
                $m = var$4[$p] & 65535;
                var$4 = $this.$head;
                var$4.data[$p] = $m < $this.$w_size ? 0 : ($m - $this.$w_size | 0) << 16 >> 16;
                $n = $n + (-1) | 0;
                if (!$n)
                    break;
            }
            var$6 = $this.$w_size;
            var$7 = var$6;
            while (true) {
                var$4 = $this.$prev.data;
                var$7 = var$7 + (-1) | 0;
                var$8 = var$4[var$7] & 65535;
                var$4 = $this.$prev;
                var$4.data[var$7] = var$8 < $this.$w_size ? 0 : (var$8 - $this.$w_size | 0) << 16 >> 16;
                var$6 = var$6 + (-1) | 0;
                if (!var$6)
                    break;
            }
            $more = $more + $this.$w_size | 0;
        }
        if (!$this.$strm.$avail_in)
            return;
        $n = $this.$strm.$read_buf($this.$window, $this.$strstart + $this.$lookahead | 0, $more);
        $this.$lookahead = $this.$lookahead + $n | 0;
        if ($this.$lookahead >= 3) {
            $this.$ins_h = $this.$window.data[$this.$strstart] & 255;
            $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window.data[$this.$strstart + 1 | 0] & 255) & $this.$hash_mask;
        }
        if ($this.$lookahead >= 262)
            break;
        if ($this.$strm.$avail_in)
            continue;
        else
            break;
    }
},
cjj_Deflate_deflate_fast = ($this, $flush) => {
    let $hash_head, var$3, $bflush;
    $hash_head = 0;
    while (true) {
        if ($this.$lookahead < 262) {
            cjj_Deflate_fill_window($this);
            if ($this.$lookahead < 262 && !$flush)
                return 0;
            if (!$this.$lookahead) {
                var$3 = $rt_compare($flush, 4);
                cjj_Deflate_flush_block_only($this, var$3 ? 0 : 1);
                if (!$this.$strm.$avail_out) {
                    if (var$3)
                        return 0;
                    return 2;
                }
                return var$3 ? 1 : 3;
            }
        }
        if ($this.$lookahead >= 3) {
            $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
            $hash_head = $this.$head.data[$this.$ins_h] & 65535;
            $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head.data[$this.$ins_h];
            $this.$head.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
        }
        if (Long_ne(Long_fromInt($hash_head), Long_ZERO) && (($this.$strstart - $hash_head | 0) & 65535) <= ($this.$w_size - 262 | 0) && $this.$strategy != 2)
            $this.$match_length = cjj_Deflate_longest_match($this, $hash_head);
        if ($this.$match_length < 3) {
            $bflush = cjj_Deflate__tr_tally($this, 0, $this.$window.data[$this.$strstart] & 255);
            $this.$lookahead = $this.$lookahead - 1 | 0;
            $this.$strstart = $this.$strstart + 1 | 0;
        } else {
            $bflush = cjj_Deflate__tr_tally($this, $this.$strstart - $this.$match_start | 0, $this.$match_length - 3 | 0);
            $this.$lookahead = $this.$lookahead - $this.$match_length | 0;
            if ($this.$match_length <= $this.$max_lazy_match && $this.$lookahead >= 3) {
                $this.$match_length = $this.$match_length - 1 | 0;
                while (true) {
                    $this.$strstart = $this.$strstart + 1 | 0;
                    $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
                    $hash_head = $this.$head.data[$this.$ins_h] & 65535;
                    $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head.data[$this.$ins_h];
                    $this.$head.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
                    var$3 = $this.$match_length - 1 | 0;
                    $this.$match_length = var$3;
                    if (var$3)
                        continue;
                    else
                        break;
                }
                $this.$strstart = $this.$strstart + 1 | 0;
            } else {
                $this.$strstart = $this.$strstart + $this.$match_length | 0;
                $this.$match_length = 0;
                $this.$ins_h = $this.$window.data[$this.$strstart] & 255;
                $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window.data[$this.$strstart + 1 | 0] & 255) & $this.$hash_mask;
            }
        }
        if (!$bflush)
            continue;
        cjj_Deflate_flush_block_only($this, 0);
        if (!$this.$strm.$avail_out)
            break;
    }
    return 0;
},
cjj_Deflate_deflate_slow = ($this, $flush) => {
    let $hash_head, var$3, $bflush, $max_insert;
    $hash_head = 0;
    while (true) {
        if ($this.$lookahead < 262) {
            cjj_Deflate_fill_window($this);
            if ($this.$lookahead < 262 && !$flush)
                return 0;
            if (!$this.$lookahead) {
                if ($this.$match_available) {
                    cjj_Deflate__tr_tally($this, 0, $this.$window.data[$this.$strstart - 1 | 0] & 255);
                    $this.$match_available = 0;
                }
                var$3 = $rt_compare($flush, 4);
                cjj_Deflate_flush_block_only($this, var$3 ? 0 : 1);
                if (!$this.$strm.$avail_out) {
                    if (var$3)
                        return 0;
                    return 2;
                }
                return var$3 ? 1 : 3;
            }
        }
        if ($this.$lookahead >= 3) {
            $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
            $hash_head = $this.$head.data[$this.$ins_h] & 65535;
            $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head.data[$this.$ins_h];
            $this.$head.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
        }
        a: {
            $this.$prev_length = $this.$match_length;
            $this.$prev_match = $this.$match_start;
            $this.$match_length = 2;
            if ($hash_head && $this.$prev_length < $this.$max_lazy_match && (($this.$strstart - $hash_head | 0) & 65535) <= ($this.$w_size - 262 | 0)) {
                if ($this.$strategy != 2)
                    $this.$match_length = cjj_Deflate_longest_match($this, $hash_head);
                if ($this.$match_length <= 5) {
                    if ($this.$strategy != 1) {
                        if ($this.$match_length != 3)
                            break a;
                        if (($this.$strstart - $this.$match_start | 0) <= 4096)
                            break a;
                    }
                    $this.$match_length = 2;
                }
            }
        }
        if (!($this.$prev_length >= 3 && $this.$match_length <= $this.$prev_length)) {
            if (!$this.$match_available) {
                $this.$match_available = 1;
                $this.$strstart = $this.$strstart + 1 | 0;
                $this.$lookahead = $this.$lookahead - 1 | 0;
                continue;
            }
            $bflush = cjj_Deflate__tr_tally($this, 0, $this.$window.data[$this.$strstart - 1 | 0] & 255);
            if ($bflush)
                cjj_Deflate_flush_block_only($this, 0);
            $this.$strstart = $this.$strstart + 1 | 0;
            $this.$lookahead = $this.$lookahead - 1 | 0;
            if (!$this.$strm.$avail_out)
                break;
            continue;
        }
        $max_insert = ($this.$strstart + $this.$lookahead | 0) - 3 | 0;
        $bflush = cjj_Deflate__tr_tally($this, ($this.$strstart - 1 | 0) - $this.$prev_match | 0, $this.$prev_length - 3 | 0);
        $this.$lookahead = $this.$lookahead - ($this.$prev_length - 1 | 0) | 0;
        $this.$prev_length = $this.$prev_length - 2 | 0;
        while (true) {
            var$3 = $this.$strstart + 1 | 0;
            $this.$strstart = var$3;
            if (var$3 <= $max_insert) {
                $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
                $hash_head = $this.$head.data[$this.$ins_h] & 65535;
                $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head.data[$this.$ins_h];
                $this.$head.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
            }
            var$3 = $this.$prev_length - 1 | 0;
            $this.$prev_length = var$3;
            if (!var$3)
                break;
        }
        $this.$match_available = 0;
        $this.$match_length = 2;
        $this.$strstart = $this.$strstart + 1 | 0;
        if ($bflush) {
            cjj_Deflate_flush_block_only($this, 0);
            if (!$this.$strm.$avail_out)
                return 0;
        }
    }
    return 0;
},
cjj_Deflate_longest_match = ($this, $cur_match) => {
    let $chain_length, $scan, $best_len, $limit, $nice_match, $wmask, $strend, var$9, var$10, $scan_end1, $scan_end, var$13, var$14, var$15, $len;
    $chain_length = $this.$max_chain_length;
    $scan = $this.$strstart;
    $best_len = $this.$prev_length;
    $limit = $this.$strstart <= ($this.$w_size - 262 | 0) ? 0 : $this.$strstart - ($this.$w_size - 262 | 0) | 0;
    $nice_match = $this.$nice_match;
    $wmask = $this.$w_mask;
    $strend = $this.$strstart + 258 | 0;
    var$9 = $this.$window.data;
    var$10 = $scan + $best_len | 0;
    $scan_end1 = var$9[var$10 - 1 | 0];
    $scan_end = $this.$window.data[var$10];
    if ($this.$prev_length >= $this.$good_match)
        $chain_length = $chain_length >> 2;
    if ($nice_match > $this.$lookahead)
        $nice_match = $this.$lookahead;
    a: {
        while (true) {
            var$9 = $this.$window.data;
            var$13 = $cur_match + $best_len | 0;
            if (var$9[var$13] == $scan_end && $this.$window.data[var$13 - 1 | 0] == $scan_end1 && $this.$window.data[$cur_match] == $this.$window.data[$scan]) {
                var$9 = $this.$window.data;
                var$13 = $cur_match + 1 | 0;
                if (var$9[var$13] == $this.$window.data[$scan + 1 | 0]) {
                    var$14 = $scan + 2 | 0;
                    var$10 = var$13 + 1 | 0;
                    b: {
                        while (true) {
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$13 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$15 = var$10 + 1 | 0;
                            if (var$13 != var$9[var$15])
                                break;
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$10 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$13 = var$15 + 1 | 0;
                            if (var$10 != var$9[var$13])
                                break b;
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$10 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$13 = var$13 + 1 | 0;
                            if (var$10 != var$9[var$13])
                                break b;
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$10 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$13 = var$13 + 1 | 0;
                            if (var$10 != var$9[var$13])
                                break b;
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$10 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$13 = var$13 + 1 | 0;
                            if (var$10 != var$9[var$13])
                                break b;
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$10 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$13 = var$13 + 1 | 0;
                            if (var$10 != var$9[var$13])
                                break b;
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$10 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$13 = var$13 + 1 | 0;
                            if (var$10 != var$9[var$13])
                                break b;
                            var$9 = $this.$window.data;
                            var$14 = var$14 + 1 | 0;
                            var$15 = var$9[var$14];
                            var$9 = $this.$window.data;
                            var$10 = var$13 + 1 | 0;
                            if (var$15 != var$9[var$10])
                                break b;
                            if (var$14 >= $strend)
                                break b;
                        }
                    }
                    $len = 258 - ($strend - var$14 | 0) | 0;
                    $scan = $strend - 258 | 0;
                    if ($len > $best_len) {
                        $this.$match_start = $cur_match;
                        if ($len >= $nice_match)
                            break;
                        var$9 = $this.$window.data;
                        var$10 = $scan + $len | 0;
                        $scan_end1 = var$9[var$10 - 1 | 0];
                        $scan_end = $this.$window.data[var$10];
                        $best_len = $len;
                    }
                }
            }
            $cur_match = $this.$prev.data[$cur_match & $wmask] & 65535;
            if ($cur_match <= $limit) {
                $len = $best_len;
                break a;
            }
            $chain_length = $chain_length + (-1) | 0;
            if (!$chain_length) {
                $len = $best_len;
                break a;
            }
        }
    }
    if ($len <= $this.$lookahead)
        return $len;
    return $this.$lookahead;
},
cjj_Deflate_deflateInit = ($this, $level, $bits) => {
    return cjj_Deflate_deflateInit0($this, $level, 8, $bits, 8, 0);
},
cjj_Deflate_deflateInit0 = ($this, $level, $method, $windowBits, $memLevel, $strategy) => {
    let $wrap;
    $wrap = 1;
    $this.$strm.$msg = null;
    if ($level == (-1))
        $level = 6;
    if ($windowBits < 0) {
        $wrap = 0;
        $windowBits =  -$windowBits | 0;
    } else if ($windowBits > 15) {
        $wrap = 2;
        $windowBits = $windowBits + (-16) | 0;
        $this.$strm.$adler = cjj_CRC32__init_();
    }
    a: {
        if ($memLevel < 1)
            break a;
        if ($memLevel > 9)
            break a;
        if ($method != 8)
            break a;
        if ($windowBits < 9)
            break a;
        if ($windowBits > 15)
            break a;
        if ($level < 0)
            break a;
        if ($level > 9)
            break a;
        if ($strategy < 0)
            break a;
        if ($strategy <= 2) {
            $this.$strm.$dstate = $this;
            $this.$wrap10 = $wrap;
            $this.$w_bits = $windowBits;
            $this.$w_size = 1 << $this.$w_bits;
            $this.$w_mask = $this.$w_size - 1 | 0;
            $this.$hash_bits = $memLevel + 7 | 0;
            $this.$hash_size = 1 << $this.$hash_bits;
            $this.$hash_mask = $this.$hash_size - 1 | 0;
            $this.$hash_shift = (($this.$hash_bits + 3 | 0) - 1 | 0) / 3 | 0;
            $this.$window = $rt_createByteArray($this.$w_size * 2 | 0);
            $this.$prev = $rt_createShortArray($this.$w_size);
            $this.$head = $rt_createShortArray($this.$hash_size);
            $this.$lit_bufsize = 1 << ($memLevel + 6 | 0);
            $this.$pending_buf = $rt_createByteArray($this.$lit_bufsize * 3 | 0);
            $this.$pending_buf_size = $this.$lit_bufsize * 3 | 0;
            $this.$d_buf = $this.$lit_bufsize;
            $this.$l_buf = $rt_createByteArray($this.$lit_bufsize);
            $this.$level = $level;
            $this.$strategy = $strategy;
            $this.$method1 = $method << 24 >> 24;
            return cjj_Deflate_deflateReset($this);
        }
    }
    return (-2);
},
cjj_Deflate_deflateReset = $this => {
    let var$1;
    var$1 = $this.$strm;
    $this.$strm.$total_out = Long_ZERO;
    var$1.$total_in = Long_ZERO;
    $this.$strm.$msg = null;
    $this.$strm.$data_type0 = 2;
    $this.$pending = 0;
    $this.$pending_out = 0;
    if ($this.$wrap10 < 0)
        $this.$wrap10 =  -$this.$wrap10 | 0;
    $this.$status = $this.$wrap10 ? 42 : 113;
    $this.$strm.$adler.$reset();
    $this.$last_flush = 0;
    cjj_Deflate_tr_init($this);
    cjj_Deflate_lm_init($this);
    return 0;
},
cjj_Deflate_deflate = ($this, $flush) => {
    let var$2, var$3, $old_flush, $header, $level_flags, var$7, $adler, $bstate, $i;
    var$2 = $rt_compare($flush, 4);
    if (var$2 <= 0 && $flush >= 0) {
        a: {
            if ($this.$strm.$next_out !== null && !($this.$strm.$next_in === null && $this.$strm.$avail_in)) {
                if ($this.$status != 666)
                    break a;
                if (!var$2)
                    break a;
            }
            var$3 = $this.$strm;
            cjj_Deflate_$callClinit();
            var$3.$msg = cjj_Deflate_z_errmsg.data[4];
            return (-2);
        }
        if (!$this.$strm.$avail_out) {
            var$3 = $this.$strm;
            cjj_Deflate_$callClinit();
            var$3.$msg = cjj_Deflate_z_errmsg.data[7];
            return (-5);
        }
        $old_flush = $this.$last_flush;
        $this.$last_flush = $flush;
        if ($this.$status == 42) {
            if ($this.$wrap10 == 2) {
                (cjj_Deflate_getGZIPHeader($this)).$put9($this);
                $this.$status = 113;
                $this.$strm.$adler.$reset();
            } else {
                $header = (8 + (($this.$w_bits - 8 | 0) << 4) | 0) << 8;
                $level_flags = (($this.$level - 1 | 0) & 255) >> 1;
                if ($level_flags > 3)
                    $level_flags = 3;
                var$7 = $header | $level_flags << 6;
                if ($this.$strstart)
                    var$7 = var$7 | 32;
                var$7 = var$7 + (31 - (var$7 % 31 | 0) | 0) | 0;
                $this.$status = 113;
                cjj_Deflate_putShortMSB($this, var$7);
                if ($this.$strstart) {
                    $adler = $this.$strm.$adler.$getValue0();
                    cjj_Deflate_putShortMSB($this, Long_lo(Long_shru($adler, 16)));
                    cjj_Deflate_putShortMSB($this, Long_lo(Long_and($adler, Long_fromInt(65535))));
                }
                $this.$strm.$adler.$reset();
            }
        }
        b: {
            if ($this.$pending) {
                $this.$strm.$flush_pending();
                if ($this.$strm.$avail_out)
                    break b;
                $this.$last_flush = (-1);
                return 0;
            }
            if (!$this.$strm.$avail_in && $flush <= $old_flush && var$2) {
                var$3 = $this.$strm;
                cjj_Deflate_$callClinit();
                var$3.$msg = cjj_Deflate_z_errmsg.data[7];
                return (-5);
            }
        }
        if ($this.$status == 666 && $this.$strm.$avail_in) {
            var$3 = $this.$strm;
            cjj_Deflate_$callClinit();
            var$3.$msg = cjj_Deflate_z_errmsg.data[7];
            return (-5);
        }
        c: {
            if (!$this.$strm.$avail_in && !$this.$lookahead) {
                if (!$flush)
                    break c;
                if ($this.$status == 666)
                    break c;
            }
            d: {
                $bstate = (-1);
                cjj_Deflate_$callClinit();
                switch (cjj_Deflate_config_table.data[$this.$level].$func) {
                    case 0:
                        $bstate = cjj_Deflate_deflate_stored($this, $flush);
                        break d;
                    case 1:
                        $bstate = cjj_Deflate_deflate_fast($this, $flush);
                        break d;
                    case 2:
                        $bstate = cjj_Deflate_deflate_slow($this, $flush);
                        break d;
                    default:
                }
            }
            var$7 = $rt_compare($bstate, 2);
            if (!(var$7 && $bstate != 3))
                $this.$status = 666;
            if ($bstate && var$7) {
                if ($bstate != 1)
                    break c;
                e: {
                    if ($flush == 1)
                        cjj_Deflate__tr_align($this);
                    else {
                        cjj_Deflate__tr_stored_block($this, 0, 0, 0);
                        if ($flush == 3) {
                            $i = 0;
                            while (true) {
                                if ($i >= $this.$hash_size)
                                    break e;
                                $this.$head.data[$i] = 0;
                                $i = $i + 1 | 0;
                            }
                        }
                    }
                }
                $this.$strm.$flush_pending();
                if ($this.$strm.$avail_out)
                    break c;
                $this.$last_flush = (-1);
                return 0;
            }
            if (!$this.$strm.$avail_out)
                $this.$last_flush = (-1);
            return 0;
        }
        if (var$2)
            return 0;
        if ($this.$wrap10 <= 0)
            return 1;
        if ($this.$wrap10 != 2) {
            $adler = $this.$strm.$adler.$getValue0();
            cjj_Deflate_putShortMSB($this, Long_lo(Long_shru($adler, 16)));
            cjj_Deflate_putShortMSB($this, Long_lo(Long_and($adler, Long_fromInt(65535))));
        } else {
            $adler = $this.$strm.$adler.$getValue0();
            cjj_Deflate_put_byte($this, Long_lo(Long_and($adler, Long_fromInt(255))) << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_lo(Long_and(Long_shr($adler, 8), Long_fromInt(255))) << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_lo(Long_and(Long_shr($adler, 16), Long_fromInt(255))) << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_lo(Long_and(Long_shr($adler, 24), Long_fromInt(255))) << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_lo(Long_and($this.$strm.$total_in, Long_fromInt(255))) << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_lo(Long_and(Long_shr($this.$strm.$total_in, 8), Long_fromInt(255))) << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_lo(Long_and(Long_shr($this.$strm.$total_in, 16), Long_fromInt(255))) << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_lo(Long_and(Long_shr($this.$strm.$total_in, 24), Long_fromInt(255))) << 24 >> 24);
            (cjj_Deflate_getGZIPHeader($this)).$setCRC($adler);
        }
        $this.$strm.$flush_pending();
        if ($this.$wrap10 > 0)
            $this.$wrap10 =  -$this.$wrap10 | 0;
        return !$this.$pending ? 1 : 0;
    }
    return (-2);
},
cjj_Deflate_getGZIPHeader = $this => {
    jl_Object_monitorEnterSync($this);
    try {
        if ($this.$gheader0 === null)
            $this.$gheader0 = cjj_GZIPHeader__init_();
        return $this.$gheader0;
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cjj_Deflate__clinit_ = () => {
    cjj_Deflate_config_table = $rt_createArray(cjj_Deflate$Config, 10);
    cjj_Deflate_config_table.data[0] = cjj_Deflate$Config__init_(0, 0, 0, 0, 0);
    cjj_Deflate_config_table.data[1] = cjj_Deflate$Config__init_(4, 4, 8, 4, 1);
    cjj_Deflate_config_table.data[2] = cjj_Deflate$Config__init_(4, 5, 16, 8, 1);
    cjj_Deflate_config_table.data[3] = cjj_Deflate$Config__init_(4, 6, 32, 32, 1);
    cjj_Deflate_config_table.data[4] = cjj_Deflate$Config__init_(4, 4, 16, 16, 2);
    cjj_Deflate_config_table.data[5] = cjj_Deflate$Config__init_(8, 16, 32, 32, 2);
    cjj_Deflate_config_table.data[6] = cjj_Deflate$Config__init_(8, 16, 128, 128, 2);
    cjj_Deflate_config_table.data[7] = cjj_Deflate$Config__init_(8, 32, 128, 256, 2);
    cjj_Deflate_config_table.data[8] = cjj_Deflate$Config__init_(32, 128, 258, 1024, 2);
    cjj_Deflate_config_table.data[9] = cjj_Deflate$Config__init_(32, 258, 258, 4096, 2);
    cjj_Deflate_z_errmsg = $rt_wrapArray(jl_String, [$rt_s(2), $rt_s(1316), $rt_s(23), $rt_s(1317), $rt_s(1318), $rt_s(1319), $rt_s(1320), $rt_s(1321), $rt_s(1322), $rt_s(23)]);
};
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$041 = null;
}
let jur_AbstractCharClass$LazyJavaWhitespace$1__init_ = ($this, $this$0) => {
    $this.$this$041 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaWhitespace$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaWhitespace$1();
    jur_AbstractCharClass$LazyJavaWhitespace$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaWhitespace$1_contains = ($this, $ch) => {
    return jl_Character_isWhitespace($ch);
};
function onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2() {
    jl_Object.call(this);
    this.$_034 = null;
}
let onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_034 = var$1;
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2();
    onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2_run = var$0 => {
    onns_NostrNIP46Signer_lambda$sendRPC$21(var$0.$_034);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function onnrt_NostrTURN$onTurnEvent$lambda$_5_0() {
    let a = this; jl_Object.call(a);
    a.$_052 = null;
    a.$_127 = 0;
}
let onnrt_NostrTURN$onTurnEvent$lambda$_5_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_052 = var$1;
    var$0.$_127 = var$2;
},
onnrt_NostrTURN$onTurnEvent$lambda$_5_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnrt_NostrTURN$onTurnEvent$lambda$_5_0();
    onnrt_NostrTURN$onTurnEvent$lambda$_5_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnrt_NostrTURN$onTurnEvent$lambda$_5_0_apply0 = (var$0, var$1) => {
    return onnrt_NostrTURN$onTurnEvent$lambda$_5_0_apply(var$0, var$1);
},
onnrt_NostrTURN$onTurnEvent$lambda$_5_0_apply = (var$0, var$1) => {
    return onnrt_NostrTURN_lambda$onTurnEvent$2(var$0.$_052, var$0.$_127, var$1);
};
function onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0() {
    jl_Object.call(this);
    this.$_0139 = null;
}
let onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0139 = var$1;
},
onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0();
    onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0_apply(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$sendRPC$23(var$0.$_0139, var$1);
},
jtc_ChronoZonedDateTime = $rt_classWithoutFields(),
jtc_ChronoZonedDateTime_INSTANT_COMPARATOR = null,
jtc_ChronoZonedDateTime_$callClinit = () => {
    jtc_ChronoZonedDateTime_$callClinit = $rt_eraseClinit(jtc_ChronoZonedDateTime);
    jtc_ChronoZonedDateTime__clinit_();
},
jtc_ChronoZonedDateTime__init_ = $this => {
    jtc_ChronoZonedDateTime_$callClinit();
    jl_Object__init_($this);
},
jtc_ChronoZonedDateTime_toEpochSecond = $this => {
    let $epochDay, $secs, var$3;
    $epochDay = ($this.$toLocalDate()).$toEpochDay();
    $secs = Long_add(Long_mul($epochDay, Long_fromInt(86400)), Long_fromInt(jt_LocalTime_toSecondOfDay($this.$toLocalTime())));
    var$3 = Long_sub($secs, Long_fromInt(jt_ZoneOffset_getTotalSeconds($this.$getOffset1())));
    return var$3;
},
jtc_ChronoZonedDateTime__clinit_ = () => {
    let var$1, var$2;
    var$1 = jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0__init_0();
    var$1 = ju_Comparator_comparingLong(var$1);
    var$2 = jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1__init_0();
    jtc_ChronoZonedDateTime_INSTANT_COMPARATOR = var$1.$thenComparingLong(var$2);
};
function jt_ZonedDateTime() {
    let a = this; jtc_ChronoZonedDateTime.call(a);
    a.$dateTime = null;
    a.$offset1 = null;
    a.$zone5 = null;
}
let jt_ZonedDateTime_of = ($localDateTime, $zone) => {
    return jt_ZonedDateTime_ofLocal($localDateTime, $zone, null);
},
jt_ZonedDateTime_ofLocal = ($localDateTime, $zone, $offset) => {
    let $rules, $validOffsets, $trans;
    ju_Objects_requireNonNull($localDateTime, $rt_s(1323));
    ju_Objects_requireNonNull($zone, $rt_s(1110));
    if ($zone instanceof jt_ZoneOffset)
        return jt_ZonedDateTime__init_($localDateTime, $zone, $zone);
    $rules = $zone.$getRules();
    $validOffsets = $rules.$getValidOffsets0($localDateTime);
    if ($validOffsets.$size() == 1)
        $offset = $validOffsets.$get(0);
    else if (!$validOffsets.$size()) {
        $trans = $rules.$getTransition($localDateTime);
        $localDateTime = jt_LocalDateTime_plusSeconds($localDateTime, jt_Duration_getSeconds(jtz_ZoneOffsetTransition_getDuration($trans)));
        $offset = jtz_ZoneOffsetTransition_getOffsetAfter($trans);
    } else if (!($offset !== null && $validOffsets.$contains($offset)))
        $offset = ju_Objects_requireNonNull($validOffsets.$get(0), $rt_s(52));
    return jt_ZonedDateTime__init_($localDateTime, $offset, $zone);
},
jt_ZonedDateTime_ofInstant = ($instant, $zone) => {
    ju_Objects_requireNonNull($instant, $rt_s(1324));
    ju_Objects_requireNonNull($zone, $rt_s(1110));
    return jt_ZonedDateTime_create(jt_Instant_getEpochSecond($instant), jt_Instant_getNano($instant), $zone);
},
jt_ZonedDateTime_create = ($epochSecond, $nanoOfSecond, $zone) => {
    let $rules, $instant, $offset, $ldt;
    $rules = $zone.$getRules();
    $instant = jt_Instant_ofEpochSecond0($epochSecond, Long_fromInt($nanoOfSecond));
    $offset = $rules.$getOffset0($instant);
    $ldt = jt_LocalDateTime_ofEpochSecond($epochSecond, $nanoOfSecond, $offset);
    return jt_ZonedDateTime__init_($ldt, $offset, $zone);
},
jt_ZonedDateTime__init_0 = ($this, $dateTime, $offset, $zone) => {
    jtc_ChronoZonedDateTime__init_($this);
    $this.$dateTime = $dateTime;
    $this.$offset1 = $offset;
    $this.$zone5 = $zone;
},
jt_ZonedDateTime__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jt_ZonedDateTime();
    jt_ZonedDateTime__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jt_ZonedDateTime_getLong = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return $field.$getFrom($this);
    jt_ZonedDateTime$1_$callClinit();
    switch (jt_ZonedDateTime$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal($field)]) {
        case 1:
            break;
        case 2:
            return Long_fromInt(jt_ZoneOffset_getTotalSeconds(jt_ZonedDateTime_getOffset($this)));
        default:
            return jt_LocalDateTime_getLong($this.$dateTime, $field);
    }
    return $this.$toEpochSecond0();
},
jt_ZonedDateTime_getOffset = $this => {
    return $this.$offset1;
},
jt_ZonedDateTime_toLocalDate = $this => {
    return jt_LocalDateTime_toLocalDate($this.$dateTime);
},
jt_ZonedDateTime_toLocalTime = $this => {
    return jt_LocalDateTime_toLocalTime($this.$dateTime);
},
jt_ZonedDateTime_toLocalDate0 = $this => {
    return jt_ZonedDateTime_toLocalDate($this);
};
function onns_NostrNIP46Signer$close$lambda$_4_0() {
    jl_Object.call(this);
    this.$_0160 = null;
}
let onns_NostrNIP46Signer$close$lambda$_4_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0160 = var$1;
},
onns_NostrNIP46Signer$close$lambda$_4_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$close$lambda$_4_0();
    onns_NostrNIP46Signer$close$lambda$_4_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$close$lambda$_4_0_accept0 = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer$close$lambda$_4_0_accept(var$0, var$1, var$2);
},
onns_NostrNIP46Signer$close$lambda$_4_0_accept = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer_lambda$close$1(var$0.$_0160, var$1, var$2);
};
function onns_NostrNIP46Signer$onSubEvent$lambda$_9_1() {
    jl_Object.call(this);
    this.$_045 = null;
}
let onns_NostrNIP46Signer$onSubEvent$lambda$_9_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_045 = var$1;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_1__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$onSubEvent$lambda$_9_1();
    onns_NostrNIP46Signer$onSubEvent$lambda$_9_1__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_1_run = var$0 => {
    onns_NostrNIP46Signer_lambda$onSubEvent$16(var$0.$_045);
};
function onns_NostrNIP46Signer$onSubEvent$lambda$_9_2() {
    let a = this; jl_Object.call(a);
    a.$_0136 = null;
    a.$_170 = null;
}
let onns_NostrNIP46Signer$onSubEvent$lambda$_9_2__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0136 = var$1;
    var$0.$_170 = var$2;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_2__init_0 = (var_0, var_1) => {
    let var_2 = new onns_NostrNIP46Signer$onSubEvent$lambda$_9_2();
    onns_NostrNIP46Signer$onSubEvent$lambda$_9_2__init_(var_2, var_0, var_1);
    return var_2;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_2_run = var$0 => {
    onns_NostrNIP46Signer_lambda$onSubEvent$17(var$0.$_0136, var$0.$_170);
};
function jtt_ValueRange() {
    let a = this; jl_Object.call(a);
    a.$minSmallest = Long_ZERO;
    a.$minLargest = Long_ZERO;
    a.$maxSmallest = Long_ZERO;
    a.$maxLargest = Long_ZERO;
}
let jtt_ValueRange_of = ($min, $max) => {
    if (Long_le($min, $max))
        return jtt_ValueRange__init_($min, $min, $max, $max);
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1325)));
},
jtt_ValueRange_of0 = ($min, $maxSmallest, $maxLargest) => {
    return jtt_ValueRange_of1($min, $min, $maxSmallest, $maxLargest);
},
jtt_ValueRange_of1 = ($minSmallest, $minLargest, $maxSmallest, $maxLargest) => {
    if (Long_gt($minSmallest, $minLargest))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1326)));
    if (Long_gt($maxSmallest, $maxLargest))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1327)));
    if (Long_le($minLargest, $maxLargest))
        return jtt_ValueRange__init_($minSmallest, $minLargest, $maxSmallest, $maxLargest);
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1325)));
},
jtt_ValueRange__init_0 = ($this, $minSmallest, $minLargest, $maxSmallest, $maxLargest) => {
    jl_Object__init_($this);
    $this.$minSmallest = $minSmallest;
    $this.$minLargest = $minLargest;
    $this.$maxSmallest = $maxSmallest;
    $this.$maxLargest = $maxLargest;
},
jtt_ValueRange__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jtt_ValueRange();
    jtt_ValueRange__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jtt_ValueRange_isFixed = $this => {
    return Long_eq($this.$minSmallest, $this.$minLargest) && Long_eq($this.$maxSmallest, $this.$maxLargest) ? 1 : 0;
},
jtt_ValueRange_getMinimum = $this => {
    return $this.$minSmallest;
},
jtt_ValueRange_getMaximum = $this => {
    return $this.$maxLargest;
},
jtt_ValueRange_isIntValue = $this => {
    return Long_ge(jtt_ValueRange_getMinimum($this), Long_fromInt(-2147483648)) && Long_le(jtt_ValueRange_getMaximum($this), Long_fromInt(2147483647)) ? 1 : 0;
},
jtt_ValueRange_isValidValue = ($this, $value) => {
    return Long_ge($value, jtt_ValueRange_getMinimum($this)) && Long_le($value, jtt_ValueRange_getMaximum($this)) ? 1 : 0;
},
jtt_ValueRange_isValidIntValue = ($this, $value) => {
    return jtt_ValueRange_isIntValue($this) && jtt_ValueRange_isValidValue($this, $value) ? 1 : 0;
},
jtt_ValueRange_checkValidValue = ($this, $value, $field) => {
    let var$3, var$4, var$5, var$6;
    if (jtt_ValueRange_isValidValue($this, $value))
        return $value;
    if ($field === null) {
        var$3 = new jt_DateTimeException;
        var$4 = jl_String_valueOf($this);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1328)), var$4), $rt_s(1329)), $value);
        jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$5));
        $rt_throw(var$3);
    }
    var$3 = new jt_DateTimeException;
    var$4 = jl_String_valueOf($field);
    var$5 = jl_String_valueOf($this);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1330)), var$4), $rt_s(1331)), var$5), $rt_s(1329)), $value);
    jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$6));
    $rt_throw(var$3);
},
jtt_ValueRange_checkValidIntValue = ($this, $value, $field) => {
    let var$3, var$4, var$5;
    if (jtt_ValueRange_isValidIntValue($this, $value))
        return Long_lo($value);
    var$3 = new jt_DateTimeException;
    var$4 = jl_String_valueOf($field);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1332)), var$4), $rt_s(17)), $value);
    jt_DateTimeException__init_(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
jtt_ValueRange_toString = $this => {
    let $buf;
    $buf = jl_StringBuilder__init_();
    $buf.$append13($this.$minSmallest);
    if (Long_ne($this.$minSmallest, $this.$minLargest))
        ($buf.$append0(47)).$append13($this.$minLargest);
    ($buf.$append1($rt_s(1333))).$append13($this.$maxSmallest);
    if (Long_ne($this.$maxSmallest, $this.$maxLargest))
        ($buf.$append0(47)).$append13($this.$maxLargest);
    return $buf.$toString();
};
function onns_NostrNIP46Signer$onSubEvent$lambda$_9_0() {
    let a = this; jl_Object.call(a);
    a.$_011 = null;
    a.$_16 = null;
}
let onns_NostrNIP46Signer$onSubEvent$lambda$_9_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_011 = var$1;
    var$0.$_16 = var$2;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_0__init_0 = (var_0, var_1) => {
    let var_2 = new onns_NostrNIP46Signer$onSubEvent$lambda$_9_0();
    onns_NostrNIP46Signer$onSubEvent$lambda$_9_0__init_(var_2, var_0, var_1);
    return var_2;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_0_run = var$0 => {
    onns_NostrNIP46Signer_lambda$onSubEvent$14(var$0.$_011, var$0.$_16);
};
function jl_Long() {
    jl_Number.call(this);
    this.$value3 = Long_ZERO;
}
let jl_Long_TYPE = null,
jl_Long_$callClinit = () => {
    jl_Long_$callClinit = $rt_eraseClinit(jl_Long);
    jl_Long__clinit_();
},
jl_Long__init_ = ($this, $value) => {
    jl_Long_$callClinit();
    jl_Number__init_($this);
    $this.$value3 = $value;
},
jl_Long__init_0 = var_0 => {
    let var_1 = new jl_Long();
    jl_Long__init_(var_1, var_0);
    return var_1;
},
jl_Long_valueOf = $value => {
    jl_Long_$callClinit();
    return jl_Long__init_0($value);
},
jl_Long_parseLong0 = ($s, $radix) => {
    jl_Long_$callClinit();
    if ($s !== null)
        return jl_Long_parseLongImpl($s, 0, $s.$length(), $radix);
    $rt_throw(jl_NumberFormatException__init_0($rt_s(13)));
},
jl_Long_parseLongImpl = ($s, $beginIndex, $endIndex, $radix) => {
    let $negative, var$6, $value, var$8, $maxValue, var$10, $digit, var$12, var$13, var$14, var$15;
    jl_Long_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($beginIndex == $endIndex)
            $rt_throw(jl_NumberFormatException__init_0($rt_s(14)));
        a: {
            $negative = 0;
            switch ($s.$charAt($beginIndex)) {
                case 43:
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                case 45:
                    $negative = 1;
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                default:
            }
            var$6 = $beginIndex;
        }
        $value = Long_ZERO;
        var$8 = Long_fromInt($radix);
        $maxValue = Long_add(Long_fromInt(1), Long_div(Long_create(4294967295, 2147483647), var$8));
        if (var$6 == $endIndex)
            $rt_throw(jl_NumberFormatException__init_2());
        while (true) {
            if (var$6 >= $endIndex) {
                if ($negative)
                    $value = Long_neg($value);
                return $value;
            }
            var$10 = var$6 + 1 | 0;
            $digit = jl_Long_decodeDigit($s.$charAt(var$6));
            if ($digit < 0) {
                var$12 = new jl_NumberFormatException;
                var$13 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$14 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$14, $rt_s(15)), var$13);
                jl_NumberFormatException__init_(var$12, jl_StringBuilder_toString(var$14));
                $rt_throw(var$12);
            }
            if ($digit >= $radix) {
                var$14 = new jl_NumberFormatException;
                var$15 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$12 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$12, $rt_s(16)), $radix), $rt_s(17)), var$15);
                jl_NumberFormatException__init_(var$14, jl_StringBuilder_toString(var$12));
                $rt_throw(var$14);
            }
            if (Long_gt($value, $maxValue))
                break;
            $value = Long_add(Long_mul(var$8, $value), Long_fromInt($digit));
            if (Long_lt($value, Long_ZERO)) {
                if (var$10 == $endIndex && Long_eq($value, Long_create(0, 2147483648)) && $negative)
                    return Long_create(0, 2147483648);
                var$12 = new jl_NumberFormatException;
                var$13 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$14 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$14, $rt_s(1334)), var$13);
                jl_NumberFormatException__init_(var$12, jl_StringBuilder_toString(var$14));
                $rt_throw(var$12);
            }
            var$6 = var$10;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(1335)));
    }
    var$13 = new jl_NumberFormatException;
    var$14 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$14, $rt_s(20)), $radix);
    jl_NumberFormatException__init_(var$13, jl_StringBuilder_toString(var$14));
    $rt_throw(var$13);
},
jl_Long_parseLong = $s => {
    jl_Long_$callClinit();
    return jl_Long_parseLong0($s, 10);
},
jl_Long_decodeDigit = $c => {
    jl_Long_$callClinit();
    if ($c >= 48 && $c <= 57)
        return $c - 48 | 0;
    if ($c >= 97 && $c <= 122)
        return ($c - 97 | 0) + 10 | 0;
    if ($c >= 65 && $c <= 90)
        return ($c - 65 | 0) + 10 | 0;
    return (-1);
},
jl_Long_intValue = $this => {
    return Long_lo($this.$value3);
},
jl_Long_longValue = $this => {
    return $this.$value3;
},
jl_Long_toString = $value => {
    jl_Long_$callClinit();
    return ((jl_StringBuilder__init_()).$append13($value)).$toString();
},
jl_Long_toString0 = $this => {
    return jl_Long_toString($this.$value3);
},
jl_Long_hashCode0 = $this => {
    return jl_Long_hashCode($this.$value3);
},
jl_Long_hashCode = $value => {
    jl_Long_$callClinit();
    return Long_lo($value) ^ Long_hi($value);
},
jl_Long_equals = ($this, $other) => {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Long && Long_eq($other.$value3, $this.$value3) ? 1 : 0;
},
jl_Long_compare = (var$1, var$2) => {
    jl_Long_$callClinit();
    return Long_compare(var$1, var$2);
},
jl_Long_compareTo = ($this, $other) => {
    return jl_Long_compare($this.$value3, $other.$value3);
},
jl_Long_numberOfLeadingZeros = $i => {
    let $n, var$3, var$4;
    jl_Long_$callClinit();
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    var$4 = Long_shru(var$3, 16);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru(var$4, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 8;
    var$4 = Long_shru(var$3, 4);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru(var$4, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
},
jl_Long_signum = $i => {
    jl_Long_$callClinit();
    return Long_lo(Long_or(Long_shr($i, 63), Long_shru(Long_neg($i), 63)));
},
jl_Long_divideUnsigned = (var$1, var$2) => {
    return Long_udiv(var$1, var$2);
},
jl_Long_remainderUnsigned = (var$1, var$2) => {
    return Long_urem(var$1, var$2);
},
jl_Long_compareUnsigned = (var$1, var$2) => {
    return Long_ucompare(var$1, var$2);
},
jl_Long_compareTo0 = ($this, var$1) => {
    return $this.$compareTo17(var$1);
},
jl_Long__clinit_ = () => {
    jl_Long_TYPE = $rt_cls($rt_longcls);
},
otjb_TimerHandler = $rt_classWithoutFields(0);
function onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_017 = null;
    a.$_19 = null;
    a.$_26 = null;
}
let onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_017 = var$1;
    var$0.$_19 = var$2;
    var$0.$_26 = var$3;
},
onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0();
    onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0_onTimer = var$0 => {
    onpt_TeaVMPlatform$2_lambda$runLater$2(var$0.$_017, var$0.$_19, var$0.$_26);
},
onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0_onTimer$exported$0 = var$1 => {
    var$1.$onTimer();
};
function jur_SequenceSet$IntHash() {
    let a = this; jl_Object.call(a);
    a.$table = null;
    a.$values14 = null;
    a.$mask = 0;
    a.$size5 = 0;
}
let jur_SequenceSet$IntHash__init_ = ($this, $size) => {
    jl_Object__init_($this);
    while ($size >= $this.$mask) {
        $this.$mask = $this.$mask << 1 | 1;
    }
    $this.$mask = $this.$mask << 1 | 1;
    $this.$table = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$values14 = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$size5 = $size;
},
jur_SequenceSet$IntHash__init_0 = var_0 => {
    let var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_(var_1, var_0);
    return var_1;
},
jur_SequenceSet$IntHash_put = ($this, $key, $value) => {
    let $i, $hashCode, var$5;
    $i = 0;
    $hashCode = $key & $this.$mask;
    while ($this.$table.data[$hashCode] && $this.$table.data[$hashCode] != $key) {
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask;
    }
    $this.$table.data[$hashCode] = $key;
    $this.$values14.data[$hashCode] = $value;
},
jur_SequenceSet$IntHash_get = ($this, $key) => {
    let $hashCode, $i, $storedKey, var$5;
    $hashCode = $key & $this.$mask;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values14.data[$hashCode];
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask;
    }
    return $this.$size5;
};
function onnrt_NostrTURN$SubscriptionListenerWrapper() {
    let a = this; jl_Object.call(a);
    a.$remote = 0;
    a.$this$014 = null;
}
let onnrt_NostrTURN$SubscriptionListenerWrapper__init_0 = ($this, var$1, $remote) => {
    $this.$this$014 = var$1;
    jl_Object__init_($this);
    $this.$remote = $remote;
},
onnrt_NostrTURN$SubscriptionListenerWrapper__init_ = (var_0, var_1) => {
    let var_2 = new onnrt_NostrTURN$SubscriptionListenerWrapper();
    onnrt_NostrTURN$SubscriptionListenerWrapper__init_0(var_2, var_0, var_1);
    return var_2;
},
onnrt_NostrTURN$SubscriptionListenerWrapper_onSubEvent = ($this, $event, $stored) => {
    onnrt_NostrTURN_onTurnEvent($this.$this$014, $event, $this.$remote);
},
onnrt_NostrTURN$SubscriptionListenerWrapper__init_$exported$0 = (var$1, var$2) => {
    return onnrt_NostrTURN$SubscriptionListenerWrapper__init_(var$1, var$2 ? 1 : 0);
},
onnrt_NostrTURN$SubscriptionListenerWrapper_onSubEvent$exported$1 = (var$1, var$2, var$3) => {
    let var$4;
    var$2 = var$2;
    var$4 = var$3 ? 1 : 0;
    var$1.$onSubEvent(var$2, var$4);
};
function onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1() {
    let a = this; jl_Object.call(a);
    a.$_016 = null;
    a.$_18 = null;
    a.$_25 = null;
    a.$_32 = null;
    a.$_4 = null;
}
let onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1__init_ = (var$0, var$1, var$2, var$3, var$4, var$5) => {
    jl_Object__init_(var$0);
    var$0.$_016 = var$1;
    var$0.$_18 = var$2;
    var$0.$_25 = var$3;
    var$0.$_32 = var$4;
    var$0.$_4 = var$5;
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1();
    onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1_apply(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$sendRPC$24(var$0.$_016, var$0.$_18, var$0.$_25, var$0.$_32, var$0.$_4, var$1);
},
jl_ArithmeticException = $rt_classWithoutFields(jl_RuntimeException),
jl_ArithmeticException__init_1 = $this => {
    jl_RuntimeException__init_($this);
},
jl_ArithmeticException__init_0 = () => {
    let var_0 = new jl_ArithmeticException();
    jl_ArithmeticException__init_1(var_0);
    return var_0;
},
jl_ArithmeticException__init_2 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_ArithmeticException__init_ = var_0 => {
    let var_1 = new jl_ArithmeticException();
    jl_ArithmeticException__init_2(var_1, var_0);
    return var_1;
};
function onnr_NostrRTCSocket$listen$lambda$_8_0() {
    jl_Object.call(this);
    this.$_0186 = null;
}
let onnr_NostrRTCSocket$listen$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0186 = var$1;
},
onnr_NostrRTCSocket$listen$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new onnr_NostrRTCSocket$listen$lambda$_8_0();
    onnr_NostrRTCSocket$listen$lambda$_8_0__init_(var_1, var_0);
    return var_1;
};
function onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0() {
    jl_Object.call(this);
    this.$_0158 = null;
}
let onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0158 = var$1;
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0();
    onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0_apply(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$sendRPC$22(var$0.$_0158, var$1);
};
function jusi_SimpleStreamImpl$collect$lambda$_26_0() {
    let a = this; jl_Object.call(a);
    a.$_0105 = null;
    a.$_156 = null;
}
let jusi_SimpleStreamImpl$collect$lambda$_26_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0105 = var$1;
    var$0.$_156 = var$2;
},
jusi_SimpleStreamImpl$collect$lambda$_26_0__init_0 = (var_0, var_1) => {
    let var_2 = new jusi_SimpleStreamImpl$collect$lambda$_26_0();
    jusi_SimpleStreamImpl$collect$lambda$_26_0__init_(var_2, var_0, var_1);
    return var_2;
},
jusi_SimpleStreamImpl$collect$lambda$_26_0_test = (var$0, var$1) => {
    return jusi_SimpleStreamImpl_lambda$collect$4(var$0.$_0105, var$0.$_156, var$1);
};
function onn_NostrPool$lambda$sendMessage$2$lambda$_55_0() {
    let a = this; jl_Object.call(a);
    a.$_043 = null;
    a.$_124 = null;
    a.$_213 = null;
    a.$_36 = null;
    a.$_41 = null;
}
let onn_NostrPool$lambda$sendMessage$2$lambda$_55_0__init_ = (var$0, var$1, var$2, var$3, var$4, var$5) => {
    jl_Object__init_(var$0);
    var$0.$_043 = var$1;
    var$0.$_124 = var$2;
    var$0.$_213 = var$3;
    var$0.$_36 = var$4;
    var$0.$_41 = var$5;
},
onn_NostrPool$lambda$sendMessage$2$lambda$_55_0__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onn_NostrPool$lambda$sendMessage$2$lambda$_55_0();
    onn_NostrPool$lambda$sendMessage$2$lambda$_55_0__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onn_NostrPool$lambda$sendMessage$2$lambda$_55_0_apply0 = (var$0, var$1) => {
    return onn_NostrPool$lambda$sendMessage$2$lambda$_55_0_apply(var$0, var$1);
},
onn_NostrPool$lambda$sendMessage$2$lambda$_55_0_apply = (var$0, var$1) => {
    return onn_NostrPool_lambda$sendMessage$1(var$0.$_043, var$0.$_124, var$0.$_213, var$0.$_36, var$0.$_41, var$1);
};
function onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0() {
    let a = this; jl_Object.call(a);
    a.$_077 = null;
    a.$_144 = null;
    a.$_219 = 0;
}
let onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_077 = var$1;
    var$0.$_144 = var$2;
    var$0.$_219 = var$3;
},
onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0();
    onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0_run = var$0 => {
    onnr_NostrRTCRoom_lambda$onRTCSocketMessage$4(var$0.$_077, var$0.$_144, var$0.$_219);
},
jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLowerCase__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLowerCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLowerCase_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLowerCase$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$049 = null;
}
let jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_ = ($this, $this$0) => {
    $this.$this$049 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1();
    jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains = ($this, $ch) => {
    return jl_Character_isLetterOrDigit($ch);
};
function jur_CharClass$18() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$036 = null;
}
let jur_CharClass$18__init_ = ($this, $this$0, var$2) => {
    $this.$this$036 = $this$0;
    $this.$val$bs = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$18__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$18();
    jur_CharClass$18__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$18_contains = ($this, $ch) => {
    return $this.$alt ^ $this.$val$bs.$get13($ch);
},
jur_CharClass$18_toString = $this => {
    let $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$val$bs.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append11(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$val$bs.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
};
function jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser() {
    let a = this; jl_Object.call(a);
    a.$query2 = null;
    a.$description1 = null;
}
let jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_cachedSubstringTree = null,
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser__init_ = ($this, $query, $description) => {
    jl_Object__init_($this);
    $this.$query2 = $query;
    $this.$description1 = $description;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser__init_0 = (var_0, var_1) => {
    let var_2 = new jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser();
    jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser__init_(var_2, var_0, var_1);
    return var_2;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_parse = ($this, $context, $text, $position) => {
    let $length, var$5, $nextChar, var$7, $nextNextChar, $regionIds, $regionIdsSize, $cached, var$12, $tree, $lastZoneId, $lastZoneId_0, $nodeLength, $zone, $newContext, $endPos, $offset, $$je;
    $length = $text.$length();
    var$5 = $rt_compare($position, $length);
    if (var$5 > 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if (!var$5)
        return $position ^ (-1);
    $nextChar = $text.$charAt($position);
    if ($nextChar != 43 && $nextChar != 45) {
        var$7 = $position + 2 | 0;
        if ($length >= var$7) {
            $nextNextChar = $text.$charAt($position + 1 | 0);
            if (jtf_DateTimeParseContext_charEquals($context, $nextChar, 85) && jtf_DateTimeParseContext_charEquals($context, $nextNextChar, 84)) {
                var$5 = $position + 3 | 0;
                if ($length >= var$5 && jtf_DateTimeParseContext_charEquals($context, $text.$charAt(var$7), 67))
                    return jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_parsePrefixedOffset($this, $context, $text, $position, var$5);
                return jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_parsePrefixedOffset($this, $context, $text, $position, var$7);
            }
            if (jtf_DateTimeParseContext_charEquals($context, $nextChar, 71)) {
                var$5 = $position + 3 | 0;
                if ($length >= var$5 && jtf_DateTimeParseContext_charEquals($context, $nextNextChar, 77) && jtf_DateTimeParseContext_charEquals($context, $text.$charAt(var$7), 84))
                    return jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_parsePrefixedOffset($this, $context, $text, $position, var$5);
            }
        }
        $regionIds = jtz_ZoneRulesProvider_getAvailableZoneIds();
        $regionIdsSize = $regionIds.$size();
        $cached = jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_cachedSubstringTree;
        if (!($cached !== null && ($cached.$getKey()).$intValue() == $regionIdsSize)) {
            jl_Object_monitorEnterSync($this);
            a: {
                try {
                    $cached = jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_cachedSubstringTree;
                    if (!($cached !== null && ($cached.$getKey()).$intValue() == $regionIdsSize)) {
                        $cached = ju_AbstractMap$SimpleImmutableEntry__init_(jl_Integer_valueOf($regionIdsSize), jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_prepareParser($regionIds));
                        jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_cachedSubstringTree = $cached;
                    }
                    jl_Object_monitorExitSync($this);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$12 = $$je;

                }
                jl_Object_monitorExitSync($this);
                $rt_throw(var$12);
            }
        }
        $tree = $cached.$getValue();
        $lastZoneId = null;
        $lastZoneId_0 = null;
        b: {
            while (true) {
                if ($tree === null)
                    break b;
                $nodeLength = $tree.$length3;
                var$5 = $position + $nodeLength | 0;
                if (var$5 > $length)
                    break;
                var$12 = ($text.$subSequence($position, var$5)).$toString();
                $tree = jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree_get($tree, var$12, jtf_DateTimeParseContext_isCaseSensitive($context));
                $lastZoneId_0 = $lastZoneId;
                $lastZoneId = var$12;
            }
        }
        $zone = jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_convertToZone($this, $regionIds, $lastZoneId, jtf_DateTimeParseContext_isCaseSensitive($context));
        if ($zone !== null)
            $lastZoneId_0 = $lastZoneId;
        else {
            $zone = jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_convertToZone($this, $regionIds, $lastZoneId_0, jtf_DateTimeParseContext_isCaseSensitive($context));
            if ($zone === null) {
                if (!jtf_DateTimeParseContext_charEquals($context, $nextChar, 90))
                    return $position ^ (-1);
                jt_ZoneOffset_$callClinit();
                jtf_DateTimeParseContext_setParsed($context, jt_ZoneOffset_UTC);
                return $position + 1 | 0;
            }
        }
        jtf_DateTimeParseContext_setParsed($context, $zone);
        return $position + $lastZoneId_0.$length() | 0;
    }
    $newContext = jtf_DateTimeParseContext_copy($context);
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit();
    $endPos = jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parse(jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_INSTANCE_ID, $newContext, $text, $position);
    if ($endPos < 0)
        return $endPos;
    jtt_ChronoField_$callClinit();
    $offset = Long_lo(((jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_OFFSET_SECONDS)).$longValue()));
    $zone = jt_ZoneOffset_ofTotalSeconds($offset);
    jtf_DateTimeParseContext_setParsed($context, $zone);
    return $endPos;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_convertToZone = ($this, $regionIds, $parsedZoneId, $caseSensitive) => {
    let var$4, $regionId;
    if ($parsedZoneId === null)
        return null;
    if ($caseSensitive)
        return !$regionIds.$contains($parsedZoneId) ? null : jt_ZoneId_of($parsedZoneId);
    var$4 = $regionIds.$iterator();
    while (var$4.$hasNext()) {
        $regionId = var$4.$next();
        if ($regionId.$equalsIgnoreCase($parsedZoneId))
            return jt_ZoneId_of($regionId);
    }
    return null;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_parsePrefixedOffset = ($this, $context, $text, $prefixPos, $position) => {
    let $prefix, $newContext, $endPos, $offsetSecs, $offset;
    $prefix = (($text.$subSequence($prefixPos, $position)).$toString()).$toUpperCase();
    $newContext = jtf_DateTimeParseContext_copy($context);
    if ($position < $text.$length() && jtf_DateTimeParseContext_charEquals($context, $text.$charAt($position), 90)) {
        jt_ZoneOffset_$callClinit();
        jtf_DateTimeParseContext_setParsed($context, jt_ZoneId_ofOffset($prefix, jt_ZoneOffset_UTC));
        return $position;
    }
    jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit();
    $endPos = jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parse(jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_INSTANCE_ID, $newContext, $text, $position);
    if ($endPos < 0) {
        jt_ZoneOffset_$callClinit();
        jtf_DateTimeParseContext_setParsed($context, jt_ZoneId_ofOffset($prefix, jt_ZoneOffset_UTC));
        return $position;
    }
    jtt_ChronoField_$callClinit();
    $offsetSecs = Long_lo(((jtf_DateTimeParseContext_getParsed($newContext, jtt_ChronoField_OFFSET_SECONDS)).$longValue()));
    $offset = jt_ZoneOffset_ofTotalSeconds($offsetSecs);
    jtf_DateTimeParseContext_setParsed($context, jt_ZoneId_ofOffset($prefix, $offset));
    return $endPos;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_prepareParser = $availableIDs => {
    let $ids, $tree, var$4, $id;
    $ids = ju_ArrayList__init_0($availableIDs);
    jtf_DateTimeFormatterBuilder_$callClinit();
    ju_Collections_sort($ids, jtf_DateTimeFormatterBuilder_LENGTH_SORT);
    $tree = jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree__init_(($ids.$get(0)).$length());
    var$4 = $ids.$iterator();
    while (var$4.$hasNext()) {
        $id = var$4.$next();
        jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree_add($tree, $id);
    }
    return $tree;
},
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_toString = $this => {
    return $this.$description1;
},
jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PossessiveGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PossessiveGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PossessiveGroupQuantifierSet();
    jur_PossessiveGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PossessiveGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
};
function onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0() {
    jl_Object.call(this);
    this.$_0126 = null;
}
let onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0126 = var$1;
},
onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0__init_0 = var_0 => {
    let var_1 = new onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0();
    onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0__init_(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0_apply0 = (var$0, var$1) => {
    return onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0_apply(var$0, var$1);
},
onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0_apply = (var$0, var$1) => {
    return onnrt_NostrTURN_lambda$onReceivedPacketChunk$4(var$0.$_0126, var$1);
};
function onns_NostrNIP46Signer$onSubEvent$lambda$_9_3() {
    let a = this; jl_Object.call(a);
    a.$_0115 = null;
    a.$_162 = null;
    a.$_232 = null;
}
let onns_NostrNIP46Signer$onSubEvent$lambda$_9_3__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0115 = var$1;
    var$0.$_162 = var$2;
    var$0.$_232 = var$3;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_3__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onns_NostrNIP46Signer$onSubEvent$lambda$_9_3();
    onns_NostrNIP46Signer$onSubEvent$lambda$_9_3__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_3_run = var$0 => {
    onns_NostrNIP46Signer_lambda$onSubEvent$18(var$0.$_0115, var$0.$_162, var$0.$_232);
};
function onns_NostrNIP46Signer$onSubEvent$lambda$_9_4() {
    let a = this; jl_Object.call(a);
    a.$_0159 = null;
    a.$_179 = null;
}
let onns_NostrNIP46Signer$onSubEvent$lambda$_9_4__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0159 = var$1;
    var$0.$_179 = var$2;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_4__init_0 = (var_0, var_1) => {
    let var_2 = new onns_NostrNIP46Signer$onSubEvent$lambda$_9_4();
    onns_NostrNIP46Signer$onSubEvent$lambda$_9_4__init_(var_2, var_0, var_1);
    return var_2;
},
onns_NostrNIP46Signer$onSubEvent$lambda$_9_4_run = var$0 => {
    onns_NostrNIP46Signer_lambda$onSubEvent$15(var$0.$_0159, var$0.$_179);
};
function jur_CharClass$13() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz6 = null;
    a.$this$026 = null;
}
let jur_CharClass$13__init_ = ($this, $this$0, var$2) => {
    $this.$this$026 = $this$0;
    $this.$val$clazz6 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$13__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$13();
    jur_CharClass$13__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$13_contains = ($this, $ch) => {
    return $this.$val$clazz6.$contains0($ch);
};
function jur_CharClass$12() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$this$050 = null;
}
let jur_CharClass$12__init_ = ($this, $this$0, var$2) => {
    $this.$this$050 = $this$0;
    $this.$val$clazz0 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$12__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$12();
    jur_CharClass$12__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$12_contains = ($this, $ch) => {
    return $this.$val$clazz0.$contains0($ch) ? 0 : 1;
};
function jtf_DateTimeParseException() {
    let a = this; jt_DateTimeException.call(a);
    a.$parsedString = null;
    a.$errorIndex0 = 0;
}
let jtf_DateTimeParseException__init_ = ($this, $message, $parsedData, $errorIndex) => {
    jt_DateTimeException__init_($this, $message);
    $this.$parsedString = $parsedData.$toString();
    $this.$errorIndex0 = $errorIndex;
},
jtf_DateTimeParseException__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jtf_DateTimeParseException();
    jtf_DateTimeParseException__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jtf_DateTimeParseException__init_0 = ($this, $message, $parsedData, $errorIndex, $cause) => {
    jt_DateTimeException__init_1($this, $message, $cause);
    $this.$parsedString = $parsedData.$toString();
    $this.$errorIndex0 = $errorIndex;
},
jtf_DateTimeParseException__init_1 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jtf_DateTimeParseException();
    jtf_DateTimeParseException__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
function jur_CharClass$11() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb4 = null;
    a.$val$clazz5 = null;
    a.$this$024 = null;
}
let jur_CharClass$11__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$024 = $this$0;
    $this.$val$curAlt3 = var$2;
    $this.$val$nb4 = var$3;
    $this.$val$clazz5 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$11__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$11();
    jur_CharClass$11__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$11_contains = ($this, $ch) => {
    return !($this.$val$curAlt3 ^ $this.$val$nb4.$contains0($ch)) && !$this.$val$clazz5.$contains0($ch) ? 0 : 1;
};
function jur_CharClass$10() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt9 = 0;
    a.$val$nb = null;
    a.$val$clazz = null;
    a.$this$025 = null;
}
let jur_CharClass$10__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$025 = $this$0;
    $this.$val$curAlt9 = var$2;
    $this.$val$nb = var$3;
    $this.$val$clazz = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$10__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$10();
    jur_CharClass$10__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$10_contains = ($this, $ch) => {
    return !($this.$val$curAlt9 ^ $this.$val$nb.$contains0($ch)) && !$this.$val$clazz.$contains0($ch) ? 1 : 0;
};
function ju_GenericEnumSet() {
    let a = this; ju_EnumSet.call(a);
    a.$cls = null;
    a.$bits0 = null;
}
let ju_GenericEnumSet__init_ = ($this, $cls) => {
    let $constants, $constantCount, $bitCount;
    ju_EnumSet__init_($this);
    $this.$cls = $cls;
    $constants = ju_GenericEnumSet_getConstants($cls);
    if ($constants === null)
        $rt_throw(jl_ClassCastException__init_0());
    $constantCount = $constants.data.length;
    $bitCount = !$constantCount ? 0 : (($constantCount - 1 | 0) / 32 | 0) + 1 | 0;
    $this.$bits0 = $rt_createIntArray($bitCount);
},
ju_GenericEnumSet__init_0 = var_0 => {
    let var_1 = new ju_GenericEnumSet();
    ju_GenericEnumSet__init_(var_1, var_0);
    return var_1;
},
ju_GenericEnumSet_getConstants = $cls => {
    let $platformClass;
    $platformClass = jl_Class_getPlatformClass($cls);
    $platformClass.$clinit();
    return otp_Platform_getEnumConstants($platformClass);
},
ju_GenericEnumSet_add = ($this, $t) => {
    let $tCls, $n, $bitNumber, $bit, var$6;
    $tCls = jl_Object_getClass($t);
    if ($tCls !== $this.$cls && jl_Class_getSuperclass($tCls) !== $this.$cls)
        $rt_throw(jl_ClassCastException__init_0());
    $n = jl_Enum_ordinal($t);
    $bitNumber = $n / 32 | 0;
    $bit = 1 << ($n % 32 | 0);
    if ($this.$bits0.data[$bitNumber] & $bit)
        return 0;
    var$6 = $this.$bits0.data;
    var$6[$bitNumber] = var$6[$bitNumber] | $bit;
    return 1;
},
ju_GenericEnumSet_addAll = ($this, $c) => {
    let $other, $added, $i, var$5;
    if ($c instanceof ju_GenericEnumSet) {
        $other = $c;
        if ($this.$cls === $other.$cls) {
            $added = 0;
            $i = 0;
            while ($i < $this.$bits0.data.length) {
                if (($this.$bits0.data[$i] | $other.$bits0.data[$i]) != $this.$bits0.data[$i]) {
                    $added = 1;
                    var$5 = $this.$bits0.data;
                    var$5[$i] = var$5[$i] | $other.$bits0.data[$i];
                }
                $i = $i + 1 | 0;
            }
            return $added;
        }
    }
    return ju_AbstractCollection_addAll($this, $c);
},
ju_GenericEnumSet_add0 = ($this, var$1) => {
    return $this.$add12(var$1);
};
function jur_CharClass$17() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb2 = null;
    a.$val$clazz2 = null;
    a.$this$037 = null;
}
let jur_CharClass$17__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$037 = $this$0;
    $this.$val$curAlt8 = var$2;
    $this.$val$nb2 = var$3;
    $this.$val$clazz2 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$17__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$17();
    jur_CharClass$17__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$17_contains = ($this, $ch) => {
    return $this.$val$curAlt8 ^ $this.$val$nb2.$contains0($ch) && $this.$val$clazz2.$contains0($ch) ? 1 : 0;
},
jtt_IsoFields$Field = $rt_classWithoutFields(jl_Enum),
jtt_IsoFields$Field_DAY_OF_QUARTER = null,
jtt_IsoFields$Field_QUARTER_OF_YEAR = null,
jtt_IsoFields$Field_WEEK_OF_WEEK_BASED_YEAR = null,
jtt_IsoFields$Field_WEEK_BASED_YEAR = null,
jtt_IsoFields$Field_QUARTER_DAYS = null,
jtt_IsoFields$Field_$VALUES = null,
jtt_IsoFields$Field_$callClinit = () => {
    jtt_IsoFields$Field_$callClinit = $rt_eraseClinit(jtt_IsoFields$Field);
    jtt_IsoFields$Field__clinit_();
},
jtt_IsoFields$Field_values = () => {
    jtt_IsoFields$Field_$callClinit();
    return jtt_IsoFields$Field_$VALUES.$clone0();
},
jtt_IsoFields$Field__init_ = ($this, var$1, var$2) => {
    jtt_IsoFields$Field_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jtt_IsoFields$Field_resolve = ($this, $fieldValues, $partialTemporal, $resolverStyle) => {
    return null;
},
jtt_IsoFields$Field_isDateBased = $this => {
    return 1;
},
jtt_IsoFields$Field_isTimeBased = $this => {
    return 0;
},
jtt_IsoFields$Field_isIso = $temporal => {
    let var$2;
    jtt_IsoFields$Field_$callClinit();
    var$2 = jtc_Chronology_from($temporal);
    jtc_IsoChronology_$callClinit();
    return var$2.$equals(jtc_IsoChronology_INSTANCE);
},
jtt_IsoFields$Field_getWeekRange = $date => {
    let $wby;
    jtt_IsoFields$Field_$callClinit();
    $wby = jtt_IsoFields$Field_getWeekBasedYear($date);
    return jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(jtt_IsoFields$Field_getWeekRange0($wby)));
},
jtt_IsoFields$Field_getWeekRange0 = $wby => {
    let $date, var$3;
    jtt_IsoFields$Field_$callClinit();
    a: {
        $date = jt_LocalDate_of($wby, 1, 1);
        var$3 = jt_LocalDate_getDayOfWeek($date);
        jt_DayOfWeek_$callClinit();
        if (var$3 !== jt_DayOfWeek_THURSDAY) {
            if (jt_LocalDate_getDayOfWeek($date) !== jt_DayOfWeek_WEDNESDAY)
                break a;
            if (!jt_LocalDate_isLeapYear($date))
                break a;
        }
        return 53;
    }
    return 52;
},
jtt_IsoFields$Field_getWeek = $date => {
    let $dow0, $doy0, $doyThu0, $alignedWeek, $firstThuDoy0, $firstMonDoy0, $week;
    jtt_IsoFields$Field_$callClinit();
    $dow0 = jl_Enum_ordinal(jt_LocalDate_getDayOfWeek($date));
    $doy0 = jt_LocalDate_getDayOfYear($date) - 1 | 0;
    $doyThu0 = $doy0 + (3 - $dow0 | 0) | 0;
    $alignedWeek = $doyThu0 / 7 | 0;
    $firstThuDoy0 = $doyThu0 - ($alignedWeek * 7 | 0) | 0;
    $firstMonDoy0 = $firstThuDoy0 - 3 | 0;
    if ($firstMonDoy0 < (-3))
        $firstMonDoy0 = $firstMonDoy0 + 7 | 0;
    if ($doy0 < $firstMonDoy0)
        return Long_lo((jtt_ValueRange_getMaximum(jtt_IsoFields$Field_getWeekRange(jt_LocalDate_minusYears(jt_LocalDate_withDayOfYear($date, 180), Long_fromInt(1))))));
    $week = (($doy0 - $firstMonDoy0 | 0) / 7 | 0) + 1 | 0;
    if ($week == 53 && $firstMonDoy0 != (-3) && !($firstMonDoy0 == (-2) && jt_LocalDate_isLeapYear($date)))
        $week = 1;
    return $week;
},
jtt_IsoFields$Field_getWeekBasedYear = $date => {
    let $year, $doy, $dow, var$5;
    jtt_IsoFields$Field_$callClinit();
    $year = jt_LocalDate_getYear($date);
    $doy = jt_LocalDate_getDayOfYear($date);
    if ($doy <= 3) {
        $dow = jl_Enum_ordinal(jt_LocalDate_getDayOfWeek($date));
        if (($doy - $dow | 0) < (-2))
            $year = $year + (-1) | 0;
    } else if ($doy >= 363) {
        $dow = jl_Enum_ordinal(jt_LocalDate_getDayOfWeek($date));
        var$5 = ($doy - 363 | 0) - (!jt_LocalDate_isLeapYear($date) ? 0 : 1) | 0;
        if ((var$5 - $dow | 0) >= 0)
            $year = $year + 1 | 0;
    }
    return $year;
},
jtt_IsoFields$Field_$values = () => {
    let var$1, var$2;
    jtt_IsoFields$Field_$callClinit();
    var$1 = $rt_createArray(jtt_IsoFields$Field, 4);
    var$2 = var$1.data;
    var$2[0] = jtt_IsoFields$Field_DAY_OF_QUARTER;
    var$2[1] = jtt_IsoFields$Field_QUARTER_OF_YEAR;
    var$2[2] = jtt_IsoFields$Field_WEEK_OF_WEEK_BASED_YEAR;
    var$2[3] = jtt_IsoFields$Field_WEEK_BASED_YEAR;
    return var$1;
},
jtt_IsoFields$Field__clinit_ = () => {
    jtt_IsoFields$Field_DAY_OF_QUARTER = jtt_IsoFields$Field$1__init_0($rt_s(1336), 0);
    jtt_IsoFields$Field_QUARTER_OF_YEAR = jtt_IsoFields$Field$2__init_($rt_s(1337), 1);
    jtt_IsoFields$Field_WEEK_OF_WEEK_BASED_YEAR = jtt_IsoFields$Field$3__init_($rt_s(1338), 2);
    jtt_IsoFields$Field_WEEK_BASED_YEAR = jtt_IsoFields$Field$4__init_0($rt_s(1339), 3);
    jtt_IsoFields$Field_$VALUES = jtt_IsoFields$Field_$values();
    jtt_IsoFields$Field_QUARTER_DAYS = $rt_createIntArrayFromData([0, 90, 181, 273, 0, 91, 182, 274]);
};
function jur_CharClass$16() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb1 = null;
    a.$val$clazz8 = null;
    a.$this$040 = null;
}
let jur_CharClass$16__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$040 = $this$0;
    $this.$val$curAlt7 = var$2;
    $this.$val$nb1 = var$3;
    $this.$val$clazz8 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$16__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$16();
    jur_CharClass$16__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$16_contains = ($this, $ch) => {
    return $this.$val$curAlt7 ^ $this.$val$nb1.$contains0($ch) && $this.$val$clazz8.$contains0($ch) ? 0 : 1;
};
function jur_CharClass$15() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt2 = 0;
    a.$this$021 = null;
}
let jur_CharClass$15__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$021 = $this$0;
    $this.$val$clazz10 = var$2;
    $this.$val$curAlt2 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$15__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$15();
    jur_CharClass$15__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$15_contains = ($this, $ch) => {
    return $this.$val$clazz10.$contains0($ch) && $this.$val$curAlt2 ^ $this.$this$021.$bits.$get13($ch) ? 1 : 0;
};
function jur_CharClass$14() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz7 = null;
    a.$val$curAlt5 = 0;
    a.$this$016 = null;
}
let jur_CharClass$14__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$016 = $this$0;
    $this.$val$clazz7 = var$2;
    $this.$val$curAlt5 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$14__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$14();
    jur_CharClass$14__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$14_contains = ($this, $ch) => {
    return $this.$val$clazz7.$contains0($ch) && $this.$val$curAlt5 ^ $this.$this$016.$bits.$get13($ch) ? 0 : 1;
},
jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuilder__init_2 = ($this, $capacity) => {
    jl_AbstractStringBuilder__init_($this, $capacity);
},
jl_StringBuilder__init_0 = var_0 => {
    let var_1 = new jl_StringBuilder();
    jl_StringBuilder__init_2(var_1, var_0);
    return var_1;
},
jl_StringBuilder__init_4 = $this => {
    jl_AbstractStringBuilder__init_0($this);
},
jl_StringBuilder__init_ = () => {
    let var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_4(var_0);
    return var_0;
},
jl_StringBuilder__init_3 = ($this, $value) => {
    jl_AbstractStringBuilder__init_1($this, $value);
},
jl_StringBuilder__init_1 = var_0 => {
    let var_1 = new jl_StringBuilder();
    jl_StringBuilder__init_3(var_1, var_0);
    return var_1;
},
jl_StringBuilder_append = ($this, $obj) => {
    jl_AbstractStringBuilder_append8($this, $obj);
    return $this;
},
jl_StringBuilder_append5 = ($this, $string) => {
    jl_AbstractStringBuilder_append5($this, $string);
    return $this;
},
jl_StringBuilder_append1 = ($this, $value) => {
    jl_AbstractStringBuilder_append2($this, $value);
    return $this;
},
jl_StringBuilder_append2 = ($this, $value) => {
    jl_AbstractStringBuilder_append9($this, $value);
    return $this;
},
jl_StringBuilder_append4 = ($this, $value) => {
    jl_AbstractStringBuilder_append7($this, $value);
    return $this;
},
jl_StringBuilder_append11 = ($this, $value) => {
    jl_AbstractStringBuilder_append4($this, $value);
    return $this;
},
jl_StringBuilder_append0 = ($this, $c) => {
    jl_AbstractStringBuilder_append($this, $c);
    return $this;
},
jl_StringBuilder_append6 = ($this, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_append1($this, $chars, $offset, $len);
    return $this;
},
jl_StringBuilder_append12 = ($this, $chars) => {
    jl_AbstractStringBuilder_append0($this, $chars);
    return $this;
},
jl_StringBuilder_append10 = ($this, $s, $start, $end) => {
    jl_AbstractStringBuilder_append3($this, $s, $start, $end);
    return $this;
},
jl_StringBuilder_append9 = ($this, $s) => {
    jl_AbstractStringBuilder_append10($this, $s);
    return $this;
},
jl_StringBuilder_append3 = ($this, $b) => {
    jl_AbstractStringBuilder_append6($this, $b);
    return $this;
},
jl_StringBuilder_insert6 = ($this, $target, $value) => {
    jl_AbstractStringBuilder_insert3($this, $target, $value);
    return $this;
},
jl_StringBuilder_insert16 = ($this, $target, $value) => {
    jl_AbstractStringBuilder_insert6($this, $target, $value);
    return $this;
},
jl_StringBuilder_insert1 = ($this, $target, $value) => {
    jl_AbstractStringBuilder_insert4($this, $target, $value);
    return $this;
},
jl_StringBuilder_insert12 = ($this, $index, $s, $start, $end) => {
    jl_AbstractStringBuilder_insert5($this, $index, $s, $start, $end);
    return $this;
},
jl_StringBuilder_insert0 = ($this, $index, $s) => {
    jl_AbstractStringBuilder_insert7($this, $index, $s);
    return $this;
},
jl_StringBuilder_insert15 = ($this, $index, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_insert($this, $index, $chars, $offset, $len);
    return $this;
},
jl_StringBuilder_insert17 = ($this, $index, $obj) => {
    jl_AbstractStringBuilder_insert2($this, $index, $obj);
    return $this;
},
jl_StringBuilder_insert13 = ($this, $index, $b) => {
    jl_AbstractStringBuilder_insert1($this, $index, $b);
    return $this;
},
jl_StringBuilder_insert3 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insert0($this, $index, $c);
    return $this;
},
jl_StringBuilder_delete = ($this, $start, $end) => {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
},
jl_StringBuilder_replace = ($this, $start, $end, $str) => {
    jl_AbstractStringBuilder_replace($this, $start, $end, $str);
    return $this;
},
jl_StringBuilder_deleteCharAt = ($this, $index) => {
    jl_AbstractStringBuilder_deleteCharAt($this, $index);
    return $this;
},
jl_StringBuilder_insert9 = ($this, $index, $string) => {
    jl_AbstractStringBuilder_insert8($this, $index, $string);
    return $this;
},
jl_StringBuilder_setCharAt = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_setCharAt($this, var$1, var$2);
},
jl_StringBuilder_delete0 = ($this, var$1, var$2) => {
    return $this.$delete0(var$1, var$2);
},
jl_StringBuilder_setLength = ($this, var$1) => {
    jl_AbstractStringBuilder_setLength($this, var$1);
},
jl_StringBuilder_insert8 = ($this, var$1, var$2, var$3, var$4) => {
    return $this.$insert16(var$1, var$2, var$3, var$4);
},
jl_StringBuilder_append8 = ($this, var$1, var$2, var$3) => {
    return $this.$append27(var$1, var$2, var$3);
},
jl_StringBuilder_insert14 = ($this, var$1, var$2, var$3, var$4) => {
    return $this.$insert17(var$1, var$2, var$3, var$4);
},
jl_StringBuilder_append7 = ($this, var$1, var$2, var$3) => {
    return $this.$append15(var$1, var$2, var$3);
},
jl_StringBuilder_charAt = ($this, var$1) => {
    return jl_AbstractStringBuilder_charAt($this, var$1);
},
jl_StringBuilder_length = $this => {
    return jl_AbstractStringBuilder_length($this);
},
jl_StringBuilder_toString = $this => {
    return jl_AbstractStringBuilder_toString($this);
},
jl_StringBuilder_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuilder_insert2 = ($this, var$1, var$2) => {
    return $this.$insert18(var$1, var$2);
},
jl_StringBuilder_insert11 = ($this, var$1, var$2) => {
    return $this.$insert19(var$1, var$2);
},
jl_StringBuilder_insert10 = ($this, var$1, var$2) => {
    return $this.$insert14(var$1, var$2);
},
jl_StringBuilder_insert4 = ($this, var$1, var$2) => {
    return $this.$insert20(var$1, var$2);
};
let jl_StringBuilder_insert7 = ($this, var$1, var$2) => {
    return $this.$insert21(var$1, var$2);
},
jl_StringBuilder_insert = ($this, var$1, var$2) => {
    return $this.$insert13(var$1, var$2);
},
jl_StringBuilder_insert5 = ($this, var$1, var$2) => {
    return $this.$insert22(var$1, var$2);
};
function onnr_NostrRTCSocket() {
    let a = this; jl_Object.call(a);
    a.$listeners2 = null;
    a.$localIceCandidates = null;
    a.$connectionId = null;
    a.$settings0 = null;
    a.$turnSettings0 = null;
    a.$executor4 = null;
    a.$localPeer0 = null;
    a.$transport = null;
    a.$turn = null;
    a.$remotePeer0 = null;
    a.$useTURN0 = 0;
    a.$forceTURN = 0;
    a.$connected1 = 0;
    a.$delayedCandidateEmission = null;
}
let onnr_NostrRTCSocket_logger = null,
onnr_NostrRTCSocket_$assertionsDisabled = 0,
onnr_NostrRTCSocket_$callClinit = () => {
    onnr_NostrRTCSocket_$callClinit = $rt_eraseClinit(onnr_NostrRTCSocket);
    onnr_NostrRTCSocket__clinit_();
},
onnr_NostrRTCSocket__init_ = ($this, $executor, $localPeer, $connectionId, $settings, $turnSettings) => {
    onnr_NostrRTCSocket_$callClinit();
    jl_Object__init_($this);
    $this.$listeners2 = juc_CopyOnWriteArrayList__init_();
    $this.$localIceCandidates = juc_CopyOnWriteArrayList__init_();
    $this.$useTURN0 = 0;
    $this.$forceTURN = 0;
    $this.$connected1 = 0;
    $this.$executor4 = ju_Objects_requireNonNull($executor, $rt_s(1340));
    $this.$connectionId = ju_Objects_requireNonNull($connectionId, $rt_s(1341));
    $this.$settings0 = ju_Objects_requireNonNull($settings, $rt_s(390));
    $this.$localPeer0 = ju_Objects_requireNonNull($localPeer, $rt_s(1342));
    $this.$turnSettings0 = ju_Objects_requireNonNull($turnSettings, $rt_s(1343));
},
onnr_NostrRTCSocket__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onnr_NostrRTCSocket();
    onnr_NostrRTCSocket__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onnr_NostrRTCSocket_getLocalPeer = $this => {
    return $this.$localPeer0;
},
onnr_NostrRTCSocket_getRemotePeer = $this => {
    return $this.$remotePeer0;
},
onnr_NostrRTCSocket_isConnected = $this => {
    return $this.$connected1;
},
onnr_NostrRTCSocket_close = $this => {
    let $e, var$2, var$3, var$4, $listener, var$6, $$je;
    a: {
        onnr_NostrRTCSocket_$callClinit();
        onnr_NostrRTCSocket_logger.$fine($rt_s(1344));
        if ($this.$transport !== null) {
            try {
                $this.$transport.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            var$2 = onnr_NostrRTCSocket_logger;
            var$3 = $e.$getMessage();
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1345)), var$3);
            var$2.$severe(jl_StringBuilder_toString(var$4));
        }
    }
    b: {
        if ($this.$turn !== null) {
            try {
                $this.$turn.$close();
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            var$2 = onnr_NostrRTCSocket_logger;
            var$3 = $e.$getMessage();
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1346)), var$3);
            var$2.$severe(jl_StringBuilder_toString(var$4));
        }
    }
    if ($this.$delayedCandidateEmission !== null)
        $this.$delayedCandidateEmission.$cancel0();
    $this.$delayedCandidateEmission = null;
    $this.$localIceCandidates.$clear();
    $this.$listeners2.$clear();
    var$2 = $this.$listeners2.$iterator();
    while (var$2.$hasNext()) {
        $listener = var$2.$next();
        c: {
            try {
                $listener.$onRTCSocketClose($this);
                break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            var$3 = onnr_NostrRTCSocket_logger;
            var$4 = $e.$getMessage();
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1347)), var$4);
            var$3.$severe(jl_StringBuilder_toString(var$6));
        }
    }
},
onnr_NostrRTCSocket_addListener = ($this, $listener) => {
    $this.$listeners2.$add1($listener);
},
onnr_NostrRTCSocket_removeListener = ($this, $listener) => {
    $this.$listeners2.$remove2($listener);
},
onnr_NostrRTCSocket_emitCandidates = $this => {
    let var$1, var$2, var$3, var$4;
    if ($this.$delayedCandidateEmission !== null)
        $this.$delayedCandidateEmission.$cancel0();
    var$1 = $this.$executor4;
    var$2 = onnr_NostrRTCSocket$emitCandidates$lambda$_7_0__init_0($this);
    var$3 = $this.$settings0;
    var$4 = jt_Duration_toMillis(onp_RTCSettings_getDelayedCandidatesInterval(var$3));
    juc_TimeUnit_$callClinit();
    var$3 = juc_TimeUnit_MILLISECONDS;
    $this.$delayedCandidateEmission = var$1.$runLater(var$2, var$4, var$3);
},
onnr_NostrRTCSocket_listen = $this => {
    let var$1, var$2, var$3, $platform, $e, $$je;
    a: {
        try {
            if ($this.$transport !== null)
                $rt_throw(jl_IllegalStateException__init_($rt_s(1189)));
            onnr_NostrRTCSocket_$callClinit();
            var$1 = onnr_NostrRTCSocket_logger;
            var$2 = $this.$connectionId;
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1348)), var$2);
            var$1.$fine(jl_StringBuilder_toString(var$3));
            $this.$useTURN(0);
            $platform = onp_NGEUtils_getPlatform();
            var$1 = onnr_NostrRTCSocket_logger;
            var$2 = $this.$connectionId;
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1349)), var$2);
            var$1.$fine(jl_StringBuilder_toString(var$3));
            $this.$transport = $platform.$newRTCTransport($this.$settings0, $this.$connectionId, $this.$localPeer0.$getStunServers());
            $this.$transport.$addListener5($this);
            var$1 = onnr_NostrRTCSocket_logger;
            var$2 = $this.$connectionId;
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1350)), var$2);
            var$1.$fine(jl_StringBuilder_toString(var$3));
            var$1 = $this.$transport.$initiateChannel();
            var$2 = onnr_NostrRTCSocket$listen$lambda$_8_0__init_0($this);
            var$1 = var$1.$then(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    onnr_NostrRTCSocket_$callClinit();
    var$1 = onnr_NostrRTCSocket_logger;
    var$2 = $e.$getMessage();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1351)), var$2);
    var$1.$severe(jl_StringBuilder_toString(var$3));
    $rt_throw(jl_IllegalStateException__init_4($rt_s(1352), $e));
},
onnr_NostrRTCSocket_connect = ($this, $offerOrAnswer) => {
    let var$2, var$3, var$4, $platform, $connectString;
    ju_Objects_requireNonNull0($offerOrAnswer);
    onnr_NostrRTCSocket_$callClinit();
    var$2 = onnr_NostrRTCSocket_logger;
    var$3 = jl_String_valueOf($offerOrAnswer);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1353)), var$3);
    var$2.$fine(jl_StringBuilder_toString(var$4));
    $this.$useTURN(0);
    $platform = onp_NGEUtils_getPlatform();
    if (!($offerOrAnswer instanceof onnrs_NostrRTCOffer)) {
        if (!($offerOrAnswer instanceof onnrs_NostrRTCAnswer))
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(1354)));
        if ($this.$transport === null)
            $rt_throw(jl_IllegalStateException__init_($rt_s(1355)));
        var$2 = $offerOrAnswer;
        $this.$remotePeer0 = ju_Objects_requireNonNull(var$2.$getPeerInfo(), $rt_s(1356));
        onnr_NostrRTCSocket_emitCandidates($this);
        $connectString = var$2.$getSdp();
    } else {
        if ($this.$transport !== null)
            $rt_throw(jl_IllegalStateException__init_($rt_s(1189)));
        $this.$transport = $platform.$newRTCTransport($this.$settings0, $this.$connectionId, $this.$localPeer0.$getStunServers());
        $this.$transport.$addListener5($this);
        onnr_NostrRTCSocket_logger.$fine($rt_s(1357));
        var$2 = $offerOrAnswer;
        $this.$remotePeer0 = ju_Objects_requireNonNull(var$2.$getPeerInfo(), $rt_s(1356));
        onnr_NostrRTCSocket_emitCandidates($this);
        $connectString = var$2.$getOfferString();
    }
    onnr_NostrRTCSocket_logger.$fine($rt_s(1358));
    if (($this.$remotePeer0.$getTurnServer()).$isEmpty())
        $this.$turn = null;
    else {
        $this.$turn = onnrt_NostrTURN__init_($this.$connectionId, $this.$localPeer0, $this.$remotePeer0, $this.$turnSettings0);
        $this.$turn.$addListener4($this);
        $this.$turn.$start2();
    }
    var$2 = $this.$transport.$connectToChannel($connectString);
    var$3 = onnr_NostrRTCSocket$connect$lambda$_9_0__init_0($this);
    var$2 = var$2.$then(var$3);
    return var$2;
},
onnr_NostrRTCSocket_mergeRemoteRTCIceCandidate = ($this, $candidate) => {
    ju_Objects_requireNonNull0($candidate);
    ju_Objects_requireNonNull0($this.$transport);
    $this.$transport.$addRemoteIceCandidates($candidate.$getCandidates());
},
onnr_NostrRTCSocket_onLocalRTCIceCandidate = ($this, $candidateString) => {
    let var$2, var$3;
    onnr_NostrRTCSocket_$callClinit();
    var$2 = onnr_NostrRTCSocket_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1359)), $candidateString);
    var$2.$fine(jl_StringBuilder_toString(var$3));
    $this.$localIceCandidates.$addIfAbsent($candidateString);
    onnr_NostrRTCSocket_emitCandidates($this);
},
onnr_NostrRTCSocket_onRTCConnected = $this => {
    onnr_NostrRTCSocket_$callClinit();
    onnr_NostrRTCSocket_logger.$fine($rt_s(1360));
    $this.$connected1 = 1;
    $this.$useTURN(0);
},
onnr_NostrRTCSocket_onRTCDisconnected = ($this, $reason) => {
    let var$2, var$3;
    if ($this.$turn === null) {
        $this.$connected1 = 0;
        onnr_NostrRTCSocket_$callClinit();
        var$2 = onnr_NostrRTCSocket_logger;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1361)), $reason);
        var$2.$info(jl_StringBuilder_toString(var$3));
        $this.$close();
    } else {
        $this.$connected1 = 1;
        onnr_NostrRTCSocket_$callClinit();
        var$2 = onnr_NostrRTCSocket_logger;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1361)), $reason);
        var$2.$info(jl_StringBuilder_toString(var$3));
        $this.$useTURN(1);
    }
},
onnr_NostrRTCSocket_useTURN = ($this, $use) => {
    let var$2, var$3;
    if ($this.$forceTURN)
        $use = 1;
    if ($use == $this.$useTURN0)
        return;
    onnr_NostrRTCSocket_$callClinit();
    var$2 = onnr_NostrRTCSocket_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append3(jl_StringBuilder_append(var$3, $rt_s(1362)), $use);
    var$2.$fine(jl_StringBuilder_toString(var$3));
    $this.$useTURN0 = $use;
},
onnr_NostrRTCSocket_isUsingTURN = $this => {
    return $this.$useTURN0;
},
onnr_NostrRTCSocket_onRTCBinaryMessage = ($this, $bbf) => {
    let var$2, $listener, $e, var$5, var$6, var$7, $$je;
    var$2 = $this.$listeners2.$iterator();
    while (var$2.$hasNext()) {
        $listener = var$2.$next();
        a: {
            try {
                $listener.$onRTCSocketMessage($this, $bbf, 0);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onnr_NostrRTCSocket_$callClinit();
            var$5 = onnr_NostrRTCSocket_logger;
            var$6 = $e.$getMessage();
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(1363)), var$6);
            var$5.$severe(jl_StringBuilder_toString(var$7));
        }
    }
},
onnr_NostrRTCSocket_onTurnPacket = ($this, $peer, $data) => {
    let var$3, $listener, $e, var$6, var$7, var$8, $$je;
    var$3 = $this.$listeners2.$iterator();
    while (var$3.$hasNext()) {
        $listener = var$3.$next();
        a: {
            try {
                $listener.$onRTCSocketMessage($this, $data, 1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            onnr_NostrRTCSocket_$callClinit();
            var$6 = onnr_NostrRTCSocket_logger;
            var$7 = $e.$getMessage();
            var$8 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1363)), var$7);
            var$6.$severe(jl_StringBuilder_toString(var$8));
        }
    }
},
onnr_NostrRTCSocket_write = ($this, $bbf) => {
    if (!$this.$useTURN0) {
        onnr_NostrRTCSocket_$callClinit();
        if (!onnr_NostrRTCSocket_$assertionsDisabled && !onp_NGEUtils_dbg(onnr_NostrRTCSocket$write$lambda$_18_1__init_0()))
            $rt_throw(jl_AssertionError__init_());
        return $this.$transport.$write0($bbf);
    }
    onnr_NostrRTCSocket_$callClinit();
    if (!onnr_NostrRTCSocket_$assertionsDisabled && !onp_NGEUtils_dbg(onnr_NostrRTCSocket$write$lambda$_18_0__init_0()))
        $rt_throw(jl_AssertionError__init_());
    return $this.$turn.$write0($bbf);
},
onnr_NostrRTCSocket_onRTCChannelError = ($this, $e) => {
    let var$2, var$3, var$4;
    onnr_NostrRTCSocket_$callClinit();
    var$2 = onnr_NostrRTCSocket_logger;
    var$3 = jl_String_valueOf($e);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1364)), var$3);
    var$2.$severe(jl_StringBuilder_toString(var$4));
},
onnr_NostrRTCSocket_setForceTURN = ($this, $forceTURN) => {
    $this.$forceTURN = $forceTURN;
    if (!$this.$useTURN0 && $forceTURN) {
        onnr_NostrRTCSocket_$callClinit();
        onnr_NostrRTCSocket_logger.$fine($rt_s(1365));
        $this.$useTURN(1);
    }
},
onnr_NostrRTCSocket_lambda$write$4 = () => {
    onnr_NostrRTCSocket_$callClinit();
    onnr_NostrRTCSocket_logger.$finest($rt_s(1366));
},
onnr_NostrRTCSocket_lambda$write$3 = () => {
    onnr_NostrRTCSocket_$callClinit();
    onnr_NostrRTCSocket_logger.$finest($rt_s(1367));
},
onnr_NostrRTCSocket_lambda$connect$2 = ($this, $answerString) => {
    let var$2, var$3, $answer, var$5;
    if ($answerString === null) {
        onnr_NostrRTCSocket_$callClinit();
        onnr_NostrRTCSocket_logger.$fine($rt_s(1368));
        return null;
    }
    onnr_NostrRTCSocket_$callClinit();
    var$2 = onnr_NostrRTCSocket_logger;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1369)), $answerString);
    var$2.$fine(jl_StringBuilder_toString(var$3));
    $answer = new onnrs_NostrRTCAnswer;
    var$2 = $this.$localPeer0;
    var$2 = var$2.$getPubkey();
    var$3 = $this.$localPeer0;
    var$3 = var$3.$getTurnServer();
    var$5 = $this.$localPeer0;
    onnrs_NostrRTCAnswer__init_($answer, var$2, $answerString, var$3, var$5.$getMisc());
    return $answer;
},
onnr_NostrRTCSocket_lambda$listen$1 = ($this, $offerString) => {
    let var$2, var$3, var$4, $offer, var$6, var$7;
    onnr_NostrRTCSocket_$callClinit();
    var$2 = onnr_NostrRTCSocket_logger;
    var$3 = $this.$connectionId;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1370)), $offerString), $rt_s(1371)), var$3);
    var$2.$fine(jl_StringBuilder_toString(var$4));
    $offer = new onnrs_NostrRTCOffer;
    var$2 = $this.$localPeer0;
    var$2 = var$2.$getPubkey();
    var$3 = $this.$localPeer0;
    var$3 = var$3.$getTurnServer();
    var$4 = $this.$localPeer0;
    onnrs_NostrRTCOffer__init_($offer, var$2, $offerString, var$3, var$4.$getMisc());
    var$4 = onnr_NostrRTCSocket_logger;
    var$3 = jl_String_valueOf($offer);
    var$6 = $this.$connectionId;
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(1372)), var$3), $rt_s(1373)), var$6);
    var$4.$fine(jl_StringBuilder_toString(var$7));
    return $offer;
},
onnr_NostrRTCSocket_lambda$emitCandidates$0 = $this => {
    let var$1, var$2, var$3, $iceCandidate, $listener, $e, var$7, $$je;
    onnr_NostrRTCSocket_$callClinit();
    var$1 = onnr_NostrRTCSocket_logger;
    var$2 = jl_String_valueOf($this.$localIceCandidates);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1374)), var$2);
    var$1.$fine(jl_StringBuilder_toString(var$3));
    $iceCandidate = new onnrs_NostrRTCIceCandidate;
    var$1 = $this.$localPeer0;
    onnrs_NostrRTCIceCandidate__init_($iceCandidate, var$1.$getPubkey(), ju_ArrayList__init_0($this.$localIceCandidates), ju_HashMap__init_());
    var$1 = $this.$listeners2.$iterator();
    while (var$1.$hasNext()) {
        $listener = var$1.$next();
        a: {
            try {
                $listener.$onRTCSocketLocalIceCandidate($this, $iceCandidate);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            var$3 = onnr_NostrRTCSocket_logger;
            var$2 = $e.$getMessage();
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(1375)), var$2);
            var$3.$severe(jl_StringBuilder_toString(var$7));
        }
    }
    return null;
},
onnr_NostrRTCSocket__clinit_ = () => {
    onnr_NostrRTCSocket_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnr_NostrRTCSocket)) ? 0 : 1;
    onnr_NostrRTCSocket_logger = jul_Logger_getLogger(jl_Class_getName($rt_cls(onnr_NostrRTCSocket)));
},
onnr_NostrRTCSocket_onTurnPacket$exported$0 = (var$1, var$2, var$3) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    var$3 = var$3;
    var$1.$onTurnPacket(var$2, var$3);
},
onnr_NostrRTCSocket_useTURN$exported$1 = (var$1, var$2) => {
    let var$3;
    onnr_NostrRTCSocket_$callClinit();
    var$3 = var$2 ? 1 : 0;
    var$1.$useTURN(var$3);
},
onnr_NostrRTCSocket_onRTCBinaryMessage$exported$2 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    var$1.$onRTCBinaryMessage(var$2);
},
onnr_NostrRTCSocket_removeListener$exported$3 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    var$1.$removeListener3(var$2);
},
onnr_NostrRTCSocket_lambda$listen$1$exported$4 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = $rt_str(var$2);
    return onnr_NostrRTCSocket_lambda$listen$1(var$1, var$2);
},
onnr_NostrRTCSocket_onRTCDisconnected$exported$5 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = $rt_str(var$2);
    var$1.$onRTCDisconnected(var$2);
},
onnr_NostrRTCSocket_onLocalRTCIceCandidate$exported$6 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = $rt_str(var$2);
    var$1.$onLocalRTCIceCandidate(var$2);
},
onnr_NostrRTCSocket_isUsingTURN$exported$7 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    return !!var$1.$isUsingTURN();
},
onnr_NostrRTCSocket_close$exported$8 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    var$1.$close();
},
onnr_NostrRTCSocket_onRTCConnected$exported$9 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    var$1.$onRTCConnected();
},
onnr_NostrRTCSocket_listen$exported$10 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    return var$1.$listen();
},
onnr_NostrRTCSocket_isConnected$exported$11 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    return !!var$1.$isConnected();
},
onnr_NostrRTCSocket_setForceTURN$exported$12 = (var$1, var$2) => {
    let var$3;
    onnr_NostrRTCSocket_$callClinit();
    var$3 = var$2 ? 1 : 0;
    var$1.$setForceTURN(var$3);
},
onnr_NostrRTCSocket_lambda$connect$2$exported$13 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = $rt_str(var$2);
    return onnr_NostrRTCSocket_lambda$connect$2(var$1, var$2);
},
onnr_NostrRTCSocket_mergeRemoteRTCIceCandidate$exported$14 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    var$1.$mergeRemoteRTCIceCandidate(var$2);
},
onnr_NostrRTCSocket__init_$exported$15 = (var$1, var$2, var$3, var$4, var$5) => {
    onnr_NostrRTCSocket_$callClinit();
    return onnr_NostrRTCSocket__init_0(var$1, var$2, $rt_str(var$3), var$4, var$5);
},
onnr_NostrRTCSocket_write$exported$16 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    return var$1.$write0(var$2);
},
onnr_NostrRTCSocket_getLocalPeer$exported$17 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    return var$1.$getLocalPeer();
},
onnr_NostrRTCSocket_getRemotePeer$exported$18 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    return var$1.$getRemotePeer();
};
let onnr_NostrRTCSocket_lambda$emitCandidates$0$exported$19 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    return onnr_NostrRTCSocket_lambda$emitCandidates$0(var$1);
},
onnr_NostrRTCSocket_emitCandidates$exported$20 = var$1 => {
    onnr_NostrRTCSocket_$callClinit();
    onnr_NostrRTCSocket_emitCandidates(var$1);
},
onnr_NostrRTCSocket_connect$exported$21 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    return var$1.$connect(var$2);
},
onnr_NostrRTCSocket_addListener$exported$22 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    var$1.$addListener0(var$2);
},
onnr_NostrRTCSocket_onRTCChannelError$exported$23 = (var$1, var$2) => {
    onnr_NostrRTCSocket_$callClinit();
    var$2 = var$2;
    var$1.$onRTCChannelError(var$2);
},
onnr_NostrRTCSocket_lambda$write$4$exported$0 = () => {
    onnr_NostrRTCSocket_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnr_NostrRTCSocket_lambda$write$4();
},
onnr_NostrRTCSocket_lambda$write$3$exported$1 = () => {
    onnr_NostrRTCSocket_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    onnr_NostrRTCSocket_lambda$write$3();
};
function onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4() {
    jl_Object.call(this);
    this.$_0178 = null;
}
let onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0178 = var$1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4();
    onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4_apply0 = (var$0, var$1) => {
    return onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4_apply(var$0, var$1);
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4_apply = (var$0, var$1) => {
    return onn_NostrRelay_lambda$onConnectionOpen$25(var$0.$_0178, var$1);
};
function jl_ClassLoader() {
    jl_Object.call(this);
    this.$parent3 = null;
}
let jl_ClassLoader_systemClassLoader = null,
jl_ClassLoader_resources = null,
jl_ClassLoader_$callClinit = () => {
    jl_ClassLoader_$callClinit = $rt_eraseClinit(jl_ClassLoader);
    jl_ClassLoader__clinit_();
},
jl_ClassLoader__init_ = $this => {
    jl_ClassLoader_$callClinit();
    jl_ClassLoader__init_0($this, null);
},
jl_ClassLoader__init_0 = ($this, $parent) => {
    jl_ClassLoader_$callClinit();
    jl_Object__init_($this);
    $this.$parent3 = $parent;
},
jl_ClassLoader_getSystemClassLoader = () => {
    jl_ClassLoader_$callClinit();
    return jl_ClassLoader_systemClassLoader;
},
jl_ClassLoader_getResourceAsStream = ($this, $name) => {
    let $data, $dataString, $bytes, $i, var$6;
    jl_ClassLoader_$callClinit();
    if (jl_ClassLoader_resources === null)
        jl_ClassLoader_resources = {};
    $data = jl_ClassLoader_resources[$rt_ustr($name)];
    $dataString = $rt_str(jl_ClassLoader_resourceToString$js_body$_6($data));
    if ($dataString === null)
        return null;
    $bytes = $rt_createByteArray($dataString.$length());
    $i = 0;
    while (true) {
        var$6 = $bytes.data;
        if ($i >= var$6.length)
            break;
        var$6[$i] = $dataString.$charAt($i) << 24 >> 24;
        $i = $i + 1 | 0;
    }
    return ji_ByteArrayInputStream__init_1(otci_Base64Impl_decode2($bytes));
},
jl_ClassLoader__clinit_ = () => {
    jl_ClassLoader_systemClassLoader = jl_SystemClassLoader__init_0();
},
jl_ClassLoader_resourceToString$js_body$_6 = var$1 => {
    return var$1 !== null && var$1 !== void 0 ? var$1 : null;
};
function onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3() {
    jl_Object.call(this);
    this.$_028 = null;
}
let onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_028 = var$1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3();
    onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3_accept0 = (var$0, var$1) => {
    onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3_accept(var$0, var$1);
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3_accept = (var$0, var$1) => {
    onn_NostrRelay_lambda$onConnectionOpen$24(var$0.$_028, var$1);
};
function onn_NostrRelay$connect$lambda$_20_0() {
    jl_Object.call(this);
    this.$_048 = null;
}
let onn_NostrRelay$connect$lambda$_20_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_048 = var$1;
},
onn_NostrRelay$connect$lambda$_20_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$connect$lambda$_20_0();
    onn_NostrRelay$connect$lambda$_20_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$connect$lambda$_20_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$connect$lambda$_20_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$connect$lambda$_20_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$connect$19(var$0.$_048, var$1, var$2);
};
function onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2() {
    jl_Object.call(this);
    this.$_014 = null;
}
let onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_014 = var$1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2();
    onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionOpen$22(var$0.$_014);
},
ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException),
ju_ConcurrentModificationException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
ju_ConcurrentModificationException__init_ = () => {
    let var_0 = new ju_ConcurrentModificationException();
    ju_ConcurrentModificationException__init_0(var_0);
    return var_0;
};
function onn_NostrRelay$connect$lambda$_20_1() {
    jl_Object.call(this);
    this.$_082 = null;
}
let onn_NostrRelay$connect$lambda$_20_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_082 = var$1;
},
onn_NostrRelay$connect$lambda$_20_1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$connect$lambda$_20_1();
    onn_NostrRelay$connect$lambda$_20_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$connect$lambda$_20_1_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$connect$lambda$_20_1_accept(var$0, var$1, var$2);
},
onn_NostrRelay$connect$lambda$_20_1_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$connect$18(var$0.$_082, var$1, var$2);
};
function onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1() {
    jl_Object.call(this);
    this.$_090 = null;
}
let onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_090 = var$1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1();
    onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionOpen$26(var$0.$_090);
};
function onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0() {
    jl_Object.call(this);
    this.$_0131 = null;
}
let onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0131 = var$1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0();
    onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0_run = var$0 => {
    onn_NostrRelay_lambda$onConnectionOpen$23(var$0.$_0131);
};
function onns_SdanMimeType() {
    jl_Enum.call(this);
    this.$value12 = null;
}
let onns_SdanMimeType_IMAGE_JPEG = null,
onns_SdanMimeType_IMAGE_PNG = null,
onns_SdanMimeType_IMAGE_GIF = null,
onns_SdanMimeType_TEXT_PLAIN = null,
onns_SdanMimeType_TEXT_MARKDOWN = null,
onns_SdanMimeType_$VALUES = null,
onns_SdanMimeType_$callClinit = () => {
    onns_SdanMimeType_$callClinit = $rt_eraseClinit(onns_SdanMimeType);
    onns_SdanMimeType__clinit_();
},
onns_SdanMimeType_values = () => {
    onns_SdanMimeType_$callClinit();
    return onns_SdanMimeType_$VALUES.$clone0();
},
onns_SdanMimeType_valueOf = $name => {
    onns_SdanMimeType_$callClinit();
    return jl_Enum_valueOf($rt_cls(onns_SdanMimeType), $name);
},
onns_SdanMimeType__init_0 = ($this, var$1, var$2, $value) => {
    onns_SdanMimeType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value12 = $value;
},
onns_SdanMimeType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new onns_SdanMimeType();
    onns_SdanMimeType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_SdanMimeType_getValue = $this => {
    return $this.$value12;
},
onns_SdanMimeType_fromValue = $value => {
    let var$2, var$3, var$4, var$5, var$6, $type;
    onns_SdanMimeType_$callClinit();
    var$2 = (onns_SdanMimeType_values()).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            var$5 = new jl_IllegalArgumentException;
            var$6 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(1376)), $value);
            jl_IllegalArgumentException__init_1(var$5, jl_StringBuilder_toString(var$6));
            $rt_throw(var$5);
        }
        $type = var$2[var$4];
        if ($type.$value12.$equalsIgnoreCase($value))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $type;
},
onns_SdanMimeType_$values = () => {
    let var$1, var$2;
    onns_SdanMimeType_$callClinit();
    var$1 = $rt_createArray(onns_SdanMimeType, 5);
    var$2 = var$1.data;
    var$2[0] = onns_SdanMimeType_IMAGE_JPEG;
    var$2[1] = onns_SdanMimeType_IMAGE_PNG;
    var$2[2] = onns_SdanMimeType_IMAGE_GIF;
    var$2[3] = onns_SdanMimeType_TEXT_PLAIN;
    var$2[4] = onns_SdanMimeType_TEXT_MARKDOWN;
    return var$1;
},
onns_SdanMimeType__clinit_ = () => {
    onns_SdanMimeType_IMAGE_JPEG = onns_SdanMimeType__init_($rt_s(1377), 0, $rt_s(1378));
    onns_SdanMimeType_IMAGE_PNG = onns_SdanMimeType__init_($rt_s(1379), 1, $rt_s(1380));
    onns_SdanMimeType_IMAGE_GIF = onns_SdanMimeType__init_($rt_s(1381), 2, $rt_s(1382));
    onns_SdanMimeType_TEXT_PLAIN = onns_SdanMimeType__init_($rt_s(1383), 3, $rt_s(1384));
    onns_SdanMimeType_TEXT_MARKDOWN = onns_SdanMimeType__init_($rt_s(1385), 4, $rt_s(1386));
    onns_SdanMimeType_$VALUES = onns_SdanMimeType_$values();
},
onns_SdanMimeType__init_$exported$0 = (var$1, var$2, var$3) => {
    onns_SdanMimeType_$callClinit();
    return onns_SdanMimeType__init_($rt_str(var$1), var$2, $rt_str(var$3));
},
onns_SdanMimeType_getValue$exported$1 = var$1 => {
    onns_SdanMimeType_$callClinit();
    return $rt_ustr(onns_SdanMimeType_getValue(var$1));
},
onns_SdanMimeType_values$exported$0 = () => {
    onns_SdanMimeType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanMimeType_values());
},
onns_SdanMimeType_valueOf$exported$1 = var$1 => {
    onns_SdanMimeType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_SdanMimeType_valueOf($rt_str(var$1));
},
onns_SdanMimeType_fromValue$exported$2 = var$1 => {
    onns_SdanMimeType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onns_SdanMimeType_fromValue($rt_str(var$1));
},
onns_SdanMimeType_$values$exported$3 = () => {
    onns_SdanMimeType_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return otji_JS_wrap(onns_SdanMimeType_$values());
};
function onn_NostrRelay$runInRelayExecutor$lambda$_7_0() {
    let a = this; jl_Object.call(a);
    a.$_062 = null;
    a.$_134 = null;
}
let onn_NostrRelay$runInRelayExecutor$lambda$_7_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_062 = var$1;
    var$0.$_134 = var$2;
},
onn_NostrRelay$runInRelayExecutor$lambda$_7_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$runInRelayExecutor$lambda$_7_0();
    onn_NostrRelay$runInRelayExecutor$lambda$_7_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$runInRelayExecutor$lambda$_7_0_apply0 = (var$0, var$1) => {
    return onn_NostrRelay$runInRelayExecutor$lambda$_7_0_apply(var$0, var$1);
},
onn_NostrRelay$runInRelayExecutor$lambda$_7_0_apply = (var$0, var$1) => {
    return onn_NostrRelay_lambda$runInRelayExecutor$0(var$0.$_062, var$0.$_134, var$1);
};
function onpt_TeaVMBinds$TeaVMPromise() {
    let a = this; jl_Object.call(a);
    a.$result = null;
    a.$error0 = null;
    a.$completed = 0;
    a.$failed = 0;
    a.$thenCallbacks = null;
    a.$catchCallbacks = null;
}
let onpt_TeaVMBinds$TeaVMPromise__init_ = $this => {
    jl_Object__init_($this);
    $this.$completed = 0;
    $this.$failed = 0;
    $this.$thenCallbacks = ju_ArrayList__init_();
    $this.$catchCallbacks = ju_ArrayList__init_();
},
onpt_TeaVMBinds$TeaVMPromise__init_0 = () => {
    let var_0 = new onpt_TeaVMBinds$TeaVMPromise();
    onpt_TeaVMBinds$TeaVMPromise__init_(var_0);
    return var_0;
},
onpt_TeaVMBinds$TeaVMPromise_resolve = ($this, $value) => {
    let var$2, $callback;
    a: {
        if (!$this.$completed) {
            $this.$result = $value;
            $this.$completed = 1;
            var$2 = $this.$thenCallbacks.$iterator();
            while (true) {
                if (!var$2.$hasNext())
                    break a;
                $callback = var$2.$next();
                $callback.$accept0($value);
            }
        }
    }
},
onpt_TeaVMBinds$TeaVMPromise_reject = ($this, $error) => {
    let var$2, $callback;
    a: {
        if (!$this.$completed) {
            $this.$error0 = $error;
            $this.$completed = 1;
            $this.$failed = 1;
            var$2 = $this.$catchCallbacks.$iterator();
            while (true) {
                if (!var$2.$hasNext())
                    break a;
                $callback = var$2.$next();
                $callback.$accept0($error);
            }
        }
    }
},
onpt_TeaVMBinds$TeaVMPromise_then = ($this, $onFulfilled) => {
    if ($this.$completed && !$this.$failed)
        $onFulfilled.$accept0($this.$result);
    else if (!$this.$completed)
        $this.$thenCallbacks.$add1($onFulfilled);
    return $this;
},
onpt_TeaVMBinds$TeaVMPromise_catchError = ($this, $onRejected) => {
    if ($this.$completed && $this.$failed)
        $onRejected.$accept0($this.$error0);
    else if (!$this.$completed)
        $this.$catchCallbacks.$add1($onRejected);
    return $this;
};
function jtt_TemporalAdjusters$RelativeDayOfWeek() {
    let a = this; jl_Object.call(a);
    a.$relative = 0;
    a.$dowValue = 0;
}
let jtt_TemporalAdjusters$RelativeDayOfWeek__init_0 = ($this, $relative, $dayOfWeek) => {
    jl_Object__init_($this);
    ju_Objects_requireNonNull($dayOfWeek, $rt_s(1387));
    $this.$relative = $relative;
    $this.$dowValue = jt_DayOfWeek_getValue($dayOfWeek);
},
jtt_TemporalAdjusters$RelativeDayOfWeek__init_ = (var_0, var_1) => {
    let var_2 = new jtt_TemporalAdjusters$RelativeDayOfWeek();
    jtt_TemporalAdjusters$RelativeDayOfWeek__init_0(var_2, var_0, var_1);
    return var_2;
},
jtt_TemporalAdjusters$RelativeDayOfWeek_adjustInto = ($this, $temporal) => {
    let $calDow, $daysDiff, var$4;
    jtt_ChronoField_$callClinit();
    $calDow = $temporal.$get2(jtt_ChronoField_DAY_OF_WEEK);
    if ($this.$relative < 2 && $calDow == $this.$dowValue)
        return $temporal;
    if ($this.$relative & 1) {
        $daysDiff = $this.$dowValue - $calDow | 0;
        var$4 = $daysDiff < 0 ? Long_fromInt( -$daysDiff | 0) : Long_fromInt(7 - $daysDiff | 0);
        jtt_ChronoUnit_$callClinit();
        return $temporal.$minus0(var$4, jtt_ChronoUnit_DAYS);
    }
    $daysDiff = $calDow - $this.$dowValue | 0;
    var$4 = $daysDiff < 0 ? Long_fromInt( -$daysDiff | 0) : Long_fromInt(7 - $daysDiff | 0);
    jtt_ChronoUnit_$callClinit();
    return $temporal.$plus2(var$4, jtt_ChronoUnit_DAYS);
};
function onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_0137 = null;
    a.$_171 = null;
    a.$_237 = null;
    a.$_314 = null;
}
let onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_0137 = var$1;
    var$0.$_171 = var$2;
    var$0.$_237 = var$3;
    var$0.$_314 = var$4;
},
onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0();
    onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$sendOffer$11(var$0.$_0137, var$0.$_171, var$0.$_237, var$0.$_314, var$1);
};
function onnrs_NostrRTCSignaling$encrypt$lambda$_14_0() {
    let a = this; jl_Object.call(a);
    a.$_0163 = null;
    a.$_182 = null;
}
let onnrs_NostrRTCSignaling$encrypt$lambda$_14_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0163 = var$1;
    var$0.$_182 = var$2;
},
onnrs_NostrRTCSignaling$encrypt$lambda$_14_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCSignaling$encrypt$lambda$_14_0();
    onnrs_NostrRTCSignaling$encrypt$lambda$_14_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCSignaling$encrypt$lambda$_14_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$encrypt$lambda$_14_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$encrypt$lambda$_14_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$encrypt$17(var$0.$_0163, var$0.$_182, var$1);
},
jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyASCII__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyASCII__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyASCII_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(0, 127);
};
function jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser() {
    jl_Object.call(this);
    this.$literal0 = 0;
}
let jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser__init_0 = ($this, $literal) => {
    jl_Object__init_($this);
    $this.$literal0 = $literal;
},
jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser__init_ = var_0 => {
    let var_1 = new jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser();
    jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser__init_0(var_1, var_0);
    return var_1;
},
jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser_parse = ($this, $context, $text, $position) => {
    let $length, $ch;
    $length = $text.$length();
    if ($position == $length)
        return $position ^ (-1);
    $ch = $text.$charAt($position);
    if (jtf_DateTimeParseContext_charEquals($context, $this.$literal0, $ch))
        return $position + 1 | 0;
    return $position ^ (-1);
},
jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser_toString = $this => {
    let var$1, var$2;
    if ($this.$literal0 == 39)
        return $rt_s(473);
    var$1 = $this.$literal0;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append0(var$2, 39), var$1), 39);
    return jl_StringBuilder_toString(var$2);
};
function jur_Quantifier() {
    let a = this; jur_SpecialToken.call(a);
    a.$min2 = 0;
    a.$max2 = 0;
}
let jur_Quantifier__init_ = ($this, $min, $max) => {
    jur_SpecialToken__init_($this);
    $this.$min2 = $min;
    $this.$max2 = $max;
},
jur_Quantifier__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Quantifier();
    jur_Quantifier__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Quantifier_min = $this => {
    return $this.$min2;
},
jur_Quantifier_max = $this => {
    return $this.$max2;
},
jur_Quantifier_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$min2;
    var$2 = $this.$max2 == 2147483647 ? $rt_s(23) : jl_Integer_toString($this.$max2);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(var$3, 123), var$1), 44), var$2), 125);
    return jl_StringBuilder_toString(var$3);
};
function onnp_NostrMessageAck() {
    let a = this; jl_Object.call(a);
    a.$id9 = null;
    a.$sentAt = null;
    a.$status0 = null;
    a.$message = null;
    a.$relay = null;
    a.$successCallback = null;
    a.$failureCallback = null;
}
let onnp_NostrMessageAck__init_0 = ($this, $relay, $id, $sentAt, $successCallback, $failureCallback) => {
    jl_Object__init_($this);
    onnp_NostrMessageAck$Status_$callClinit();
    $this.$status0 = onnp_NostrMessageAck$Status_PENDING;
    $this.$id9 = $id;
    $this.$sentAt = $sentAt;
    $this.$successCallback = $successCallback;
    $this.$failureCallback = $failureCallback;
    $this.$relay = $relay;
},
onnp_NostrMessageAck__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onnp_NostrMessageAck();
    onnp_NostrMessageAck__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onnp_NostrMessageAck_callSuccessCallback = ($this, $message) => {
    onnp_NostrMessageAck$Status_$callClinit();
    $this.$status0 = onnp_NostrMessageAck$Status_SUCCESS;
    $this.$message = $message;
    if ($this.$successCallback !== null)
        $this.$successCallback.$accept3($this, $message);
},
onnp_NostrMessageAck_callFailureCallback = ($this, $message) => {
    onnp_NostrMessageAck$Status_$callClinit();
    $this.$status0 = onnp_NostrMessageAck$Status_FAILURE;
    $this.$message = $message;
    if ($this.$failureCallback !== null)
        $this.$failureCallback.$accept3($this, $message);
},
onnp_NostrMessageAck_setRemoteStatus = ($this, $status, $message) => {
    $this.$status0 = $status;
    $this.$message = $message;
},
onnp_NostrMessageAck_getStatus = $this => {
    return $this.$status0;
},
onnp_NostrMessageAck_get = $this => {
    let var$1;
    var$1 = $this.$status0;
    onnp_NostrMessageAck$Status_$callClinit();
    if (var$1 === onnp_NostrMessageAck$Status_PENDING)
        return null;
    if ($this.$status0 === onnp_NostrMessageAck$Status_SUCCESS)
        return $this.$relay;
    $rt_throw(jl_Exception__init_0($this.$message));
},
onnp_NostrMessageAck_getMessage = $this => {
    return $this.$message;
},
onnp_NostrMessageAck_getRelay = $this => {
    return $this.$relay;
},
onnp_NostrMessageAck_getId = $this => {
    return $this.$id9;
},
onnp_NostrMessageAck_getSentAt = $this => {
    return $this.$sentAt;
},
onnp_NostrMessageAck_setRemoteStatus$exported$0 = (var$1, var$2, var$3) => {
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$1.$setRemoteStatus(var$2, var$3);
},
onnp_NostrMessageAck_getId$exported$1 = var$1 => {
    return $rt_ustr(var$1.$getId());
},
onnp_NostrMessageAck_get$exported$2 = var$1 => {
    return var$1.$get23();
},
onnp_NostrMessageAck_callSuccessCallback$exported$3 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$callSuccessCallback(var$2);
},
onnp_NostrMessageAck_getStatus$exported$4 = var$1 => {
    return var$1.$getStatus();
},
onnp_NostrMessageAck_callFailureCallback$exported$5 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$callFailureCallback(var$2);
},
onnp_NostrMessageAck__init_$exported$6 = (var$1, var$2, var$3, var$4, var$5) => {
    return onnp_NostrMessageAck__init_(var$1, $rt_str(var$2), var$3, var$4, var$5);
},
onnp_NostrMessageAck_getSentAt$exported$7 = var$1 => {
    return var$1.$getSentAt();
},
onnp_NostrMessageAck_getMessage$exported$8 = var$1 => {
    return $rt_ustr(var$1.$getMessage());
},
onnp_NostrMessageAck_getRelay$exported$9 = var$1 => {
    return var$1.$getRelay();
};
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$044 = null;
}
let jur_AbstractCharClass$LazyJavaUpperCase$1__init_ = ($this, $this$0) => {
    $this.$this$044 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUpperCase$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaUpperCase$1();
    jur_AbstractCharClass$LazyJavaUpperCase$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaUpperCase$1_contains = ($this, $ch) => {
    return jl_Character_isUpperCase($ch);
},
jn_URLDecoder = $rt_classWithoutFields(),
jn_URLDecoder_decode = ($s, $enc) => {
    let var$3, $e, $toThrow, $str, $i, var$8, $$je;
    ju_Objects_requireNonNull0($enc);
    if ($enc.$isEmpty())
        $rt_throw(ji_UnsupportedEncodingException__init_0($rt_s(1388)));
    if ($s.$indexOf(37) != (-1)) {
        a: {
            try {
                var$3 = jnc_Charset_forName($enc);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jnc_IllegalCharsetNameException) {
                    $e = $$je;
                    break a;
                } else if ($$je instanceof jnc_UnsupportedCharsetException) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return jn_URLDecoder_decode0($s, var$3);
        }
        $toThrow = ji_UnsupportedEncodingException__init_2();
        $toThrow.$initCause($e);
        $rt_throw($toThrow);
    }
    if ($s.$indexOf(43) == (-1))
        return $s;
    $str = $s.$toCharArray();
    $i = 0;
    while (true) {
        var$8 = $str.data;
        if ($i >= var$8.length)
            break;
        if (var$8[$i] == 43)
            var$8[$i] = 32;
        $i = $i + 1 | 0;
    }
    return jl_String__init_($str);
},
jn_URLDecoder_decode0 = ($s, $charset) => {
    let $strBuf, $buf, $bufLen, $i, $c, $len, var$9, var$10, var$11, $d1, $d2, var$14, $len_0, $cb, var$17, var$18;
    $strBuf = $rt_createCharArray($s.$length());
    $buf = $rt_createByteArray($s.$length() / 3 | 0);
    $bufLen = 0;
    $i = 0;
    a: {
        while ($i < $s.$length()) {
            $c = $s.$charAt($i);
            if ($c == 43)
                $strBuf.data[$bufLen] = 32;
            else {
                if ($c == 37) {
                    $len = 0;
                    while (true) {
                        var$9 = $i + 2 | 0;
                        if (var$9 >= $s.$length()) {
                            var$10 = new jl_IllegalArgumentException;
                            var$11 = jl_StringBuilder__init_();
                            jl_StringBuilder_append1(jl_StringBuilder_append(var$11, $rt_s(1389)), $i);
                            jl_IllegalArgumentException__init_1(var$10, jl_StringBuilder_toString(var$11));
                            $rt_throw(var$10);
                        }
                        $d1 = jl_Character_digit($s.$charAt($i + 1 | 0), 16);
                        $d2 = jl_Character_digit($s.$charAt(var$9), 16);
                        if ($d1 == (-1))
                            break a;
                        if ($d2 == (-1))
                            break a;
                        var$14 = $buf.data;
                        $len_0 = $len + 1 | 0;
                        var$14[$len] = (($d1 << 4) + $d2 | 0) << 24 >> 24;
                        $i = $i + 3 | 0;
                        if ($i >= $s.$length())
                            break;
                        if ($s.$charAt($i) != 37)
                            break;
                        $len = $len_0;
                    }
                    $cb = jnc_Charset_decode($charset, jn_ByteBuffer_wrap($buf, 0, $len_0));
                    var$9 = jn_CharBuffer_length($cb);
                    jl_System_fastArraycopy(jn_CharBuffer_array($cb), 0, $strBuf, $bufLen, var$9);
                    $bufLen = $bufLen + var$9 | 0;
                    continue;
                }
                $strBuf.data[$bufLen] = $c;
            }
            $i = $i + 1 | 0;
            $bufLen = $bufLen + 1 | 0;
        }
        return jl_String__init_2($strBuf, 0, $bufLen);
    }
    var$17 = new jl_IllegalArgumentException;
    var$18 = $s.$substring($i, $i + 3 | 0);
    var$10 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(1390)), var$18), $rt_s(1391)), $i);
    jl_IllegalArgumentException__init_1(var$17, jl_StringBuilder_toString(var$10));
    $rt_throw(var$17);
};
function jus_CollectorImpl() {
    let a = this; jl_Object.call(a);
    a.$supplier0 = null;
    a.$accumulator0 = null;
    a.$combiner = null;
    a.$finisher0 = null;
    a.$characteristics = null;
}
let jus_CollectorImpl__init_ = ($this, $supplier, $accumulator, $combiner, $finisher, $characteristics) => {
    jl_Object__init_($this);
    $this.$supplier0 = $supplier;
    $this.$accumulator0 = $accumulator;
    $this.$combiner = $combiner;
    $this.$finisher0 = $finisher;
    $this.$characteristics = $characteristics;
},
jus_CollectorImpl__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jus_CollectorImpl();
    jus_CollectorImpl__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jus_CollectorImpl_supplier = $this => {
    return $this.$supplier0;
},
jus_CollectorImpl_accumulator = $this => {
    return $this.$accumulator0;
},
jus_CollectorImpl_finisher = $this => {
    return $this.$finisher0;
};
function jn_URI$Helper() {
    jl_Object.call(this);
    this.$this$0 = null;
}
let jn_URI$Helper__init_0 = ($this, var$1) => {
    $this.$this$0 = var$1;
    jl_Object__init_($this);
},
jn_URI$Helper__init_ = var_0 => {
    let var_1 = new jn_URI$Helper();
    jn_URI$Helper__init_0(var_1, var_0);
    return var_1;
},
jn_URI$Helper_parseURI = ($this, $uri, $forceServer) => {
    let $index, var$4, var$5, var$6, var$7, $index2, $index3, var$10, $pathIndex;
    $this.$this$0.$string4 = $uri;
    $index = $uri.$indexOf(35);
    if ($index == (-1))
        var$4 = $uri;
    else {
        var$5 = $this.$this$0;
        var$6 = $index + 1 | 0;
        var$5.$fragment = $uri.$substring0(var$6);
        jn_URI$Helper_validateFragment($this, $uri, $this.$this$0.$fragment, var$6);
        var$4 = $uri.$substring(0, $index);
    }
    a: {
        b: {
            var$7 = var$4.$indexOf(58);
            $index2 = var$4.$indexOf(47);
            $index3 = var$4.$indexOf(63);
            if (var$7 != (-1) && !($index2 < var$7 && $index2 != (-1))) {
                if ($index3 >= var$7)
                    break b;
                if ($index3 == (-1))
                    break b;
            }
            $this.$this$0.$absolute = 0;
            $this.$this$0.$schemespecificpart = var$4;
            break a;
        }
        $this.$this$0.$absolute = 1;
        $this.$this$0.$scheme = var$4.$substring(0, var$7);
        if (!$this.$this$0.$scheme.$length())
            $rt_throw(jn_URISyntaxException__init_0($uri, $rt_s(23)));
        jn_URI$Helper_validateScheme($this, $uri, $this.$this$0.$scheme, 0);
        $this.$this$0.$schemespecificpart = var$4.$substring0(var$7 + 1 | 0);
        if (!$this.$this$0.$schemespecificpart.$length())
            $rt_throw(jn_URISyntaxException__init_0($uri, $rt_s(23)));
    }
    c: {
        d: {
            if ($this.$this$0.$scheme !== null) {
                if ($this.$this$0.$schemespecificpart.$length() > 0) {
                    var$5 = $this.$this$0.$schemespecificpart;
                    if (var$5.$charAt(0) == 47)
                        break d;
                }
                $this.$this$0.$opaque = 1;
                jn_URI$Helper_validateSsp($this, $uri, $this.$this$0.$schemespecificpart, ($index2 + 2 | 0) + var$7 | 0);
                break c;
            }
        }
        $this.$this$0.$opaque = 0;
        var$5 = $this.$this$0.$schemespecificpart;
        var$10 = var$5.$indexOf(63);
        if (var$10 != (-1)) {
            $this.$this$0.$query0 = var$5.$substring0(var$10 + 1 | 0);
            var$5 = var$5.$substring(0, var$10);
            jn_URI$Helper_validateQuery($this, $uri, $this.$this$0.$query0, ($index2 + 1 | 0) + var$10 | 0);
        }
        if (!var$5.$startsWith($rt_s(864)))
            $this.$this$0.$path = var$5;
        else {
            var$10 = var$5.$indexOf0(47, 2);
            if (var$10 != (-1)) {
                $this.$this$0.$authority = var$5.$substring(2, var$10);
                $this.$this$0.$path = var$5.$substring0(var$10);
            } else {
                $this.$this$0.$authority = var$5.$substring0(2);
                if (!$this.$this$0.$authority.$length() && $this.$this$0.$query0 === null && $this.$this$0.$fragment === null)
                    $rt_throw(jn_URISyntaxException__init_0($uri, $rt_s(23)));
                $this.$this$0.$path = $rt_s(23);
            }
            if (!$this.$this$0.$authority.$length())
                $this.$this$0.$authority = null;
            else
                jn_URI$Helper_validateAuthority($this, $uri, $this.$this$0.$authority, var$7 + 3 | 0);
        }
        $pathIndex = 0;
        if ($index2 > (-1))
            $pathIndex = $pathIndex + $index2 | 0;
        if (var$10 > (-1))
            $pathIndex = $pathIndex + var$10 | 0;
        jn_URI$Helper_validatePath($this, $uri, $this.$this$0.$path, $pathIndex);
    }
    jn_URI$Helper_parseAuthority($this, $forceServer);
},
jn_URI$Helper_validateScheme = ($this, $uri, $scheme, $index) => {
    let $ch, $e, $$je;
    $ch = $scheme.$charAt(0);
    if (!($ch >= 97 && $ch <= 122) && !($ch >= 65 && $ch <= 90))
        $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), 0));
    a: {
        try {
            jn_URIEncoderDecoder_validateSimple($scheme, $rt_s(1392));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jn_URISyntaxException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), $index + $e.$getIndex() | 0));
},
jn_URI$Helper_validateSsp = ($this, $uri, $ssp, $index) => {
    let $e, $$je;
    a: {
        try {
            jn_URIEncoderDecoder_validate($ssp, $rt_s(1393));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jn_URISyntaxException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), $index + $e.$getIndex() | 0));
},
jn_URI$Helper_validateAuthority = ($this, $uri, $authority, $index) => {
    let $e, $$je;
    a: {
        try {
            jn_URIEncoderDecoder_validate($authority, $rt_s(1394));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jn_URISyntaxException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), $index + $e.$getIndex() | 0));
},
jn_URI$Helper_validatePath = ($this, $uri, $path, $index) => {
    let $e, $$je;
    a: {
        try {
            jn_URIEncoderDecoder_validate($path, $rt_s(1395));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jn_URISyntaxException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), $index + $e.$getIndex() | 0));
},
jn_URI$Helper_validateQuery = ($this, $uri, $query, $index) => {
    let $e, $$je;
    a: {
        try {
            jn_URIEncoderDecoder_validate($query, $rt_s(1396));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jn_URISyntaxException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), $index + $e.$getIndex() | 0));
},
jn_URI$Helper_validateFragment = ($this, $uri, $fragment, $index) => {
    let $e, $$je;
    a: {
        try {
            jn_URIEncoderDecoder_validate($fragment, $rt_s(1393));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jn_URISyntaxException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), $index + $e.$getIndex() | 0));
},
jn_URI$Helper_parseAuthority = ($this, $forceServer) => {
    let $tempUserinfo, $hostindex, $tempPort, $tempHost, $index, var$7, $endindex, $tempHost_0, $$je;
    if ($this.$this$0.$authority === null)
        return;
    $tempUserinfo = null;
    $hostindex = 0;
    $tempPort = (-1);
    $tempHost = $this.$this$0.$authority;
    $index = $tempHost.$indexOf(64);
    if ($index != (-1)) {
        $tempUserinfo = $tempHost.$substring(0, $index);
        jn_URI$Helper_validateUserinfo($this, $this.$this$0.$authority, $tempUserinfo, 0);
        $hostindex = $index + 1 | 0;
        $tempHost = $tempHost.$substring0($hostindex);
    }
    a: {
        b: {
            c: {
                var$7 = $tempHost.$lastIndexOf(58);
                $endindex = $tempHost.$indexOf(93);
                if (var$7 != (-1) && $endindex < var$7) {
                    $tempHost_0 = $tempHost.$substring(0, var$7);
                    if (var$7 >= ($tempHost.$length() - 1 | 0))
                        $tempHost = $tempHost_0;
                    else
                        try {
                            $tempPort = jl_Integer_parseInt($tempHost.$substring0(var$7 + 1 | 0));
                            if ($tempPort < 0)
                                break b;
                            $tempHost = $tempHost_0;
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                }
            }
            if ($tempHost.$equals($rt_s(23))) {
                if (!$forceServer)
                    return;
                $rt_throw(jn_URISyntaxException__init_($this.$this$0.$authority, $rt_s(23), $hostindex));
            }
            if (!jn_URI$Helper_isValidHost($this, $forceServer, $tempHost))
                return;
            $this.$this$0.$userinfo = $tempUserinfo;
            $this.$this$0.$host0 = $tempHost;
            $this.$this$0.$port0 = $tempPort;
            $this.$this$0.$serverAuthority = 1;
            return;
        }
        d: {
            try {
                if ($forceServer)
                    break d;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return;
        }
        try {
            $rt_throw(jn_URISyntaxException__init_($this.$this$0.$authority, $rt_s(23), ($hostindex + var$7 | 0) + 1 | 0));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
            } else {
                throw $$e;
            }
        }
    }
    if (!$forceServer)
        return;
    $rt_throw(jn_URISyntaxException__init_($this.$this$0.$authority, $rt_s(23), ($hostindex + var$7 | 0) + 1 | 0));
},
jn_URI$Helper_validateUserinfo = ($this, $uri, $userinfo, $index) => {
    let $i, $ch;
    $i = 0;
    a: {
        while ($i < $userinfo.$length()) {
            $ch = $userinfo.$charAt($i);
            if ($ch == 93)
                break a;
            if ($ch == 91)
                break a;
            $i = $i + 1 | 0;
        }
        return;
    }
    $rt_throw(jn_URISyntaxException__init_($uri, $rt_s(23), $index + $i | 0));
},
jn_URI$Helper_isValidHost = ($this, $forceServer, $host) => {
    let $index, var$4;
    if ($host.$charAt(0) == 91) {
        if ($host.$charAt($host.$length() - 1 | 0) != 93)
            $rt_throw(jn_URISyntaxException__init_($host, $rt_s(23), 0));
        if (jn_URI$Helper_isValidIP6Address($this, $host))
            return 1;
        $rt_throw(jn_URISyntaxException__init_0($host, $rt_s(23)));
    }
    if ($host.$indexOf(91) == (-1) && $host.$indexOf(93) == (-1)) {
        $index = $host.$lastIndexOf(46);
        if ($index >= 0 && $index != ($host.$length() - 1 | 0)) {
            var$4 = $index + 1 | 0;
            if (jl_Character_isDigit0($host.$charAt(var$4))) {
                if (jn_URI$Helper_isValidIPv4Address($this, $host))
                    return 1;
                if (!$forceServer)
                    return 0;
                $rt_throw(jn_URISyntaxException__init_($host, $rt_s(23), 0));
            }
        }
        if (jn_URI$Helper_isValidDomainName($this, $host))
            return 1;
        if (!$forceServer)
            return 0;
        $rt_throw(jn_URISyntaxException__init_($host, $rt_s(23), 0));
    }
    $rt_throw(jn_URISyntaxException__init_($host, $rt_s(23), 0));
},
jn_URI$Helper_isValidDomainName = ($this, $host) => {
    let $index, $next, $label, $ch, $$je;
    a: {
        try {
            jn_URIEncoderDecoder_validateSimple($host, $rt_s(1397));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jn_URISyntaxException) {
            } else {
                throw $$e;
            }
        }
        return 0;
    }
    $index = 0;
    while (true) {
        $next = $host.$indexOf0(46, $index);
        if ($next == (-1)) {
            if ($host.$charAt($index) != 45 && $host.$charAt($host.$length() - 1 | 0) != 45) {
                $label = $host.$substring0($index);
                if ($label.$equals($host))
                    return 1;
                $ch = $label.$charAt(0);
                return $ch >= 48 && $ch <= 57 ? 0 : 1;
            }
            return 0;
        }
        if ($host.$charAt($index) == 45)
            break;
        if ($host.$charAt($next - 1 | 0) == 45)
            break;
        $index = $next + 1 | 0;
    }
    return 0;
},
jn_URI$Helper_isValidIPv4Address = ($this, $host) => {
    let $index, $num, var$4, $index2, var$6, $$je;
    a: {
        b: {
            try {
                $index = $host.$indexOf(46);
                $num = jl_Integer_parseInt($host.$substring(0, $index));
                if ($num >= 0 && $num <= 255)
                    break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return 0;
        }
        c: {
            try {
                var$4 = $index + 1 | 0;
                $index2 = $host.$indexOf0(46, var$4);
                var$4 = jl_Integer_parseInt($host.$substring(var$4, $index2));
                if (var$4 >= 0 && var$4 <= 255)
                    break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return 0;
        }
        d: {
            try {
                var$6 = $index2 + 1 | 0;
                $index = $host.$indexOf0(46, var$6);
                var$4 = jl_Integer_parseInt($host.$substring(var$6, $index));
                if (var$4 >= 0 && var$4 <= 255)
                    break d;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return 0;
        }
        e: {
            try {
                var$4 = jl_Integer_parseInt($host.$substring0($index + 1 | 0));
                if (var$4 < 0)
                    break e;
                if (var$4 > 255)
                    break e;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return 1;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return 0;
    }
    return 0;
},
jn_URI$Helper_isValidIP6Address = ($this, $ipAddress) => {
    let $length, $doubleColon, $numberOfColons, $numberOfPeriods, $word, $c, $offset, $i, var$10, var$11;
    $length = $ipAddress.$length();
    $doubleColon = 0;
    $numberOfColons = 0;
    $numberOfPeriods = 0;
    $word = $rt_s(23);
    $c = 0;
    $offset = 0;
    if ($length < 2)
        return 0;
    $i = 0;
    a: while (true) {
        if ($i >= $length) {
            if ($numberOfPeriods > 0)
                return $numberOfPeriods == 3 && jn_URI$Helper_isValidIP4Word($this, $word) ? 1 : 0;
            if ($numberOfColons != 7 && !$doubleColon)
                return 0;
            b: {
                if ($word.$isEmpty() && $ipAddress.$charAt(($length - 1 | 0) - $offset | 0) != 58) {
                    var$10 = ($length - 2 | 0) - $offset | 0;
                    if ($ipAddress.$charAt(var$10) != 58) {
                        var$10 = 0;
                        break b;
                    }
                }
                var$10 = 1;
            }
            return var$10;
        }
        c: {
            d: {
                e: {
                    f: {
                        g: {
                            var$11 = $ipAddress.$charAt($i);
                            switch (var$11) {
                                case 46:
                                    break d;
                                case 58:
                                    break f;
                                case 91:
                                    break e;
                                case 93:
                                    break g;
                                default:
                            }
                            if ($word.$length() > 3)
                                return 0;
                            if (!jn_URI$Helper_isValidHexChar($this, var$11))
                                return 0;
                            $word = $word.$concat(jl_String_valueOf2(var$11));
                            break c;
                        }
                        if ($i != ($length - 1 | 0))
                            return 0;
                        if ($ipAddress.$charAt(0) != 91)
                            break a;
                        break c;
                    }
                    $numberOfColons = $numberOfColons + 1 | 0;
                    if ($numberOfColons > 7)
                        return 0;
                    if ($numberOfPeriods > 0)
                        return 0;
                    if ($c == 58) {
                        if ($doubleColon)
                            return 0;
                        $doubleColon = 1;
                    }
                    $word = $rt_s(23);
                    break c;
                }
                if ($i)
                    return 0;
                if ($ipAddress.$charAt($length - 1 | 0) != 93)
                    return 0;
                if ($ipAddress.$charAt(1) == 58 && $ipAddress.$charAt(2) != 58)
                    return 0;
                $offset = 1;
                if ($length < 4)
                    return 0;
                break c;
            }
            $numberOfPeriods = $numberOfPeriods + 1 | 0;
            if ($numberOfPeriods > 3)
                return 0;
            if (!jn_URI$Helper_isValidIP4Word($this, $word))
                return 0;
            if ($numberOfColons != 6 && !$doubleColon)
                return 0;
            if ($numberOfColons == 7) {
                var$10 = 0 + $offset | 0;
                if ($ipAddress.$charAt(var$10) != 58) {
                    var$10 = 1 + $offset | 0;
                    if ($ipAddress.$charAt(var$10) != 58)
                        return 0;
                }
            }
            $word = $rt_s(23);
        }
        $i = $i + 1 | 0;
        $c = var$11;
    }
    return 0;
},
jn_URI$Helper_isValidIP4Word = ($this, $word) => {
    let $i, $c;
    if ($word.$length() >= 1 && $word.$length() <= 3) {
        $i = 0;
        while (true) {
            if ($i >= $word.$length())
                return jl_Integer_parseInt($word) > 255 ? 0 : 1;
            $c = $word.$charAt($i);
            if ($c < 48)
                break;
            if ($c > 57)
                break;
            $i = $i + 1 | 0;
        }
        return 0;
    }
    return 0;
},
jn_URI$Helper_isValidHexChar = ($this, $c) => {
    let var$2;
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 65 && $c <= 70)) {
                if ($c < 97)
                    break b;
                if ($c > 102)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
otpp_ResourceAccessor = $rt_classWithoutFields(),
otpp_ResourceAccessor_keys = var$1 => {
    let result = [];
    for (let key in var$1) {
        result.push(key);
    }
    return result;
},
otpp_ResourceAccessor_keysToStrings = var$1 => {
    let $sz, $result, $i;
    $sz = var$1.length;
    $result = $rt_createArray(jl_String, $sz);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = (var$1[$i] !== null ? $rt_str(var$1[$i]) : null);
        $i = $i + 1 | 0;
    }
    return $result;
};
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$035 = null;
}
let jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_ = ($this, $this$0) => {
    $this.$this$035 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains = ($this, $ch) => {
    return jl_Character_isIdentifierIgnorable($ch);
};
function jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator() {
    let a = this; jl_Object.call(a);
    a.$printerParser0 = null;
    a.$padWidth = 0;
    a.$padChar = 0;
}
let jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator__init_ = ($this, $printerParser, $padWidth, $padChar) => {
    jl_Object__init_($this);
    $this.$printerParser0 = $printerParser;
    $this.$padWidth = $padWidth;
    $this.$padChar = $padChar;
},
jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator();
    jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator_parse = ($this, $context, $text, $position) => {
    let $strict, $caseSensitive, $endPos, $pos, var$8, $resultPos;
    $strict = jtf_DateTimeParseContext_isStrict($context);
    $caseSensitive = jtf_DateTimeParseContext_isCaseSensitive($context);
    if ($position > $text.$length())
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($position == $text.$length())
        return $position ^ (-1);
    $endPos = $position + $this.$padWidth | 0;
    if ($endPos > $text.$length()) {
        if ($strict)
            return $position ^ (-1);
        $endPos = $text.$length();
    }
    $pos = $position;
    a: while ($pos < $endPos) {
        b: {
            if (!$caseSensitive) {
                if (!jtf_DateTimeParseContext_charEquals($context, $text.$charAt($pos), $this.$padChar))
                    break a;
                else
                    break b;
            }
            if ($text.$charAt($pos) != $this.$padChar)
                break a;
        }
        $pos = $pos + 1 | 0;
    }
    var$8 = $text.$subSequence(0, $endPos);
    $resultPos = $this.$printerParser0.$parse2($context, var$8, $pos);
    if ($resultPos != $endPos && $strict)
        return ($position + $pos | 0) ^ (-1);
    return $resultPos;
},
jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = jl_String_valueOf($this.$printerParser0);
    var$2 = $this.$padWidth;
    if ($this.$padChar == 32)
        var$3 = $rt_s(1398);
    else {
        var$4 = $this.$padChar;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(723)), var$4), $rt_s(724));
        var$3 = jl_StringBuilder_toString(var$3);
    }
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1399)), var$1), 44), var$2), var$3);
    return jl_StringBuilder_toString(var$5);
},
otcir_FieldInfo = $rt_classWithoutFields(),
onne_UnsignedNostrEvent$withTag$lambda$_8_0 = $rt_classWithoutFields(),
onne_UnsignedNostrEvent$withTag$lambda$_8_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onne_UnsignedNostrEvent$withTag$lambda$_8_0__init_0 = () => {
    let var_0 = new onne_UnsignedNostrEvent$withTag$lambda$_8_0();
    onne_UnsignedNostrEvent$withTag$lambda$_8_0__init_(var_0);
    return var_0;
},
onne_UnsignedNostrEvent$withTag$lambda$_8_0_apply0 = (var$0, var$1) => {
    return onne_UnsignedNostrEvent$withTag$lambda$_8_0_apply(var$0, var$1);
},
onne_UnsignedNostrEvent$withTag$lambda$_8_0_apply = (var$0, var$1) => {
    return onne_UnsignedNostrEvent_lambda$withTag$0(var$1);
},
jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_ReluctantQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_ReluctantQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_ReluctantQuantifierSet();
    jur_ReluctantQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_ReluctantQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    while (true) {
        var$4 = $this.$next5.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
};
function jtz_ZoneRules$Fixed() {
    jtz_ZoneRules.call(this);
    this.$offset0 = null;
}
let jtz_ZoneRules$Fixed__init_ = ($this, $offset) => {
    jtz_ZoneRules__init_($this);
    $this.$offset0 = $offset;
},
jtz_ZoneRules$Fixed__init_0 = var_0 => {
    let var_1 = new jtz_ZoneRules$Fixed();
    jtz_ZoneRules$Fixed__init_(var_1, var_0);
    return var_1;
},
jtz_ZoneRules$Fixed_getOffset = ($this, $instant) => {
    return $this.$offset0;
},
jtz_ZoneRules$Fixed_getValidOffsets = ($this, $localDateTime) => {
    return ju_Collections_singletonList($this.$offset0);
},
jtz_ZoneRules$Fixed_getTransition = ($this, $localDateTime) => {
    return null;
},
jtz_ZoneRules$Fixed_equals = ($this, $obj) => {
    let $szr, var$3, var$4;
    if ($this === $obj)
        return 1;
    if ($obj instanceof jtz_ZoneRules$Fixed)
        return jt_ZoneOffset_equals($this.$offset0, $obj.$offset0);
    if (!($obj instanceof jtz_StandardZoneRules))
        return 0;
    a: {
        $szr = $obj;
        if (jtz_StandardZoneRules_isFixedOffset($szr)) {
            var$3 = $this.$offset0;
            jt_Instant_$callClinit();
            if (jt_ZoneOffset_equals(var$3, jtz_StandardZoneRules_getOffset($szr, jt_Instant_EPOCH))) {
                var$4 = 1;
                break a;
            }
        }
        var$4 = 0;
    }
    return var$4;
},
jtz_ZoneRules$Fixed_hashCode = $this => {
    return 31 + jt_ZoneOffset_hashCode($this.$offset0) | 0;
},
jtz_ZoneRules$Fixed_toString = $this => {
    let var$1, var$2;
    var$1 = jl_String_valueOf($this.$offset0);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1400)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function onns_NostrKeyPairSigner$decrypt$lambda$_4_0() {
    jl_Object.call(this);
    this.$_056 = null;
}
let onns_NostrKeyPairSigner$decrypt$lambda$_4_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_056 = var$1;
},
onns_NostrKeyPairSigner$decrypt$lambda$_4_0__init_0 = var_0 => {
    let var_1 = new onns_NostrKeyPairSigner$decrypt$lambda$_4_0();
    onns_NostrKeyPairSigner$decrypt$lambda$_4_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrKeyPairSigner$decrypt$lambda$_4_0_apply0 = (var$0, var$1) => {
    return onns_NostrKeyPairSigner$decrypt$lambda$_4_0_apply(var$0, var$1);
},
onns_NostrKeyPairSigner$decrypt$lambda$_4_0_apply = (var$0, var$1) => {
    return onns_NostrKeyPairSigner_lambda$decrypt$3(var$0.$_056, var$1);
};
function onnrt_NostrTURN$Packet() {
    let a = this; jl_Object.call(a);
    a.$id5 = Long_ZERO;
    a.$chunks = null;
    a.$sent = 0;
    a.$ack0 = 0;
    a.$timestamp = null;
    a.$callback = null;
    a.$callbackError = null;
}
let onnrt_NostrTURN$Packet__init_0 = ($this, $id, $chunks, $callback, $callbackError) => {
    jl_Object__init_($this);
    $this.$id5 = $id;
    $this.$chunks = $chunks;
    $this.$sent = 0;
    $this.$ack0 = 0;
    $this.$timestamp = jt_Instant_now();
    $this.$callback = $callback;
    $this.$callbackError = $callbackError;
},
onnrt_NostrTURN$Packet__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnrt_NostrTURN$Packet();
    onnrt_NostrTURN$Packet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnrt_NostrTURN$Packet__init_$exported$0 = (var$1, var$2, var$3, var$4) => {
    return onnrt_NostrTURN$Packet__init_(var$1, var$2, var$3, var$4);
};
function onnn_Nip44$encrypt$lambda$_12_0() {
    let a = this; jl_Object.call(a);
    a.$_0146 = null;
    a.$_173 = null;
    a.$_238 = null;
}
let onnn_Nip44$encrypt$lambda$_12_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0146 = var$1;
    var$0.$_173 = var$2;
    var$0.$_238 = var$3;
},
onnn_Nip44$encrypt$lambda$_12_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onnn_Nip44$encrypt$lambda$_12_0();
    onnn_Nip44$encrypt$lambda$_12_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onnn_Nip44$encrypt$lambda$_12_0_call0 = var$0 => {
    return onnn_Nip44$encrypt$lambda$_12_0_call(var$0);
},
onnn_Nip44$encrypt$lambda$_12_0_call = var$0 => {
    return onnn_Nip44_lambda$encrypt$0(var$0.$_0146, var$0.$_173, var$0.$_238);
};
function juc_ConcurrentHashMap() {
    let a = this; ju_AbstractMap.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$modCount1 = 0;
    a.$loadFactor = 0.0;
    a.$threshold0 = 0;
    a.$cachedValues0 = null;
}
let juc_ConcurrentHashMap_newElementArray = ($this, $s) => {
    return $rt_createArray(juc_ConcurrentHashMap$HashEntry, $s);
},
juc_ConcurrentHashMap__init_2 = $this => {
    juc_ConcurrentHashMap__init_1($this, 16);
},
juc_ConcurrentHashMap__init_ = () => {
    let var_0 = new juc_ConcurrentHashMap();
    juc_ConcurrentHashMap__init_2(var_0);
    return var_0;
},
juc_ConcurrentHashMap__init_1 = ($this, $capacity) => {
    juc_ConcurrentHashMap__init_0($this, $capacity, 0.75);
},
juc_ConcurrentHashMap__init_4 = var_0 => {
    let var_1 = new juc_ConcurrentHashMap();
    juc_ConcurrentHashMap__init_1(var_1, var_0);
    return var_1;
},
juc_ConcurrentHashMap_calculateCapacity = $x => {
    let var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
},
juc_ConcurrentHashMap__init_0 = ($this, $capacity, $loadFactor) => {
    let var$3;
    ju_AbstractMap__init_($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = juc_ConcurrentHashMap_calculateCapacity($capacity);
        $this.$elementCount0 = 0;
        $this.$elementData0 = $this.$newElementArray1(var$3);
        $this.$loadFactor = $loadFactor;
        juc_ConcurrentHashMap_computeThreshold($this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
juc_ConcurrentHashMap__init_3 = (var_0, var_1) => {
    let var_2 = new juc_ConcurrentHashMap();
    juc_ConcurrentHashMap__init_0(var_2, var_0, var_1);
    return var_2;
},
juc_ConcurrentHashMap_computeThreshold = $this => {
    $this.$threshold0 = $this.$elementData0.data.length * $this.$loadFactor | 0;
},
juc_ConcurrentHashMap_containsKey = ($this, $key) => {
    return juc_ConcurrentHashMap_getEntry0($this, $key) === null ? 0 : 1;
},
juc_ConcurrentHashMap_entrySet = $this => {
    return juc_ConcurrentHashMap$HashMapEntrySet__init_0($this);
},
juc_ConcurrentHashMap_get = ($this, $key) => {
    let $m;
    $m = juc_ConcurrentHashMap_getEntry0($this, $key);
    if ($m === null)
        return null;
    return $m.$value4;
},
juc_ConcurrentHashMap_computeIfAbsent = ($this, $key, $mappingFunction) => {
    let $hash, $entry, $newValue, var$6, $index;
    ju_Objects_requireNonNull0($mappingFunction);
    $hash = ju_Objects_hashCode($key);
    $entry = juc_ConcurrentHashMap_getEntry($this, $key, $hash);
    if ($entry !== null)
        return $entry.$getValue();
    $newValue = $mappingFunction.$apply($key);
    var$6 = juc_ConcurrentHashMap_getEntry($this, $key, $hash);
    if (var$6 !== null)
        return var$6.$getValue();
    $index = juc_ConcurrentHashMap_computeIndex($this, $hash);
    var$6 = juc_ConcurrentHashMap_placeHashedEntry($this, $key, $index, $hash);
    var$6.$setValue0($newValue);
    return $newValue;
},
juc_ConcurrentHashMap_getEntry0 = ($this, $key) => {
    return juc_ConcurrentHashMap_getEntry($this, $key, ju_Objects_hashCode($key));
},
juc_ConcurrentHashMap_getEntry = ($this, $key, $hash) => {
    let $table, var$4, $index, $first, $m, $equal;
    if ($key === null)
        return juc_ConcurrentHashMap_findNullKeyEntry($this);
    a: while (true) {
        $table = $this.$elementData0;
        var$4 = $table.data;
        $index = $hash & (var$4.length - 1 | 0);
        b: while (true) {
            $first = var$4[$index];
            if ($first === null)
                return null;
            $m = $first;
            c: {
                while (true) {
                    if ($m === null)
                        break c;
                    if (!$m.$removed && $m.$origKeyHash0 == $hash) {
                        $equal = juc_ConcurrentHashMap_areEqualKeys($key, $m.$key0);
                        if ($table !== $this.$elementData0)
                            break b;
                        if ($equal)
                            break;
                    }
                    $m = $m.$next7;
                }
                if (!$m.$removed)
                    break a;
                continue b;
            }
            if ($first === var$4[$index])
                return null;
        }
    }
    return $m;
},
juc_ConcurrentHashMap_findNullKeyEntry = $this => {
    let $m;
    $m = $this.$elementData0.data[0];
    while ($m !== null && $m.$key0 !== null) {
        $m = $m.$next7;
    }
    return $m;
},
juc_ConcurrentHashMap_put = ($this, $key, $value) => {
    return juc_ConcurrentHashMap_putImpl($this, $key, $value);
},
juc_ConcurrentHashMap_putImpl = ($this, $key, $value) => {
    let $hash, $entry, $index, $result;
    $hash = ju_Objects_hashCode($key);
    $entry = juc_ConcurrentHashMap_getEntry($this, $key, $hash);
    $index = juc_ConcurrentHashMap_computeIndex($this, $hash);
    if ($entry === null)
        $entry = juc_ConcurrentHashMap_placeHashedEntry($this, $key, $index, $hash);
    $result = $entry.$value4;
    $entry.$value4 = $value;
    return $result;
},
juc_ConcurrentHashMap_placeHashedEntry = ($this, $key, $index, $hash) => {
    let $entry, var$5;
    $entry = juc_ConcurrentHashMap_createHashedEntry($this, $key, $index, $hash);
    $this.$modCount1 = $this.$modCount1 + 1 | 0;
    var$5 = $this.$elementCount0 + 1 | 0;
    $this.$elementCount0 = var$5;
    if (var$5 > $this.$threshold0)
        juc_ConcurrentHashMap_rehash($this);
    return $entry;
},
juc_ConcurrentHashMap_createHashedEntry = ($this, $key, $index, $hash) => {
    let $entry;
    $entry = juc_ConcurrentHashMap$HashEntry__init_0($key, $hash);
    $entry.$next7 = $this.$elementData0.data[$index];
    $this.$elementData0.data[$index] = $entry;
    return $entry;
},
juc_ConcurrentHashMap_rehash0 = ($this, $capacity) => {
    let $length, $newData, $i, $entry, var$6, $index, $next;
    $length = juc_ConcurrentHashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $this.$newElementArray1($length);
    $i = 0;
    while ($i < $this.$elementData0.data.length) {
        $entry = $this.$elementData0.data[$i];
        $this.$elementData0.data[$i] = null;
        while ($entry !== null) {
            var$6 = $newData.data;
            $index = $entry.$origKeyHash0 & ($length - 1 | 0);
            $next = $entry.$next7;
            $entry.$next7 = var$6[$index];
            var$6[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData0 = $newData;
    juc_ConcurrentHashMap_computeThreshold($this);
},
juc_ConcurrentHashMap_rehash = $this => {
    juc_ConcurrentHashMap_rehash0($this, $this.$elementData0.data.length);
},
juc_ConcurrentHashMap_remove = ($this, $key) => {
    let $entry;
    $entry = juc_ConcurrentHashMap_getEntry0($this, $key);
    if ($entry === null)
        return null;
    juc_ConcurrentHashMap_removeEntry($this, $entry);
    return $entry.$value4;
},
juc_ConcurrentHashMap_removeEntry = ($this, $entry) => {
    let $index, $m;
    $index = $entry.$origKeyHash0 & ($this.$elementData0.data.length - 1 | 0);
    $m = $this.$elementData0.data[$index];
    if ($m === $entry)
        $this.$elementData0.data[$index] = $entry.$next7;
    else {
        while ($m.$next7 !== $entry) {
            $m = $m.$next7;
        }
        $m.$next7 = $entry.$next7;
    }
    $this.$modCount1 = $this.$modCount1 + 1 | 0;
    $this.$elementCount0 = $this.$elementCount0 - 1 | 0;
    $entry.$removed = 1;
},
juc_ConcurrentHashMap_size = $this => {
    return $this.$elementCount0;
},
juc_ConcurrentHashMap_values = $this => {
    if ($this.$cachedValues0 === null)
        $this.$cachedValues0 = juc_ConcurrentHashMap$2__init_0($this);
    return $this.$cachedValues0;
},
juc_ConcurrentHashMap_areEqualKeys = ($key1, $key2) => {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
},
juc_ConcurrentHashMap_computeIndex = ($this, $hash) => {
    return ($hash & 2147483647) % $this.$elementData0.data.length | 0;
};
function ju_TemplateCollections$SingleElementSet() {
    ju_TemplateCollections$AbstractImmutableSet.call(this);
    this.$element = null;
}
let ju_TemplateCollections$SingleElementSet__init_ = ($this, $element) => {
    ju_TemplateCollections$AbstractImmutableSet__init_($this);
    $this.$element = $element;
},
ju_TemplateCollections$SingleElementSet__init_0 = var_0 => {
    let var_1 = new ju_TemplateCollections$SingleElementSet();
    ju_TemplateCollections$SingleElementSet__init_(var_1, var_0);
    return var_1;
},
ju_TemplateCollections$SingleElementSet_iterator = $this => {
    return ju_TemplateCollections$SingleElementSet$1__init_0($this);
},
ju_TemplateCollections$SingleElementSet_size = $this => {
    return 1;
};
function juz_Deflater() {
    let a = this; jl_Object.call(a);
    a.$flushParm = 0;
    a.$finished2 = 0;
    a.$compressLevel = 0;
    a.$strategy0 = 0;
    a.$impl = null;
    a.$inRead0 = 0;
    a.$inLength0 = 0;
    a.$nowrap = 0;
}
let juz_Deflater__init_0 = $this => {
    juz_Deflater__init_($this, (-1), 0);
},
juz_Deflater__init_1 = () => {
    let var_0 = new juz_Deflater();
    juz_Deflater__init_0(var_0);
    return var_0;
},
juz_Deflater__init_ = ($this, $level, $noHeader) => {
    let $$je;
    jl_Object__init_($this);
    $this.$flushParm = 0;
    $this.$compressLevel = (-1);
    $this.$strategy0 = 0;
    if ($level >= (-1) && $level <= 9) {
        $this.$compressLevel = $level;
        a: {
            try {
                $this.$impl = cjj_Deflater__init_1($this.$compressLevel, $noHeader);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cjj_GZIPException) {
                } else {
                    throw $$e;
                }
            }
        }
        $this.$nowrap = $noHeader;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
juz_Deflater__init_2 = (var_0, var_1) => {
    let var_2 = new juz_Deflater();
    juz_Deflater__init_(var_2, var_0, var_1);
    return var_2;
},
juz_Deflater_deflate0 = ($this, $buf) => {
    return $this.$deflate1($buf, 0, $buf.data.length);
},
juz_Deflater_deflate1 = ($this, $buf, $off, $nbytes) => {
    return $this.$deflate2($buf, $off, $nbytes, $this.$flushParm);
},
juz_Deflater_deflate = ($this, $buf, $off, $nbytes, $flushParam) => {
    let var$5, $sin, $sout, $err, var$9, var$10;
    if ($this.$impl === null)
        $rt_throw(jl_IllegalStateException__init_0());
    var$5 = $buf.data.length;
    if ($off <= var$5 && $nbytes >= 0 && $off >= 0 && (var$5 - $off | 0) >= $nbytes) {
        a: {
            $sin = $this.$impl.$total_in;
            $sout = $this.$impl.$total_out;
            $this.$impl.$setOutput($buf, $off, $nbytes);
            $err = cjj_Deflater_deflate($this.$impl, $flushParam);
            switch ($err) {
                case 0:
                    break a;
                case 1:
                    $this.$finished2 = 1;
                    break a;
                default:
            }
            var$9 = new jl_RuntimeException;
            var$10 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(var$10, $rt_s(1401)), $err);
            jl_RuntimeException__init_0(var$9, jl_StringBuilder_toString(var$10));
            $rt_throw(var$9);
        }
        $this.$inRead0 = Long_lo(Long_add(Long_fromInt($this.$inRead0), Long_sub($this.$impl.$total_in, $sin)));
        return Long_lo(Long_sub($this.$impl.$total_out, $sout));
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
},
juz_Deflater_end = $this => {
    $this.$impl = null;
},
juz_Deflater_finish = $this => {
    $this.$flushParm = 4;
},
juz_Deflater_finished = $this => {
    return $this.$finished2;
},
juz_Deflater_setInput0 = ($this, $buf) => {
    $this.$setInput($buf, 0, $buf.data.length);
},
juz_Deflater_setInput = ($this, $buf, $off, $nbytes) => {
    let var$4;
    if ($this.$impl === null)
        $rt_throw(jl_IllegalStateException__init_0());
    var$4 = $buf.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        $this.$inLength0 = $nbytes;
        $this.$inRead0 = 0;
        if ($this.$impl.$next_in === null)
            cjj_Deflater_init($this.$impl, $this.$compressLevel, 15, $this.$nowrap);
        $this.$impl.$setInput0($buf, $off, $nbytes, 0);
        return;
    }
    $rt_throw(jl_ArrayIndexOutOfBoundsException__init_());
};
function onnrs_NostrRTCAnnounce() {
    let a = this; jl_Object.call(a);
    a.$publicKey0 = null;
    a.$misc0 = null;
    a.$expireAt = null;
}
let onnrs_NostrRTCAnnounce__init_ = ($this, $publicKey, $expireAt, $misc) => {
    let $map;
    jl_Object__init_($this);
    $this.$publicKey0 = $publicKey;
    $this.$expireAt = $expireAt;
    $map = ju_HashMap__init_();
    if ($misc !== null && !$misc.$isEmpty())
        $map.$putAll($misc);
    $this.$misc0 = $map;
},
onnrs_NostrRTCAnnounce__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onnrs_NostrRTCAnnounce();
    onnrs_NostrRTCAnnounce__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onnrs_NostrRTCAnnounce_updateExpireAt = ($this, $expireAt) => {
    $this.$expireAt = $expireAt;
},
onnrs_NostrRTCAnnounce_getExpireAt = $this => {
    return $this.$expireAt;
},
onnrs_NostrRTCAnnounce_isExpired = ($this, $now) => {
    return jt_Instant_isAfter($now, $this.$expireAt);
},
onnrs_NostrRTCAnnounce_equals = ($this, $o) => {
    let $that;
    if ($this === $o)
        return 1;
    if (!($o instanceof onnrs_NostrRTCAnnounce))
        return 0;
    $that = $o;
    if (onnk_NostrPublicKey_equals($this.$publicKey0, $that.$publicKey0))
        return 1;
    return 0;
},
onnrs_NostrRTCAnnounce_hashCode = $this => {
    return onnk_NostrPublicKey_hashCode($this.$publicKey0);
},
onnrs_NostrRTCAnnounce_get = $this => {
    return $this.$misc0;
},
onnrs_NostrRTCAnnounce_getPubkey = $this => {
    return $this.$publicKey0;
},
onnrs_NostrRTCAnnounce_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$publicKey0);
    var$2 = jl_String_valueOf($this.$expireAt);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1402)), var$1), $rt_s(1403)), var$2), 125);
    return jl_StringBuilder_toString(var$3);
},
onnrs_NostrRTCAnnounce_getPubkey$exported$0 = var$1 => {
    return var$1.$getPubkey();
},
onnrs_NostrRTCAnnounce_getExpireAt$exported$1 = var$1 => {
    return var$1.$getExpireAt();
},
onnrs_NostrRTCAnnounce_updateExpireAt$exported$2 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$updateExpireAt(var$2);
},
onnrs_NostrRTCAnnounce_equals$exported$3 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!var$1.$equals(var$2);
},
onnrs_NostrRTCAnnounce_toString$exported$4 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnrs_NostrRTCAnnounce_isExpired$exported$5 = (var$1, var$2) => {
    var$2 = var$2;
    return !!var$1.$isExpired(var$2);
},
onnrs_NostrRTCAnnounce_get$exported$6 = var$1 => {
    return var$1.$get20();
},
onnrs_NostrRTCAnnounce_hashCode$exported$7 = var$1 => {
    return var$1.$hashCode();
},
onnrs_NostrRTCAnnounce__init_$exported$8 = (var$1, var$2, var$3) => {
    return onnrs_NostrRTCAnnounce__init_0(var$1, var$2, var$3);
};
function jt_Instant() {
    let a = this; jl_Object.call(a);
    a.$seconds0 = Long_ZERO;
    a.$nanos0 = 0;
}
let jt_Instant_EPOCH = null,
jt_Instant_MIN = null,
jt_Instant_MAX = null,
jt_Instant_FROM = null,
jt_Instant_$callClinit = () => {
    jt_Instant_$callClinit = $rt_eraseClinit(jt_Instant);
    jt_Instant__clinit_();
},
jt_Instant_now = () => {
    jt_Instant_$callClinit();
    return (jt_Clock_systemUTC()).$instant();
},
jt_Instant_ofEpochSecond = $epochSecond => {
    jt_Instant_$callClinit();
    return jt_Instant_create($epochSecond, 0);
},
jt_Instant_ofEpochSecond0 = ($epochSecond, $nanoAdjustment) => {
    let $secs, $nos;
    jt_Instant_$callClinit();
    $secs = jl_Math_addExact($epochSecond, jl_Math_floorDiv($nanoAdjustment, 1000000000));
    $nos = jl_Math_floorMod($nanoAdjustment, 1000000000);
    return jt_Instant_create($secs, $nos);
},
jt_Instant_ofEpochMilli = $epochMilli => {
    let $secs, $mos;
    jt_Instant_$callClinit();
    $secs = jl_Math_floorDiv($epochMilli, 1000);
    $mos = jl_Math_floorMod($epochMilli, 1000);
    return jt_Instant_create($secs, $rt_imul($mos, 1000000));
},
jt_Instant_from = $temporal => {
    let $instantSecs, $nanoOfSecond, var$4, $ex, var$6, var$7, var$8, $$je;
    jt_Instant_$callClinit();
    a: {
        try {
            jtt_ChronoField_$callClinit();
            $instantSecs = $temporal.$getLong(jtt_ChronoField_INSTANT_SECONDS);
            $nanoOfSecond = $temporal.$get2(jtt_ChronoField_NANO_OF_SECOND);
            var$4 = jt_Instant_ofEpochSecond0($instantSecs, Long_fromInt($nanoOfSecond));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jt_DateTimeException) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$4;
    }
    var$4 = new jt_DateTimeException;
    var$6 = jl_String_valueOf($temporal);
    var$7 = jl_Class_getName(jl_Object_getClass($temporal));
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(1404)), var$6), $rt_s(362)), var$7);
    jt_DateTimeException__init_1(var$4, jl_StringBuilder_toString(var$8), $ex);
    $rt_throw(var$4);
},
jt_Instant_parse = $text => {
    jt_Instant_$callClinit();
    jtf_DateTimeFormatter_$callClinit();
    return jtf_DateTimeFormatter_parse(jtf_DateTimeFormatter_ISO_INSTANT, $text, jt_Instant_FROM);
},
jt_Instant_create = ($seconds, $nanoOfSecond) => {
    jt_Instant_$callClinit();
    if (Long_eq(Long_or($seconds, Long_fromInt($nanoOfSecond)), Long_ZERO))
        return jt_Instant_EPOCH;
    if (Long_ge($seconds, Long_create(342103040, 4287619856)) && Long_le($seconds, Long_create(4204099839, 7347410)))
        return jt_Instant__init_($seconds, $nanoOfSecond);
    $rt_throw(jt_DateTimeException__init_0($rt_s(1405)));
},
jt_Instant__init_0 = ($this, $epochSecond, $nanos) => {
    jt_Instant_$callClinit();
    jl_Object__init_($this);
    $this.$seconds0 = $epochSecond;
    $this.$nanos0 = $nanos;
},
jt_Instant__init_ = (var_0, var_1) => {
    let var_2 = new jt_Instant();
    jt_Instant__init_0(var_2, var_0, var_1);
    return var_2;
},
jt_Instant_isSupported = ($this, $field) => {
    if (!($field instanceof jtt_ChronoField))
        return $field !== null && $field.$isSupportedBy($this) ? 1 : 0;
    jtt_ChronoField_$callClinit();
    return $field !== jtt_ChronoField_INSTANT_SECONDS && $field !== jtt_ChronoField_NANO_OF_SECOND && $field !== jtt_ChronoField_MICRO_OF_SECOND && $field !== jtt_ChronoField_MILLI_OF_SECOND ? 0 : 1;
},
jt_Instant_getLong = ($this, $field) => {
    let var$2, var$3, var$4;
    if (!($field instanceof jtt_ChronoField))
        return $field.$getFrom($this);
    jt_Instant$2_$callClinit();
    switch (jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal($field)]) {
        case 1:
            return Long_fromInt($this.$nanos0);
        case 2:
            return Long_fromInt($this.$nanos0 / 1000 | 0);
        case 3:
            return Long_fromInt($this.$nanos0 / 1000000 | 0);
        case 4:
            break;
        default:
            var$2 = new jtt_UnsupportedTemporalTypeException;
            var$3 = jl_String_valueOf($field);
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(51)), var$3);
            jtt_UnsupportedTemporalTypeException__init_(var$2, jl_StringBuilder_toString(var$4));
            $rt_throw(var$2);
    }
    return $this.$seconds0;
},
jt_Instant_getEpochSecond = $this => {
    return $this.$seconds0;
},
jt_Instant_getNano = $this => {
    return $this.$nanos0;
},
jt_Instant_plus = ($this, $amount) => {
    return $amount.$addTo($this);
},
jt_Instant_plus1 = ($this, $amountToAdd, $unit) => {
    let var$3, var$4, var$5;
    if (!($unit instanceof jtt_ChronoUnit))
        return $unit.$addTo0($this, $amountToAdd);
    jt_Instant$2_$callClinit();
    switch (jt_Instant$2_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal($unit)]) {
        case 1:
            break;
        case 2:
            return jt_Instant_plus0($this, Long_div($amountToAdd, Long_fromInt(1000000)), Long_mul(Long_rem($amountToAdd, Long_fromInt(1000000)), Long_fromInt(1000)));
        case 3:
            return jt_Instant_plusMillis($this, $amountToAdd);
        case 4:
            return jt_Instant_plusSeconds($this, $amountToAdd);
        case 5:
            return jt_Instant_plusSeconds($this, jl_Math_multiplyExact($amountToAdd, 60));
        case 6:
            return jt_Instant_plusSeconds($this, jl_Math_multiplyExact($amountToAdd, 3600));
        case 7:
            return jt_Instant_plusSeconds($this, jl_Math_multiplyExact($amountToAdd, 43200));
        case 8:
            return jt_Instant_plusSeconds($this, jl_Math_multiplyExact($amountToAdd, 86400));
        default:
            var$3 = new jtt_UnsupportedTemporalTypeException;
            var$4 = jl_String_valueOf($unit);
            var$5 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(366)), var$4);
            jtt_UnsupportedTemporalTypeException__init_(var$3, jl_StringBuilder_toString(var$5));
            $rt_throw(var$3);
    }
    return jt_Instant_plusNanos($this, $amountToAdd);
},
jt_Instant_plusSeconds = ($this, $secondsToAdd) => {
    return jt_Instant_plus0($this, $secondsToAdd, Long_ZERO);
},
jt_Instant_plusMillis = ($this, $millisToAdd) => {
    return jt_Instant_plus0($this, Long_div($millisToAdd, Long_fromInt(1000)), Long_mul(Long_rem($millisToAdd, Long_fromInt(1000)), Long_fromInt(1000000)));
},
jt_Instant_plusNanos = ($this, $nanosToAdd) => {
    return jt_Instant_plus0($this, Long_ZERO, $nanosToAdd);
},
jt_Instant_plus0 = ($this, $secondsToAdd, $nanosToAdd) => {
    let $epochSec, var$4, var$5, $nanoAdjustment;
    if (Long_eq(Long_or($secondsToAdd, $nanosToAdd), Long_ZERO))
        return $this;
    $epochSec = jl_Math_addExact($this.$seconds0, $secondsToAdd);
    var$4 = jl_Math_addExact($epochSec, Long_div($nanosToAdd, Long_fromInt(1000000000)));
    var$5 = Long_rem($nanosToAdd, Long_fromInt(1000000000));
    $nanoAdjustment = Long_add(Long_fromInt($this.$nanos0), var$5);
    return jt_Instant_ofEpochSecond0(var$4, $nanoAdjustment);
},
jt_Instant_minusSeconds = ($this, $secondsToSubtract) => {
    if (Long_ne($secondsToSubtract, Long_create(0, 2147483648)))
        return jt_Instant_plusSeconds($this, Long_neg($secondsToSubtract));
    return jt_Instant_plusSeconds(jt_Instant_plusSeconds($this, Long_create(4294967295, 2147483647)), Long_fromInt(1));
},
jt_Instant_compareTo = ($this, $otherInstant) => {
    let $cmp;
    $cmp = jl_Long_compare($this.$seconds0, $otherInstant.$seconds0);
    if ($cmp)
        return $cmp;
    return $this.$nanos0 - $otherInstant.$nanos0 | 0;
},
jt_Instant_isAfter = ($this, $otherInstant) => {
    return jt_Instant_compareTo($this, $otherInstant) <= 0 ? 0 : 1;
},
jt_Instant_isBefore = ($this, $otherInstant) => {
    return jt_Instant_compareTo($this, $otherInstant) >= 0 ? 0 : 1;
},
jt_Instant_equals = ($this, $otherInstant) => {
    let $other;
    if ($this === $otherInstant)
        return 1;
    if (!($otherInstant instanceof jt_Instant))
        return 0;
    $other = $otherInstant;
    return Long_eq($this.$seconds0, $other.$seconds0) && $this.$nanos0 == $other.$nanos0 ? 1 : 0;
},
jt_Instant_hashCode = $this => {
    return Long_lo(Long_xor($this.$seconds0, Long_shru($this.$seconds0, 32))) + (51 * $this.$nanos0 | 0) | 0;
},
jt_Instant_toString = $this => {
    let $sb;
    $sb = jl_StringBuilder__init_();
    jtf_DateTimeFormatterBuilder$InstantPrinterParser_print(jtf_DateTimeFormatterBuilder$InstantPrinterParser__init_0((-2)), jtf_DateTimePrintContext__init_0($this, null, null), $sb);
    return $sb.$toString();
},
jt_Instant_plus2 = ($this, var$1, var$2) => {
    return jt_Instant_plus1($this, var$1, var$2);
},
jt_Instant_compareTo0 = ($this, var$1) => {
    return jt_Instant_compareTo($this, var$1);
},
jt_Instant__clinit_ = () => {
    jt_Instant_EPOCH = jt_Instant__init_(Long_ZERO, 0);
    jt_Instant_MIN = jt_Instant_ofEpochSecond0(Long_create(342103040, 4287619856), Long_ZERO);
    jt_Instant_MAX = jt_Instant_ofEpochSecond0(Long_create(4204099839, 7347410), Long_fromInt(999999999));
    jt_Instant_FROM = jt_Instant$1__init_0();
};
function onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0() {
    let a = this; jl_Object.call(a);
    a.$_06 = null;
    a.$_12 = 0;
    a.$_21 = null;
}
let onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_06 = var$1;
    var$0.$_12 = var$2;
    var$0.$_21 = var$3;
},
onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0();
    onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$onConnectionClosedByServer$35(var$0.$_06, var$0.$_12, var$0.$_21, var$1, var$2);
};
function ju_TemplateCollections$SingleElementSet$1() {
    let a = this; jl_Object.call(a);
    a.$more = 0;
    a.$this$019 = null;
}
let ju_TemplateCollections$SingleElementSet$1__init_ = ($this, $this$0) => {
    $this.$this$019 = $this$0;
    jl_Object__init_($this);
    $this.$more = 1;
},
ju_TemplateCollections$SingleElementSet$1__init_0 = var_0 => {
    let var_1 = new ju_TemplateCollections$SingleElementSet$1();
    ju_TemplateCollections$SingleElementSet$1__init_(var_1, var_0);
    return var_1;
},
ju_TemplateCollections$SingleElementSet$1_hasNext = $this => {
    return $this.$more;
},
ju_TemplateCollections$SingleElementSet$1_next = $this => {
    if (!$this.$more)
        $rt_throw(ju_NoSuchElementException__init_());
    $this.$more = 0;
    return $this.$this$019.$element;
},
ju_TemplateCollections$SingleElementSet$1_remove = $this => {
    $rt_throw(jl_UnsupportedOperationException__init_());
},
jt_Year = $rt_classWithoutFields(),
jt_Year_isLeap = $year => {
    let var$2;
    a: {
        b: {
            if (Long_eq(Long_and($year, Long_fromInt(3)), Long_ZERO)) {
                if (Long_ne(Long_rem($year, Long_fromInt(100)), Long_ZERO))
                    break b;
                if (Long_eq(Long_rem($year, Long_fromInt(400)), Long_ZERO))
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
},
onnn_Nip39 = $rt_classWithoutFields(),
onnn_Nip39_PLATFORM_PATTERN = null,
onnn_Nip39_$callClinit = () => {
    onnn_Nip39_$callClinit = $rt_eraseClinit(onnn_Nip39);
    onnn_Nip39__clinit_();
},
onnn_Nip39__init_ = $this => {
    onnn_Nip39_$callClinit();
    jl_Object__init_($this);
},
onnn_Nip39__init_0 = () => {
    let var_0 = new onnn_Nip39();
    onnn_Nip39__init_(var_0);
    return var_0;
},
onnn_Nip39_from0 = $event => {
    onnn_Nip39_$callClinit();
    return onnn_Nip39ExternalIdentities__init_2($event);
},
onnn_Nip39_from = $nip01 => {
    onnn_Nip39_$callClinit();
    return onnn_Nip39ExternalIdentities__init_1($nip01);
},
onnn_Nip39_fetch0 = ($pool, $pubkey) => {
    let $filter;
    onnn_Nip39_$callClinit();
    $filter = onnn_Nip01UserMetadataFilter__init_($pubkey);
    return onnn_Nip39_fetch($pool, $filter);
},
onnn_Nip39_fetch = ($pool, $filter) => {
    let var$3, var$4;
    onnn_Nip39_$callClinit();
    var$3 = onnn_Nip01_fetch($pool, $filter);
    var$4 = onnn_Nip39$fetch$lambda$_4_0__init_0();
    var$3 = var$3.$then(var$4);
    return var$3;
},
onnn_Nip39_update = ($pool, $signer, $newMetadata) => {
    onnn_Nip39_$callClinit();
    return onnn_Nip01_update($pool, $signer, $newMetadata);
},
onnn_Nip39_isValidPlatform = $platform => {
    onnn_Nip39_$callClinit();
    if ($platform !== null && !$platform.$isEmpty()) {
        if ($platform.$length() > 32)
            return 0;
        if (jur_Matcher_matches(jur_Pattern_matcher(onnn_Nip39_PLATFORM_PATTERN, $platform)))
            return 1;
        return 0;
    }
    return 0;
},
onnn_Nip39_lambda$fetch$0 = $v => {
    onnn_Nip39_$callClinit();
    return onnn_Nip39_from($v);
},
onnn_Nip39__clinit_ = () => {
    onnn_Nip39_PLATFORM_PATTERN = jur_Pattern_compile($rt_s(1406));
},
onnn_Nip39__init_$exported$0 = () => {
    onnn_Nip39_$callClinit();
    return onnn_Nip39__init_0();
},
onnn_Nip39_from$exported$0 = var$1 => {
    onnn_Nip39_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip39_from0(var$1);
},
onnn_Nip39_from$exported$1 = var$1 => {
    onnn_Nip39_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip39_from(var$1);
},
onnn_Nip39_fetch$exported$2 = (var$1, var$2) => {
    onnn_Nip39_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip39_fetch0(var$1, var$2);
},
onnn_Nip39_fetch$exported$3 = (var$1, var$2) => {
    onnn_Nip39_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip39_fetch(var$1, var$2);
},
onnn_Nip39_update$exported$4 = (var$1, var$2, var$3) => {
    onnn_Nip39_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip39_update(var$1, var$2, var$3);
},
onnn_Nip39_isValidPlatform$exported$5 = var$1 => {
    onnn_Nip39_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return !!onnn_Nip39_isValidPlatform($rt_str(var$1));
},
onnn_Nip39_lambda$fetch$0$exported$6 = var$1 => {
    onnn_Nip39_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnn_Nip39_lambda$fetch$0(var$1);
},
jur_EOISet = $rt_classWithoutFields(jur_AbstractSet),
jur_EOISet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_EOISet__init_0 = () => {
    let var_0 = new jur_EOISet();
    jur_EOISet__init_(var_0);
    return var_0;
},
jur_EOISet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $rightBound;
    $rightBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getRightBound() : $testString.$length();
    if ($stringIndex < $rightBound)
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_EOISet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_EOISet_getName = $this => {
    return $rt_s(1407);
};
function jusi_SpliteratorOverCollection() {
    let a = this; jl_Object.call(a);
    a.$collection = null;
    a.$iterator0 = null;
}
let jusi_SpliteratorOverCollection__init_ = ($this, $collection) => {
    jl_Object__init_($this);
    $this.$collection = $collection;
},
jusi_SpliteratorOverCollection__init_0 = var_0 => {
    let var_1 = new jusi_SpliteratorOverCollection();
    jusi_SpliteratorOverCollection__init_(var_1, var_0);
    return var_1;
},
jusi_SpliteratorOverCollection_tryAdvance = ($this, $action) => {
    jusi_SpliteratorOverCollection_ensureIterator($this);
    if (!$this.$iterator0.$hasNext())
        return 0;
    $action.$accept0($this.$iterator0.$next());
    return 1;
},
jusi_SpliteratorOverCollection_ensureIterator = $this => {
    if ($this.$iterator0 === null)
        $this.$iterator0 = $this.$collection.$iterator();
},
jusi_SpliteratorOverCollection_estimateSize = $this => {
    return Long_fromInt($this.$collection.$size());
};
function onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0() {
    jl_Object.call(this);
    this.$_042 = null;
}
let onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_042 = var$1;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0();
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0_run = var$0 => {
    onn_NostrRelay_lambda$sendMessage$5(var$0.$_042);
};
function onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1() {
    let a = this; jl_Object.call(a);
    a.$_0169 = null;
    a.$_184 = null;
    a.$_241 = null;
}
let onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0169 = var$1;
    var$0.$_184 = var$2;
    var$0.$_241 = var$3;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1();
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1_accept(var$0, var$1, var$2);
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$sendMessage$7(var$0.$_0169, var$0.$_184, var$0.$_241, var$1, var$2);
};
function onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2() {
    let a = this; jl_Object.call(a);
    a.$_0110 = null;
    a.$_160 = null;
    a.$_231 = null;
}
let onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_0110 = var$1;
    var$0.$_160 = var$2;
    var$0.$_231 = var$3;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2();
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2_accept(var$0, var$1, var$2);
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$sendMessage$9(var$0.$_0110, var$0.$_160, var$0.$_231, var$1, var$2);
},
jtt_IsoFields$Field$1 = $rt_classWithoutFields(jtt_IsoFields$Field),
jtt_IsoFields$Field$1__init_ = ($this, var$1, var$2) => {
    jtt_IsoFields$Field__init_($this, var$1, var$2);
},
jtt_IsoFields$Field$1__init_0 = (var_0, var_1) => {
    let var_2 = new jtt_IsoFields$Field$1();
    jtt_IsoFields$Field$1__init_(var_2, var_0, var_1);
    return var_2;
},
jtt_IsoFields$Field$1_toString = $this => {
    return $rt_s(1408);
},
jtt_IsoFields$Field$1_range = $this => {
    return jtt_ValueRange_of0(Long_fromInt(1), Long_fromInt(90), Long_fromInt(92));
},
jtt_IsoFields$Field$1_isSupportedBy = ($this, $temporal) => {
    let var$2, var$3;
    a: {
        jtt_ChronoField_$callClinit();
        if ($temporal.$isSupported(jtt_ChronoField_DAY_OF_YEAR) && $temporal.$isSupported(jtt_ChronoField_MONTH_OF_YEAR)) {
            var$2 = jtt_ChronoField_YEAR;
            if ($temporal.$isSupported(var$2) && jtt_IsoFields$Field_isIso($temporal)) {
                var$3 = 1;
                break a;
            }
        }
        var$3 = 0;
    }
    return var$3;
},
jtt_IsoFields$Field$1_getFrom = ($this, $temporal) => {
    let $doy, $moy, $year, var$5, var$6, var$7;
    if (!$temporal.$isSupported($this))
        $rt_throw(jtt_UnsupportedTemporalTypeException__init_0($rt_s(1409)));
    jtt_ChronoField_$callClinit();
    $doy = $temporal.$get2(jtt_ChronoField_DAY_OF_YEAR);
    $moy = $temporal.$get2(jtt_ChronoField_MONTH_OF_YEAR);
    $year = $temporal.$getLong(jtt_ChronoField_YEAR);
    jtt_IsoFields$Field_$callClinit();
    var$5 = jtt_IsoFields$Field_QUARTER_DAYS;
    var$6 = ($moy - 1 | 0) / 3 | 0;
    jtc_IsoChronology_$callClinit();
    var$7 = !jtc_IsoChronology_isLeapYear(jtc_IsoChronology_INSTANCE, $year) ? 0 : 4;
    return Long_fromInt($doy - var$5.data[var$6 + var$7 | 0] | 0);
},
jtt_IsoFields$Field$1_resolve = ($this, $fieldValues, $partialTemporal, $resolverStyle) => {
    let $yearLong, $qoyLong, $y, $doq, $qoy, $date, var$10, $qoy_0, $max;
    jtt_ChronoField_$callClinit();
    $yearLong = $fieldValues.$get1(jtt_ChronoField_YEAR);
    jtt_IsoFields$Field_$callClinit();
    $qoyLong = $fieldValues.$get1(jtt_IsoFields$Field_QUARTER_OF_YEAR);
    if ($yearLong !== null && $qoyLong !== null) {
        $y = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_YEAR, $yearLong.$longValue());
        $doq = ($fieldValues.$get1(jtt_IsoFields$Field_DAY_OF_QUARTER)).$longValue();
        jtf_ResolverStyle_$callClinit();
        if ($resolverStyle === jtf_ResolverStyle_LENIENT) {
            $qoy = $qoyLong.$longValue();
            $date = jt_LocalDate_of($y, 1, 1);
            var$10 = jt_LocalDate_plusMonths($date, jl_Math_multiplyExact(jl_Math_subtractExact($qoy, Long_fromInt(1)), 3));
            $date = jt_LocalDate_plusDays(var$10, jl_Math_subtractExact($doq, Long_fromInt(1)));
        } else {
            $qoy_0 = jtt_ValueRange_checkValidIntValue(jtt_IsoFields$Field_QUARTER_OF_YEAR.$range(), $qoyLong.$longValue(), jtt_IsoFields$Field_QUARTER_OF_YEAR);
            if ($resolverStyle !== jtf_ResolverStyle_STRICT)
                jtt_ValueRange_checkValidValue(jtt_IsoFields$Field$1_range($this), $doq, $this);
            else {
                $max = 92;
                if ($qoy_0 == 1) {
                    jtc_IsoChronology_$callClinit();
                    $max = !jtc_IsoChronology_isLeapYear(jtc_IsoChronology_INSTANCE, Long_fromInt($y)) ? 90 : 91;
                } else if ($qoy_0 == 2)
                    $max = 91;
                jtt_ValueRange_checkValidValue(jtt_ValueRange_of(Long_fromInt(1), Long_fromInt($max)), $doq, $this);
            }
            $date = jt_LocalDate_plusDays(jt_LocalDate_of($y, (($qoy_0 - 1 | 0) * 3 | 0) + 1 | 0, 1), Long_sub($doq, Long_fromInt(1)));
        }
        $fieldValues.$remove1($this);
        $fieldValues.$remove1(jtt_ChronoField_YEAR);
        $fieldValues.$remove1(jtt_IsoFields$Field_QUARTER_OF_YEAR);
        return $date;
    }
    return null;
};
function onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0() {
    let a = this; jl_Object.call(a);
    a.$_078 = null;
    a.$_145 = null;
    a.$_220 = null;
    a.$_39 = null;
}
let onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_078 = var$1;
    var$0.$_145 = var$2;
    var$0.$_220 = var$3;
    var$0.$_39 = var$4;
},
onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0();
    onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$sendMessage$13(var$0.$_078, var$0.$_145, var$0.$_220, var$0.$_39, var$1, var$2);
};
function onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3() {
    jl_Object.call(this);
    this.$_047 = null;
}
let onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_047 = var$1;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3();
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3_accept0 = (var$0, var$1) => {
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3_accept(var$0, var$1);
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3_accept = (var$0, var$1) => {
    onn_NostrRelay_lambda$sendMessage$10(var$0.$_047, var$1);
},
jtt_IsoFields$Field$2 = $rt_classWithoutFields(jtt_IsoFields$Field),
jtt_IsoFields$Field$2__init_0 = ($this, var$1, var$2) => {
    jtt_IsoFields$Field__init_($this, var$1, var$2);
},
jtt_IsoFields$Field$2__init_ = (var_0, var_1) => {
    let var_2 = new jtt_IsoFields$Field$2();
    jtt_IsoFields$Field$2__init_0(var_2, var_0, var_1);
    return var_2;
},
jtt_IsoFields$Field$2_toString = $this => {
    return $rt_s(1410);
},
jtt_IsoFields$Field$2_range = $this => {
    return jtt_ValueRange_of(Long_fromInt(1), Long_fromInt(4));
},
jtt_IsoFields$Field$2_isSupportedBy = ($this, $temporal) => {
    jtt_ChronoField_$callClinit();
    return $temporal.$isSupported(jtt_ChronoField_MONTH_OF_YEAR) && jtt_IsoFields$Field_isIso($temporal) ? 1 : 0;
},
jtt_IsoFields$Field$2_getFrom = ($this, $temporal) => {
    let $moy;
    if (!$temporal.$isSupported($this))
        $rt_throw(jtt_UnsupportedTemporalTypeException__init_0($rt_s(1411)));
    jtt_ChronoField_$callClinit();
    $moy = $temporal.$getLong(jtt_ChronoField_MONTH_OF_YEAR);
    return Long_div(Long_add($moy, Long_fromInt(2)), Long_fromInt(3));
};
function onnu_ExponentialBackoff() {
    let a = this; jl_Object.call(a);
    a.$initialDelay = Long_ZERO;
    a.$maxDelay = Long_ZERO;
    a.$multiplier = 0.0;
    a.$cooldown = Long_ZERO;
    a.$timeUnit = null;
    a.$currentDelay = Long_ZERO;
    a.$nextAttemptTimestamp = Long_ZERO;
    a.$cooldownStartTimestamp = Long_ZERO;
}
let onnu_ExponentialBackoff__init_1 = $this => {
    juc_TimeUnit_$callClinit();
    onnu_ExponentialBackoff__init_($this, Long_fromInt(1), Long_fromInt(120), Long_fromInt(21), juc_TimeUnit_SECONDS, 2.0);
},
onnu_ExponentialBackoff__init_0 = () => {
    let var_0 = new onnu_ExponentialBackoff();
    onnu_ExponentialBackoff__init_1(var_0);
    return var_0;
},
onnu_ExponentialBackoff__init_ = ($this, $initialDelay, $maxDelay, $cooldown, $timeUnit, $multiplier) => {
    jl_Object__init_($this);
    $this.$nextAttemptTimestamp = Long_ZERO;
    $this.$cooldownStartTimestamp = Long_ZERO;
    if (Long_le($initialDelay, Long_ZERO))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1412)));
    if (Long_lt($maxDelay, $initialDelay))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1413)));
    if ($multiplier <= 1.0)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1414)));
    if (Long_le($cooldown, Long_ZERO))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1415)));
    $this.$timeUnit = $timeUnit;
    $this.$initialDelay = $initialDelay;
    $this.$maxDelay = $maxDelay;
    $this.$multiplier = $multiplier;
    $this.$cooldown = $cooldown;
    $this.$currentDelay = $initialDelay;
},
onnu_ExponentialBackoff__init_2 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new onnu_ExponentialBackoff();
    onnu_ExponentialBackoff__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
onnu_ExponentialBackoff_registerFailure = $this => {
    let var$1, var$2;
    $this.$cooldownStartTimestamp = Long_ZERO;
    var$1 = $this.$timeUnit;
    var$2 = jl_System_currentTimeMillis();
    juc_TimeUnit_$callClinit();
    $this.$nextAttemptTimestamp = Long_add(juc_TimeUnit_convert(var$1, var$2, juc_TimeUnit_MILLISECONDS), $this.$currentDelay);
    $this.$currentDelay = jl_Math_min0(Long_fromNumber(Long_toNumber($this.$currentDelay) * $this.$multiplier), $this.$maxDelay);
},
onnu_ExponentialBackoff_registerSuccess = $this => {
    let var$1, var$2;
    var$1 = $this.$timeUnit;
    var$2 = jl_System_currentTimeMillis();
    juc_TimeUnit_$callClinit();
    $this.$cooldownStartTimestamp = juc_TimeUnit_convert(var$1, var$2, juc_TimeUnit_MILLISECONDS);
},
onnu_ExponentialBackoff_getNextAttemptTime = ($this, $now, $unit) => {
    let $nowInternal, $remaining;
    $nowInternal = juc_TimeUnit_convert($this.$timeUnit, $now, $unit);
    if (Long_ne($this.$cooldownStartTimestamp, Long_ZERO) && Long_gt(Long_sub($nowInternal, $this.$cooldownStartTimestamp), $this.$cooldown)) {
        $this.$currentDelay = $this.$initialDelay;
        $this.$cooldownStartTimestamp = Long_ZERO;
        $this.$nextAttemptTimestamp = Long_ZERO;
    }
    $remaining = jl_Math_max0(Long_ZERO, Long_sub($this.$nextAttemptTimestamp, $nowInternal));
    return juc_TimeUnit_convert($unit, $remaining, $this.$timeUnit);
},
onnu_ExponentialBackoff__init_$exported$0 = () => {
    return onnu_ExponentialBackoff__init_0();
},
onnu_ExponentialBackoff_getNextAttemptTime$exported$1 = (var$1, var$2, var$3) => {
    let var$4;
    var$4 = var$2;
    var$2 = var$3;
    return onnu_ExponentialBackoff_getNextAttemptTime(var$1, var$4, var$2);
},
onnu_ExponentialBackoff_registerFailure$exported$2 = var$1 => {
    onnu_ExponentialBackoff_registerFailure(var$1);
},
onnu_ExponentialBackoff_registerSuccess$exported$3 = var$1 => {
    onnu_ExponentialBackoff_registerSuccess(var$1);
},
onnu_ExponentialBackoff__init_$exported$4 = (var$1, var$2, var$3, var$4, var$5) => {
    return onnu_ExponentialBackoff__init_2(var$1, var$2, var$3, var$4, var$5);
};
function onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4() {
    let a = this; jl_Object.call(a);
    a.$_087 = null;
    a.$_151 = null;
    a.$_224 = null;
}
let onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_087 = var$1;
    var$0.$_151 = var$2;
    var$0.$_224 = var$3;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4();
    onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4_apply0 = (var$0, var$1) => {
    return onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4_apply(var$0, var$1);
},
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4_apply = (var$0, var$1) => {
    return onn_NostrRelay_lambda$sendMessage$12(var$0.$_087, var$0.$_151, var$0.$_224, var$1);
},
jtt_IsoFields$Field$3 = $rt_classWithoutFields(jtt_IsoFields$Field),
jtt_IsoFields$Field$3__init_0 = ($this, var$1, var$2) => {
    jtt_IsoFields$Field__init_($this, var$1, var$2);
},
jtt_IsoFields$Field$3__init_ = (var_0, var_1) => {
    let var_2 = new jtt_IsoFields$Field$3();
    jtt_IsoFields$Field$3__init_0(var_2, var_0, var_1);
    return var_2;
},
jtt_IsoFields$Field$3_toString = $this => {
    return $rt_s(1416);
},
jtt_IsoFields$Field$3_range = $this => {
    return jtt_ValueRange_of0(Long_fromInt(1), Long_fromInt(52), Long_fromInt(53));
},
jtt_IsoFields$Field$3_isSupportedBy = ($this, $temporal) => {
    jtt_ChronoField_$callClinit();
    return $temporal.$isSupported(jtt_ChronoField_EPOCH_DAY) && jtt_IsoFields$Field_isIso($temporal) ? 1 : 0;
},
jtt_IsoFields$Field$3_getFrom = ($this, $temporal) => {
    if ($temporal.$isSupported($this))
        return Long_fromInt(jtt_IsoFields$Field_getWeek(jt_LocalDate_from($temporal)));
    $rt_throw(jtt_UnsupportedTemporalTypeException__init_0($rt_s(1417)));
},
jtt_IsoFields$Field$3_resolve = ($this, $fieldValues, $partialTemporal, $resolverStyle) => {
    let $wbyLong, $dowLong, $wby, $wowby, $dow, $temp, $range, $date, $dow_0, $weeks, var$14;
    jtt_IsoFields$Field_$callClinit();
    $wbyLong = $fieldValues.$get1(jtt_IsoFields$Field_WEEK_BASED_YEAR);
    jtt_ChronoField_$callClinit();
    $dowLong = $fieldValues.$get1(jtt_ChronoField_DAY_OF_WEEK);
    if ($wbyLong !== null && $dowLong !== null) {
        $wby = jtt_ValueRange_checkValidIntValue(jtt_IsoFields$Field_WEEK_BASED_YEAR.$range(), $wbyLong.$longValue(), jtt_IsoFields$Field_WEEK_BASED_YEAR);
        $wowby = ($fieldValues.$get1(jtt_IsoFields$Field_WEEK_OF_WEEK_BASED_YEAR)).$longValue();
        jtf_ResolverStyle_$callClinit();
        if ($resolverStyle !== jtf_ResolverStyle_LENIENT) {
            $dow = jtt_ChronoField_checkValidIntValue(jtt_ChronoField_DAY_OF_WEEK, $dowLong.$longValue());
            if ($resolverStyle !== jtf_ResolverStyle_STRICT)
                jtt_ValueRange_checkValidValue(jtt_IsoFields$Field$3_range($this), $wowby, $this);
            else {
                $temp = jt_LocalDate_of($wby, 1, 4);
                $range = jtt_IsoFields$Field_getWeekRange($temp);
                jtt_ValueRange_checkValidValue($range, $wowby, $this);
            }
            $date = jt_LocalDate_with(jt_LocalDate_plusWeeks(jt_LocalDate_of($wby, 1, 4), Long_sub($wowby, Long_fromInt(1))), jtt_ChronoField_DAY_OF_WEEK, Long_fromInt($dow));
        } else {
            $dow_0 = $dowLong.$longValue();
            $weeks = Long_ZERO;
            if (Long_gt($dow_0, Long_fromInt(7))) {
                var$14 = Long_sub($dow_0, Long_fromInt(1));
                $weeks = Long_div(var$14, Long_fromInt(7));
                $dow_0 = Long_add(Long_rem(var$14, Long_fromInt(7)), Long_fromInt(1));
            } else if (Long_lt($dow_0, Long_fromInt(1))) {
                $weeks = Long_sub(Long_div($dow_0, Long_fromInt(7)), Long_fromInt(1));
                $dow_0 = Long_add(Long_rem($dow_0, Long_fromInt(7)), Long_fromInt(7));
            }
            $date = jt_LocalDate_with(jt_LocalDate_plusWeeks(jt_LocalDate_plusWeeks(jt_LocalDate_of($wby, 1, 4), Long_sub($wowby, Long_fromInt(1))), $weeks), jtt_ChronoField_DAY_OF_WEEK, $dow_0);
        }
        $fieldValues.$remove1($this);
        $fieldValues.$remove1(jtt_IsoFields$Field_WEEK_BASED_YEAR);
        $fieldValues.$remove1(jtt_ChronoField_DAY_OF_WEEK);
        return $date;
    }
    return null;
},
jtt_IsoFields$Field$4 = $rt_classWithoutFields(jtt_IsoFields$Field),
jtt_IsoFields$Field$4__init_ = ($this, var$1, var$2) => {
    jtt_IsoFields$Field__init_($this, var$1, var$2);
},
jtt_IsoFields$Field$4__init_0 = (var_0, var_1) => {
    let var_2 = new jtt_IsoFields$Field$4();
    jtt_IsoFields$Field$4__init_(var_2, var_0, var_1);
    return var_2;
},
jtt_IsoFields$Field$4_toString = $this => {
    return $rt_s(1418);
},
jtt_IsoFields$Field$4_range = $this => {
    jtt_ChronoField_$callClinit();
    return jtt_ChronoField_range(jtt_ChronoField_YEAR);
},
jtt_IsoFields$Field$4_isSupportedBy = ($this, $temporal) => {
    jtt_ChronoField_$callClinit();
    return $temporal.$isSupported(jtt_ChronoField_EPOCH_DAY) && jtt_IsoFields$Field_isIso($temporal) ? 1 : 0;
},
jtt_IsoFields$Field$4_getFrom = ($this, $temporal) => {
    if ($temporal.$isSupported($this))
        return Long_fromInt(jtt_IsoFields$Field_getWeekBasedYear(jt_LocalDate_from($temporal)));
    $rt_throw(jtt_UnsupportedTemporalTypeException__init_0($rt_s(1419)));
},
jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferUnderflowException__init_ = $this => {
    jl_RuntimeException__init_($this);
},
jnc_BufferUnderflowException__init_0 = () => {
    let var_0 = new jnc_BufferUnderflowException();
    jnc_BufferUnderflowException__init_(var_0);
    return var_0;
},
juz_DataFormatException = $rt_classWithoutFields(jl_Exception),
juz_DataFormatException__init_0 = $this => {
    jl_Exception__init_1($this);
},
juz_DataFormatException__init_1 = () => {
    let var_0 = new juz_DataFormatException();
    juz_DataFormatException__init_0(var_0);
    return var_0;
},
juz_DataFormatException__init_ = ($this, $detailMessage) => {
    jl_Exception__init_($this, $detailMessage);
},
juz_DataFormatException__init_2 = var_0 => {
    let var_1 = new juz_DataFormatException();
    juz_DataFormatException__init_(var_1, var_0);
    return var_1;
};
function ju_LinkedList() {
    let a = this; ju_AbstractSequentialList.call(a);
    a.$firstEntry = null;
    a.$lastEntry = null;
    a.$size2 = 0;
}
let ju_LinkedList__init_0 = $this => {
    ju_AbstractSequentialList__init_($this);
},
ju_LinkedList__init_ = () => {
    let var_0 = new ju_LinkedList();
    ju_LinkedList__init_0(var_0);
    return var_0;
},
ju_LinkedList_size = $this => {
    return $this.$size2;
},
ju_LinkedList_listIterator = $this => {
    return ju_LinkedList$SequentialListIterator__init_($this, $this.$firstEntry, null, 0);
},
ju_LinkedList_listIterator0 = ($this, $index) => {
    let $next, $i, $prev;
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($index <= ($this.$size2 / 2 | 0)) {
        $next = $this.$firstEntry;
        $i = 0;
        while ($i < $index) {
            $next = $next.$next8;
            $i = $i + 1 | 0;
        }
        return ju_LinkedList$SequentialListIterator__init_($this, $next, $next === null ? null : $next.$previous0, $index);
    }
    if ($index > $this.$size2)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $prev = $this.$lastEntry;
    $i = $index;
    while ($i < $this.$size2) {
        $prev = $prev.$previous0;
        $i = $i + 1 | 0;
    }
    return ju_LinkedList$SequentialListIterator__init_($this, $prev === null ? null : $prev.$next8, $prev, $index);
},
ju_LinkedList_getLast = $this => {
    if ($this.$lastEntry !== null)
        return $this.$lastEntry.$item;
    $rt_throw(ju_NoSuchElementException__init_());
},
ju_LinkedList_removeEntry = ($this, $entry) => {
    if ($entry.$previous0 === null)
        $this.$firstEntry = $entry.$next8;
    else
        $entry.$previous0.$next8 = $entry.$next8;
    if ($entry.$next8 === null)
        $this.$lastEntry = $entry.$previous0;
    else
        $entry.$next8.$previous0 = $entry.$previous0;
    $this.$size2 = $this.$size2 - 1 | 0;
    $this.$modCount = $this.$modCount + 1 | 0;
},
otjc_JSString = $rt_classWithoutFields(),
otjc_JSString_stringValue$static = $this => {
    return $rt_str($this);
},
onnrl_NostrRTCRoomPeerDisconnectListener = $rt_classWithoutFields(0),
otcic_JSStderrPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStderrPrintStream__init_ = $this => {
    otcic_JsConsolePrintStream__init_($this);
},
otcic_JSStderrPrintStream__init_0 = () => {
    let var_0 = new otcic_JSStderrPrintStream();
    otcic_JSStderrPrintStream__init_(var_0);
    return var_0;
},
otcic_JSStderrPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(94);
    $rt_putStderr($rt_ustr($s));
};
function otcit_DateTimeZoneBuilder$RuleSet() {
    let a = this; jl_Object.call(a);
    a.$iStandardOffset = 0;
    a.$iRules = null;
    a.$iInitialNameKey = null;
    a.$iInitialSaveMillis = 0;
    a.$iUpperYear = 0;
    a.$iUpperOfYear = null;
}
let otcit_DateTimeZoneBuilder$RuleSet_YEAR_LIMIT = 0,
otcit_DateTimeZoneBuilder$RuleSet_$callClinit = () => {
    otcit_DateTimeZoneBuilder$RuleSet_$callClinit = $rt_eraseClinit(otcit_DateTimeZoneBuilder$RuleSet);
    otcit_DateTimeZoneBuilder$RuleSet__clinit_();
},
otcit_DateTimeZoneBuilder$RuleSet__init_ = $this => {
    otcit_DateTimeZoneBuilder$RuleSet_$callClinit();
    jl_Object__init_($this);
    $this.$iRules = ju_ArrayList__init_1(10);
    $this.$iUpperYear = 2147483647;
},
otcit_DateTimeZoneBuilder$RuleSet__init_1 = () => {
    let var_0 = new otcit_DateTimeZoneBuilder$RuleSet();
    otcit_DateTimeZoneBuilder$RuleSet__init_(var_0);
    return var_0;
},
otcit_DateTimeZoneBuilder$RuleSet__init_0 = ($this, $rs) => {
    otcit_DateTimeZoneBuilder$RuleSet_$callClinit();
    jl_Object__init_($this);
    $this.$iStandardOffset = $rs.$iStandardOffset;
    $this.$iRules = ju_ArrayList__init_0($rs.$iRules);
    $this.$iInitialSaveMillis = $rs.$iInitialSaveMillis;
    $this.$iUpperYear = $rs.$iUpperYear;
    $this.$iUpperOfYear = $rs.$iUpperOfYear;
},
otcit_DateTimeZoneBuilder$RuleSet__init_2 = var_0 => {
    let var_1 = new otcit_DateTimeZoneBuilder$RuleSet();
    otcit_DateTimeZoneBuilder$RuleSet__init_0(var_1, var_0);
    return var_1;
},
otcit_DateTimeZoneBuilder$RuleSet_firstTransition = ($this, $firstMillis, $calendar) => {
    let $copy, $millis, $saveMillis, $first, var$7, var$8, $rule;
    if ($this.$iInitialNameKey !== null)
        return otcit_DateTimeZoneBuilder$Transition__init_1($firstMillis, $this.$iStandardOffset + $this.$iInitialSaveMillis | 0, $this.$iStandardOffset);
    $copy = ju_ArrayList__init_0($this.$iRules);
    $millis = Long_create(0, 2147483648);
    $saveMillis = 0;
    $first = null;
    a: {
        while (true) {
            var$7 = otcit_DateTimeZoneBuilder$RuleSet_nextTransition($this, $millis, $saveMillis, $calendar);
            if (var$7 === null)
                break;
            $millis = otcit_DateTimeZoneBuilder$Transition_getMillis(var$7);
            var$8 = Long_compare($millis, $firstMillis);
            if (!var$8) {
                $first = otcit_DateTimeZoneBuilder$Transition__init_0($firstMillis, var$7);
                break a;
            }
            if (var$8 > 0) {
                b: {
                    if ($first === null) {
                        var$7 = $this.$iRules.$iterator();
                        while (var$7.$hasNext()) {
                            $rule = var$7.$next();
                            if (!otcit_DateTimeZoneBuilder$Rule_getSaveMillis($rule)) {
                                $first = otcit_DateTimeZoneBuilder$Transition__init_4($firstMillis, $rule, $this.$iStandardOffset);
                                break b;
                            }
                        }
                    }
                }
                if ($first !== null)
                    break a;
                $first = otcit_DateTimeZoneBuilder$Transition__init_1($firstMillis, $this.$iStandardOffset, $this.$iStandardOffset);
                break a;
            }
            $first = otcit_DateTimeZoneBuilder$Transition__init_0($firstMillis, var$7);
            $saveMillis = otcit_DateTimeZoneBuilder$Transition_getSaveMillis(var$7);
        }
    }
    $this.$iRules = $copy;
    return $first;
},
otcit_DateTimeZoneBuilder$RuleSet_nextTransition = ($this, $instant, $saveMillis, $calendar) => {
    let $nextRule, $nextMillis, $nextYear, $it, $rule, $next, var$10, $upperMillis;
    $nextRule = null;
    $nextMillis = Long_create(4294967295, 2147483647);
    $nextYear = 2147483647;
    $it = $this.$iRules.$iterator();
    while ($it.$hasNext()) {
        $rule = $it.$next();
        if ($rule.$iFromYear > $nextYear)
            continue;
        $next = otcit_DateTimeZoneBuilder$Rule_next($rule, $instant, $this.$iStandardOffset, $saveMillis, $calendar);
        if (Long_le($next, $instant)) {
            $it.$remove();
            continue;
        }
        if (Long_le($next, $nextMillis)) {
            $nextYear = $calendar.$get3(1);
            $nextRule = $rule;
            $nextMillis = $next;
        }
    }
    if ($nextRule === null)
        return null;
    $calendar.$setTimeInMillis($nextMillis);
    var$10 = $calendar.$get3(1);
    otcit_DateTimeZoneBuilder$RuleSet_$callClinit();
    if (var$10 >= otcit_DateTimeZoneBuilder$RuleSet_YEAR_LIMIT)
        return null;
    if ($this.$iUpperYear < 2147483647) {
        $upperMillis = otcit_DateTimeZoneBuilder$OfYear_setInstant($this.$iUpperOfYear, $this.$iUpperYear, $this.$iStandardOffset, $saveMillis);
        if (Long_ge($nextMillis, $upperMillis))
            return null;
    }
    return otcit_DateTimeZoneBuilder$Transition__init_4($nextMillis, $nextRule, $this.$iStandardOffset);
},
otcit_DateTimeZoneBuilder$RuleSet_getUpperLimit = ($this, $saveMillis) => {
    if ($this.$iUpperYear == 2147483647)
        return Long_create(4294967295, 2147483647);
    return otcit_DateTimeZoneBuilder$OfYear_setInstant($this.$iUpperOfYear, $this.$iUpperYear, $this.$iStandardOffset, $saveMillis);
},
otcit_DateTimeZoneBuilder$RuleSet_buildTailZone = ($this, $id) => {
    let $startRule, $endRule;
    if ($this.$iRules.$size() == 2) {
        $startRule = $this.$iRules.$get(0);
        $endRule = $this.$iRules.$get(1);
        if (otcit_DateTimeZoneBuilder$Rule_getToYear($startRule) == 2147483647 && otcit_DateTimeZoneBuilder$Rule_getToYear($endRule) == 2147483647)
            return otcit_DateTimeZoneBuilder$DSTZone__init_0($id, $this.$iStandardOffset, $startRule.$iRecurrence, $endRule.$iRecurrence);
    }
    return null;
},
otcit_DateTimeZoneBuilder$RuleSet__clinit_ = () => {
    let $calendar;
    $calendar = ju_Calendar_getInstance();
    otcit_DateTimeZoneBuilder$RuleSet_YEAR_LIMIT = $calendar.$get3(1) + 100 | 0;
};
function onns_NostrNIP46Signer$ResponseListener() {
    let a = this; jl_Object.call(a);
    a.$method = null;
    a.$onSuccess = null;
    a.$onError = null;
    a.$expiredAt = null;
    a.$verifyPayload = null;
}
let onns_NostrNIP46Signer$ResponseListener_toString = $this => {
    let var$1, var$2;
    var$1 = $this.$method;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1420)), var$1);
    return jl_StringBuilder_toString(var$2);
},
onns_NostrNIP46Signer$ResponseListener_cancel = ($this, $reason) => {
    let var$2, var$3, var$4;
    var$2 = $this.$onError;
    var$3 = new jl_Exception;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1421)), $reason);
    jl_Exception__init_(var$3, jl_StringBuilder_toString(var$4));
    var$2.$accept0(var$3);
},
onns_NostrNIP46Signer$ResponseListener__init_ = ($this, $method, $onSuccess, $onError, $expireAfter) => {
    jl_Object__init_($this);
    $this.$verifyPayload = null;
    $this.$method = $method;
    $this.$onSuccess = $onSuccess;
    $this.$onError = $onError;
    $this.$expiredAt = jt_Instant_plus(jt_Instant_now(), $expireAfter);
},
onns_NostrNIP46Signer$ResponseListener__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onns_NostrNIP46Signer$ResponseListener();
    onns_NostrNIP46Signer$ResponseListener__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onns_NostrNIP46Signer$ResponseListener_cancel$exported$0 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$cancel(var$2);
},
onns_NostrNIP46Signer$ResponseListener_toString$exported$1 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onns_NostrNIP46Signer$ResponseListener__init_$exported$2 = (var$1, var$2, var$3, var$4) => {
    return onns_NostrNIP46Signer$ResponseListener__init_0($rt_str(var$1), var$2, var$3, var$4);
},
oti_AsyncCallback = $rt_classWithoutFields(0);
function otcit_AliasDateTimeZone() {
    otcit_StorableDateTimeZone.call(this);
    this.$innerZone = null;
}
let otcit_AliasDateTimeZone__init_ = ($this, $id, $innerZone) => {
    otcit_StorableDateTimeZone__init_($this, $id);
    $this.$innerZone = $innerZone;
},
otcit_AliasDateTimeZone__init_0 = (var_0, var_1) => {
    let var_2 = new otcit_AliasDateTimeZone();
    otcit_AliasDateTimeZone__init_(var_2, var_0, var_1);
    return var_2;
},
otcit_AliasDateTimeZone_getOffset = ($this, $instant) => {
    return $this.$innerZone.$getOffset($instant);
},
otcit_AliasDateTimeZone_getStandardOffset = ($this, $instant) => {
    return $this.$innerZone.$getStandardOffset($instant);
},
otcit_AliasDateTimeZone_asZoneRules = $this => {
    return $this.$innerZone.$asZoneRules();
},
otja_XMLHttpRequest = $rt_classWithoutFields();
function jt_Clock$SystemClock() {
    jt_Clock.call(this);
    this.$zone6 = null;
}
let jt_Clock$SystemClock__init_ = ($this, $zone) => {
    jt_Clock__init_($this);
    $this.$zone6 = $zone;
},
jt_Clock$SystemClock__init_0 = var_0 => {
    let var_1 = new jt_Clock$SystemClock();
    jt_Clock$SystemClock__init_(var_1, var_0);
    return var_1;
},
jt_Clock$SystemClock_millis = $this => {
    return jl_System_currentTimeMillis();
},
jt_Clock$SystemClock_instant = $this => {
    return jt_Instant_ofEpochMilli(jt_Clock$SystemClock_millis($this));
},
otji_JSWrapper$JSTransparentInt = $rt_classWithoutFields();
function otcit_DateTimeZoneBuilder() {
    jl_Object.call(this);
    this.$iRuleSets = null;
}
let otcit_DateTimeZoneBuilder_gmtCache = null,
otcit_DateTimeZoneBuilder_buildFixedZone = ($id, $wallOffset, $standardOffset) => {
    return otcit_FixedDateTimeZone__init_($id, $wallOffset, $standardOffset);
},
otcit_DateTimeZoneBuilder__init_ = $this => {
    jl_Object__init_($this);
    $this.$iRuleSets = ju_ArrayList__init_1(10);
},
otcit_DateTimeZoneBuilder__init_0 = () => {
    let var_0 = new otcit_DateTimeZoneBuilder();
    otcit_DateTimeZoneBuilder__init_(var_0);
    return var_0;
},
otcit_DateTimeZoneBuilder_getGMT = () => {
    if (otcit_DateTimeZoneBuilder_gmtCache === null)
        otcit_DateTimeZoneBuilder_gmtCache = ju_TimeZone_getTimeZone($rt_s(1422));
    return otcit_DateTimeZoneBuilder_gmtCache;
},
otcit_DateTimeZoneBuilder_toDateTimeZone = ($this, $id, $outputID) => {
    let $transitions, $tailZone, $millis, $ruleSetCount, $calendar, $i, $rs, $next, var$11, var$12, var$13, var$14, $tr, $zone;
    if ($id === null)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $transitions = ju_ArrayList__init_();
    $tailZone = null;
    $millis = Long_create(0, 2147483648);
    $ruleSetCount = $this.$iRuleSets.$size();
    $calendar = ju_GregorianCalendar__init_0(otcit_DateTimeZoneBuilder_getGMT());
    $i = 0;
    while ($i < $ruleSetCount) {
        $rs = $this.$iRuleSets.$get($i);
        $next = otcit_DateTimeZoneBuilder$RuleSet_firstTransition($rs, $millis, $calendar);
        if ($next !== null) {
            otcit_DateTimeZoneBuilder_addTransition($this, $transitions, $next);
            var$11 = otcit_DateTimeZoneBuilder$Transition_getMillis($next);
            var$12 = otcit_DateTimeZoneBuilder$Transition_getSaveMillis($next);
            var$13 = otcit_DateTimeZoneBuilder$RuleSet__init_2($rs);
            a: {
                while (true) {
                    var$14 = otcit_DateTimeZoneBuilder$RuleSet_nextTransition(var$13, var$11, var$12, $calendar);
                    if (var$14 === null)
                        break a;
                    if (otcit_DateTimeZoneBuilder_addTransition($this, $transitions, var$14) && $tailZone !== null)
                        break;
                    var$11 = otcit_DateTimeZoneBuilder$Transition_getMillis(var$14);
                    var$12 = otcit_DateTimeZoneBuilder$Transition_getSaveMillis(var$14);
                    if ($tailZone !== null)
                        continue;
                    if ($i != ($ruleSetCount - 1 | 0))
                        continue;
                    $tailZone = otcit_DateTimeZoneBuilder$RuleSet_buildTailZone(var$13, $id);
                }
            }
            $millis = otcit_DateTimeZoneBuilder$RuleSet_getUpperLimit(var$13, var$12);
        }
        $i = $i + 1 | 0;
    }
    if (!$transitions.$size()) {
        if ($tailZone !== null)
            return $tailZone;
        return otcit_DateTimeZoneBuilder_buildFixedZone($id, 0, 0);
    }
    if ($transitions.$size() == 1 && $tailZone === null) {
        $tr = $transitions.$get(0);
        return otcit_DateTimeZoneBuilder_buildFixedZone($id, otcit_DateTimeZoneBuilder$Transition_getWallOffset($tr), otcit_DateTimeZoneBuilder$Transition_getStandardOffset($tr));
    }
    $zone = otcit_DateTimeZoneBuilder$PrecalculatedZone_create($id, $outputID, $transitions, $tailZone);
    if (!otcit_DateTimeZoneBuilder$PrecalculatedZone_isCachable($zone))
        return $zone;
    return otcit_CachedDateTimeZone_forZone($zone);
},
otcit_DateTimeZoneBuilder_addTransition = ($this, $transitions, $tr) => {
    let $size, var$4, $last, $offsetForLast, $offsetForNew, $lastLocal, $newLocal;
    $size = $transitions.$size();
    if (!$size) {
        $transitions.$add1($tr);
        return 1;
    }
    var$4 = $size - 1 | 0;
    $last = $transitions.$get(var$4);
    if (!otcit_DateTimeZoneBuilder$Transition_isTransitionFrom($tr, $last))
        return 0;
    $offsetForLast = 0;
    if ($size >= 2)
        $offsetForLast = otcit_DateTimeZoneBuilder$Transition_getWallOffset($transitions.$get($size - 2 | 0));
    $offsetForNew = otcit_DateTimeZoneBuilder$Transition_getWallOffset($last);
    $lastLocal = Long_add(otcit_DateTimeZoneBuilder$Transition_getMillis($last), Long_fromInt($offsetForLast));
    $newLocal = Long_add(otcit_DateTimeZoneBuilder$Transition_getMillis($tr), Long_fromInt($offsetForNew));
    if (Long_eq($newLocal, $lastLocal)) {
        $transitions.$remove0(var$4);
        return otcit_DateTimeZoneBuilder_addTransition($this, $transitions, $tr);
    }
    $transitions.$add1($tr);
    return 1;
};
function onnk_NostrKeyPair() {
    let a = this; jl_Object.call(a);
    a.$publicKey = null;
    a.$privateKey = null;
}
let onnk_NostrKeyPair__init_ = ($this, $privateKey, $publicKey) => {
    jl_Object__init_($this);
    $this.$publicKey = $publicKey;
    $this.$privateKey = $privateKey;
},
onnk_NostrKeyPair__init_3 = (var_0, var_1) => {
    let var_2 = new onnk_NostrKeyPair();
    onnk_NostrKeyPair__init_(var_2, var_0, var_1);
    return var_2;
},
onnk_NostrKeyPair__init_1 = ($this, $privateKey) => {
    onnk_NostrKeyPair__init_($this, $privateKey, onnk_NostrPrivateKey_getPublicKey($privateKey));
},
onnk_NostrKeyPair__init_4 = var_0 => {
    let var_1 = new onnk_NostrKeyPair();
    onnk_NostrKeyPair__init_1(var_1, var_0);
    return var_1;
},
onnk_NostrKeyPair__init_2 = $this => {
    let $privateKey;
    jl_Object__init_($this);
    $privateKey = onnk_NostrPrivateKey_generate();
    $this.$publicKey = onnk_NostrPrivateKey_getPublicKey($privateKey);
    $this.$privateKey = $privateKey;
},
onnk_NostrKeyPair__init_0 = () => {
    let var_0 = new onnk_NostrKeyPair();
    onnk_NostrKeyPair__init_2(var_0);
    return var_0;
},
onnk_NostrKeyPair_getPublicKey = $this => {
    return $this.$publicKey;
},
onnk_NostrKeyPair_getPrivateKey = $this => {
    return $this.$privateKey;
},
onnk_NostrKeyPair_clone = $this => {
    let var$1, $$je;
    a: {
        try {
            var$1 = onnk_NostrKeyPair__init_3(onnk_NostrPrivateKey_clone($this.$privateKey), onnk_NostrPublicKey_clone($this.$publicKey));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(jl_CloneNotSupportedException__init_());
},
onnk_NostrKeyPair_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$publicKey);
    var$2 = jl_String_valueOf($this.$privateKey);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(1423)), var$1), $rt_s(1424)), var$2), 125);
    return jl_StringBuilder_toString(var$3);
},
onnk_NostrKeyPair_equals = ($this, $obj) => {
    let $other;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if ($this.$publicKey !== $other.$publicKey && !($this.$publicKey !== null && onnk_NostrPublicKey_equals($this.$publicKey, $other.$publicKey)))
        return 0;
    a: {
        if ($this.$privateKey !== $other.$privateKey) {
            if ($this.$privateKey === null)
                break a;
            if (!onnk_NostrPrivateKey_equals($this.$privateKey, $other.$privateKey))
                break a;
        }
        return 1;
    }
    return 0;
},
onnk_NostrKeyPair_hashCode = $this => {
    let var$1;
    var$1 = 623 + ($this.$publicKey === null ? 0 : onnk_NostrPublicKey_hashCode($this.$publicKey)) | 0;
    var$1 = (89 * var$1 | 0) + ($this.$privateKey === null ? 0 : onnk_NostrPrivateKey_hashCode($this.$privateKey)) | 0;
    return var$1;
},
onnk_NostrKeyPair_clone0 = $this => {
    return onnk_NostrKeyPair_clone($this);
},
onnk_NostrKeyPair__init_$exported$0 = () => {
    return onnk_NostrKeyPair__init_0();
},
onnk_NostrKeyPair_clone$exported$1 = var$1 => {
    return onnk_NostrKeyPair_clone(var$1);
},
onnk_NostrKeyPair__init_$exported$2 = (var$1, var$2) => {
    return onnk_NostrKeyPair__init_3(var$1, var$2);
},
onnk_NostrKeyPair__init_$exported$3 = var$1 => {
    return onnk_NostrKeyPair__init_4(var$1);
},
onnk_NostrKeyPair_getPrivateKey$exported$4 = var$1 => {
    return onnk_NostrKeyPair_getPrivateKey(var$1);
},
onnk_NostrKeyPair_toString$exported$5 = var$1 => {
    return $rt_ustr(onnk_NostrKeyPair_toString(var$1));
},
onnk_NostrKeyPair_equals$exported$6 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onnk_NostrKeyPair_equals(var$1, var$2);
},
onnk_NostrKeyPair_getPublicKey$exported$7 = var$1 => {
    return onnk_NostrKeyPair_getPublicKey(var$1);
},
onnk_NostrKeyPair_hashCode$exported$8 = var$1 => {
    return onnk_NostrKeyPair_hashCode(var$1);
},
onnk_NostrKeyPair_clone$exported$9 = var$1 => {
    return otji_JSWrapper_javaToJs(onnk_NostrKeyPair_clone0(var$1));
},
jl_System = $rt_classWithoutFields(),
jl_System_errCache = null,
jl_System_err = () => {
    if (jl_System_errCache === null)
        jl_System_errCache = otcic_JSStderrPrintStream__init_0();
    return jl_System_errCache;
},
jl_System_arraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    let var$6, $srcType, $targetType, $srcArray, $i, var$11, var$12, $elem;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
            var$6 = $destPos + $length | 0;
            if (var$6 <= jlr_Array_getLength($dest)) {
                a: {
                    b: {
                        if ($src !== $dest) {
                            $srcType = jl_Class_getComponentType(jl_Object_getClass($src));
                            $targetType = jl_Class_getComponentType(jl_Object_getClass($dest));
                            if ($srcType !== null && $targetType !== null) {
                                if ($srcType === $targetType)
                                    break b;
                                if (!jl_Class_isPrimitive($srcType) && !jl_Class_isPrimitive($targetType)) {
                                    $srcArray = $src;
                                    $i = 0;
                                    var$6 = $srcPos;
                                    while ($i < $length) {
                                        var$11 = $srcArray.data;
                                        var$12 = var$6 + 1 | 0;
                                        $elem = var$11[var$6];
                                        if (!jl_Class_isInstance($targetType, $elem)) {
                                            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                            $rt_throw(jl_ArrayStoreException__init_());
                                        }
                                        $i = $i + 1 | 0;
                                        var$6 = var$12;
                                    }
                                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                    return;
                                }
                                if (!jl_Class_isPrimitive($srcType))
                                    break a;
                                if (jl_Class_isPrimitive($targetType))
                                    break b;
                                else
                                    break a;
                            }
                            $rt_throw(jl_ArrayStoreException__init_());
                        }
                    }
                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                    return;
                }
                $rt_throw(jl_ArrayStoreException__init_());
            }
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_NullPointerException__init_0($rt_s(1425)));
},
jl_System_fastArraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    let var$6;
    if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
        var$6 = $destPos + $length | 0;
        if (var$6 <= jlr_Array_getLength($dest)) {
            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
            return;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_System_doArrayCopy = (var$1, var$2, var$3, var$4, var$5) => {
    if (var$5 !== 0) {
        if (typeof var$1.data.buffer !== 'undefined') {
            var$3.data.set(var$1.data.subarray(var$2, var$2 + var$5), var$4);
        } else if (var$1 !== var$3 || var$4 < var$2) {
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[var$4++] = var$1.data[var$2++];
            }
        } else {
            var$2 = var$2 + var$5 | 0;
            var$4 = var$4 + var$5 | 0;
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[ --var$4] = var$1.data[ --var$2];
            }
        }
    }
},
jl_System_currentTimeMillis = () => {
    return Long_fromNumber((new Date()).getTime());
},
jt_DayOfWeek$1 = $rt_classWithoutFields(),
jt_DayOfWeek$1__init_ = $this => {
    jl_Object__init_($this);
},
jt_DayOfWeek$1__init_0 = () => {
    let var_0 = new jt_DayOfWeek$1();
    jt_DayOfWeek$1__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyXDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyXDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyXDigit_computeValue = $this => {
    return (((jur_CharClass__init_()).$add0(48, 57)).$add0(97, 102)).$add0(65, 70);
},
onns_NostrNIP46Signer$connect$lambda$_5_0 = $rt_classWithoutFields(),
onns_NostrNIP46Signer$connect$lambda$_5_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onns_NostrNIP46Signer$connect$lambda$_5_0__init_0 = () => {
    let var_0 = new onns_NostrNIP46Signer$connect$lambda$_5_0();
    onns_NostrNIP46Signer$connect$lambda$_5_0__init_(var_0);
    return var_0;
},
onns_NostrNIP46Signer$connect$lambda$_5_0_accept0 = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer$connect$lambda$_5_0_accept(var$0, var$1, var$2);
},
onns_NostrNIP46Signer$connect$lambda$_5_0_accept = (var$0, var$1, var$2) => {
    onns_NostrNIP46Signer_lambda$connect$2(var$1, var$2);
};
function onns_NostrNIP46Signer$connect$lambda$_5_1() {
    let a = this; jl_Object.call(a);
    a.$_075 = null;
    a.$_143 = null;
}
let onns_NostrNIP46Signer$connect$lambda$_5_1__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_075 = var$1;
    var$0.$_143 = var$2;
},
onns_NostrNIP46Signer$connect$lambda$_5_1__init_0 = (var_0, var_1) => {
    let var_2 = new onns_NostrNIP46Signer$connect$lambda$_5_1();
    onns_NostrNIP46Signer$connect$lambda$_5_1__init_(var_2, var_0, var_1);
    return var_2;
},
onns_NostrNIP46Signer$connect$lambda$_5_1_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$connect$lambda$_5_1_apply(var$0, var$1);
},
onns_NostrNIP46Signer$connect$lambda$_5_1_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$connect$3(var$0.$_075, var$0.$_143, var$1);
};
function ju_LinkedList$Entry() {
    let a = this; jl_Object.call(a);
    a.$item = null;
    a.$next8 = null;
    a.$previous0 = null;
}
let ju_LinkedList$Entry__init_ = $this => {
    jl_Object__init_($this);
},
ju_LinkedList$Entry__init_0 = () => {
    let var_0 = new ju_LinkedList$Entry();
    ju_LinkedList$Entry__init_(var_0);
    return var_0;
};
function jur_Matcher() {
    let a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start6 = null;
    a.$string1 = null;
    a.$matchResult = null;
    a.$leftBound = 0;
    a.$rightBound = 0;
}
let jur_Matcher_find = ($this, $start) => {
    let $stringLength, var$3;
    $stringLength = $this.$string1.$length();
    if ($start >= 0 && $start <= $stringLength) {
        var$3 = jur_Matcher_findAt($this, $start);
        if (var$3 >= 0 && $this.$matchResult.$isValid()) {
            $this.$matchResult.$finalizeMatch();
            return 1;
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_2(jl_String_valueOf0($start)));
},
jur_Matcher_findAt = ($this, $startIndex) => {
    let $foundIndex;
    $this.$matchResult.$reset();
    $this.$matchResult.$setMode(1);
    $this.$matchResult.$setStartIndex($startIndex);
    $foundIndex = $this.$start6.$find($startIndex, $this.$string1, $this.$matchResult);
    if ($foundIndex == (-1))
        $this.$matchResult.$hitEnd = 1;
    return $foundIndex;
},
jur_Matcher_find0 = $this => {
    let $length, var$2;
    $length = $this.$string1.$length();
    if (!jur_Matcher_hasTransparentBounds($this))
        $length = $this.$rightBound;
    if ($this.$matchResult.$startIndex >= 0 && $this.$matchResult.$mode() == 1) {
        $this.$matchResult.$startIndex = $this.$matchResult.$end0();
        if ($this.$matchResult.$end0() == $this.$matchResult.$start3()) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        return $this.$matchResult.$startIndex <= $length && jur_Matcher_find($this, $this.$matchResult.$startIndex) ? 1 : 0;
    }
    return jur_Matcher_find($this, $this.$leftBound);
},
jur_Matcher_start0 = ($this, $group) => {
    return $this.$matchResult.$start($group);
},
jur_Matcher_end = ($this, $group) => {
    return $this.$matchResult.$end($group);
},
jur_Matcher_matches = $this => {
    return jur_Matcher_lookingAt($this, $this.$leftBound, 2);
},
jur_Matcher_runMatch = ($this, $set, $index, $matchResult) => {
    if ($set.$matches($index, $this.$string1, $matchResult) < 0)
        return 0;
    $matchResult.$finalizeMatch();
    return 1;
},
jur_Matcher_lookingAt = ($this, $startIndex, $mode) => {
    $this.$matchResult.$reset();
    $this.$matchResult.$setMode($mode);
    $this.$matchResult.$setStartIndex($startIndex);
    return jur_Matcher_runMatch($this, $this.$start6, $startIndex, $this.$matchResult);
},
jur_Matcher_start = $this => {
    return jur_Matcher_start0($this, 0);
},
jur_Matcher_end0 = $this => {
    return jur_Matcher_end($this, 0);
},
jur_Matcher_hasTransparentBounds = $this => {
    return $this.$matchResult.$hasTransparentBounds();
},
jur_Matcher__init_ = ($this, $pat, $cs) => {
    let var$3, var$4, var$5, var$6, var$7;
    jl_Object__init_($this);
    $this.$leftBound = (-1);
    $this.$rightBound = (-1);
    $this.$pat = $pat;
    $this.$start6 = $pat.$start4;
    $this.$string1 = $cs;
    $this.$leftBound = 0;
    $this.$rightBound = $this.$string1.$length();
    var$3 = new jur_MatchResultImpl;
    var$4 = $this.$leftBound;
    var$5 = $this.$rightBound;
    var$6 = jur_Pattern_groupCount($pat);
    var$7 = jur_Pattern_compCount($pat);
    jur_MatchResultImpl__init_(var$3, $cs, var$4, var$5, var$6, var$7, jur_Pattern_consCount($pat));
    $this.$matchResult = var$3;
    $this.$matchResult.$useAnchoringBounds(1);
},
jur_Matcher__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Matcher();
    jur_Matcher__init_(var_2, var_0, var_1);
    return var_2;
};
function onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_038 = null;
    a.$_121 = null;
    a.$_210 = null;
}
let onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_038 = var$1;
    var$0.$_121 = var$2;
    var$0.$_210 = var$3;
},
onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0();
    onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0_onTimer = var$0 => {
    onpt_TeaVMPlatform$2_lambda$run$0(var$0.$_038, var$0.$_121, var$0.$_210);
},
onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0_onTimer$exported$0 = var$1 => {
    var$1.$onTimer();
},
jur_DotAllSet = $rt_classWithoutFields(jur_JointSet),
jur_DotAllSet__init_ = $this => {
    jur_JointSet__init_($this);
},
jur_DotAllSet__init_0 = () => {
    let var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_(var_0);
    return var_0;
},
jur_DotAllSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$next5.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$next5.$matches(var$5, $testString, $matchResult);
},
jur_DotAllSet_getName = $this => {
    return $rt_s(1426);
},
jur_DotAllSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_DotAllSet_getType = $this => {
    return (-2147483602);
},
jur_DotAllSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function onpt_TeaVMPlatform$verifyAsync$lambda$_26_0() {
    let a = this; jl_Object.call(a);
    a.$_0120 = null;
    a.$_164 = null;
    a.$_233 = null;
    a.$_311 = null;
}
let onpt_TeaVMPlatform$verifyAsync$lambda$_26_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_0120 = var$1;
    var$0.$_164 = var$2;
    var$0.$_233 = var$3;
    var$0.$_311 = var$4;
},
onpt_TeaVMPlatform$verifyAsync$lambda$_26_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onpt_TeaVMPlatform$verifyAsync$lambda$_26_0();
    onpt_TeaVMPlatform$verifyAsync$lambda$_26_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onpt_TeaVMPlatform$verifyAsync$lambda$_26_0_accept0 = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform$verifyAsync$lambda$_26_0_accept(var$0, var$1, var$2);
},
onpt_TeaVMPlatform$verifyAsync$lambda$_26_0_accept = (var$0, var$1, var$2) => {
    onpt_TeaVMPlatform_lambda$verifyAsync$4(var$0.$_0120, var$0.$_164, var$0.$_233, var$0.$_311, var$1, var$2);
},
jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUpperCase__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUpperCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUpperCase_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUpperCase$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function jur_HangulDecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$decomposedChar = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength = 0;
}
let jur_HangulDecomposedCharSet__init_ = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_JointSet__init_($this);
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
},
jur_HangulDecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_HangulDecomposedCharSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_HangulDecomposedCharSet_getDecomposedChar = $this => {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_($this.$decomposedChar);
    return $this.$decomposedCharUTF160;
},
jur_HangulDecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_HangulDecomposedCharSet_getDecomposedChar($this);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1427)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_HangulDecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, $syllIndex, $decompSyllable, $vIndex, $tIndex, var$9, $curSymb, $decompCurSymb, var$12, $i, var$14, $lIndex, var$16, var$17;
    $rightBound = $matchResult.$getRightBound();
    $syllIndex = 0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$9 = $strIndex + 1 | 0;
    $curSymb = $testString.$charAt($strIndex);
    $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
    if ($decompCurSymb !== null) {
        var$12 = $decompCurSymb.data;
        $i = 0;
        if (var$12.length != $this.$decomposedCharLength)
            return (-1);
        while (true) {
            if ($i >= $this.$decomposedCharLength)
                return $this.$next5.$matches(var$9, $testString, $matchResult);
            if (var$12[$i] != $this.$decomposedChar.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var$14 = $decompSyllable.data;
    var$14[$syllIndex] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$9 < $rightBound) {
            $curSymb = $testString.$charAt(var$9);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            var$16 = var$9 + 1 | 0;
            var$14[1] = $curSymb;
            if (var$16 < $rightBound) {
                $curSymb = $testString.$charAt(var$16);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                var$17 = var$16 + 1 | 0;
                var$14[2] = $curSymb;
                var$17 = $this.$decomposedCharLength == 3 && var$14[0] == $this.$decomposedChar.data[0] && var$14[1] == $this.$decomposedChar.data[1] && var$14[2] == $this.$decomposedChar.data[2] ? $this.$next5.$matches(var$17, $testString, $matchResult) : (-1);
                return var$17;
            }
            var$17 = $this.$decomposedCharLength == 2 && var$14[0] == $this.$decomposedChar.data[0] && var$14[1] == $this.$decomposedChar.data[1] ? $this.$next5.$matches(var$16, $testString, $matchResult) : (-1);
            return var$17;
        }
        return (-1);
    }
    return (-1);
},
jur_HangulDecomposedCharSet_first = ($this, $set) => {
    let var$2, var$3;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            var$2 = $set;
            if (!(jur_HangulDecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_HangulDecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
},
jur_HangulDecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function onn_NostrPool$sendMessage$lambda$_8_0() {
    let a = this; jl_Object.call(a);
    a.$_033 = null;
    a.$_119 = null;
}
let onn_NostrPool$sendMessage$lambda$_8_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_033 = var$1;
    var$0.$_119 = var$2;
},
onn_NostrPool$sendMessage$lambda$_8_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$sendMessage$lambda$_8_0();
    onn_NostrPool$sendMessage$lambda$_8_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$sendMessage$lambda$_8_0_run = var$0 => {
    onn_NostrPool_lambda$sendMessage$0(var$0.$_033, var$0.$_119);
};
function onn_NostrPool$sendMessage$lambda$_8_1() {
    let a = this; jl_Object.call(a);
    a.$_067 = null;
    a.$_136 = null;
    a.$_216 = null;
}
let onn_NostrPool$sendMessage$lambda$_8_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_067 = var$1;
    var$0.$_136 = var$2;
    var$0.$_216 = var$3;
},
onn_NostrPool$sendMessage$lambda$_8_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onn_NostrPool$sendMessage$lambda$_8_1();
    onn_NostrPool$sendMessage$lambda$_8_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onn_NostrPool$sendMessage$lambda$_8_1_accept0 = (var$0, var$1, var$2) => {
    onn_NostrPool$sendMessage$lambda$_8_1_accept(var$0, var$1, var$2);
},
onn_NostrPool$sendMessage$lambda$_8_1_accept = (var$0, var$1, var$2) => {
    onn_NostrPool_lambda$sendMessage$2(var$0.$_067, var$0.$_136, var$0.$_216, var$1, var$2);
};
function onn_NostrPool$lambda$subscribe$7$lambda$_50_0() {
    let a = this; jl_Object.call(a);
    a.$_061 = null;
    a.$_133 = null;
}
let onn_NostrPool$lambda$subscribe$7$lambda$_50_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_061 = var$1;
    var$0.$_133 = var$2;
},
onn_NostrPool$lambda$subscribe$7$lambda$_50_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$lambda$subscribe$7$lambda$_50_0();
    onn_NostrPool$lambda$subscribe$7$lambda$_50_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$lambda$subscribe$7$lambda$_50_0_run = var$0 => {
    onn_NostrPool_lambda$subscribe$6(var$0.$_061, var$0.$_133);
};
function onn_NostrPool$lambda$subscribe$5$lambda$_52_0() {
    jl_Object.call(this);
    this.$_0182 = null;
}
let onn_NostrPool$lambda$subscribe$5$lambda$_52_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0182 = var$1;
},
onn_NostrPool$lambda$subscribe$5$lambda$_52_0__init_0 = var_0 => {
    let var_1 = new onn_NostrPool$lambda$subscribe$5$lambda$_52_0();
    onn_NostrPool$lambda$subscribe$5$lambda$_52_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrPool$lambda$subscribe$5$lambda$_52_0_run = var$0 => {
    onn_NostrPool_lambda$subscribe$4(var$0.$_0182);
};
function onnk_NostrPublicKey() {
    let a = this; jl_Object.call(a);
    a.$bech32 = null;
    a.$hex0 = null;
    a.$readOnlyData = null;
    a.$data1 = null;
    a.$array5 = null;
    a.$hashCode9 = null;
}
let onnk_NostrPublicKey_BECH32_PREFIX = null,
onnk_NostrPublicKey_$assertionsDisabled = 0,
onnk_NostrPublicKey_$callClinit = () => {
    onnk_NostrPublicKey_$callClinit = $rt_eraseClinit(onnk_NostrPublicKey);
    onnk_NostrPublicKey__clinit_();
},
onnk_NostrPublicKey_fromBytes0 = $data => {
    let $bbf;
    onnk_NostrPublicKey_$callClinit();
    $bbf = jn_ByteBuffer_allocate($data.data.length);
    jn_ByteBuffer_put($bbf, $data);
    jn_ByteBuffer_rewind($bbf);
    return onnk_NostrPublicKey__init_($bbf);
},
onnk_NostrPublicKey_fromBytes = $bbf => {
    let $copy;
    onnk_NostrPublicKey_$callClinit();
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_remaining($bbf) <= 0)
        $rt_throw(jl_AssertionError__init_0($rt_s(382)));
    $copy = jn_ByteBuffer_allocate(jn_Buffer_remaining($bbf));
    $copy.$put3($bbf.$slice());
    jn_ByteBuffer_rewind($copy);
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($bbf))
        $rt_throw(jl_AssertionError__init_0($rt_s(1428)));
    return onnk_NostrPublicKey__init_($copy);
},
onnk_NostrPublicKey_fromHex = $hex => {
    let $key;
    onnk_NostrPublicKey_$callClinit();
    $key = onnk_NostrPublicKey__init_(onp_NGEUtils_hexToBytes($hex));
    return $key;
},
onnk_NostrPublicKey_fromNpub = $bech32 => {
    onnk_NostrPublicKey_$callClinit();
    return onnk_NostrPublicKey_fromBech32($bech32);
},
onnk_NostrPublicKey_fromBech32 = $bech32 => {
    let $data, $key, $e, $$je;
    onnk_NostrPublicKey_$callClinit();
    a: {
        try {
            if (!$bech32.$startsWith($rt_s(917)))
                $rt_throw(jl_IllegalArgumentException__init_($rt_s(385)));
            $data = onnu_Bech32_bech32Decode($bech32);
            $key = onnk_NostrPublicKey__init_($data);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $key;
    }
    $rt_throw(jl_IllegalArgumentException__init_3($rt_s(385), $e));
},
onnk_NostrPublicKey__init_0 = ($this, $data) => {
    onnk_NostrPublicKey_$callClinit();
    jl_Object__init_($this);
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($data))
        $rt_throw(jl_AssertionError__init_0($rt_s(1429)));
    if (jn_Buffer_remaining($data) == 32) {
        $this.$data1 = $data;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1430)));
},
onnk_NostrPublicKey__init_ = var_0 => {
    let var_1 = new onnk_NostrPublicKey();
    onnk_NostrPublicKey__init_0(var_1, var_0);
    return var_1;
},
onnk_NostrPublicKey_asReadOnlyBytes = $this => {
    if ($this.$readOnlyData !== null)
        return $this.$readOnlyData;
    $this.$readOnlyData = ju_Collections_unmodifiableList(onnu_ByteBufferList__init_($this.$data1));
    onnk_NostrPublicKey_$callClinit();
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$readOnlyData;
},
onnk_NostrPublicKey_asHex = $this => {
    if ($this.$hex0 !== null)
        return $this.$hex0;
    $this.$hex0 = onp_NGEUtils_bytesToHex0($this.$data1);
    onnk_NostrPublicKey_$callClinit();
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$hex0;
},
onnk_NostrPublicKey__array = $this => {
    if ($this.$array5 === null) {
        $this.$array5 = $rt_createByteArray(jn_Buffer_limit($this.$data1));
        ($this.$data1.$slice()).$get5($this.$array5);
    }
    onnk_NostrPublicKey_$callClinit();
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$array5;
},
onnk_NostrPublicKey_asBech32 = $this => {
    let var$1, $e, $$je;
    a: {
        b: {
            try {
                if ($this.$bech32 === null)
                    break b;
                var$1 = $this.$bech32;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        c: {
            try {
                onnk_NostrPublicKey_$callClinit();
                $this.$bech32 = onnu_Bech32_bech32Encode(onnk_NostrPublicKey_BECH32_PREFIX, $this.$data1);
                if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
                    break c;
                var$1 = $this.$bech32;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        try {
            $rt_throw(jl_AssertionError__init_0($rt_s(383)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
    }
    $rt_throw(jl_IllegalArgumentException__init_3($rt_s(385), $e));
},
onnk_NostrPublicKey_toString = $this => {
    return onnk_NostrPublicKey_asHex($this);
},
onnk_NostrPublicKey_equals = ($this, $obj) => {
    let $b1, $b2, $i;
    if ($obj !== null && $obj instanceof onnk_NostrPublicKey) {
        if ($obj === $this) {
            onnk_NostrPublicKey_$callClinit();
            if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
                $rt_throw(jl_AssertionError__init_0($rt_s(383)));
            return 1;
        }
        $b1 = $this.$data1;
        $b2 = $obj.$data1;
        if ($b1 !== null && $b2 !== null) {
            if ($b1 === $b2) {
                onnk_NostrPublicKey_$callClinit();
                if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
                    $rt_throw(jl_AssertionError__init_0($rt_s(383)));
                return 1;
            }
            if (jn_Buffer_limit($b1) != jn_Buffer_limit($b2)) {
                onnk_NostrPublicKey_$callClinit();
                if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
                    $rt_throw(jl_AssertionError__init_0($rt_s(383)));
                return 0;
            }
            $i = 0;
            while ($i < jn_Buffer_limit($b1)) {
                if ($b1.$get6($i) != $b2.$get6($i)) {
                    onnk_NostrPublicKey_$callClinit();
                    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
                        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
                    return 0;
                }
                $i = $i + 1 | 0;
            }
            onnk_NostrPublicKey_$callClinit();
            if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
                $rt_throw(jl_AssertionError__init_0($rt_s(383)));
            return 1;
        }
        return 0;
    }
    onnk_NostrPublicKey_$callClinit();
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return 0;
},
onnk_NostrPublicKey_hashCode = $this => {
    if ($this.$hashCode9 !== null)
        return $this.$hashCode9.$intValue();
    if ($this.$data1 === null)
        return 0;
    $this.$hashCode9 = jl_Integer_valueOf($this.$data1.$hashCode());
    onnk_NostrPublicKey_$callClinit();
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
    return $this.$hashCode9.$intValue();
},
onnk_NostrPublicKey_clone = $this => {
    return onnk_NostrPublicKey_fromBytes($this.$data1);
},
onnk_NostrPublicKey_preload = $this => {
    onnk_NostrPublicKey_asHex($this);
    onnk_NostrPublicKey_asBech32($this);
    onnk_NostrPublicKey_asReadOnlyBytes($this);
    onnk_NostrPublicKey__array($this);
    if (!onnk_NostrPublicKey_$assertionsDisabled && jn_Buffer_position($this.$data1))
        $rt_throw(jl_AssertionError__init_0($rt_s(383)));
},
onnk_NostrPublicKey_clone0 = $this => {
    return onnk_NostrPublicKey_clone($this);
},
onnk_NostrPublicKey__clinit_ = () => {
    onnk_NostrPublicKey_$assertionsDisabled = jl_Class_desiredAssertionStatus($rt_cls(onnk_NostrPublicKey)) ? 0 : 1;
    jnc_StandardCharsets_$callClinit();
    onnk_NostrPublicKey_BECH32_PREFIX = $rt_s(917).$getBytes(jnc_StandardCharsets_UTF_8);
},
onnk_NostrPublicKey_preload$exported$0 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    onnk_NostrPublicKey_preload(var$1);
},
onnk_NostrPublicKey_toString$exported$1 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return $rt_ustr(onnk_NostrPublicKey_toString(var$1));
},
onnk_NostrPublicKey_equals$exported$2 = (var$1, var$2) => {
    onnk_NostrPublicKey_$callClinit();
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!onnk_NostrPublicKey_equals(var$1, var$2);
},
onnk_NostrPublicKey_clone$exported$3 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return onnk_NostrPublicKey_clone(var$1);
},
onnk_NostrPublicKey__init_$exported$4 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return onnk_NostrPublicKey__init_(var$1);
},
onnk_NostrPublicKey_asHex$exported$5 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return $rt_ustr(onnk_NostrPublicKey_asHex(var$1));
},
onnk_NostrPublicKey_asBech32$exported$6 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return $rt_ustr(onnk_NostrPublicKey_asBech32(var$1));
},
onnk_NostrPublicKey_hashCode$exported$7 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return onnk_NostrPublicKey_hashCode(var$1);
},
onnk_NostrPublicKey_asReadOnlyBytes$exported$8 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return onnk_NostrPublicKey_asReadOnlyBytes(var$1);
},
onnk_NostrPublicKey__array$exported$9 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return otji_JS_wrap0(onnk_NostrPublicKey__array(var$1));
},
onnk_NostrPublicKey_clone$exported$10 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    return otji_JSWrapper_javaToJs(onnk_NostrPublicKey_clone0(var$1));
},
onnk_NostrPublicKey_fromBytes$exported$0 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPublicKey_fromBytes0(otji_JS_unwrapByteArray(var$1));
},
onnk_NostrPublicKey_fromBytes$exported$1 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPublicKey_fromBytes(var$1);
},
onnk_NostrPublicKey_fromHex$exported$2 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPublicKey_fromHex($rt_str(var$1));
},
onnk_NostrPublicKey_fromNpub$exported$3 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPublicKey_fromNpub($rt_str(var$1));
},
onnk_NostrPublicKey_fromBech32$exported$4 = var$1 => {
    onnk_NostrPublicKey_$callClinit();
    onn_Nostr4jsModule_$callClinit();
    return onnk_NostrPublicKey_fromBech32($rt_str(var$1));
};
function onpt_TeaVMPlatform$promisify$lambda$_19_0() {
    jl_Object.call(this);
    this.$_095 = null;
}
let onpt_TeaVMPlatform$promisify$lambda$_19_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_095 = var$1;
},
onpt_TeaVMPlatform$promisify$lambda$_19_0__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$promisify$lambda$_19_0();
    onpt_TeaVMPlatform$promisify$lambda$_19_0__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$promisify$lambda$_19_0_accept = (var$0, var$1) => {
    var$0.$_095.$resolve1(var$1);
};
function onpt_TeaVMPlatform$promisify$lambda$_19_1() {
    jl_Object.call(this);
    this.$_0140 = null;
}
let onpt_TeaVMPlatform$promisify$lambda$_19_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0140 = var$1;
},
onpt_TeaVMPlatform$promisify$lambda$_19_1__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$promisify$lambda$_19_1();
    onpt_TeaVMPlatform$promisify$lambda$_19_1__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$promisify$lambda$_19_1_accept0 = (var$0, var$1) => {
    onpt_TeaVMPlatform$promisify$lambda$_19_1_accept(var$0, var$1);
},
onpt_TeaVMPlatform$promisify$lambda$_19_1_accept = (var$0, var$1) => {
    var$0.$_0140.$reject(var$1);
},
otjc_JSDate = $rt_classWithoutFields(),
jlr_InvocationTargetException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function onn_NostrRelay$sendMessage$lambda$_18_0() {
    let a = this; jl_Object.call(a);
    a.$_0181 = null;
    a.$_189 = null;
}
let onn_NostrRelay$sendMessage$lambda$_18_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0181 = var$1;
    var$0.$_189 = var$2;
},
onn_NostrRelay$sendMessage$lambda$_18_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrRelay$sendMessage$lambda$_18_0();
    onn_NostrRelay$sendMessage$lambda$_18_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrRelay$sendMessage$lambda$_18_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$sendMessage$lambda$_18_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$sendMessage$lambda$_18_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$sendMessage$14(var$0.$_0181, var$0.$_189, var$1, var$2);
};
function ju_TemplateCollections$TwoElementsList() {
    let a = this; ju_TemplateCollections$AbstractImmutableList.call(a);
    a.$first0 = null;
    a.$second0 = null;
}
let ju_TemplateCollections$TwoElementsList__init_ = ($this, $first, $second) => {
    ju_TemplateCollections$AbstractImmutableList__init_($this);
    $this.$first0 = $first;
    $this.$second0 = $second;
},
ju_TemplateCollections$TwoElementsList__init_0 = (var_0, var_1) => {
    let var_2 = new ju_TemplateCollections$TwoElementsList();
    ju_TemplateCollections$TwoElementsList__init_(var_2, var_0, var_1);
    return var_2;
},
ju_TemplateCollections$TwoElementsList_size = $this => {
    return 2;
},
ju_TemplateCollections$TwoElementsList_get = ($this, $index) => {
    if (!$index)
        return $this.$first0;
    if ($index == 1)
        return $this.$second0;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jtt_IsoFields = $rt_classWithoutFields(),
jtt_IsoFields_DAY_OF_QUARTER = null,
jtt_IsoFields_QUARTER_OF_YEAR = null,
jtt_IsoFields_WEEK_OF_WEEK_BASED_YEAR = null,
jtt_IsoFields_WEEK_BASED_YEAR = null,
jtt_IsoFields_WEEK_BASED_YEARS = null,
jtt_IsoFields_QUARTER_YEARS = null,
jtt_IsoFields_$callClinit = () => {
    jtt_IsoFields_$callClinit = $rt_eraseClinit(jtt_IsoFields);
    jtt_IsoFields__clinit_();
},
jtt_IsoFields__clinit_ = () => {
    jtt_IsoFields$Field_$callClinit();
    jtt_IsoFields_DAY_OF_QUARTER = jtt_IsoFields$Field_DAY_OF_QUARTER;
    jtt_IsoFields_QUARTER_OF_YEAR = jtt_IsoFields$Field_QUARTER_OF_YEAR;
    jtt_IsoFields_WEEK_OF_WEEK_BASED_YEAR = jtt_IsoFields$Field_WEEK_OF_WEEK_BASED_YEAR;
    jtt_IsoFields_WEEK_BASED_YEAR = jtt_IsoFields$Field_WEEK_BASED_YEAR;
    jtt_IsoFields$Unit_$callClinit();
    jtt_IsoFields_WEEK_BASED_YEARS = jtt_IsoFields$Unit_WEEK_BASED_YEARS;
    jtt_IsoFields_QUARTER_YEARS = jtt_IsoFields$Unit_QUARTER_YEARS;
};
function onn_NostrRelay$onConnectionOpen$lambda$_22_0() {
    jl_Object.call(this);
    this.$_091 = null;
}
let onn_NostrRelay$onConnectionOpen$lambda$_22_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_091 = var$1;
},
onn_NostrRelay$onConnectionOpen$lambda$_22_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$onConnectionOpen$lambda$_22_0();
    onn_NostrRelay$onConnectionOpen$lambda$_22_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$onConnectionOpen$lambda$_22_0_accept0 = (var$0, var$1, var$2) => {
    onn_NostrRelay$onConnectionOpen$lambda$_22_0_accept(var$0, var$1, var$2);
},
onn_NostrRelay$onConnectionOpen$lambda$_22_0_accept = (var$0, var$1, var$2) => {
    onn_NostrRelay_lambda$onConnectionOpen$27(var$0.$_091, var$1, var$2);
};
function jusi_AnyMatchConsumer() {
    let a = this; jl_Object.call(a);
    a.$matched = 0;
    a.$predicate = null;
}
let jusi_AnyMatchConsumer__init_ = ($this, $predicate) => {
    jl_Object__init_($this);
    $this.$predicate = $predicate;
},
jusi_AnyMatchConsumer__init_0 = var_0 => {
    let var_1 = new jusi_AnyMatchConsumer();
    jusi_AnyMatchConsumer__init_(var_1, var_0);
    return var_1;
},
jusi_AnyMatchConsumer_test = ($this, $t) => {
    $this.$matched = $this.$predicate.$test0($t);
    return $this.$matched ? 0 : 1;
},
jm_Multiplication = $rt_classWithoutFields(),
jm_Multiplication_tenPows = null,
jm_Multiplication_fivePows = null,
jm_Multiplication_bigTenPows = null,
jm_Multiplication_bigFivePows = null,
jm_Multiplication_$callClinit = () => {
    jm_Multiplication_$callClinit = $rt_eraseClinit(jm_Multiplication);
    jm_Multiplication__clinit_();
},
jm_Multiplication_multiply = ($x, $y) => {
    jm_Multiplication_$callClinit();
    return jm_Multiplication_karatsuba($x, $y);
},
jm_Multiplication_karatsuba = ($op1, $op2) => {
    let var$3, $ndiv2, $upperOp1, $upperOp2, $lowerOp1, $lowerOp2, $upper, $lower, $middle, var$12;
    jm_Multiplication_$callClinit();
    if ($op2.$numberLength <= $op1.$numberLength) {
        var$3 = $op2;
        $op2 = $op1;
        $op1 = var$3;
    }
    if ($op1.$numberLength < 63)
        return jm_Multiplication_multiplyPAP($op2, $op1);
    $ndiv2 = ($op2.$numberLength & (-2)) << 4;
    $upperOp1 = $op2.$shiftRight1($ndiv2);
    $upperOp2 = $op1.$shiftRight1($ndiv2);
    $lowerOp1 = $op2.$subtract2($upperOp1.$shiftLeft1($ndiv2));
    $lowerOp2 = $op1.$subtract2($upperOp2.$shiftLeft1($ndiv2));
    $upper = jm_Multiplication_karatsuba($upperOp1, $upperOp2);
    $lower = jm_Multiplication_karatsuba($lowerOp1, $lowerOp2);
    $middle = jm_Multiplication_karatsuba($upperOp1.$subtract2($lowerOp1), $lowerOp2.$subtract2($upperOp2));
    var$3 = ($middle.$add4($upper)).$add4($lower);
    var$3 = var$3.$shiftLeft1($ndiv2);
    var$12 = $upper.$shiftLeft1($ndiv2 << 1);
    return (var$12.$add4(var$3)).$add4($lower);
},
jm_Multiplication_multiplyPAP = ($a, $b) => {
    let $aLen, $bLen, $resLength, $resSign, $aDigits, $bDigits, $resDigits, $result, $val, $valueLo, $valueHi;
    jm_Multiplication_$callClinit();
    $aLen = $a.$numberLength;
    $bLen = $b.$numberLength;
    $resLength = $aLen + $bLen | 0;
    $resSign = $a.$sign1 == $b.$sign1 ? 1 : (-1);
    if ($resLength != 2) {
        $aDigits = $a.$digits0;
        $bDigits = $b.$digits0;
        $resDigits = $rt_createIntArray($resLength);
        jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits);
        $result = jm_BigInteger__init_($resSign, $resLength, $resDigits);
        jm_BigInteger_cutOffLeadingZeroes($result);
        return $result;
    }
    $val = jm_Multiplication_unsignedMultAddAdd($a.$digits0.data[0], $b.$digits0.data[0], 0, 0);
    $valueLo = Long_lo($val);
    $valueHi = Long_hi($val);
    return !$valueHi ? jm_BigInteger__init_0($resSign, $valueLo) : jm_BigInteger__init_($resSign, 2, $rt_createIntArrayFromData([$valueLo, $valueHi]));
},
jm_Multiplication_multArraysPAP = ($aDigits, $aLen, $bDigits, $bLen, $resDigits) => {
    jm_Multiplication_$callClinit();
    if ($aLen && $bLen) {
        if ($aLen == 1)
            $resDigits.data[$bLen] = jm_Multiplication_multiplyByInt($resDigits, $bDigits, $bLen, $aDigits.data[0]);
        else if ($bLen != 1)
            jm_Multiplication_multPAP($aDigits, $bDigits, $resDigits, $aLen, $bLen);
        else
            $resDigits.data[$aLen] = jm_Multiplication_multiplyByInt($resDigits, $aDigits, $aLen, $bDigits.data[0]);
        return;
    }
},
jm_Multiplication_multPAP = ($a, $b, $t, $aLen, $bLen) => {
    let $i, var$7, $carry, $aI, $j, var$11, var$12, var$13, var$14;
    jm_Multiplication_$callClinit();
    if ($a === $b && $aLen == $bLen) {
        jm_Multiplication_square($a, $aLen, $t);
        return;
    }
    $i = 0;
    while ($i < $aLen) {
        var$7 = $a.data;
        $carry = Long_ZERO;
        $aI = var$7[$i];
        $j = 0;
        while ($j < $bLen) {
            var$11 = $t.data;
            var$12 = $b.data[$j];
            var$13 = $i + $j | 0;
            var$14 = jm_Multiplication_unsignedMultAddAdd($aI, var$12, var$11[var$13], Long_lo($carry));
            var$11[var$13] = Long_lo(var$14);
            $carry = Long_shru(var$14, 32);
            $j = $j + 1 | 0;
        }
        $t.data[$i + $bLen | 0] = Long_lo($carry);
        $i = $i + 1 | 0;
    }
},
jm_Multiplication_multiplyByInt = ($res, $a, $aSize, $factor) => {
    let $carry, $i, var$7, var$8;
    jm_Multiplication_$callClinit();
    $carry = Long_ZERO;
    $i = 0;
    while ($i < $aSize) {
        var$7 = $res.data;
        var$8 = jm_Multiplication_unsignedMultAddAdd($a.data[$i], $factor, Long_lo($carry), 0);
        var$7[$i] = Long_lo(var$8);
        $carry = Long_shru(var$8, 32);
        $i = $i + 1 | 0;
    }
    return Long_lo($carry);
},
jm_Multiplication_multiplyByPositiveInt = ($val, $factor) => {
    let $resSign, $aNumberLength, $aDigits, $resLength, $resDigits, var$8, $result, $res, $resLo, $resHi;
    jm_Multiplication_$callClinit();
    $resSign = $val.$sign1;
    if (!$resSign) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ZERO;
    }
    $aNumberLength = $val.$numberLength;
    $aDigits = $val.$digits0;
    if ($aNumberLength != 1) {
        $resLength = $aNumberLength + 1 | 0;
        $resDigits = $rt_createIntArray($resLength);
        var$8 = $resDigits.data;
        var$8[$aNumberLength] = jm_Multiplication_multiplyByInt($resDigits, $aDigits, $aNumberLength, $factor);
        $result = jm_BigInteger__init_($resSign, $resLength, $resDigits);
        jm_BigInteger_cutOffLeadingZeroes($result);
        return $result;
    }
    $res = jm_Multiplication_unsignedMultAddAdd($aDigits.data[0], $factor, 0, 0);
    $resLo = Long_lo($res);
    $resHi = Long_hi($res);
    return !$resHi ? jm_BigInteger__init_0($resSign, $resLo) : jm_BigInteger__init_($resSign, 2, $rt_createIntArrayFromData([$resLo, $resHi]));
},
jm_Multiplication_pow = ($acc, $exponent) => {
    let $res, $acc_0, var$5;
    jm_Multiplication_$callClinit();
    jm_BigInteger_$callClinit();
    $res = jm_BigInteger_ONE;
    while ($exponent > 1) {
        if ($exponent & 1)
            $res = $res.$multiply($acc);
        $acc_0 = $acc.$numberLength == 1 ? $acc.$multiply($acc) : jm_BigInteger__init_6(1, jm_Multiplication_square($acc.$digits0, $acc.$numberLength, $rt_createIntArray($acc.$numberLength << 1)));
        $exponent = $exponent >> 1;
        $acc = $acc_0;
    }
    var$5 = $res.$multiply($acc);
    return var$5;
},
jm_Multiplication_square = ($a, $aLen, $res) => {
    let $i, $carry, $i_0, $j, var$8, var$9, var$10, var$11, var$12, var$13, $index;
    jm_Multiplication_$callClinit();
    $i = 0;
    while ($i < $aLen) {
        $carry = Long_ZERO;
        $i_0 = $i + 1 | 0;
        $j = $i_0;
        while ($j < $aLen) {
            var$8 = $res.data;
            var$9 = $a.data;
            var$10 = var$9[$i];
            var$11 = var$9[$j];
            var$12 = $i + $j | 0;
            var$13 = jm_Multiplication_unsignedMultAddAdd(var$10, var$11, var$8[var$12], Long_lo($carry));
            var$8[var$12] = Long_lo(var$13);
            $carry = Long_shru(var$13, 32);
            $j = $j + 1 | 0;
        }
        $res.data[$i + $aLen | 0] = Long_lo($carry);
        $i = $i_0;
    }
    jm_BitLevel_shiftLeftOneBit($res, $res, $aLen << 1);
    $carry = Long_ZERO;
    $i = 0;
    $index = 0;
    while ($i < $aLen) {
        var$8 = $res.data;
        var$9 = $a.data;
        var$13 = jm_Multiplication_unsignedMultAddAdd(var$9[$i], var$9[$i], var$8[$index], Long_lo($carry));
        var$8[$index] = Long_lo(var$13);
        var$13 = Long_shru(var$13, 32);
        var$11 = $index + 1 | 0;
        var$13 = Long_add(var$13, Long_and(Long_fromInt(var$8[var$11]), Long_create(4294967295, 0)));
        var$8[var$11] = Long_lo(var$13);
        $carry = Long_shru(var$13, 32);
        $i = $i + 1 | 0;
        $index = var$11 + 1 | 0;
    }
    return $res;
},
jm_Multiplication_multiplyByTenPow = ($val, $exp) => {
    jm_Multiplication_$callClinit();
    return Long_ge($exp, Long_fromInt(jm_Multiplication_tenPows.data.length)) ? $val.$multiply(jm_Multiplication_powerOf10($exp)) : jm_Multiplication_multiplyByPositiveInt($val, jm_Multiplication_tenPows.data[Long_lo($exp)]);
},
jm_Multiplication_powerOf10 = $exp => {
    let $intExp, $byteArraySize, $powerOfFive, $longExp, var$6, var$7, var$8;
    jm_Multiplication_$callClinit();
    $intExp = Long_lo($exp);
    if (Long_lt($exp, Long_fromInt(jm_Multiplication_bigTenPows.data.length)))
        return jm_Multiplication_bigTenPows.data[$intExp];
    if (Long_le($exp, Long_fromInt(50))) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_TEN.$pow0($intExp);
    }
    if (Long_le($exp, Long_fromInt(1000)))
        return (jm_Multiplication_bigFivePows.data[1].$pow0($intExp)).$shiftLeft1($intExp);
    $byteArraySize = Long_add(Long_fromInt(1), Long_fromNumber(Long_toNumber($exp) / 2.4082399653118496));
    if (Long_gt($byteArraySize, Long_fromInt(1000000)))
        $rt_throw(jl_ArithmeticException__init_($rt_s(1431)));
    if (Long_le($exp, Long_fromInt(2147483647)))
        return (jm_Multiplication_bigFivePows.data[1].$pow0($intExp)).$shiftLeft1($intExp);
    $powerOfFive = jm_Multiplication_bigFivePows.data[1].$pow0(2147483647);
    $longExp = Long_sub($exp, Long_fromInt(2147483647));
    var$6 = Long_lo(Long_rem($exp, Long_fromInt(2147483647)));
    var$7 = $powerOfFive;
    var$8 = $longExp;
    while (Long_gt(var$8, Long_fromInt(2147483647))) {
        var$7 = var$7.$multiply($powerOfFive);
        var$8 = Long_sub(var$8, Long_fromInt(2147483647));
    }
    var$7 = var$7.$multiply(jm_Multiplication_bigFivePows.data[1].$pow0(var$6));
    var$7 = var$7.$shiftLeft1(2147483647);
    while (Long_gt($longExp, Long_fromInt(2147483647))) {
        var$7 = var$7.$shiftLeft1(2147483647);
        $longExp = Long_sub($longExp, Long_fromInt(2147483647));
    }
    var$7 = var$7.$shiftLeft1(var$6);
    return var$7;
},
jm_Multiplication_unsignedMultAddAdd = ($a, $b, $c, $d) => {
    jm_Multiplication_$callClinit();
    return Long_add(Long_add(Long_mul(Long_and(Long_fromInt($a), Long_create(4294967295, 0)), Long_and(Long_fromInt($b), Long_create(4294967295, 0))), Long_and(Long_fromInt($c), Long_create(4294967295, 0))), Long_and(Long_fromInt($d), Long_create(4294967295, 0)));
},
jm_Multiplication__clinit_ = () => {
    let $fivePow, $i, var$3, var$4, var$5;
    jm_Multiplication_tenPows = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
    jm_Multiplication_fivePows = $rt_createIntArrayFromData([1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125]);
    jm_Multiplication_bigTenPows = $rt_createArray(jm_BigInteger, 32);
    jm_Multiplication_bigFivePows = $rt_createArray(jm_BigInteger, 32);
    $fivePow = Long_fromInt(1);
    $i = 0;
    while ($i <= 18) {
        jm_Multiplication_bigFivePows.data[$i] = jm_BigInteger_valueOf($fivePow);
        jm_Multiplication_bigTenPows.data[$i] = jm_BigInteger_valueOf(Long_shl($fivePow, $i));
        $fivePow = Long_mul($fivePow, Long_fromInt(5));
        $i = $i + 1 | 0;
    }
    while ($i < jm_Multiplication_bigTenPows.data.length) {
        var$3 = jm_Multiplication_bigFivePows.data;
        var$4 = jm_Multiplication_bigFivePows.data;
        var$5 = $i - 1 | 0;
        var$3[$i] = var$4[var$5].$multiply(jm_Multiplication_bigFivePows.data[1]);
        jm_Multiplication_bigTenPows.data[$i] = jm_Multiplication_bigTenPows.data[var$5].$multiply(jm_BigInteger_TEN);
        $i = $i + 1 | 0;
    }
};
function ju_LinkedHashMapKeySet() {
    let a = this; ju_AbstractSet.call(a);
    a.$base = null;
    a.$reversed = 0;
}
let ju_LinkedHashMapKeySet__init_ = ($this, $base, $reversed) => {
    ju_AbstractSet__init_($this);
    $this.$base = $base;
    $this.$reversed = $reversed;
},
ju_LinkedHashMapKeySet__init_0 = (var_0, var_1) => {
    let var_2 = new ju_LinkedHashMapKeySet();
    ju_LinkedHashMapKeySet__init_(var_2, var_0, var_1);
    return var_2;
},
ju_LinkedHashMapKeySet_size = $this => {
    return $this.$base.$elementCount;
},
ju_LinkedHashMapKeySet_iterator = $this => {
    return ju_LinkedHashMapIterator$KeyIterator__init_0($this.$base, $this.$reversed);
},
ju_LinkedHashMapKeySet_contains = ($this, $o) => {
    return $this.$base.$containsKey($o);
};
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
let jur_WordBoundary__init_ = ($this, $positive) => {
    jur_AbstractSet__init_($this);
    $this.$positive = $positive;
},
jur_WordBoundary__init_0 = var_0 => {
    let var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_(var_1, var_0);
    return var_1;
},
jur_WordBoundary_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $ch1, $ch2, $leftBound, $left, $right;
    $ch1 = $stringIndex < $matchResult.$getRightBound() ? $testString.$charAt($stringIndex) : 32;
    $ch2 = !$stringIndex ? 32 : $testString.$charAt($stringIndex - 1 | 0);
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    $left = $ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1;
    $right = $ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1;
    return $left ^ $right ^ $this.$positive ? (-1) : $this.$next5.$matches($stringIndex, $testString, $matchResult);
},
jur_WordBoundary_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_WordBoundary_getName = $this => {
    return $rt_s(1432);
},
jur_WordBoundary_isSpace = ($this, $ch, $index, $leftBound, $testString) => {
    let var$5;
    if (!jl_Character_isLetterOrDigit0($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType0($ch) == 6)
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    var$5 = $testString.$charAt($index);
                    if (jl_Character_isLetterOrDigit0(var$5))
                        return 0;
                    if (jl_Character_getType0(var$5) != 6)
                        return 1;
                }
        }
        return 1;
    }
    return 0;
},
jl_SystemClassLoader = $rt_classWithoutFields(jl_ClassLoader),
jl_SystemClassLoader__init_ = $this => {
    jl_ClassLoader__init_($this);
},
jl_SystemClassLoader__init_0 = () => {
    let var_0 = new jl_SystemClassLoader();
    jl_SystemClassLoader__init_(var_0);
    return var_0;
},
jtf_ResolverStyle = $rt_classWithoutFields(jl_Enum),
jtf_ResolverStyle_STRICT = null,
jtf_ResolverStyle_SMART = null,
jtf_ResolverStyle_LENIENT = null,
jtf_ResolverStyle_$VALUES = null,
jtf_ResolverStyle_$callClinit = () => {
    jtf_ResolverStyle_$callClinit = $rt_eraseClinit(jtf_ResolverStyle);
    jtf_ResolverStyle__clinit_();
},
jtf_ResolverStyle_values = () => {
    jtf_ResolverStyle_$callClinit();
    return jtf_ResolverStyle_$VALUES.$clone0();
},
jtf_ResolverStyle__init_0 = ($this, var$1, var$2) => {
    jtf_ResolverStyle_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
jtf_ResolverStyle__init_ = (var_0, var_1) => {
    let var_2 = new jtf_ResolverStyle();
    jtf_ResolverStyle__init_0(var_2, var_0, var_1);
    return var_2;
},
jtf_ResolverStyle_$values = () => {
    let var$1, var$2;
    jtf_ResolverStyle_$callClinit();
    var$1 = $rt_createArray(jtf_ResolverStyle, 3);
    var$2 = var$1.data;
    var$2[0] = jtf_ResolverStyle_STRICT;
    var$2[1] = jtf_ResolverStyle_SMART;
    var$2[2] = jtf_ResolverStyle_LENIENT;
    return var$1;
},
jtf_ResolverStyle__clinit_ = () => {
    jtf_ResolverStyle_STRICT = jtf_ResolverStyle__init_($rt_s(903), 0);
    jtf_ResolverStyle_SMART = jtf_ResolverStyle__init_($rt_s(1433), 1);
    jtf_ResolverStyle_LENIENT = jtf_ResolverStyle__init_($rt_s(904), 2);
    jtf_ResolverStyle_$VALUES = jtf_ResolverStyle_$values();
};
function ju_Comparator$comparingLong$lambda$_15_0() {
    jl_Object.call(this);
    this.$_0185 = null;
}
let ju_Comparator$comparingLong$lambda$_15_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0185 = var$1;
},
ju_Comparator$comparingLong$lambda$_15_0__init_0 = var_0 => {
    let var_1 = new ju_Comparator$comparingLong$lambda$_15_0();
    ju_Comparator$comparingLong$lambda$_15_0__init_(var_1, var_0);
    return var_1;
},
jl_Double = $rt_classWithoutFields(jl_Number),
jl_Double_TYPE = null,
jl_Double_$callClinit = () => {
    jl_Double_$callClinit = $rt_eraseClinit(jl_Double);
    jl_Double__clinit_();
},
jl_Double_compare = ($a, $b) => {
    let $diff, var$4, var$5, var$6;
    jl_Double_$callClinit();
    $diff = ($a <= $b ? 0 : 1) - ($b <= $a ? 0 : 1) | 0;
    if (!$diff) {
        var$4 = 1.0 / $a;
        var$5 = 1.0 / $b;
        var$6 = (var$4 <= var$5 ? 0 : 1) - (var$5 <= var$4 ? 0 : 1) | 0;
        $diff = (var$6 + ($b !== $b ? 0 : 1) | 0) - ($a !== $a ? 0 : 1) | 0;
    }
    return $diff;
},
jl_Double_doubleToLongBits = $value => {
    jl_Double_$callClinit();
    if (!(isNaN($value) ? 1 : 0))
        return $rt_doubleToRawLongBits($value);
    return Long_create(0, 2146959360);
},
jl_Double__clinit_ = () => {
    jl_Double_TYPE = $rt_cls($rt_doublecls);
},
onnn_Nip39$fetch$lambda$_4_0 = $rt_classWithoutFields(),
onnn_Nip39$fetch$lambda$_4_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onnn_Nip39$fetch$lambda$_4_0__init_0 = () => {
    let var_0 = new onnn_Nip39$fetch$lambda$_4_0();
    onnn_Nip39$fetch$lambda$_4_0__init_(var_0);
    return var_0;
},
onnn_Nip39$fetch$lambda$_4_0_apply0 = (var$0, var$1) => {
    return onnn_Nip39$fetch$lambda$_4_0_apply(var$0, var$1);
},
onnn_Nip39$fetch$lambda$_4_0_apply = (var$0, var$1) => {
    return onnn_Nip39_lambda$fetch$0(var$1);
},
onns_SdanBid$_init_$lambda$_2_0 = $rt_classWithoutFields(),
onns_SdanBid$_init_$lambda$_2_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
onns_SdanBid$_init_$lambda$_2_0__init_0 = () => {
    let var_0 = new onns_SdanBid$_init_$lambda$_2_0();
    onns_SdanBid$_init_$lambda$_2_0__init_(var_0);
    return var_0;
},
onns_SdanBid$_init_$lambda$_2_0_applyAsInt0 = (var$0, var$1) => {
    return onns_SdanBid$_init_$lambda$_2_0_applyAsInt(var$0, var$1);
},
onns_SdanBid$_init_$lambda$_2_0_applyAsInt = (var$0, var$1) => {
    return var$1.$intValue();
};
function otcit_CachedDateTimeZone() {
    let a = this; otcit_StorableDateTimeZone.call(a);
    a.$iZone = null;
    a.$iInfoCache = null;
}
let otcit_CachedDateTimeZone_cInfoCacheMask = 0,
otcit_CachedDateTimeZone_$callClinit = () => {
    otcit_CachedDateTimeZone_$callClinit = $rt_eraseClinit(otcit_CachedDateTimeZone);
    otcit_CachedDateTimeZone__clinit_();
},
otcit_CachedDateTimeZone_forZone = $zone => {
    otcit_CachedDateTimeZone_$callClinit();
    if ($zone instanceof otcit_CachedDateTimeZone)
        return $zone;
    return otcit_CachedDateTimeZone__init_0($zone);
},
otcit_CachedDateTimeZone__init_ = ($this, $zone) => {
    otcit_CachedDateTimeZone_$callClinit();
    otcit_StorableDateTimeZone__init_($this, otcit_DateTimeZone_getID($zone));
    $this.$iInfoCache = $rt_createArray(otcit_CachedDateTimeZone$Info, otcit_CachedDateTimeZone_cInfoCacheMask + 1 | 0);
    $this.$iZone = $zone;
},
otcit_CachedDateTimeZone__init_0 = var_0 => {
    let var_1 = new otcit_CachedDateTimeZone();
    otcit_CachedDateTimeZone__init_(var_1, var_0);
    return var_1;
},
otcit_CachedDateTimeZone_getOffset = ($this, $instant) => {
    return otcit_CachedDateTimeZone$Info_getOffset(otcit_CachedDateTimeZone_getInfo($this, $instant), $instant);
},
otcit_CachedDateTimeZone_getStandardOffset = ($this, $instant) => {
    return otcit_CachedDateTimeZone$Info_getStandardOffset(otcit_CachedDateTimeZone_getInfo($this, $instant), $instant);
},
otcit_CachedDateTimeZone_asZoneRules = $this => {
    return $this.$iZone.$asZoneRules();
},
otcit_CachedDateTimeZone_getInfo = ($this, $millis) => {
    let $period, $cache, var$4, $index, $info;
    $period = Long_hi($millis);
    $cache = $this.$iInfoCache;
    var$4 = $cache.data;
    otcit_CachedDateTimeZone_$callClinit();
    $index = $period & otcit_CachedDateTimeZone_cInfoCacheMask;
    $info = var$4[$index];
    if (!($info !== null && Long_hi($info.$iPeriodStart) == $period)) {
        $info = otcit_CachedDateTimeZone_createInfo($this, $millis);
        var$4[$index] = $info;
    }
    return $info;
},
otcit_CachedDateTimeZone_createInfo = ($this, $millis) => {
    let $periodStart, $info, $end, $chain, $next;
    $periodStart = Long_and($millis, Long_create(0, 4294967295));
    $info = otcit_CachedDateTimeZone$Info__init_0($this.$iZone, $periodStart);
    $end = Long_or($periodStart, Long_create(4294967295, 0));
    $chain = $info;
    a: {
        while (true) {
            $next = $this.$iZone.$nextTransition($periodStart);
            if (Long_eq($next, $periodStart))
                break a;
            if (Long_gt($next, $end))
                break;
            $chain.$iNextInfo = otcit_CachedDateTimeZone$Info__init_0($this.$iZone, $next);
            $chain = $chain.$iNextInfo;
            $periodStart = $next;
        }
    }
    return $info;
},
otcit_CachedDateTimeZone__clinit_ = () => {
    otcit_CachedDateTimeZone_cInfoCacheMask = 511;
},
jur_IntHash = $rt_classWithoutFields();
function onns_SdanBid() {
    let a = this; jl_Object.call(a);
    a.$description = null;
    a.$context = null;
    a.$payload = null;
    a.$size1 = null;
    a.$link = null;
    a.$callToAction = null;
    a.$bid = Long_ZERO;
    a.$holdTime = null;
    a.$actionType = null;
    a.$mimeType = null;
    a.$tier1Category = null;
    a.$tier2Category = null;
    a.$tier3Category = null;
    a.$tier4Category = null;
    a.$language = null;
    a.$targets = null;
    a.$id3 = null;
    a.$slotBid = null;
    a.$slotSize = null;
    a.$expirationTimestamp = null;
}
let onns_SdanBid__init_ = ($this, $description, $context, $payload, $size, $link, $callToAction, $bid, $holdTime, $actionType, $mimeType, $tier1Category, $tier2Category, $tier3Category, $tier4Category, $language, $targets, $id, $slotBid, $slotSize, $expirationTimestamp) => {
    jl_Object__init_($this);
    $this.$description = ju_Objects_requireNonNull($description, $rt_s(1434));
    $this.$context = $context;
    $this.$payload = ju_Objects_requireNonNull($payload, $rt_s(1435));
    $this.$size1 = ju_Objects_requireNonNull($size, $rt_s(1436));
    $this.$link = ju_Objects_requireNonNull($link, $rt_s(1437));
    $this.$callToAction = $callToAction;
    $this.$bid = $bid;
    $this.$holdTime = ju_Objects_requireNonNull($holdTime, $rt_s(1438));
    $this.$actionType = ju_Objects_requireNonNull($actionType, $rt_s(1439));
    $this.$mimeType = ju_Objects_requireNonNull($mimeType, $rt_s(1440));
    $this.$tier1Category = $tier1Category;
    $this.$tier2Category = $tier2Category;
    $this.$tier3Category = $tier3Category;
    $this.$tier4Category = $tier4Category;
    $this.$language = $language;
    $this.$targets = $targets;
    $this.$id3 = ju_Objects_requireNonNull($id, $rt_s(1441));
    $this.$slotBid = ju_Objects_requireNonNull($slotBid, $rt_s(1442));
    $this.$slotSize = ju_Objects_requireNonNull($slotSize, $rt_s(1443));
    $this.$expirationTimestamp = $expirationTimestamp;
},
onns_SdanBid__init_4 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19) => {
    let var_20 = new onns_SdanBid();
    onns_SdanBid__init_(var_20, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19);
    return var_20;
},
onns_SdanBid__init_1 = $this => {
    jl_Object__init_($this);
},
onns_SdanBid__init_2 = () => {
    let var_0 = new onns_SdanBid();
    onns_SdanBid__init_1(var_0);
    return var_0;
},
onns_SdanBid__init_0 = ($this, $event) => {
    let $platform, var$3, $content, $sizeList, var$6, var$7, $actionType, $mimeType, $e, var$11, $$je;
    jl_Object__init_($this);
    ju_Objects_requireNonNull($event, $rt_s(1444));
    $platform = onp_NGEPlatform_get();
    var$3 = $event.$getContent();
    $content = $platform.$fromJSON(var$3, $rt_cls(ju_Map));
    $this.$description = onp_NGEUtils_safeString($content.$get1($rt_s(915)));
    $this.$context = onp_NGEUtils_safeString($content.$get1($rt_s(1445)));
    $this.$payload = onp_NGEUtils_safeString($content.$get1($rt_s(1446)));
    $this.$link = onp_NGEUtils_safeString($content.$get1($rt_s(849)));
    $this.$callToAction = onp_NGEUtils_safeString($content.$get1($rt_s(1447)));
    $this.$bid = onp_NGEUtils_safeLong($content.$get1($rt_s(1448)));
    $this.$holdTime = jt_Duration_ofSeconds(onp_NGEUtils_safeLong($content.$get1($rt_s(1449))));
    $sizeList = onp_NGEUtils_safeIntList($content.$get1($rt_s(1450)));
    if ($sizeList === null)
        var$6 = $rt_createIntArray(0);
    else {
        var$7 = $sizeList.$stream();
        var$3 = onns_SdanBid$_init_$lambda$_2_0__init_0();
        var$7 = var$7.$mapToInt(var$3);
        var$6 = var$7.$toArray1();
    }
    $this.$size1 = var$6;
    a: {
        try {
            $actionType = onns_SdanBid_getRequiredTag($this, $event, $rt_s(1451), 0);
            $this.$actionType = onns_SdanActionType_fromValue($actionType);
            $mimeType = onns_SdanBid_getRequiredTag($this, $event, $rt_s(1452), 0);
            $this.$mimeType = onns_SdanMimeType_fromValue($mimeType);
            $this.$id3 = onns_SdanBid_getRequiredTag($this, $event, $rt_s(146), 0);
            $this.$slotBid = onns_SdanSlotBid_valueOf(onns_SdanBid_getRequiredTag($this, $event, $rt_s(1453), 0));
            $this.$slotSize = onns_SdanSlotSize_valueOf(onns_SdanBid_getRequiredTag($this, $event, $rt_s(144), 0));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        var$7 = new jl_IllegalArgumentException;
        var$3 = $e.$getMessage();
        var$11 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$11, $rt_s(1454)), var$3);
        jl_IllegalArgumentException__init_4(var$7, jl_StringBuilder_toString(var$11), $e);
        $rt_throw(var$7);
    }
    $this.$tier1Category = onns_SdanBid_getOptionalTag($this, $event, $rt_s(1455), 0);
    $this.$tier2Category = onns_SdanBid_getOptionalTag($this, $event, $rt_s(1456), 0);
    $this.$tier3Category = onns_SdanBid_getOptionalTag($this, $event, $rt_s(1457), 0);
    $this.$tier4Category = onns_SdanBid_getOptionalTag($this, $event, $rt_s(1115), 0);
    $this.$language = onns_SdanBid_getOptionalTag($this, $event, $rt_s(1458), 0);
    $this.$targets = !$event.$hasTag($rt_s(1118)) ? null : ($event.$getFirstTag($rt_s(1118))).$getAll();
    $this.$expirationTimestamp = $event.$getExpiration();
},
onns_SdanBid__init_3 = var_0 => {
    let var_1 = new onns_SdanBid();
    onns_SdanBid__init_0(var_1, var_0);
    return var_1;
},
onns_SdanBid_getRequiredTag = ($this, $event, $tagName, $index) => {
    let var$4, var$5;
    if ($event.$hasTag($tagName))
        return ($event.$getFirstTag($tagName)).$get15($index);
    var$4 = new jl_IllegalArgumentException;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(1459)), $tagName);
    jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
    $rt_throw(var$4);
},
onns_SdanBid_getOptionalTag = ($this, $event, $tagName, $index) => {
    return !$event.$hasTag($tagName) ? null : ($event.$getFirstTag($tagName)).$get15($index);
},
onns_SdanBid_clone0 = $this => {
    let var$1, $e, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(jl_AssertionError__init_2($rt_s(1460), $e));
},
onns_SdanBid_equals = ($this, $o) => {
    let $sdanBid, var$3, var$4, var$5, var$6, var$7;
    if ($this === $o)
        return 1;
    if (!($o instanceof onns_SdanBid))
        return 0;
    a: {
        b: {
            $sdanBid = $o;
            if (Long_ne($this.$bid, $sdanBid.$bid))
                break b;
            var$3 = $this.$description;
            var$4 = $sdanBid.$description;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$context;
            var$4 = $sdanBid.$context;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$payload;
            var$4 = $sdanBid.$payload;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$5 = $this.$size1;
            var$6 = $sdanBid.$size1;
            if (!ju_Objects_deepEquals(var$5, var$6))
                break b;
            var$3 = $this.$link;
            var$4 = $sdanBid.$link;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$callToAction;
            var$4 = $sdanBid.$callToAction;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$holdTime;
            var$4 = $sdanBid.$holdTime;
            if (!jt_Duration_equals(var$3, var$4))
                break b;
            if ($this.$actionType !== $sdanBid.$actionType)
                break b;
            if ($this.$mimeType !== $sdanBid.$mimeType)
                break b;
            var$3 = $this.$tier1Category;
            var$4 = $sdanBid.$tier1Category;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$tier2Category;
            var$4 = $sdanBid.$tier2Category;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$tier3Category;
            var$4 = $sdanBid.$tier3Category;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$tier4Category;
            var$4 = $sdanBid.$tier4Category;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$language;
            var$4 = $sdanBid.$language;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$targets;
            var$4 = $sdanBid.$targets;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            var$3 = $this.$id3;
            var$4 = $sdanBid.$id3;
            if (!ju_Objects_equals(var$3, var$4))
                break b;
            if ($this.$slotBid !== $sdanBid.$slotBid)
                break b;
            if ($this.$slotSize !== $sdanBid.$slotSize)
                break b;
            var$3 = $this.$expirationTimestamp;
            var$4 = $sdanBid.$expirationTimestamp;
            if (ju_Objects_equals(var$3, var$4)) {
                var$7 = 1;
                break a;
            }
        }
        var$7 = 0;
    }
    return var$7;
},
onns_SdanBid_hashCode = $this => {
    let var$1, var$2;
    var$1 = $rt_createArray(jl_Object, 20);
    var$2 = var$1.data;
    var$2[0] = $this.$description;
    var$2[1] = $this.$context;
    var$2[2] = $this.$payload;
    var$2[3] = $this.$size1;
    var$2[4] = $this.$link;
    var$2[5] = $this.$callToAction;
    var$2[6] = jl_Long_valueOf($this.$bid);
    var$2[7] = $this.$holdTime;
    var$2[8] = $this.$actionType;
    var$2[9] = $this.$mimeType;
    var$2[10] = $this.$tier1Category;
    var$2[11] = $this.$tier2Category;
    var$2[12] = $this.$tier3Category;
    var$2[13] = $this.$tier4Category;
    var$2[14] = $this.$language;
    var$2[15] = $this.$targets;
    var$2[16] = $this.$id3;
    var$2[17] = $this.$slotBid;
    var$2[18] = $this.$slotSize;
    var$2[19] = $this.$expirationTimestamp;
    return ju_Objects_hash(var$1);
},
onns_SdanBid_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21, var$22;
    var$1 = $this.$description;
    var$2 = $this.$context;
    var$3 = $this.$payload;
    var$4 = $this.$size1.data[0];
    var$5 = $this.$size1.data[1];
    var$6 = $this.$link;
    var$7 = $this.$callToAction;
    var$8 = $this.$bid;
    var$9 = jl_String_valueOf($this.$holdTime);
    var$10 = jl_String_valueOf($this.$actionType);
    var$11 = jl_String_valueOf($this.$mimeType);
    var$12 = $this.$tier1Category;
    var$13 = $this.$tier2Category;
    var$14 = $this.$tier3Category;
    var$15 = $this.$tier4Category;
    var$16 = $this.$language;
    var$17 = jl_String_valueOf($this.$targets);
    var$18 = $this.$id3;
    var$19 = jl_String_valueOf($this.$slotBid);
    var$20 = jl_String_valueOf($this.$slotSize);
    var$21 = jl_String_valueOf($this.$expirationTimestamp);
    var$22 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$22,
    $rt_s(1461)), var$1), $rt_s(1462)), var$2), $rt_s(1463)), var$3), $rt_s(1464)), var$4), 120), var$5), $rt_s(1465)), var$6), $rt_s(1466)), var$7), $rt_s(1467)), var$8), $rt_s(1468)), var$9), $rt_s(1469)), var$10), $rt_s(1470)), var$11), $rt_s(1471)), var$12), $rt_s(1472)), var$13), $rt_s(1473)), var$14), $rt_s(1474)), var$15), $rt_s(1475)), var$16), $rt_s(1476)), var$17), $rt_s(1477)), var$18), $rt_s(1478)), var$19), $rt_s(1479)), var$20), $rt_s(1480)), var$21), 125);
    return jl_StringBuilder_toString(var$22);
},
onns_SdanBid_getDescription = $this => {
    return $this.$description;
},
onns_SdanBid_getContext = $this => {
    return $this.$context;
},
onns_SdanBid_getPayload = $this => {
    return $this.$payload;
},
onns_SdanBid_getSize = $this => {
    return $this.$size1;
},
onns_SdanBid_getLink = $this => {
    return $this.$link;
},
onns_SdanBid_getCallToAction = $this => {
    return $this.$callToAction;
},
onns_SdanBid_getBid = $this => {
    return $this.$bid;
},
onns_SdanBid_getHoldTime = $this => {
    return $this.$holdTime;
},
onns_SdanBid_getActionType = $this => {
    return $this.$actionType;
},
onns_SdanBid_getMimeType = $this => {
    return $this.$mimeType;
},
onns_SdanBid_getTier1Category = $this => {
    return $this.$tier1Category;
},
onns_SdanBid_getTier2Category = $this => {
    return $this.$tier2Category;
},
onns_SdanBid_getTier3Category = $this => {
    return $this.$tier3Category;
},
onns_SdanBid_getTier4Category = $this => {
    return $this.$tier4Category;
},
onns_SdanBid_getLanguage = $this => {
    return $this.$language;
},
onns_SdanBid_getTargets = $this => {
    return $this.$targets;
},
onns_SdanBid_getId = $this => {
    return $this.$id3;
},
onns_SdanBid_getSlotBid = $this => {
    return $this.$slotBid;
},
onns_SdanBid_getSlotSize = $this => {
    return $this.$slotSize;
},
onns_SdanBid_getExpirationTimestamp = $this => {
    return $this.$expirationTimestamp;
},
onns_SdanBid_isExpired = $this => {
    return $this.$expirationTimestamp !== null && jt_Instant_isAfter(jt_Instant_now(), $this.$expirationTimestamp) ? 1 : 0;
},
onns_SdanBid_clone = $this => {
    return $this.$clone13();
},
onns_SdanBid_getRequiredTag$exported$0 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$5 = var$4;
    return $rt_ustr(onns_SdanBid_getRequiredTag(var$1, var$2, var$3, var$5));
},
onns_SdanBid_getOptionalTag$exported$1 = (var$1, var$2, var$3, var$4) => {
    let var$5;
    var$2 = var$2;
    var$3 = $rt_str(var$3);
    var$5 = var$4;
    return $rt_ustr(onns_SdanBid_getOptionalTag(var$1, var$2, var$3, var$5));
},
onns_SdanBid_getActionType$exported$2 = var$1 => {
    return var$1.$getActionType();
},
onns_SdanBid_getTier4Category$exported$3 = var$1 => {
    return $rt_ustr(var$1.$getTier4Category());
},
onns_SdanBid_toString$exported$4 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onns_SdanBid_getDescription$exported$5 = var$1 => {
    return $rt_ustr(var$1.$getDescription());
},
onns_SdanBid_getTier1Category$exported$6 = var$1 => {
    return $rt_ustr(var$1.$getTier1Category());
},
onns_SdanBid_getMimeType$exported$7 = var$1 => {
    return var$1.$getMimeType();
},
onns_SdanBid_getTier2Category$exported$8 = var$1 => {
    return $rt_ustr(var$1.$getTier2Category());
},
onns_SdanBid_isExpired$exported$9 = var$1 => {
    return !!var$1.$isExpired0();
},
onns_SdanBid_getContext$exported$10 = var$1 => {
    return $rt_ustr(var$1.$getContext());
},
onns_SdanBid_getBid$exported$11 = var$1 => {
    return var$1.$getBid0();
},
onns_SdanBid_clone$exported$12 = var$1 => {
    return otji_JSWrapper_javaToJs(var$1.$clone0());
},
onns_SdanBid__init_$exported$13 = () => {
    return onns_SdanBid__init_2();
},
onns_SdanBid_getCallToAction$exported$14 = var$1 => {
    return $rt_ustr(var$1.$getCallToAction());
},
onns_SdanBid_equals$exported$15 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return !!var$1.$equals(var$2);
};
let onns_SdanBid__init_$exported$16 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20) => {
    return onns_SdanBid__init_4($rt_str(var$1), $rt_str(var$2), $rt_str(var$3), otji_JS_unwrapIntArray(var$4), $rt_str(var$5), $rt_str(var$6), var$7, var$8, var$9, var$10, $rt_str(var$11), $rt_str(var$12), $rt_str(var$13), $rt_str(var$14), $rt_str(var$15), var$16, $rt_str(var$17), var$18, var$19, var$20);
},
onns_SdanBid_hashCode$exported$17 = var$1 => {
    return var$1.$hashCode();
},
onns_SdanBid_getPayload$exported$18 = var$1 => {
    return $rt_ustr(var$1.$getPayload());
},
onns_SdanBid_getSize$exported$19 = var$1 => {
    return otji_JS_wrap1(var$1.$getSize());
},
onns_SdanBid_getId$exported$20 = var$1 => {
    return $rt_ustr(var$1.$getId());
},
onns_SdanBid_getSlotBid$exported$21 = var$1 => {
    return var$1.$getSlotBid();
},
onns_SdanBid_getLanguage$exported$22 = var$1 => {
    return $rt_ustr(var$1.$getLanguage());
},
onns_SdanBid_getTargets$exported$23 = var$1 => {
    return var$1.$getTargets();
},
onns_SdanBid__init_$exported$24 = var$1 => {
    return onns_SdanBid__init_3(var$1);
},
onns_SdanBid_getExpirationTimestamp$exported$25 = var$1 => {
    return var$1.$getExpirationTimestamp();
},
onns_SdanBid_getLink$exported$26 = var$1 => {
    return $rt_ustr(var$1.$getLink());
},
onns_SdanBid_getSlotSize$exported$27 = var$1 => {
    return var$1.$getSlotSize();
},
onns_SdanBid_clone$exported$28 = var$1 => {
    return var$1.$clone13();
},
onns_SdanBid_getHoldTime$exported$29 = var$1 => {
    return var$1.$getHoldTime();
},
onns_SdanBid_getTier3Category$exported$30 = var$1 => {
    return $rt_ustr(var$1.$getTier3Category());
},
cjj_GZIPException = $rt_classWithoutFields(ji_IOException),
cjj_GZIPException__init_0 = ($this, $s) => {
    ji_IOException__init_($this, $s);
},
cjj_GZIPException__init_ = var_0 => {
    let var_1 = new cjj_GZIPException();
    cjj_GZIPException__init_0(var_1, var_0);
    return var_1;
},
jt_Month$1 = $rt_classWithoutFields(),
jt_Month$1__init_ = $this => {
    jl_Object__init_($this);
},
jt_Month$1__init_0 = () => {
    let var_0 = new jt_Month$1();
    jt_Month$1__init_(var_0);
    return var_0;
},
jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_ReluctantAltQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_ReluctantAltQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_ReluctantAltQuantifierSet();
    jur_ReluctantAltQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_ReluctantAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$next5.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
};
function onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0() {
    jl_Object.call(this);
    this.$_0113 = null;
}
let onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0113 = var$1;
},
onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0();
    onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$sendAnswer$12(var$0.$_0113, var$1);
},
jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaWhitespace__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaWhitespace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaWhitespace_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaWhitespace$1__init_0($this);
};
function cjj_CRC32() {
    jl_Object.call(this);
    this.$v0 = 0;
}
let cjj_CRC32_crc_table = null,
cjj_CRC32_$callClinit = () => {
    cjj_CRC32_$callClinit = $rt_eraseClinit(cjj_CRC32);
    cjj_CRC32__clinit_();
},
cjj_CRC32__init_0 = $this => {
    cjj_CRC32_$callClinit();
    jl_Object__init_($this);
    $this.$v0 = 0;
},
cjj_CRC32__init_ = () => {
    let var_0 = new cjj_CRC32();
    cjj_CRC32__init_0(var_0);
    return var_0;
},
cjj_CRC32_update = ($this, $buf, $index, $len) => {
    let $c, var$5, var$6, var$7;
    $c = $this.$v0 ^ (-1);
    while (true) {
        $len = $len + (-1) | 0;
        if ($len < 0)
            break;
        var$5 = $buf.data;
        cjj_CRC32_$callClinit();
        var$6 = cjj_CRC32_crc_table.data;
        var$7 = $index + 1 | 0;
        $c = var$6[($c ^ var$5[$index]) & 255] ^ ($c >>> 8 | 0);
        $index = var$7;
    }
    $this.$v0 = $c ^ (-1);
},
cjj_CRC32_reset = $this => {
    $this.$v0 = 0;
},
cjj_CRC32_reset0 = ($this, $vv) => {
    $this.$v0 = Long_lo(Long_and($vv, Long_create(4294967295, 0)));
},
cjj_CRC32_getValue = $this => {
    return Long_and(Long_fromInt($this.$v0), Long_create(4294967295, 0));
},
cjj_CRC32__clinit_ = () => {
    let $n, $k, var$3;
    cjj_CRC32_crc_table = null;
    cjj_CRC32_crc_table = $rt_createIntArray(256);
    $n = 0;
    while ($n < 256) {
        $k = 8;
        var$3 = $n;
        while (true) {
            $k = $k + (-1) | 0;
            if ($k < 0)
                break;
            if (!(var$3 & 1)) {
                var$3 = var$3 >>> 1 | 0;
                continue;
            }
            var$3 = (-306674912) ^ (var$3 >>> 1 | 0);
        }
        cjj_CRC32_crc_table.data[$n] = var$3;
        $n = $n + 1 | 0;
    }
};
function onnrt_NostrTURN$lambda$loop$7$lambda$_14_0() {
    jl_Object.call(this);
    this.$_0151 = null;
}
let onnrt_NostrTURN$lambda$loop$7$lambda$_14_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0151 = var$1;
},
onnrt_NostrTURN$lambda$loop$7$lambda$_14_0__init_0 = var_0 => {
    let var_1 = new onnrt_NostrTURN$lambda$loop$7$lambda$_14_0();
    onnrt_NostrTURN$lambda$loop$7$lambda$_14_0__init_(var_1, var_0);
    return var_1;
},
onnrt_NostrTURN$lambda$loop$7$lambda$_14_0_accept0 = (var$0, var$1, var$2) => {
    onnrt_NostrTURN$lambda$loop$7$lambda$_14_0_accept(var$0, var$1, var$2);
},
onnrt_NostrTURN$lambda$loop$7$lambda$_14_0_accept = (var$0, var$1, var$2) => {
    onnrt_NostrTURN_lambda$loop$6(var$0.$_0151, var$1, var$2);
},
jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException),
jl_NumberFormatException__init_1 = $this => {
    jl_IllegalArgumentException__init_2($this);
},
jl_NumberFormatException__init_2 = () => {
    let var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_1(var_0);
    return var_0;
},
jl_NumberFormatException__init_ = ($this, $message) => {
    jl_IllegalArgumentException__init_1($this, $message);
},
jl_NumberFormatException__init_0 = var_0 => {
    let var_1 = new jl_NumberFormatException();
    jl_NumberFormatException__init_(var_1, var_0);
    return var_1;
};
function onnn_Nip44$decrypt$lambda$_14_0() {
    let a = this; jl_Object.call(a);
    a.$_026 = null;
    a.$_115 = null;
}
let onnn_Nip44$decrypt$lambda$_14_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_026 = var$1;
    var$0.$_115 = var$2;
},
onnn_Nip44$decrypt$lambda$_14_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnn_Nip44$decrypt$lambda$_14_0();
    onnn_Nip44$decrypt$lambda$_14_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnn_Nip44$decrypt$lambda$_14_0_call0 = var$0 => {
    return onnn_Nip44$decrypt$lambda$_14_0_call(var$0);
},
onnn_Nip44$decrypt$lambda$_14_0_call = var$0 => {
    return onnn_Nip44_lambda$decrypt$2(var$0.$_026, var$0.$_115);
};
function onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1() {
    jl_Object.call(this);
    this.$_0118 = null;
}
let onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0118 = var$1;
},
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1();
    onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1_apply0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1_apply(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1_apply = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$listen$7(var$0.$_0118, var$1);
};
function jtt_IsoFields$Unit() {
    let a = this; jl_Enum.call(a);
    a.$name7 = null;
    a.$duration = null;
}
let jtt_IsoFields$Unit_WEEK_BASED_YEARS = null,
jtt_IsoFields$Unit_QUARTER_YEARS = null,
jtt_IsoFields$Unit_$VALUES = null,
jtt_IsoFields$Unit_$callClinit = () => {
    jtt_IsoFields$Unit_$callClinit = $rt_eraseClinit(jtt_IsoFields$Unit);
    jtt_IsoFields$Unit__clinit_();
},
jtt_IsoFields$Unit_values = () => {
    jtt_IsoFields$Unit_$callClinit();
    return jtt_IsoFields$Unit_$VALUES.$clone0();
},
jtt_IsoFields$Unit__init_0 = ($this, var$1, var$2, $name, $estimatedDuration) => {
    jtt_IsoFields$Unit_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$name7 = $name;
    $this.$duration = $estimatedDuration;
},
jtt_IsoFields$Unit__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jtt_IsoFields$Unit();
    jtt_IsoFields$Unit__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jtt_IsoFields$Unit_toString = $this => {
    return $this.$name7;
},
jtt_IsoFields$Unit_$values = () => {
    let var$1, var$2;
    jtt_IsoFields$Unit_$callClinit();
    var$1 = $rt_createArray(jtt_IsoFields$Unit, 2);
    var$2 = var$1.data;
    var$2[0] = jtt_IsoFields$Unit_WEEK_BASED_YEARS;
    var$2[1] = jtt_IsoFields$Unit_QUARTER_YEARS;
    return var$1;
},
jtt_IsoFields$Unit__clinit_ = () => {
    jtt_IsoFields$Unit_WEEK_BASED_YEARS = jtt_IsoFields$Unit__init_($rt_s(1481), 0, $rt_s(1482), jt_Duration_ofSeconds(Long_fromInt(31556952)));
    jtt_IsoFields$Unit_QUARTER_YEARS = jtt_IsoFields$Unit__init_($rt_s(1483), 1, $rt_s(1484), jt_Duration_ofSeconds(Long_fromInt(7889238)));
    jtt_IsoFields$Unit_$VALUES = jtt_IsoFields$Unit_$values();
};
function onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0() {
    jl_Object.call(this);
    this.$_037 = null;
}
let onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_037 = var$1;
},
onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0();
    onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$sendOffer$10(var$0.$_037, var$1);
};
function onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0() {
    jl_Object.call(this);
    this.$_0122 = null;
}
let onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0122 = var$1;
},
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0__init_0 = var_0 => {
    let var_1 = new onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0();
    onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0__init_(var_1, var_0);
    return var_1;
},
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0_test0 = (var$0, var$1) => {
    return onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0_test(var$0, var$1);
},
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0_test = (var$0, var$1) => {
    return onns_NostrNIP46Signer_lambda$listen$6(var$0.$_0122, var$1);
},
jur_IntArrHash = $rt_classWithoutFields(),
jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaMirrored__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaMirrored__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaMirrored_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaMirrored$1__init_0($this);
},
jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaISOControl__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaISOControl__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaISOControl_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaISOControl$1__init_0($this);
},
onnl_NostrNoticeListener = $rt_classWithoutFields(0);
function onne_NostrEvent$computeEventId$lambda$_8_0() {
    jl_Object.call(this);
    this.$_0143 = null;
}
let onne_NostrEvent$computeEventId$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0143 = var$1;
},
onne_NostrEvent$computeEventId$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new onne_NostrEvent$computeEventId$lambda$_8_0();
    onne_NostrEvent$computeEventId$lambda$_8_0__init_(var_1, var_0);
    return var_1;
},
onne_NostrEvent$computeEventId$lambda$_8_0_run = var$0 => {
    onne_NostrEvent_lambda$computeEventId$0(var$0.$_0143);
};
function jn_URL() {
    let a = this; jl_Object.call(a);
    a.$hashCode10 = 0;
    a.$file = null;
    a.$protocol = null;
    a.$host = null;
    a.$port = 0;
    a.$authority0 = null;
    a.$userInfo = null;
    a.$path0 = null;
    a.$query1 = null;
    a.$ref = null;
    a.$strmHandler = null;
}
let jn_URL_streamHandlers = null,
jn_URL_streamHandlerFactory = null,
jn_URL_$callClinit = () => {
    jn_URL_$callClinit = $rt_eraseClinit(jn_URL);
    jn_URL__clinit_();
},
jn_URL__init_0 = ($this, $spec) => {
    jn_URL_$callClinit();
    jn_URL__init_($this, null, $spec, null);
},
jn_URL__init_1 = var_0 => {
    let var_1 = new jn_URL();
    jn_URL__init_0(var_1, var_0);
    return var_1;
},
jn_URL__init_ = ($this, $context, $spec, $handler) => {
    let var$4, $index, $e, $startIPv6Addr, $c, $valid, $i, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, $cPath, $$je;
    jn_URL_$callClinit();
    jl_Object__init_($this);
    $this.$port = (-1);
    $this.$strmHandler = $handler;
    if ($spec === null)
        $rt_throw(jn_MalformedURLException__init_0());
    var$4 = $spec.$trim();
    a: {
        try {
            $index = var$4.$indexOf(58);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NullPointerException) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rt_throw(jn_MalformedURLException__init_($e.$toString()));
    }
    $startIPv6Addr = var$4.$indexOf(91);
    if ($index > 0 && !($startIPv6Addr != (-1) && $index >= $startIPv6Addr)) {
        b: {
            c: {
                $this.$protocol = var$4.$substring(0, $index);
                $c = $this.$protocol.$charAt(0);
                if (!(97 <= $c && $c <= 122)) {
                    if (65 > $c)
                        break c;
                    if ($c > 90)
                        break c;
                }
                $valid = 1;
                break b;
            }
            $valid = 0;
        }
        $i = 1;
        while ($valid && $i < $this.$protocol.$length()) {
            var$11 = $this.$protocol.$charAt($i);
            $valid = !(97 <= var$11 && var$11 <= 122) && !(65 <= var$11 && var$11 <= 90) && !(48 <= var$11 && var$11 <= 57) && var$11 != 43 && var$11 != 45 && var$11 != 46 ? 0 : 1;
            $i = $i + 1 | 0;
        }
        if ($valid)
            $this.$protocol = $this.$protocol.$toLowerCase2();
        else {
            $this.$protocol = null;
            $index = (-1);
        }
    }
    if ($this.$protocol === null) {
        if ($context === null)
            $rt_throw(jn_MalformedURLException__init_0());
        var$12 = jn_URL_getProtocol($context);
        var$13 = jn_URL_getHost($context);
        var$11 = jn_URL_getPort($context);
        var$14 = jn_URL_getAuthority($context);
        var$15 = jn_URL_getUserInfo($context);
        var$16 = jn_URL_getPath($context);
        var$17 = jn_URL_getQuery($context);
        var$18 = null;
        jn_URL_set($this, var$12, var$13, var$11, var$14, var$15, var$16, var$17, var$18);
        if ($this.$strmHandler === null)
            $this.$strmHandler = $context.$strmHandler;
    } else if ($context !== null && $this.$protocol.$equals(jn_URL_getProtocol($context))) {
        $cPath = jn_URL_getPath($context);
        if ($cPath !== null && $cPath.$startsWith($rt_s(469))) {
            var$18 = $this.$protocol;
            var$12 = jn_URL_getHost($context);
            var$11 = jn_URL_getPort($context);
            var$13 = jn_URL_getAuthority($context);
            var$14 = jn_URL_getUserInfo($context);
            var$15 = jn_URL_getQuery($context);
            var$16 = null;
            jn_URL_set($this, var$18, var$12, var$11, var$13, var$14, $cPath, var$15, var$16);
        }
        if ($this.$strmHandler === null)
            $this.$strmHandler = $context.$strmHandler;
    }
    if ($this.$strmHandler === null) {
        jn_URL_setupStreamHandler($this);
        if ($this.$strmHandler === null)
            $rt_throw(jn_MalformedURLException__init_0());
    }
    d: {
        try {
            $this.$strmHandler.$parseURL($this, var$4, $index + 1 | 0, var$4.$length());
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $e = $$je;
            } else {
                throw $$e;
            }
        }
        $rt_throw(jn_MalformedURLException__init_($e.$toString()));
    }
    if ($this.$port >= (-1))
        return;
    $rt_throw(jn_MalformedURLException__init_0());
},
jn_URL__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jn_URL();
    jn_URL__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jn_URL_fixURL = ($this, $fixHost) => {
    let var$2, var$3, var$4, $index;
    if ($this.$host !== null && $this.$host.$length() > 0) {
        $this.$authority0 = $this.$host;
        if ($this.$port != (-1)) {
            var$2 = $this.$authority0;
            var$3 = $this.$port;
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, var$2), 58), var$3);
            $this.$authority0 = jl_StringBuilder_toString(var$4);
        }
    }
    if ($fixHost) {
        $index = (-1);
        if ($this.$host !== null)
            $index = $this.$host.$lastIndexOf(64);
        if ($index < 0)
            $this.$userInfo = null;
        else {
            $this.$userInfo = $this.$host.$substring(0, $index);
            $this.$host = $this.$host.$substring0($index + 1 | 0);
        }
    }
    $index = (-1);
    if ($this.$file !== null)
        $index = $this.$file.$indexOf(63);
    if ($index < 0) {
        $this.$query1 = null;
        $this.$path0 = $this.$file;
    } else {
        $this.$query1 = $this.$file.$substring0($index + 1 | 0);
        $this.$path0 = $this.$file.$substring(0, $index);
    }
},
jn_URL_set0 = ($this, $protocol, $host, $port, $file, $ref) => {
    if ($this.$protocol === null)
        $this.$protocol = $protocol;
    $this.$host = $host;
    $this.$file = $file;
    $this.$port = $port;
    $this.$ref = $ref;
    $this.$hashCode10 = 0;
    jn_URL_fixURL($this, 1);
},
jn_URL_setupStreamHandler = $this => {
    let var$1, var$2;
    jn_URL_$callClinit();
    $this.$strmHandler = jn_URL_streamHandlers.$get1($this.$protocol);
    if ($this.$strmHandler !== null)
        return;
    if (jn_URL_streamHandlerFactory !== null) {
        $this.$strmHandler = jn_URL_streamHandlerFactory.$createURLStreamHandler($this.$protocol);
        if ($this.$strmHandler !== null) {
            jn_URL_streamHandlers.$put1($this.$protocol, $this.$strmHandler);
            return;
        }
    }
    a: {
        var$1 = $this.$protocol;
        var$2 = (-1);
        switch (var$1.$hashCode()) {
            case 101730:
                if (!var$1.$equals($rt_s(1485)))
                    break a;
                var$2 = 2;
                break a;
            case 3213448:
                if (!var$1.$equals($rt_s(1486)))
                    break a;
                var$2 = 0;
                break a;
            case 99617003:
                if (!var$1.$equals($rt_s(1487)))
                    break a;
                var$2 = 1;
                break a;
            default:
        }
    }
    b: {
        switch (var$2) {
            case 0:
            case 1:
                break;
            case 2:
                $this.$strmHandler = jni_DummyStreamHandler__init_0(21);
                break b;
            default:
                $this.$strmHandler = jni_DummyStreamHandler__init_0((-1));
                break b;
        }
        $this.$strmHandler = jni_XHRStreamHandler__init_0();
    }
},
jn_URL_getHost = $this => {
    return $this.$host;
},
jn_URL_getPort = $this => {
    return $this.$port;
},
jn_URL_getProtocol = $this => {
    return $this.$protocol;
},
jn_URL_getRef = $this => {
    return $this.$ref;
},
jn_URL_getQuery = $this => {
    return $this.$query1;
},
jn_URL_getPath = $this => {
    return $this.$path0;
},
jn_URL_getUserInfo = $this => {
    return $this.$userInfo;
},
jn_URL_getAuthority = $this => {
    return $this.$authority0;
},
jn_URL_set = ($this, $protocol, $host, $port, $authority, $userInfo, $path, $query, $ref) => {
    let var$9;
    if ($query === null)
        var$9 = $path;
    else if ($query.$isEmpty())
        var$9 = $path;
    else if ($path === null) {
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append0(var$9, 63), $query);
        var$9 = jl_StringBuilder_toString(var$9);
    } else {
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$9, $path), 63), $query);
        var$9 = jl_StringBuilder_toString(var$9);
    }
    jn_URL_set0($this, $protocol, $host, $port, var$9, $ref);
    $this.$authority0 = $authority;
    $this.$userInfo = $userInfo;
    $this.$path0 = $path;
    $this.$query1 = $query;
},
jn_URL__clinit_ = () => {
    jn_URL_streamHandlers = ju_HashMap__init_();
};
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high = 0;
}
let jur_HighSurrogateCharSet__init_ = ($this, $high) => {
    jur_JointSet__init_($this);
    $this.$high = $high;
},
jur_HighSurrogateCharSet__init_0 = var_0 => {
    let var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_(var_1, var_0);
    return var_1;
},
jur_HighSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next5 = $next;
},
jur_HighSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    var$6 = $rt_compare(var$5, $strLength);
    if (var$6 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (var$6 < 0) {
        $low = $testString.$charAt(var$5);
        if (jl_Character_isLowSurrogate($low))
            return (-1);
    }
    if ($this.$high != $high)
        return (-1);
    return $this.$next5.$matches(var$5, $testString, $matchResult);
},
jur_HighSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf0($this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate($testStr.$charAt($strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next5.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_HighSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf0($this.$high, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            var$8 = var$7 + 1 | 0;
            if (var$8 < $strLength && jl_Character_isLowSurrogate($testStr.$charAt(var$8))) {
                $lastIndex = var$7 + (-1) | 0;
                continue;
            }
            if ($this.$next5.$matches(var$8, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_HighSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$high;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_HighSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high != $this.$high ? 0 : 1;
},
jur_HighSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function onne_NostrEvent$computeEventId$lambda$_8_1() {
    jl_Object.call(this);
    this.$_096 = null;
}
let onne_NostrEvent$computeEventId$lambda$_8_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_096 = var$1;
},
onne_NostrEvent$computeEventId$lambda$_8_1__init_0 = var_0 => {
    let var_1 = new onne_NostrEvent$computeEventId$lambda$_8_1();
    onne_NostrEvent$computeEventId$lambda$_8_1__init_(var_1, var_0);
    return var_1;
},
onne_NostrEvent$computeEventId$lambda$_8_1_run = var$0 => {
    onne_NostrEvent_lambda$computeEventId$1(var$0.$_096);
},
onnn_Nip01UserMetadataFilter = $rt_classWithoutFields(onn_NostrFilter),
onnn_Nip01UserMetadataFilter__init_0 = ($this, $pubkey) => {
    onn_NostrFilter__init_0($this);
    if ($pubkey !== null)
        $this.$withAuthor(onnk_NostrPublicKey_asHex($pubkey));
    $this.$withKind0(0);
    $this.$limit0(1);
},
onnn_Nip01UserMetadataFilter__init_ = var_0 => {
    let var_1 = new onnn_Nip01UserMetadataFilter();
    onnn_Nip01UserMetadataFilter__init_0(var_1, var_0);
    return var_1;
},
onnn_Nip01UserMetadataFilter__init_$exported$0 = var$1 => {
    return onnn_Nip01UserMetadataFilter__init_(var$1);
};
function onnrs_NostrRTCIceCandidate() {
    let a = this; jl_Object.call(a);
    a.$pubkey5 = null;
    a.$map3 = null;
    a.$candidates = null;
}
let onnrs_NostrRTCIceCandidate__init_ = ($this, $pubkey, $candidates, $misc) => {
    let $map;
    jl_Object__init_($this);
    $this.$candidates = ju_Collections_unmodifiableCollection($candidates);
    $map = ju_HashMap__init_();
    if ($misc !== null && !$misc.$isEmpty())
        $map.$putAll($misc);
    $map.$put1($rt_s(1488), $this.$candidates);
    $this.$map3 = ju_Collections_unmodifiableMap($map);
    $this.$pubkey5 = $pubkey;
},
onnrs_NostrRTCIceCandidate__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new onnrs_NostrRTCIceCandidate();
    onnrs_NostrRTCIceCandidate__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onnrs_NostrRTCIceCandidate__init_0 = ($this, $pubkey, $map) => {
    onnrs_NostrRTCIceCandidate__init_($this, $pubkey, ju_Arrays_asList(onp_NGEUtils_safeStringArray($map.$get1($rt_s(1488)))), $map);
},
onnrs_NostrRTCIceCandidate__init_1 = (var_0, var_1) => {
    let var_2 = new onnrs_NostrRTCIceCandidate();
    onnrs_NostrRTCIceCandidate__init_0(var_2, var_0, var_1);
    return var_2;
},
onnrs_NostrRTCIceCandidate_getCandidates = $this => {
    return $this.$candidates;
},
onnrs_NostrRTCIceCandidate_get = $this => {
    return $this.$map3;
},
onnrs_NostrRTCIceCandidate_toString = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = jl_String_valueOf($this.$pubkey5);
    var$2 = $this.$map3;
    var$2 = ju_Arrays_deepToString((var$2.$entrySet()).$toArray0());
    var$3 = $this.$candidates;
    var$3 = ju_Arrays_deepToString(var$3.$toArray0());
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(1057)), var$1), $rt_s(1058)), var$2), $rt_s(1489)), var$3), $rt_s(1490));
    var$1 = jl_StringBuilder_toString(var$4);
    return var$1;
},
onnrs_NostrRTCIceCandidate_getPubkey = $this => {
    return $this.$pubkey5;
},
onnrs_NostrRTCIceCandidate_getPubkey$exported$0 = var$1 => {
    return var$1.$getPubkey();
},
onnrs_NostrRTCIceCandidate__init_$exported$1 = (var$1, var$2, var$3) => {
    return onnrs_NostrRTCIceCandidate__init_2(var$1, var$2, var$3);
},
onnrs_NostrRTCIceCandidate_getCandidates$exported$2 = var$1 => {
    return var$1.$getCandidates();
},
onnrs_NostrRTCIceCandidate_toString$exported$3 = var$1 => {
    return $rt_ustr(var$1.$toString());
},
onnrs_NostrRTCIceCandidate_get$exported$4 = var$1 => {
    return var$1.$get20();
},
onnrs_NostrRTCIceCandidate__init_$exported$5 = (var$1, var$2) => {
    return onnrs_NostrRTCIceCandidate__init_1(var$1, var$2);
},
otji_JS$byteArrayWrapper$lambda$_37_0 = $rt_classWithoutFields(),
otji_JS$byteArrayWrapper$lambda$_37_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
otji_JS$byteArrayWrapper$lambda$_37_0__init_0 = () => {
    let var_0 = new otji_JS$byteArrayWrapper$lambda$_37_0();
    otji_JS$byteArrayWrapper$lambda$_37_0__init_(var_0);
    return var_0;
},
otji_JS$byteArrayWrapper$lambda$_37_0_apply0 = (var$0, var$1) => {
    return otji_JS$byteArrayWrapper$lambda$_37_0_apply(var$0, var$1);
},
otji_JS$byteArrayWrapper$lambda$_37_0_apply = (var$0, var$1) => {
    return otji_JS_wrap0(var$1);
};
function jtf_DateTimeFormatterBuilder$CompositePrinterParser() {
    let a = this; jl_Object.call(a);
    a.$printerParsers0 = null;
    a.$optional = 0;
}
let jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_0 = ($this, $printerParsers, $optional) => {
    jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_($this, $printerParsers.$toArray($rt_createArray(jtf_DateTimeFormatterBuilder$DateTimePrinterParser, $printerParsers.$size())), $optional);
},
jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_1 = (var_0, var_1) => {
    let var_2 = new jtf_DateTimeFormatterBuilder$CompositePrinterParser();
    jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_0(var_2, var_0, var_1);
    return var_2;
},
jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_ = ($this, $printerParsers, $optional) => {
    jl_Object__init_($this);
    $this.$printerParsers0 = $printerParsers;
    $this.$optional = $optional;
},
jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_2 = (var_0, var_1) => {
    let var_2 = new jtf_DateTimeFormatterBuilder$CompositePrinterParser();
    jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_(var_2, var_0, var_1);
    return var_2;
},
jtf_DateTimeFormatterBuilder$CompositePrinterParser_withOptional = ($this, $optional) => {
    if ($optional == $this.$optional)
        return $this;
    return jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_2($this.$printerParsers0, $optional);
},
jtf_DateTimeFormatterBuilder$CompositePrinterParser_parse = ($this, $context, $text, $position) => {
    let var$4, var$5, var$6, $pp, var$8;
    if (!$this.$optional) {
        var$4 = $this.$printerParsers0.data;
        var$5 = var$4.length;
        var$6 = 0;
        a: {
            while (var$6 < var$5) {
                $pp = var$4[var$6];
                $position = $pp.$parse2($context, $text, $position);
                if ($position < 0)
                    break a;
                var$6 = var$6 + 1 | 0;
            }
        }
        return $position;
    }
    jtf_DateTimeParseContext_startOptional($context);
    var$4 = $this.$printerParsers0.data;
    var$8 = var$4.length;
    var$5 = 0;
    var$6 = $position;
    while (var$5 < var$8) {
        $pp = var$4[var$5];
        var$6 = $pp.$parse2($context, $text, var$6);
        if (var$6 < 0) {
            jtf_DateTimeParseContext_endOptional($context, 0);
            return $position;
        }
        var$5 = var$5 + 1 | 0;
    }
    jtf_DateTimeParseContext_endOptional($context, 1);
    return var$6;
},
jtf_DateTimeFormatterBuilder$CompositePrinterParser_toString = $this => {
    let $buf, var$2, var$3, var$4, $pp;
    $buf = jl_StringBuilder__init_();
    if ($this.$printerParsers0 !== null) {
        $buf.$append1(!$this.$optional ? $rt_s(1491) : $rt_s(714));
        var$2 = $this.$printerParsers0.data;
        var$3 = var$2.length;
        var$4 = 0;
        while (var$4 < var$3) {
            $pp = var$2[var$4];
            $buf.$append($pp);
            var$4 = var$4 + 1 | 0;
        }
        $buf.$append1(!$this.$optional ? $rt_s(1398) : $rt_s(62));
    }
    return $buf.$toString();
};
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
let otpp_AsyncCallbackWrapper__init_ = ($this, $realAsyncCallback) => {
    jl_Object__init_($this);
    $this.$realAsyncCallback = $realAsyncCallback;
},
otpp_AsyncCallbackWrapper__init_0 = var_0 => {
    let var_1 = new otpp_AsyncCallbackWrapper();
    otpp_AsyncCallbackWrapper__init_(var_1, var_0);
    return var_1;
},
otpp_AsyncCallbackWrapper_create = $realAsyncCallback => {
    return otpp_AsyncCallbackWrapper__init_0($realAsyncCallback);
},
otpp_AsyncCallbackWrapper_complete = ($this, $result) => {
    $this.$realAsyncCallback.$complete($result);
},
otpp_AsyncCallbackWrapper_error = ($this, $e) => {
    $this.$realAsyncCallback.$error($e);
};
function onn_NostrRelay$loop$lambda$_26_0() {
    jl_Object.call(this);
    this.$_097 = null;
}
let onn_NostrRelay$loop$lambda$_26_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_097 = var$1;
},
onn_NostrRelay$loop$lambda$_26_0__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$loop$lambda$_26_0();
    onn_NostrRelay$loop$lambda$_26_0__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$loop$lambda$_26_0_run = var$0 => {
    onn_NostrRelay_lambda$loop$37(var$0.$_097);
};
function onn_NostrRelay$loop$lambda$_26_1() {
    jl_Object.call(this);
    this.$_0179 = null;
}
let onn_NostrRelay$loop$lambda$_26_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0179 = var$1;
},
onn_NostrRelay$loop$lambda$_26_1__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$loop$lambda$_26_1();
    onn_NostrRelay$loop$lambda$_26_1__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$loop$lambda$_26_1_run = var$0 => {
    onn_NostrRelay_lambda$loop$38(var$0.$_0179);
};
function onn_NostrRelay$loop$lambda$_26_2() {
    jl_Object.call(this);
    this.$_030 = null;
}
let onn_NostrRelay$loop$lambda$_26_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_030 = var$1;
},
onn_NostrRelay$loop$lambda$_26_2__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$loop$lambda$_26_2();
    onn_NostrRelay$loop$lambda$_26_2__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$loop$lambda$_26_2_run = var$0 => {
    onn_NostrRelay_lambda$loop$40(var$0.$_030);
};
function onn_NostrRelay$loop$lambda$_26_3() {
    jl_Object.call(this);
    this.$_015 = null;
}
let onn_NostrRelay$loop$lambda$_26_3__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_015 = var$1;
},
onn_NostrRelay$loop$lambda$_26_3__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$loop$lambda$_26_3();
    onn_NostrRelay$loop$lambda$_26_3__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$loop$lambda$_26_3_call = var$0 => {
    return onn_NostrRelay_lambda$loop$41(var$0.$_015);
};
function onn_NostrRelay$loop$lambda$_26_4() {
    jl_Object.call(this);
    this.$_054 = null;
}
let onn_NostrRelay$loop$lambda$_26_4__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_054 = var$1;
},
onn_NostrRelay$loop$lambda$_26_4__init_0 = var_0 => {
    let var_1 = new onn_NostrRelay$loop$lambda$_26_4();
    onn_NostrRelay$loop$lambda$_26_4__init_(var_1, var_0);
    return var_1;
},
onn_NostrRelay$loop$lambda$_26_4_run = var$0 => {
    onn_NostrRelay_lambda$loop$39(var$0.$_054);
};
function onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0() {
    jl_Object.call(this);
    this.$_055 = null;
}
let onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_055 = var$1;
},
onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0__init_0 = var_0 => {
    let var_1 = new onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0();
    onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0__init_(var_1, var_0);
    return var_1;
},
onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0_apply0 = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0_apply(var$0, var$1);
},
onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0_apply = (var$0, var$1) => {
    return onnrs_NostrRTCSignaling_lambda$sendAnnounce$9(var$0.$_055, var$1);
};
function jn_URI() {
    let a = this; jl_Object.call(a);
    a.$string4 = null;
    a.$scheme = null;
    a.$schemespecificpart = null;
    a.$authority = null;
    a.$userinfo = null;
    a.$host0 = null;
    a.$port0 = 0;
    a.$path = null;
    a.$query0 = null;
    a.$fragment = null;
    a.$opaque = 0;
    a.$absolute = 0;
    a.$serverAuthority = 0;
    a.$hash0 = 0;
}
let jn_URI__init_0 = ($this, $uri) => {
    jl_Object__init_($this);
    $this.$port0 = (-1);
    $this.$hash0 = (-1);
    jn_URI$Helper_parseURI(jn_URI$Helper__init_($this), $uri, 0);
},
jn_URI__init_ = var_0 => {
    let var_1 = new jn_URI();
    jn_URI__init_0(var_1, var_0);
    return var_1;
},
jn_URI_toString = $this => {
    let $result;
    if ($this.$string4 === null) {
        $result = jl_StringBuilder__init_();
        if ($this.$scheme !== null) {
            $result.$append1($this.$scheme);
            $result.$append0(58);
        }
        if ($this.$opaque)
            $result.$append1($this.$schemespecificpart);
        else {
            if ($this.$authority !== null) {
                $result.$append1($rt_s(864));
                $result.$append1($this.$authority);
            }
            if ($this.$path !== null)
                $result.$append1($this.$path);
            if ($this.$query0 !== null) {
                $result.$append0(63);
                $result.$append1($this.$query0);
            }
        }
        if ($this.$fragment !== null) {
            $result.$append0(35);
            $result.$append1($this.$fragment);
        }
        $this.$string4 = $result.$toString();
    }
    return $this.$string4;
},
jn_URI_toURL = $this => {
    if (!$this.$absolute)
        $rt_throw(jl_IllegalArgumentException__init_0());
    return jn_URL__init_1(jn_URI_toString($this));
};
function onnn_Nip49$encrypt$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_0176 = null;
    a.$_187 = null;
    a.$_242 = 0;
    a.$_316 = 0;
}
let onnn_Nip49$encrypt$lambda$_10_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_0176 = var$1;
    var$0.$_187 = var$2;
    var$0.$_242 = var$3;
    var$0.$_316 = var$4;
},
onnn_Nip49$encrypt$lambda$_10_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onnn_Nip49$encrypt$lambda$_10_0();
    onnn_Nip49$encrypt$lambda$_10_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onnn_Nip49$encrypt$lambda$_10_0_call0 = var$0 => {
    return onnn_Nip49$encrypt$lambda$_10_0_call(var$0);
},
onnn_Nip49$encrypt$lambda$_10_0_call = var$0 => {
    return onnn_Nip49_lambda$encrypt$1(var$0.$_0176, var$0.$_187, var$0.$_242, var$0.$_316);
};
function jm_RoundingMode() {
    jl_Enum.call(this);
    this.$bigDecimalRM = 0;
}
let jm_RoundingMode_UP = null,
jm_RoundingMode_DOWN = null,
jm_RoundingMode_CEILING = null,
jm_RoundingMode_FLOOR = null,
jm_RoundingMode_HALF_UP = null,
jm_RoundingMode_HALF_DOWN = null,
jm_RoundingMode_HALF_EVEN = null,
jm_RoundingMode_UNNECESSARY = null,
jm_RoundingMode_$VALUES = null,
jm_RoundingMode_$callClinit = () => {
    jm_RoundingMode_$callClinit = $rt_eraseClinit(jm_RoundingMode);
    jm_RoundingMode__clinit_();
},
jm_RoundingMode_values = () => {
    jm_RoundingMode_$callClinit();
    return jm_RoundingMode_$VALUES.$clone0();
},
jm_RoundingMode__init_0 = ($this, var$1, var$2, $rm) => {
    jm_RoundingMode_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$bigDecimalRM = $rm;
},
jm_RoundingMode__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jm_RoundingMode();
    jm_RoundingMode__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jm_RoundingMode_$values = () => {
    let var$1, var$2;
    jm_RoundingMode_$callClinit();
    var$1 = $rt_createArray(jm_RoundingMode, 8);
    var$2 = var$1.data;
    var$2[0] = jm_RoundingMode_UP;
    var$2[1] = jm_RoundingMode_DOWN;
    var$2[2] = jm_RoundingMode_CEILING;
    var$2[3] = jm_RoundingMode_FLOOR;
    var$2[4] = jm_RoundingMode_HALF_UP;
    var$2[5] = jm_RoundingMode_HALF_DOWN;
    var$2[6] = jm_RoundingMode_HALF_EVEN;
    var$2[7] = jm_RoundingMode_UNNECESSARY;
    return var$1;
},
jm_RoundingMode__clinit_ = () => {
    jm_RoundingMode_UP = jm_RoundingMode__init_($rt_s(1492), 0, 0);
    jm_RoundingMode_DOWN = jm_RoundingMode__init_($rt_s(1493), 1, 1);
    jm_RoundingMode_CEILING = jm_RoundingMode__init_($rt_s(1494), 2, 2);
    jm_RoundingMode_FLOOR = jm_RoundingMode__init_($rt_s(1495), 3, 3);
    jm_RoundingMode_HALF_UP = jm_RoundingMode__init_($rt_s(1496), 4, 4);
    jm_RoundingMode_HALF_DOWN = jm_RoundingMode__init_($rt_s(1497), 5, 5);
    jm_RoundingMode_HALF_EVEN = jm_RoundingMode__init_($rt_s(1498), 6, 6);
    jm_RoundingMode_UNNECESSARY = jm_RoundingMode__init_($rt_s(1499), 7, 7);
    jm_RoundingMode_$VALUES = jm_RoundingMode_$values();
};
function onnrt_NostrTURN$write$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_0141 = null;
    a.$_172 = null;
}
let onnrt_NostrTURN$write$lambda$_10_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0141 = var$1;
    var$0.$_172 = var$2;
},
onnrt_NostrTURN$write$lambda$_10_0__init_0 = (var_0, var_1) => {
    let var_2 = new onnrt_NostrTURN$write$lambda$_10_0();
    onnrt_NostrTURN$write$lambda$_10_0__init_(var_2, var_0, var_1);
    return var_2;
},
onnrt_NostrTURN$write$lambda$_10_0_accept0 = (var$0, var$1, var$2) => {
    onnrt_NostrTURN$write$lambda$_10_0_accept(var$0, var$1, var$2);
},
onnrt_NostrTURN$write$lambda$_10_0_accept = (var$0, var$1, var$2) => {
    onnrt_NostrTURN_lambda$write$10(var$0.$_0141, var$0.$_172, var$1, var$2);
},
jl_IllegalAccessException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jl_IllegalAccessException__init_ = $this => {
    jl_ReflectiveOperationException__init_($this);
},
jl_IllegalAccessException__init_0 = () => {
    let var_0 = new jl_IllegalAccessException();
    jl_IllegalAccessException__init_(var_0);
    return var_0;
};
function onnn_Nip39ExternalIdentities() {
    onnn_Nip01UserMetadata.call(this);
    this.$externalIdentities = null;
}
let onnn_Nip39ExternalIdentities__init_ = ($this, $nip01) => {
    onnn_Nip01UserMetadata__init_($this, $nip01.$getSourceEvent());
},
onnn_Nip39ExternalIdentities__init_1 = var_0 => {
    let var_1 = new onnn_Nip39ExternalIdentities();
    onnn_Nip39ExternalIdentities__init_(var_1, var_0);
    return var_1;
},
onnn_Nip39ExternalIdentities__init_0 = ($this, $source) => {
    onnn_Nip01UserMetadata__init_($this, $source);
},
onnn_Nip39ExternalIdentities__init_2 = var_0 => {
    let var_1 = new onnn_Nip39ExternalIdentities();
    onnn_Nip39ExternalIdentities__init_0(var_1, var_0);
    return var_1;
},
onnn_Nip39ExternalIdentities_getExternalIdentities = $this => {
    let $externalIdentities, $is, var$3, $t, $platformAndId, $proofs, $i, var$8, $identity;
    if ($this.$externalIdentities === null) {
        $externalIdentities = ju_ArrayList__init_();
        $is = ($this.$getSourceEvent()).$getTag($rt_s(1500));
        var$3 = $is.$iterator();
        while (var$3.$hasNext()) {
            $t = var$3.$next();
            $platformAndId = ($t.$get15(0)).$split($rt_s(708), 1);
            $proofs = ju_ArrayList__init_();
            $i = 1;
            while ($i < $t.$size()) {
                $proofs.$add1($t.$get15($i));
                $i = $i + 1 | 0;
            }
            var$8 = $platformAndId.data;
            $identity = onnn_GenericIdentity__init_(var$8[0], var$8[1], $proofs);
            $externalIdentities.$add1($identity);
        }
        $this.$externalIdentities = $externalIdentities;
    }
    return $this.$externalIdentities;
},
onnn_Nip39ExternalIdentities_setExternalIdentity = ($this, $platform, $identity, $proofs) => {
    $this.$setExternalIdentity(onnn_GenericIdentity__init_($platform, $identity, $proofs));
},
onnn_Nip39ExternalIdentities_setExternalIdentity0 = ($this, $identity) => {
    if ($this.$externalIdentities !== null)
        $this.$removeExternalIdentity($identity.$getPlatform0());
    else
        $this.$externalIdentities = ju_ArrayList__init_();
    $this.$externalIdentities.$add1($identity);
},
onnn_Nip39ExternalIdentities_removeExternalIdentity0 = ($this, $identity) => {
    if ($this.$externalIdentities === null)
        return;
    $this.$externalIdentities.$remove2($identity);
},
onnn_Nip39ExternalIdentities_removeExternalIdentity = ($this, $platform) => {
    $this.$removeExternalIdentity0($platform, null);
},
onnn_Nip39ExternalIdentities_removeExternalIdentity1 = ($this, $platform, $identity) => {
    let $iterator, $i;
    if ($this.$externalIdentities === null)
        return;
    $iterator = $this.$externalIdentities.$iterator();
    while ($iterator.$hasNext()) {
        $i = $iterator.$next();
        if (($i.$getPlatform0()).$equals($platform) && !($identity !== null && !($i.$getIdentity()).$equals($identity)))
            $iterator.$remove();
    }
},
onnn_Nip39ExternalIdentities_getExternalIdentity = ($this, $platform, $identity) => {
    let var$3, $i;
    if ($this.$externalIdentities === null)
        return null;
    var$3 = $this.$externalIdentities.$iterator();
    while (true) {
        if (!var$3.$hasNext())
            return null;
        $i = var$3.$next();
        if (($i.$getPlatform0()).$equals($platform)) {
            if ($identity === null)
                break;
            if (($i.$getIdentity()).$equals($identity))
                break;
        }
    }
    return $i;
},
onnn_Nip39ExternalIdentities_getExternalIdentity0 = ($this, $platform) => {
    return $this.$getExternalIdentity($platform, null);
},
onnn_Nip39ExternalIdentities_clearExternalIdentities = $this => {
    ($this.$getExternalIdentities()).$clear();
},
onnn_Nip39ExternalIdentities_toUpdateEvent = $this => {
    let $event, var$2, $identity, $values, var$5, var$6, var$7, $proof;
    $event = onnn_Nip01UserMetadata_toUpdateEvent($this);
    var$2 = ($this.$getExternalIdentities()).$iterator();
    while (var$2.$hasNext()) {
        $identity = var$2.$next();
        $values = ju_ArrayList__init_();
        var$5 = $identity.$getPlatform0();
        var$6 = $identity.$getIdentity();
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$7, var$5), 58), var$6);
        $values.$add1(jl_StringBuilder_toString(var$7));
        var$5 = ($identity.$getProof()).$iterator();
        while (var$5.$hasNext()) {
            $proof = var$5.$next();
            $values.$add1($proof);
        }
        $event.$withTag1($rt_s(1500), $values);
    }
    return $event;
},
onnn_Nip39ExternalIdentities_removeExternalIdentity$exported$0 = (var$1, var$2, var$3) => {
    var$2 = $rt_str(var$2);
    var$3 = $rt_str(var$3);
    var$1.$removeExternalIdentity0(var$2, var$3);
},
onnn_Nip39ExternalIdentities_getExternalIdentities$exported$1 = var$1 => {
    return var$1.$getExternalIdentities();
},
onnn_Nip39ExternalIdentities_removeExternalIdentity$exported$2 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    var$1.$removeExternalIdentity(var$2);
},
onnn_Nip39ExternalIdentities_getExternalIdentity$exported$3 = (var$1, var$2, var$3) => {
    var$2 = $rt_str(var$2);
    var$3 = $rt_str(var$3);
    return var$1.$getExternalIdentity(var$2, var$3);
},
onnn_Nip39ExternalIdentities_setExternalIdentity$exported$4 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$setExternalIdentity(var$2);
},
onnn_Nip39ExternalIdentities__init_$exported$5 = var$1 => {
    return onnn_Nip39ExternalIdentities__init_1(var$1);
},
onnn_Nip39ExternalIdentities_clearExternalIdentities$exported$6 = var$1 => {
    var$1.$clearExternalIdentities();
},
onnn_Nip39ExternalIdentities_getExternalIdentity$exported$7 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$getExternalIdentity0(var$2);
},
onnn_Nip39ExternalIdentities_removeExternalIdentity$exported$8 = (var$1, var$2) => {
    var$2 = var$2;
    var$1.$removeExternalIdentity1(var$2);
},
onnn_Nip39ExternalIdentities_setExternalIdentity$exported$9 = (var$1, var$2, var$3, var$4) => {
    var$2 = $rt_str(var$2);
    var$3 = $rt_str(var$3);
    var$4 = var$4;
    var$1.$setExternalIdentity0(var$2, var$3, var$4);
};
function jul_LogRecord() {
    let a = this; jl_Object.call(a);
    a.$level0 = null;
    a.$message4 = null;
    a.$millis0 = Long_ZERO;
    a.$parameters = null;
    a.$sequenceNumber = Long_ZERO;
    a.$threadID = Long_ZERO;
    a.$thrown = null;
}
let jul_LogRecord_sequenceNumberGenerator = Long_ZERO,
jul_LogRecord__init_0 = ($this, $level, $msg) => {
    let var$3;
    jl_Object__init_($this);
    $this.$level0 = $level;
    $this.$message4 = $msg;
    $this.$millis0 = jl_System_currentTimeMillis();
    var$3 = jul_LogRecord_sequenceNumberGenerator;
    jul_LogRecord_sequenceNumberGenerator = Long_add(var$3, Long_fromInt(1));
    $this.$sequenceNumber = var$3;
    $this.$threadID = (jl_Thread_currentThread()).$getId0();
},
jul_LogRecord__init_ = (var_0, var_1) => {
    let var_2 = new jul_LogRecord();
    jul_LogRecord__init_0(var_2, var_0, var_1);
    return var_2;
},
jul_LogRecord_getLevel = $this => {
    return $this.$level0;
},
jul_LogRecord_getMessage = $this => {
    return $this.$message4;
},
jul_LogRecord_getParameters = $this => {
    return $this.$parameters;
},
jul_LogRecord_setThrown = ($this, $thrown) => {
    $this.$thrown = $thrown;
},
ju_Base64 = $rt_classWithoutFields(),
ju_Base64_getEncoder = () => {
    let var$1;
    var$1 = new ju_Base64$Encoder;
    otci_Base64Impl_$callClinit();
    ju_Base64$Encoder__init_(var$1, otci_Base64Impl_alphabet, 1);
    return var$1;
},
ju_Base64_getDecoder = () => {
    let var$1;
    var$1 = new ju_Base64$Decoder;
    otci_Base64Impl_$callClinit();
    ju_Base64$Decoder__init_(var$1, otci_Base64Impl_reverse);
    return var$1;
};
function onn_NostrPool$lambda$fetch$12$lambda$_45_0() {
    let a = this; jl_Object.call(a);
    a.$_064 = null;
    a.$_135 = null;
}
let onn_NostrPool$lambda$fetch$12$lambda$_45_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_064 = var$1;
    var$0.$_135 = var$2;
},
onn_NostrPool$lambda$fetch$12$lambda$_45_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$lambda$fetch$12$lambda$_45_0();
    onn_NostrPool$lambda$fetch$12$lambda$_45_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$lambda$fetch$12$lambda$_45_0_run = var$0 => {
    onn_NostrPool_lambda$fetch$11(var$0.$_064, var$0.$_135);
};
function ju_Optional() {
    jl_Object.call(this);
    this.$value9 = null;
}
let ju_Optional_emptyInstance = null,
ju_Optional__init_0 = ($this, $value) => {
    jl_Object__init_($this);
    $this.$value9 = $value;
},
ju_Optional__init_ = var_0 => {
    let var_1 = new ju_Optional();
    ju_Optional__init_0(var_1, var_0);
    return var_1;
},
ju_Optional_empty = () => {
    if (ju_Optional_emptyInstance === null)
        ju_Optional_emptyInstance = ju_Optional__init_(null);
    return ju_Optional_emptyInstance;
},
ju_Optional_of = $value => {
    return ju_Optional__init_(ju_Objects_requireNonNull0($value));
},
ju_Optional_ofNullable = $value => {
    return $value === null ? ju_Optional_empty() : ju_Optional_of($value);
},
ju_Optional_orElse = ($this, $other) => {
    if ($this.$value9 !== null)
        $other = $this.$value9;
    return $other;
};
function cjj_Deflate$Config() {
    let a = this; jl_Object.call(a);
    a.$good_length = 0;
    a.$max_lazy = 0;
    a.$nice_length = 0;
    a.$max_chain = 0;
    a.$func = 0;
}
let cjj_Deflate$Config__init_0 = ($this, $good_length, $max_lazy, $nice_length, $max_chain, $func) => {
    jl_Object__init_($this);
    $this.$good_length = $good_length;
    $this.$max_lazy = $max_lazy;
    $this.$nice_length = $nice_length;
    $this.$max_chain = $max_chain;
    $this.$func = $func;
},
cjj_Deflate$Config__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cjj_Deflate$Config();
    cjj_Deflate$Config__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
};
function onn_NostrPool$lambda$fetch$14$lambda$_43_0() {
    let a = this; jl_Object.call(a);
    a.$_0183 = null;
    a.$_190 = null;
}
let onn_NostrPool$lambda$fetch$14$lambda$_43_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_0183 = var$1;
    var$0.$_190 = var$2;
},
onn_NostrPool$lambda$fetch$14$lambda$_43_0__init_0 = (var_0, var_1) => {
    let var_2 = new onn_NostrPool$lambda$fetch$14$lambda$_43_0();
    onn_NostrPool$lambda$fetch$14$lambda$_43_0__init_(var_2, var_0, var_1);
    return var_2;
},
onn_NostrPool$lambda$fetch$14$lambda$_43_0_run = var$0 => {
    onn_NostrPool_lambda$fetch$13(var$0.$_0183, var$0.$_190);
};
function onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0() {
    jl_Object.call(this);
    this.$_0144 = null;
}
let onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_0144 = var$1;
},
onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0__init_0 = var_0 => {
    let var_1 = new onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0();
    onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0__init_(var_1, var_0);
    return var_1;
},
onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0_accept0 = (var$0, var$1) => {
    onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0_accept(var$0, var$1);
},
onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0_accept = (var$0, var$1) => {
    onpt_TeaVMPlatform_lambda$awaitAll$0(var$0.$_0144, var$1);
};
function onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1() {
    let a = this; jl_Object.call(a);
    a.$_099 = null;
    a.$_154 = 0;
    a.$_227 = null;
    a.$_310 = null;
}
let onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_099 = var$1;
    var$0.$_154 = var$2;
    var$0.$_227 = var$3;
    var$0.$_310 = var$4;
},
onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1();
    onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1_apply = (var$0, var$1) => {
    return onpt_TeaVMPlatform_lambda$awaitAll$1(var$0.$_099, var$0.$_154, var$0.$_227, var$0.$_310, var$1);
};
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
let jur_UMultiLineEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter2 = $counter;
},
jur_UMultiLineEOLSet__init_0 = var_0 => {
    let var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_UMultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if ($strDif <= 0) {
        $matchResult.$setConsumed($this.$consCounter2, 0);
        return $this.$next5.$matches($strIndex, $testString, $matchResult);
    }
    if ($testString.$charAt($strIndex) != 10)
        return (-1);
    $matchResult.$setConsumed($this.$consCounter2, 1);
    return $this.$next5.$matches($strIndex + 1 | 0, $testString, $matchResult);
},
jur_UMultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter2) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter2, (-1));
    return $res;
},
jur_UMultiLineEOLSet_getName = $this => {
    return $rt_s(1501);
},
jt_LocalDate$1 = $rt_classWithoutFields(),
jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField = null,
jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit = null,
jt_LocalDate$1_$callClinit = () => {
    jt_LocalDate$1_$callClinit = $rt_eraseClinit(jt_LocalDate$1);
    jt_LocalDate$1__clinit_();
},
jt_LocalDate$1__clinit_ = () => {
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit = $rt_createIntArray((jtt_ChronoUnit_values()).data.length);
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_DAYS)] = 1;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_WEEKS)] = 2;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MONTHS)] = 3;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_YEARS)] = 4;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_DECADES)] = 5;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_CENTURIES)] = 6;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_MILLENNIA)] = 7;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoUnit.data[jl_Enum_ordinal(jtt_ChronoUnit_ERAS)] = 8;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField = $rt_createIntArray((jtt_ChronoField_values()).data.length);
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_DAY_OF_MONTH)] = 1;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_DAY_OF_YEAR)] = 2;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_ALIGNED_WEEK_OF_MONTH)] = 3;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_YEAR_OF_ERA)] = 4;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_DAY_OF_WEEK)] = 5;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_MONTH)] = 6;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_ALIGNED_DAY_OF_WEEK_IN_YEAR)] = 7;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_EPOCH_DAY)] = 8;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_ALIGNED_WEEK_OF_YEAR)] = 9;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_MONTH_OF_YEAR)] = 10;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_PROLEPTIC_MONTH)] = 11;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_YEAR)] = 12;
    jt_LocalDate$1_$SwitchMap$org$threeten$bp$temporal$ChronoField.data[jl_Enum_ordinal(jtt_ChronoField_ERA)] = 13;
};
function ju_AbstractMap$Values() {
    ju_AbstractCollection.call(this);
    this.$this$09 = null;
}
let ju_AbstractMap$Values__init_0 = ($this, var$1) => {
    $this.$this$09 = var$1;
    ju_AbstractCollection__init_($this);
},
ju_AbstractMap$Values__init_ = var_0 => {
    let var_1 = new ju_AbstractMap$Values();
    ju_AbstractMap$Values__init_0(var_1, var_0);
    return var_1;
},
ju_AbstractMap$Values_size = $this => {
    return $this.$this$09.$size();
},
ju_AbstractMap$Values_iterator = $this => {
    let $it;
    $it = ($this.$this$09.$entrySet()).$iterator();
    return ju_AbstractMap$Values$1__init_0($this, $it);
},
jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpecialsBlock__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazySpecialsBlock__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpecialsBlock_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(65279, 65279)).$add0(65520, 65533);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_0 = () => {
    let var_0 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_1();
    otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_(var_0);
    return var_0;
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept = (var$0, var$1) => {
    otji_JSWrapper$Helper_lambda$static$1(var$1);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1.$accept0(var$2);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_0 = () => {
    let var_0 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_0();
    otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_(var_0);
    return var_0;
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept = (var$0, var$1) => {
    otji_JSWrapper$Helper_lambda$static$0(var$1);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1.$accept0(var$2);
};
function onnn_NostrSearchFilter() {
    onn_NostrFilter.call(this);
    this.$search0 = null;
}
let onnn_NostrSearchFilter_search = ($this, $search) => {
    $this.$search0 = $search;
    return $this;
},
onnn_NostrSearchFilter_toMap = $this => {
    let $map;
    $map = onn_NostrFilter_toMap($this);
    if ($this.$search0 !== null && !$this.$search0.$isEmpty())
        $map.$put1($rt_s(1502), $this.$search0);
    return $map;
},
onnn_NostrSearchFilter_id0 = ($this, $id) => {
    return onn_NostrFilter_id($this, $id);
},
onnn_NostrSearchFilter_withAuthor = ($this, $author) => {
    return onn_NostrFilter_withAuthor($this, $author);
},
onnn_NostrSearchFilter_withAuthor2 = ($this, $author) => {
    return onn_NostrFilter_withAuthor0($this, $author);
},
onnn_NostrSearchFilter_withKind = ($this, $kind) => {
    return onn_NostrFilter_withKind($this, $kind);
},
onnn_NostrSearchFilter_since0 = ($this, $since) => {
    return onn_NostrFilter_since($this, $since);
},
onnn_NostrSearchFilter_until = ($this, $until) => {
    return onn_NostrFilter_until($this, $until);
},
onnn_NostrSearchFilter_limit = ($this, $limit) => {
    return onn_NostrFilter_limit($this, $limit);
},
onnn_NostrSearchFilter_withTag = ($this, $key, $values) => {
    return onn_NostrFilter_withTag($this, $key, $values);
},
onnn_NostrSearchFilter_withTag0 = ($this, var$1, var$2) => {
    return $this.$withTag3(var$1, var$2);
},
onnn_NostrSearchFilter_limit0 = ($this, var$1) => {
    return $this.$limit1(var$1);
},
onnn_NostrSearchFilter_until0 = ($this, var$1) => {
    return $this.$until0(var$1);
},
onnn_NostrSearchFilter_since = ($this, var$1) => {
    return $this.$since0(var$1);
},
onnn_NostrSearchFilter_withKind0 = ($this, var$1) => {
    return $this.$withKind1(var$1);
},
onnn_NostrSearchFilter_withAuthor0 = ($this, var$1) => {
    return $this.$withAuthor1(var$1);
},
onnn_NostrSearchFilter_withAuthor1 = ($this, var$1) => {
    return $this.$withAuthor2(var$1);
},
onnn_NostrSearchFilter_id = ($this, var$1) => {
    return $this.$id1(var$1);
};
function onnn_NostrSearchFilter_withTag$exported$0(var$1, var$2) {
    let var$3, var$4;
    var$3 = $rt_skip(arguments, 2);
    var$2 = $rt_str(var$2);
    var$4 = otji_JS_unwrapStringArray(var$3);
    return var$1.$withTag3(var$2, var$4);
}
let onnn_NostrSearchFilter_search$exported$1 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$search(var$2);
},
onnn_NostrSearchFilter_until$exported$2 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$until0(var$2);
},
onnn_NostrSearchFilter_withKind$exported$3 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return var$1.$withKind1(var$3);
},
onnn_NostrSearchFilter_since$exported$4 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$since0(var$2);
},
onnn_NostrSearchFilter_withAuthor$exported$5 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$withAuthor2(var$2);
},
onnn_NostrSearchFilter_id$exported$6 = (var$1, var$2) => {
    var$2 = $rt_str(var$2);
    return var$1.$id1(var$2);
},
onnn_NostrSearchFilter_limit$exported$7 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    return var$1.$limit1(var$3);
},
onnn_NostrSearchFilter_withAuthor$exported$8 = (var$1, var$2) => {
    var$2 = var$2;
    return var$1.$withAuthor1(var$2);
};
function ju_Arrays$ArrayAsList() {
    ju_AbstractList.call(this);
    this.$array4 = null;
}
let ju_Arrays$ArrayAsList__init_ = ($this, $array) => {
    ju_AbstractList__init_($this);
    $this.$array4 = $array;
},
ju_Arrays$ArrayAsList__init_0 = var_0 => {
    let var_1 = new ju_Arrays$ArrayAsList();
    ju_Arrays$ArrayAsList__init_(var_1, var_0);
    return var_1;
},
ju_Arrays$ArrayAsList_get = ($this, $index) => {
    return $this.$array4.data[$index];
},
ju_Arrays$ArrayAsList_set = ($this, $index, $element) => {
    let $old;
    $old = $this.$array4.data[$index];
    $this.$array4.data[$index] = $element;
    return $old;
},
ju_Arrays$ArrayAsList_size = $this => {
    return $this.$array4.data.length;
};
function onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0() {
    let a = this; jl_Object.call(a);
    a.$_010 = null;
    a.$_14 = null;
    a.$_23 = 0;
}
let onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_010 = var$1;
    var$0.$_14 = var$2;
    var$0.$_23 = var$3;
},
onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0();
    onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0_run = var$0 => {
    onns_NostrNIP46Signer_lambda$listen$5(var$0.$_010, var$0.$_14, var$0.$_23);
};
$rt_packages([-1, "com", 0, "jcraft", 1, "jzlib", -1, "java", 3, "util", 4, "zip", 4, "regex", 4, "stream", 4, "concurrent", 4, "logging", 3, "nio", 10, "charset", 11, "impl", 3, "io", 3, "math", 3, "time", 15, "zone", 15, "format", 15, "chrono", 15, "temporal", 3, "net", 20, "impl", 3, "lang", 22, "reflect", -1, "org", 24, "ngengine", 25, "nostr4j", 26, "rtc", 27, "listeners", 27, "turn", 27, "signal", 26, "nip39", 26, "nip05", 26, "nip49", 26, "keypair", 26, "pool", 26, "nip24", 26, "nip46", 26, "nip01", 26,
"nip44", 26, "sdan", 26, "nip50", 26, "utils", 26, "proto", 43, "impl", 26, "event", 45, "tracker", 26, "signer", 25, "platform", 48, "teavm", 24, "teavm", 50, "jso", 51, "impl", 50, "classlib", 53, "impl", 54, "tz", 54, "unicode"
]);
$rt_metadata([jl_Object, "Object", 22, 0, [], 0, 3, 0, 0, ["$isEmptyMonitor", $rt_wrapFunction0(jl_Object_isEmptyMonitor), "$getClass0", $rt_wrapFunction0(jl_Object_getClass), "$hashCode", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString), "$identity", $rt_wrapFunction0(jl_Object_identity), "$clone0", $rt_wrapFunction0(jl_Object_clone)],
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCharClass__init_), "$getValue1", $rt_wrapFunction1(jur_AbstractCharClass$LazyCharClass_getValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractMap$Values$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_332", $rt_wrapFunction2(ju_AbstractMap$Values$1__init_), "$hasNext", $rt_wrapFunction0(ju_AbstractMap$Values$1_hasNext), "$next", $rt_wrapFunction0(ju_AbstractMap$Values$1_next), "$remove", $rt_wrapFunction0(ju_AbstractMap$Values$1_remove)],
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_InputStream__init_), "$read0", $rt_wrapFunction1(ji_InputStream_read), "$readAllBytes", $rt_wrapFunction0(ji_InputStream_readAllBytes), "$readNBytes", $rt_wrapFunction1(ji_InputStream_readNBytes)],
ji_FilterInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(ji_FilterInputStream__init_)],
ji_BufferedInputStream, 0, ji_FilterInputStream, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(ji_BufferedInputStream__init_), "$close", $rt_wrapFunction0(ji_BufferedInputStream_close), "$read", $rt_wrapFunction3(ji_BufferedInputStream_read)],
cjj_Inflate, 0, jl_Object, [], 4, 0, 0, cjj_Inflate_$callClinit, ["$inflateReset", $rt_wrapFunction0(cjj_Inflate_inflateReset), "$inflateEnd", $rt_wrapFunction0(cjj_Inflate_inflateEnd), "$_init_197", $rt_wrapFunction1(cjj_Inflate__init_), "$inflateInit", $rt_wrapFunction1(cjj_Inflate_inflateInit), "$inflate0", $rt_wrapFunction1(cjj_Inflate_inflate)],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Collection, "Collection", 4, jl_Object, [jl_Iterable], 3, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream)],
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_AbstractCollection__init_), "$isEmpty", $rt_wrapFunction0(ju_AbstractCollection_isEmpty), "$contains", $rt_wrapFunction1(ju_AbstractCollection_contains), "$toArray0", $rt_wrapFunction0(ju_AbstractCollection_toArray), "$toArray", $rt_wrapFunction1(ju_AbstractCollection_toArray0), "$remove2", $rt_wrapFunction1(ju_AbstractCollection_remove),
"$addAll", $rt_wrapFunction1(ju_AbstractCollection_addAll), "$retainAll", $rt_wrapFunction1(ju_AbstractCollection_retainAll), "$toString", $rt_wrapFunction0(ju_AbstractCollection_toString)],
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream)],
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_AbstractSet__init_), "$equals", $rt_wrapFunction1(ju_AbstractSet_equals), "$hashCode", $rt_wrapFunction0(ju_AbstractSet_hashCode)],
juc_ConcurrentHashMap$HashMapEntrySet, 0, ju_AbstractSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_8", $rt_wrapFunction1(juc_ConcurrentHashMap$HashMapEntrySet__init_), "$iterator", $rt_wrapFunction0(juc_ConcurrentHashMap$HashMapEntrySet_iterator)],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_15", $rt_wrapFunction2(jnci_BufferedEncoder$Controller__init_), "$hasMoreInput0", $rt_wrapFunction0(jnci_BufferedEncoder$Controller_hasMoreInput), "$hasMoreInput", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_hasMoreInput0), "$hasMoreOutput", $rt_wrapFunction0(jnci_BufferedEncoder$Controller_hasMoreOutput), "$hasMoreOutput0", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_hasMoreOutput0), "$setInPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setInPosition),
"$setOutPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setOutPosition)],
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Number__init_)],
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Integer, "Integer", 22, jl_Number, [jl_Comparable], 0, 3, 0, jl_Integer_$callClinit, ["$_init_9", $rt_wrapFunction1(jl_Integer__init_), "$intValue", $rt_wrapFunction0(jl_Integer_intValue), "$longValue", $rt_wrapFunction0(jl_Integer_longValue), "$toString", $rt_wrapFunction0(jl_Integer_toString0), "$hashCode", $rt_wrapFunction0(jl_Integer_hashCode), "$equals", $rt_wrapFunction1(jl_Integer_equals), "$compareTo", $rt_wrapFunction1(jl_Integer_compareTo), "$compareTo7", $rt_wrapFunction1(jl_Integer_compareTo0)],
onnp_NostrMessageFragment, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnp_NostrMessageFragment__init_), "$toString", $rt_wrapFunction0(onnp_NostrMessageFragment_toString)],
onnp_NostrMessage, 0, onnp_NostrMessageFragment, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnp_NostrMessage__init_), "$toMap", $rt_wrapFunction0(onnp_NostrMessage_toMap), "$toSerial", $rt_wrapFunction0(onnp_NostrMessage_toSerial), "$toJSON0", $rt_wrapFunction0(onnp_NostrMessage_toJSON0), "$toString", $rt_wrapFunction0(onnp_NostrMessage_toString), "$equals", $rt_wrapFunction1(onnp_NostrMessage_equals), "$hashCode", $rt_wrapFunction0(onnp_NostrMessage_hashCode)],
onnpi_NostrOKMessage, "NostrOKMessage", 44, onnp_NostrMessage, [], 0, 3, 0, 0, ["$_init_11", $rt_wrapFunction3(onnpi_NostrOKMessage__init_0), "$getEventId", $rt_wrapFunction0(onnpi_NostrOKMessage_getEventId), "$isSuccess", $rt_wrapFunction0(onnpi_NostrOKMessage_isSuccess), "$getMessage", $rt_wrapFunction0(onnpi_NostrOKMessage_getMessage), "$throwException", $rt_wrapFunction0(onnpi_NostrOKMessage_throwException), "$getPrefix", $rt_wrapFunction0(onnpi_NostrOKMessage_getPrefix), "$getFragments", $rt_wrapFunction0(onnpi_NostrOKMessage_getFragments)],
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_12", $rt_wrapFunction4(jnc_CharsetEncoder__init_0), "$_init_14", $rt_wrapFunction3(jnc_CharsetEncoder__init_), "$onMalformedInput0", $rt_wrapFunction1(jnc_CharsetEncoder_onMalformedInput), "$implOnMalformedInput", $rt_wrapFunction1(jnc_CharsetEncoder_implOnMalformedInput), "$onUnmappableCharacter0", $rt_wrapFunction1(jnc_CharsetEncoder_onUnmappableCharacter), "$implOnUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetEncoder_implOnUnmappableCharacter),
"$encode", $rt_wrapFunction3(jnc_CharsetEncoder_encode), "$encode3", $rt_wrapFunction1(jnc_CharsetEncoder_encode0), "$flush", $rt_wrapFunction1(jnc_CharsetEncoder_flush), "$implFlush", $rt_wrapFunction1(jnc_CharsetEncoder_implFlush), "$reset1", $rt_wrapFunction0(jnc_CharsetEncoder_reset), "$implReset", $rt_wrapFunction0(jnc_CharsetEncoder_implReset)],
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, ["$_init_14", $rt_wrapFunction3(jnci_BufferedEncoder__init_), "$encodeLoop", $rt_wrapFunction2(jnci_BufferedEncoder_encodeLoop)],
jnci_UTF16Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_80", $rt_wrapFunction3(jnci_UTF16Encoder__init_), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jm_BigDecimal$1, 0, jl_Object, [], 32, 0, 0, jm_BigDecimal$1_$callClinit, 0,
juf_BiConsumer, 0, jl_Object, [], 3, 3, 0, 0, 0,
onpt_TeaVMPlatform$1$compose$lambda$_7_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_73", $rt_wrapFunction2(onpt_TeaVMPlatform$1$compose$lambda$_7_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$1$compose$lambda$_7_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$1$compose$lambda$_7_0_accept)],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
onnet_EventTracker, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnet_FailOnDoubleTracker, "FailOnDoubleTracker", 46, jl_Object, [onnet_EventTracker], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnet_FailOnDoubleTracker__init_), "$seen", $rt_wrapFunction1(onnet_FailOnDoubleTracker_seen), "$clear", $rt_wrapFunction0(onnet_FailOnDoubleTracker_clear), "$tuneFor", $rt_wrapFunction1(onnet_FailOnDoubleTracker_tuneFor)],
jus_BaseStream, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
jus_IntStream, 0, jl_Object, [jus_BaseStream], 3, 3, 0, 0, 0,
jusi_SimpleIntStreamImpl, 0, jl_Object, [jus_IntStream], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jusi_SimpleIntStreamImpl__init_), "$toArray1", $rt_wrapFunction0(jusi_SimpleIntStreamImpl_toArray)],
onnrt_NostrTURN$Listener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cjj_Tree, 0, jl_Object, [], 4, 0, 0, cjj_Tree_$callClinit, ["$_init_0", $rt_wrapFunction0(cjj_Tree__init_0), "$gen_bitlen", $rt_wrapFunction1(cjj_Tree_gen_bitlen), "$build_tree", $rt_wrapFunction1(cjj_Tree_build_tree)],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, jur_AbstractSet_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractSet__init_), "$_init_18", $rt_wrapFunction1(jur_AbstractSet__init_0), "$find", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$setType", $rt_wrapFunction1(jur_AbstractSet_setType), "$getType", $rt_wrapFunction0(jur_AbstractSet_getType), "$getQualifiedName", $rt_wrapFunction0(jur_AbstractSet_getQualifiedName), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString),
"$getNext", $rt_wrapFunction0(jur_AbstractSet_getNext), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_18", $rt_wrapFunction1(jur_LeafSet__init_0), "$_init_0", $rt_wrapFunction0(jur_LeafSet__init_), "$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_CISequenceSet, "CISequenceSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_290", $rt_wrapFunction1(jur_CISequenceSet__init_), "$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_CISequenceSet_getName)],
jl_CharSequence, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent)],
ju_SequencedMap, 0, jl_Object, [ju_Map], 3, 3, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent)],
jtt_TemporalField, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_60", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategory__init_0), "$_init_61", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategory__init_1), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)]]);
$rt_metadata([otji_JSWrapper$Helper, 0, jl_Object, [], 0, 0, 0, otji_JSWrapper$Helper_$callClinit, 0,
juc_Callable, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnrt_NostrTURN$loop$lambda$_9_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_250", $rt_wrapFunction1(onnrt_NostrTURN$loop$lambda$_9_0__init_), "$call0", $rt_wrapFunction0(onnrt_NostrTURN$loop$lambda$_9_0_call)],
jur_FSet, "FSet", 6, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$_init_9", $rt_wrapFunction1(jur_FSet__init_), "$matches", $rt_wrapFunction3(jur_FSet_matches), "$getGroupIndex", $rt_wrapFunction0(jur_FSet_getGroupIndex), "$getName", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_BehindFSet, "BehindFSet", 6, jur_FSet, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_BehindFSet__init_), "$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName", $rt_wrapFunction0(jur_BehindFSet_getName)],
jtf_DateTimeFormatterBuilder, 0, jl_Object, [], 4, 3, 0, jtf_DateTimeFormatterBuilder_$callClinit, ["$_init_0", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder__init_0), "$parseCaseSensitive", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_parseCaseSensitive), "$parseCaseInsensitive", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_parseCaseInsensitive), "$parseLenient", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_parseLenient), "$appendValue0", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder_appendValue), "$appendValue1",
$rt_wrapFunction4(jtf_DateTimeFormatterBuilder_appendValue0), "$appendFraction", $rt_wrapFunction4(jtf_DateTimeFormatterBuilder_appendFraction), "$appendText", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder_appendText), "$appendInstant", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_appendInstant), "$appendOffsetId", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_appendOffsetId), "$appendOffset", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder_appendOffset), "$appendZoneRegionId", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_appendZoneRegionId),
"$appendLiteral", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder_appendLiteral), "$appendLiteral0", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder_appendLiteral0), "$append12", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder_append), "$optionalStart", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_optionalStart), "$optionalEnd", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_optionalEnd), "$toFormatter0", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder_toFormatter0), "$toFormatter", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder_toFormatter1),
"$toFormatter1", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder_toFormatter)],
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_OutputStream__init_)],
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_ByteArrayOutputStream__init_1), "$_init_9", $rt_wrapFunction1(ji_ByteArrayOutputStream__init_), "$write", $rt_wrapFunction3(ji_ByteArrayOutputStream_write), "$toByteArray", $rt_wrapFunction0(ji_ByteArrayOutputStream_toByteArray)],
jur_JointSet, "JointSet", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_JointSet__init_), "$_init_69", $rt_wrapFunction2(jur_JointSet__init_0), "$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName", $rt_wrapFunction0(jur_JointSet_getName), "$first", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_LowHighSurrogateRangeSet, "LowHighSurrogateRangeSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_204", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet__init_), "$setNext", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet_setNext), "$matches", $rt_wrapFunction3(jur_LowHighSurrogateRangeSet_matches), "$getName", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)],
juf_Function, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_258", $rt_wrapFunction4(onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0_apply0), "$apply0", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendAnswer$lambda$_11_0_apply)],
jtt_TemporalAccessor, 0, jl_Object, [], 3, 3, 0, 0, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query)],
jtt_Temporal, 0, jl_Object, [jtt_TemporalAccessor], 3, 3, 0, 0, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query)],
jtt_TemporalAdjuster, 0, jl_Object, [], 3, 3, 0, 0, 0,
jtc_ChronoLocalDateTime, 0, jl_Object, [jtt_Temporal, jtt_TemporalAdjuster, jl_Comparable], 1, 3, 0, jtc_ChronoLocalDateTime_$callClinit, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$_init_0", $rt_wrapFunction0(jtc_ChronoLocalDateTime__init_), "$getChronology", $rt_wrapFunction0(jtc_ChronoLocalDateTime_getChronology), "$query", $rt_wrapFunction1(jtc_ChronoLocalDateTime_query), "$toInstant", $rt_wrapFunction1(jtc_ChronoLocalDateTime_toInstant),
"$toEpochSecond", $rt_wrapFunction1(jtc_ChronoLocalDateTime_toEpochSecond), "$compareTo4", $rt_wrapFunction1(jtc_ChronoLocalDateTime_compareTo), "$isAfter", $rt_wrapFunction1(jtc_ChronoLocalDateTime_isAfter), "$isBefore", $rt_wrapFunction1(jtc_ChronoLocalDateTime_isBefore)],
jt_LocalDateTime, "LocalDateTime", 15, jtc_ChronoLocalDateTime, [jtt_Temporal, jtt_TemporalAdjuster, ji_Serializable], 4, 3, 0, jt_LocalDateTime_$callClinit, ["$isSupported", $rt_wrapFunction1(jt_LocalDateTime_isSupported), "$range0", $rt_wrapFunction1(jt_LocalDateTime_range), "$get2", $rt_wrapFunction1(jt_LocalDateTime_get), "$getLong", $rt_wrapFunction1(jt_LocalDateTime_getLong), "$getYear", $rt_wrapFunction0(jt_LocalDateTime_getYear), "$getSecond", $rt_wrapFunction0(jt_LocalDateTime_getSecond), "$getNano",
$rt_wrapFunction0(jt_LocalDateTime_getNano), "$plusDays0", $rt_wrapFunction1(jt_LocalDateTime_plusDays), "$plusSeconds0", $rt_wrapFunction1(jt_LocalDateTime_plusSeconds), "$query", $rt_wrapFunction1(jt_LocalDateTime_query), "$atZone", $rt_wrapFunction1(jt_LocalDateTime_atZone), "$toLocalDate0", $rt_wrapFunction0(jt_LocalDateTime_toLocalDate), "$toLocalTime", $rt_wrapFunction0(jt_LocalDateTime_toLocalTime), "$compareTo4", $rt_wrapFunction1(jt_LocalDateTime_compareTo), "$isAfter", $rt_wrapFunction1(jt_LocalDateTime_isAfter),
"$isBefore", $rt_wrapFunction1(jt_LocalDateTime_isBefore), "$equals", $rt_wrapFunction1(jt_LocalDateTime_equals), "$hashCode", $rt_wrapFunction0(jt_LocalDateTime_hashCode), "$toString", $rt_wrapFunction0(jt_LocalDateTime_toString), "$atZone0", $rt_wrapFunction1(jt_LocalDateTime_atZone0), "$toLocalDate", $rt_wrapFunction0(jt_LocalDateTime_toLocalDate0), "$compareTo7", $rt_wrapFunction1(jt_LocalDateTime_compareTo1)],
jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$fillInStackTrace", $rt_wrapFunction0(jl_Throwable_fillInStackTrace), "$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage), "$getLocalizedMessage", $rt_wrapFunction0(jl_Throwable_getLocalizedMessage), "$getCause", $rt_wrapFunction0(jl_Throwable_getCause), "$toString", $rt_wrapFunction0(jl_Throwable_toString), "$initCause", $rt_wrapFunction1(jl_Throwable_initCause), "$printStackTrace0", $rt_wrapFunction0(jl_Throwable_printStackTrace0), "$printStackTrace", $rt_wrapFunction1(jl_Throwable_printStackTrace),
"$getStackTrace", $rt_wrapFunction0(jl_Throwable_getStackTrace)],
jl_Exception, "Exception", 22, jl_Throwable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Exception__init_1), "$_init_32", $rt_wrapFunction2(jl_Exception__init_3), "$_init_", $rt_wrapFunction1(jl_Exception__init_), "$_init_13", $rt_wrapFunction1(jl_Exception__init_2)],
onnu_Bech32$Bech32Exception, "Bech32$Bech32Exception", 42, jl_Exception, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onnu_Bech32$Bech32Exception__init_)],
onnu_Bech32$Bech32EncodingException, "Bech32$Bech32EncodingException", 42, onnu_Bech32$Bech32Exception, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onnu_Bech32$Bech32EncodingException__init_)],
jnci_AsciiEncoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_87", $rt_wrapFunction1(jnci_AsciiEncoder__init_), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiEncoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jl_Record, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Record__init_)],
onns_SdanTaxonomy$TreeNode, "SdanTaxonomy$TreeNode", 40, jl_Record, [ji_Serializable], 32772, 0, 0, 0, ["$toString", $rt_wrapFunction0(onns_SdanTaxonomy$TreeNode_toString), "$hashCode", $rt_wrapFunction0(onns_SdanTaxonomy$TreeNode_hashCode), "$equals", $rt_wrapFunction1(onns_SdanTaxonomy$TreeNode_equals), "$taxonomy", $rt_wrapFunction0(onns_SdanTaxonomy$TreeNode_taxonomy), "$children", $rt_wrapFunction0(onns_SdanTaxonomy$TreeNode_children)],
jl_RuntimeException, "RuntimeException", 22, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_RuntimeException__init_), "$_init_32", $rt_wrapFunction2(jl_RuntimeException__init_2), "$_init_", $rt_wrapFunction1(jl_RuntimeException__init_0), "$_init_13", $rt_wrapFunction1(jl_RuntimeException__init_4)],
jl_ClassCastException, "ClassCastException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ClassCastException__init_1), "$_init_", $rt_wrapFunction1(jl_ClassCastException__init_)],
juf_Supplier, 0, jl_Object, [], 3, 3, 0, 0, 0,
jtt_TemporalQuery, 0, jl_Object, [], 3, 3, 0, 0, 0,
jt_ZoneId$1, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jt_ZoneId$1__init_)],
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jlr_AccessibleObject__init_)],
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Constructor, "Constructor", 23, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0, ["$_init_108", function(var_1, var_2, var_3, var_4, var_5, var_6) { jlr_Constructor__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getModifiers0", $rt_wrapFunction0(jlr_Constructor_getModifiers), "$getParameterTypes", $rt_wrapFunction0(jlr_Constructor_getParameterTypes), "$toString", $rt_wrapFunction0(jlr_Constructor_toString), "$newInstance0", $rt_wrapFunction1(jlr_Constructor_newInstance)],
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
onns_NostrSigner, 0, jl_Object, [jl_Cloneable, ji_Serializable], 3, 3, 0, 0, 0,
onns_NostrKeyPairSigner, "NostrKeyPairSigner", 47, jl_Object, [onns_NostrSigner], 0, 3, 0, 0, ["$_init_34", $rt_wrapFunction1(onns_NostrKeyPairSigner__init_0), "$sign", $rt_wrapFunction1(onns_NostrKeyPairSigner_sign), "$encrypt0", $rt_wrapFunction2(onns_NostrKeyPairSigner_encrypt), "$decrypt0", $rt_wrapFunction2(onns_NostrKeyPairSigner_decrypt), "$getPublicKey0", $rt_wrapFunction0(onns_NostrKeyPairSigner_getPublicKey), "$clone2", $rt_wrapFunction0(onns_NostrKeyPairSigner_clone0), "$toString", $rt_wrapFunction0(onns_NostrKeyPairSigner_toString),
"$equals", $rt_wrapFunction1(onns_NostrKeyPairSigner_equals), "$hashCode", $rt_wrapFunction0(onns_NostrKeyPairSigner_hashCode), "$getKeyPair", $rt_wrapFunction0(onns_NostrKeyPairSigner_getKeyPair), "$close0", $rt_wrapFunction0(onns_NostrKeyPairSigner_close), "$clone0", $rt_wrapFunction0(onns_NostrKeyPairSigner_clone)],
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent), "$_init_0", $rt_wrapFunction0(ju_AbstractMap__init_), "$size", $rt_wrapFunction0(ju_AbstractMap_size), "$isEmpty", $rt_wrapFunction0(ju_AbstractMap_isEmpty), "$containsKey", $rt_wrapFunction1(ju_AbstractMap_containsKey), "$get1", $rt_wrapFunction1(ju_AbstractMap_get), "$put1", $rt_wrapFunction2(ju_AbstractMap_put),
"$keySet", $rt_wrapFunction0(ju_AbstractMap_keySet), "$values0", $rt_wrapFunction0(ju_AbstractMap_values), "$equals", $rt_wrapFunction1(ju_AbstractMap_equals), "$hashCode", $rt_wrapFunction0(ju_AbstractMap_hashCode), "$toString", $rt_wrapFunction0(ju_AbstractMap_toString)],
ju_HashMap, "HashMap", 4, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent), "$newElementArray", $rt_wrapFunction1(ju_HashMap_newElementArray), "$_init_0", $rt_wrapFunction0(ju_HashMap__init_1), "$_init_9", $rt_wrapFunction1(ju_HashMap__init_0), "$_init_39", $rt_wrapFunction2(ju_HashMap__init_2), "$_init_21", $rt_wrapFunction1(ju_HashMap__init_3),
"$clear", $rt_wrapFunction0(ju_HashMap_clear), "$containsKey", $rt_wrapFunction1(ju_HashMap_containsKey), "$entrySet", $rt_wrapFunction0(ju_HashMap_entrySet), "$get1", $rt_wrapFunction1(ju_HashMap_get), "$entryByKey", $rt_wrapFunction1(ju_HashMap_entryByKey), "$findNonNullKeyEntry", $rt_wrapFunction3(ju_HashMap_findNonNullKeyEntry), "$findNullKeyEntry", $rt_wrapFunction0(ju_HashMap_findNullKeyEntry), "$isEmpty", $rt_wrapFunction0(ju_HashMap_isEmpty), "$keySet", $rt_wrapFunction0(ju_HashMap_keySet), "$put1",
$rt_wrapFunction2(ju_HashMap_put), "$putAll", $rt_wrapFunction1(ju_HashMap_putAll), "$putAllImpl", $rt_wrapFunction1(ju_HashMap_putAllImpl), "$rehash0", $rt_wrapFunction1(ju_HashMap_rehash), "$rehash", $rt_wrapFunction0(ju_HashMap_rehash0), "$remove1", $rt_wrapFunction1(ju_HashMap_remove), "$removeEntry", $rt_wrapFunction1(ju_HashMap_removeEntry), "$removeByKey", $rt_wrapFunction1(ju_HashMap_removeByKey), "$size", $rt_wrapFunction0(ju_HashMap_size), "$values0", $rt_wrapFunction0(ju_HashMap_values)],
ju_LinkedHashMap, "LinkedHashMap", 4, ju_HashMap, [ju_SequencedMap], 0, 3, 0, 0, ["$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent), "$_init_0", $rt_wrapFunction0(ju_LinkedHashMap__init_2), "$_init_21", $rt_wrapFunction1(ju_LinkedHashMap__init_1), "$putAllImpl", $rt_wrapFunction1(ju_LinkedHashMap_putAllImpl), "$newElementArray", $rt_wrapFunction1(ju_LinkedHashMap_newElementArray), "$getOrDefault", $rt_wrapFunction2(ju_LinkedHashMap_getOrDefault),
"$get1", $rt_wrapFunction1(ju_LinkedHashMap_get), "$put1", $rt_wrapFunction2(ju_LinkedHashMap_put), "$putImpl0", $rt_wrapFunction4(ju_LinkedHashMap_putImpl), "$entrySet", $rt_wrapFunction0(ju_LinkedHashMap_entrySet), "$keySet", $rt_wrapFunction0(ju_LinkedHashMap_keySet), "$sequencedKeySet", $rt_wrapFunction0(ju_LinkedHashMap_sequencedKeySet), "$remove1", $rt_wrapFunction1(ju_LinkedHashMap_remove), "$removeLinkedEntry", $rt_wrapFunction1(ju_LinkedHashMap_removeLinkedEntry), "$removeEldestEntry", $rt_wrapFunction1(ju_LinkedHashMap_removeEldestEntry)],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_QuantifierSet__init_), "$getInnerSet", $rt_wrapFunction0(jur_QuantifierSet_getInnerSet), "$first", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_GroupQuantifierSet, "GroupQuantifierSet", 6, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_GroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 6, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
ju_Calendar, 0, jl_Object, [ji_Serializable, jl_Cloneable, jl_Comparable], 1, 3, 0, ju_Calendar_$callClinit, ["$_init_44", $rt_wrapFunction1(ju_Calendar__init_0), "$_init_171", $rt_wrapFunction2(ju_Calendar__init_), "$complete0", $rt_wrapFunction0(ju_Calendar_complete), "$get3", $rt_wrapFunction1(ju_Calendar_get), "$getFirstDayOfWeek0", $rt_wrapFunction0(ju_Calendar_getFirstDayOfWeek), "$getMinimalDaysInFirstWeek0", $rt_wrapFunction0(ju_Calendar_getMinimalDaysInFirstWeek), "$getTime0", $rt_wrapFunction0(ju_Calendar_getTime),
"$getTimeInMillis", $rt_wrapFunction0(ju_Calendar_getTimeInMillis), "$getTimeZone", $rt_wrapFunction0(ju_Calendar_getTimeZone), "$setTimeZone", $rt_wrapFunction1(ju_Calendar_setTimeZone), "$isLenient", $rt_wrapFunction0(ju_Calendar_isLenient), "$set", $rt_wrapFunction2(ju_Calendar_set), "$setFirstDayOfWeek", $rt_wrapFunction1(ju_Calendar_setFirstDayOfWeek), "$setLenient", $rt_wrapFunction1(ju_Calendar_setLenient), "$setMinimalDaysInFirstWeek", $rt_wrapFunction1(ju_Calendar_setMinimalDaysInFirstWeek), "$setTime",
$rt_wrapFunction1(ju_Calendar_setTime), "$setTimeInMillis", $rt_wrapFunction1(ju_Calendar_setTimeInMillis)],
onnn_Nip01, "Nip01", 38, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnn_Nip01__init_)],
onns_SdanTaxonomy, "SdanTaxonomy", 40, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(onns_SdanTaxonomy__init_0), "$_init_0", $rt_wrapFunction0(onns_SdanTaxonomy__init_), "$getTree", $rt_wrapFunction0(onns_SdanTaxonomy_getTree), "$getByTerm", $rt_wrapFunction1(onns_SdanTaxonomy_getByTerm), "$getById", $rt_wrapFunction1(onns_SdanTaxonomy_getById), "$equals", $rt_wrapFunction1(onns_SdanTaxonomy_equals), "$hashCode", $rt_wrapFunction0(onns_SdanTaxonomy_hashCode), "$toString", $rt_wrapFunction0(onns_SdanTaxonomy_toString0)],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_AbstractStringBuilder__init_0), "$_init_9", $rt_wrapFunction1(jl_AbstractStringBuilder__init_), "$_init_", $rt_wrapFunction1(jl_AbstractStringBuilder__init_1), "$_init_51", $rt_wrapFunction1(jl_AbstractStringBuilder__init_2), "$append19", $rt_wrapFunction1(jl_AbstractStringBuilder_append8), "$append20", $rt_wrapFunction1(jl_AbstractStringBuilder_append5), "$insert0", $rt_wrapFunction2(jl_AbstractStringBuilder_insert8),
"$append21", $rt_wrapFunction1(jl_AbstractStringBuilder_append2), "$append2", $rt_wrapFunction2(jl_AbstractStringBuilder_append11), "$insert1", $rt_wrapFunction3(jl_AbstractStringBuilder_insert10), "$append22", $rt_wrapFunction1(jl_AbstractStringBuilder_append9), "$insert2", $rt_wrapFunction2(jl_AbstractStringBuilder_insert3), "$insert3", $rt_wrapFunction3(jl_AbstractStringBuilder_insert9), "$append23", $rt_wrapFunction1(jl_AbstractStringBuilder_append7), "$insert4", $rt_wrapFunction2(jl_AbstractStringBuilder_insert6),
"$append24", $rt_wrapFunction1(jl_AbstractStringBuilder_append4), "$insert5", $rt_wrapFunction2(jl_AbstractStringBuilder_insert4), "$append6", $rt_wrapFunction1(jl_AbstractStringBuilder_append), "$insert6", $rt_wrapFunction2(jl_AbstractStringBuilder_insert0), "$insert", $rt_wrapFunction2(jl_AbstractStringBuilder_insert2), "$append26", $rt_wrapFunction1(jl_AbstractStringBuilder_append6), "$insert7", $rt_wrapFunction2(jl_AbstractStringBuilder_insert1), "$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity),
"$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString), "$length", $rt_wrapFunction0(jl_AbstractStringBuilder_length), "$charAt", $rt_wrapFunction1(jl_AbstractStringBuilder_charAt), "$append4", $rt_wrapFunction3(jl_AbstractStringBuilder_append3), "$insert8", $rt_wrapFunction4(jl_AbstractStringBuilder_insert5), "$append25", $rt_wrapFunction1(jl_AbstractStringBuilder_append10), "$insert15", $rt_wrapFunction2(jl_AbstractStringBuilder_insert7), "$append5", $rt_wrapFunction3(jl_AbstractStringBuilder_append1),
"$insert9", $rt_wrapFunction4(jl_AbstractStringBuilder_insert), "$append7", $rt_wrapFunction1(jl_AbstractStringBuilder_append0), "$setLength", $rt_wrapFunction1(jl_AbstractStringBuilder_setLength), "$deleteCharAt0", $rt_wrapFunction1(jl_AbstractStringBuilder_deleteCharAt), "$delete", $rt_wrapFunction2(jl_AbstractStringBuilder_delete), "$replace2", $rt_wrapFunction3(jl_AbstractStringBuilder_replace), "$setCharAt", $rt_wrapFunction2(jl_AbstractStringBuilder_setCharAt)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(jl_StringBuffer__init_), "$_init_0", $rt_wrapFunction0(jl_StringBuffer__init_0), "$append16", $rt_wrapFunction1(jl_StringBuffer_append0), "$append8", $rt_wrapFunction3(jl_StringBuffer_append1), "$append18", $rt_wrapFunction1(jl_StringBuffer_append), "$insert10", $rt_wrapFunction4(jl_StringBuffer_insert0), "$insert11", $rt_wrapFunction2(jl_StringBuffer_insert2), "$insert9", $rt_wrapFunction4(jl_StringBuffer_insert),
"$append5", $rt_wrapFunction3(jl_StringBuffer_append2), "$charAt", $rt_wrapFunction1(jl_StringBuffer_charAt), "$length", $rt_wrapFunction0(jl_StringBuffer_length), "$toString", $rt_wrapFunction0(jl_StringBuffer_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert6", $rt_wrapFunction2(jl_StringBuffer_insert1)],
onne_NostrEvent$Coordinates, "NostrEvent$Coordinates", 45, jl_Record, [], 32772, 3, 0, 0, ["$_init_53", $rt_wrapFunction3(onne_NostrEvent$Coordinates__init_0), "$toString", $rt_wrapFunction0(onne_NostrEvent$Coordinates_toString), "$hashCode", $rt_wrapFunction0(onne_NostrEvent$Coordinates_hashCode), "$equals", $rt_wrapFunction1(onne_NostrEvent$Coordinates_equals), "$type", $rt_wrapFunction0(onne_NostrEvent$Coordinates_type), "$kind", $rt_wrapFunction0(onne_NostrEvent$Coordinates_kind), "$coords", $rt_wrapFunction0(onne_NostrEvent$Coordinates_coords)]]);
$rt_metadata([jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_Buffer__init_), "$capacity", $rt_wrapFunction0(jn_Buffer_capacity), "$position0", $rt_wrapFunction0(jn_Buffer_position), "$position2", $rt_wrapFunction1(jn_Buffer_position0), "$limit", $rt_wrapFunction0(jn_Buffer_limit), "$flip0", $rt_wrapFunction0(jn_Buffer_flip), "$rewind0", $rt_wrapFunction0(jn_Buffer_rewind), "$remaining", $rt_wrapFunction0(jn_Buffer_remaining), "$hasRemaining", $rt_wrapFunction0(jn_Buffer_hasRemaining)],
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SpecialToken__init_)],
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, jur_AbstractCharClass_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass__init_), "$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$hasLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_hasLowHighSurrogates), "$mayContainSupplCodepoints", $rt_wrapFunction0(jur_AbstractCharClass_mayContainSupplCodepoints), "$getInstance", $rt_wrapFunction0(jur_AbstractCharClass_getInstance),
"$getSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getSurrogates), "$getWithoutSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getWithoutSurrogates), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI), "$setNegative", $rt_wrapFunction1(jur_AbstractCharClass_setNegative), "$isNegative", $rt_wrapFunction0(jur_AbstractCharClass_isNegative)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_286", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
onnn_Nip44, "Nip44", 39, jl_Object, [], 0, 3, 0, onnn_Nip44_$callClinit, ["$_init_0", $rt_wrapFunction0(onnn_Nip44__init_)],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$PredefinedCharacterClasses__init_), "$getObject", $rt_wrapFunction1(jur_AbstractCharClass$PredefinedCharacterClasses_getObject)],
onnn_BunkerUrl, "BunkerUrl", 37, jl_Object, [ji_Serializable, jl_Cloneable], 0, 3, 0, 0, ["$_init_62", $rt_wrapFunction3(onnn_BunkerUrl__init_1), "$_init_63", $rt_wrapFunction2(onnn_BunkerUrl__init_0), "$clone3", $rt_wrapFunction0(onnn_BunkerUrl_clone0), "$toString", $rt_wrapFunction0(onnn_BunkerUrl_toString), "$clone0", $rt_wrapFunction0(onnn_BunkerUrl_clone)],
onns_NostrNIP46Signer$check$lambda$_8_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$check$lambda$_8_0__init_), "$accept3", $rt_wrapFunction2(onns_NostrNIP46Signer$check$lambda$_8_0_accept0), "$accept", $rt_wrapFunction2(onns_NostrNIP46Signer$check$lambda$_8_0_accept)],
onnls_NostrSubListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnls_NostrSubEventListener, 0, jl_Object, [onnls_NostrSubListener], 3, 3, 0, 0, 0,
onnrs_NostrRTCSignaling$1, "NostrRTCSignaling$1", 30, jl_Object, [onnls_NostrSubEventListener], 0, 0, 0, 0, ["$_init_64", $rt_wrapFunction1(onnrs_NostrRTCSignaling$1__init_0), "$onSubEvent", $rt_wrapFunction2(onnrs_NostrRTCSignaling$1_onSubEvent)],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
jl_Enum, "Enum", 22, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$_init_66", $rt_wrapFunction2(jl_Enum__init_), "$name", $rt_wrapFunction0(jl_Enum_name), "$ordinal", $rt_wrapFunction0(jl_Enum_ordinal), "$toString", $rt_wrapFunction0(jl_Enum_toString), "$equals", $rt_wrapFunction1(jl_Enum_equals), "$hashCode", $rt_wrapFunction0(jl_Enum_hashCode), "$getDeclaringClass", $rt_wrapFunction0(jl_Enum_getDeclaringClass), "$compareTo5", $rt_wrapFunction1(jl_Enum_compareTo), "$compareTo7", $rt_wrapFunction1(jl_Enum_compareTo0)],
jtf_TextStyle, "TextStyle", 17, jl_Enum, [], 12, 3, 0, jtf_TextStyle_$callClinit, 0,
juf_ToIntFunction, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_AheadFSet, "AheadFSet", 6, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AheadFSet__init_), "$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName", $rt_wrapFunction0(jur_AheadFSet_getName)],
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
otja_ReadyStateChangeHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
onpt_TeaVMPlatform$3, "TeaVMPlatform$3", 49, jl_Object, [otja_ReadyStateChangeHandler], 0, 0, 0, 0, ["$_init_217", $rt_wrapFunction4(onpt_TeaVMPlatform$3__init_), "$stateChanged", $rt_wrapFunction0(onpt_TeaVMPlatform$3_stateChanged)],
ju_Base64$Encoder, 0, jl_Object, [], 0, 3, 0, 0, ["$encode2", $rt_wrapFunction1(ju_Base64$Encoder_encode), "$encodeToString", $rt_wrapFunction1(ju_Base64$Encoder_encodeToString)],
onnr_NostrRTCRoom$loop$lambda$_8_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_91", $rt_wrapFunction1(onnr_NostrRTCRoom$loop$lambda$_8_0__init_), "$call0", $rt_wrapFunction0(onnr_NostrRTCRoom$loop$lambda$_8_0_call)],
onnn_Nip01UserMetadata, "Nip01UserMetadata", 38, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_46", $rt_wrapFunction1(onnn_Nip01UserMetadata__init_), "$toUpdateEvent", $rt_wrapFunction0(onnn_Nip01UserMetadata_toUpdateEvent), "$getSourceEvent", $rt_wrapFunction0(onnn_Nip01UserMetadata_getSourceEvent), "$getName", $rt_wrapFunction0(onnn_Nip01UserMetadata_getName), "$setName", $rt_wrapFunction1(onnn_Nip01UserMetadata_setName), "$getAbout", $rt_wrapFunction0(onnn_Nip01UserMetadata_getAbout), "$setAbout", $rt_wrapFunction1(onnn_Nip01UserMetadata_setAbout),
"$getPicture", $rt_wrapFunction0(onnn_Nip01UserMetadata_getPicture), "$setPicture", $rt_wrapFunction1(onnn_Nip01UserMetadata_setPicture), "$equals", $rt_wrapFunction1(onnn_Nip01UserMetadata_equals), "$hashCode", $rt_wrapFunction0(onnn_Nip01UserMetadata_hashCode), "$toString", $rt_wrapFunction0(onnn_Nip01UserMetadata_toString)],
onnn_Nip24ExtraMetadata, "Nip24ExtraMetadata", 36, onnn_Nip01UserMetadata, [], 0, 3, 0, 0, ["$_init_68", $rt_wrapFunction1(onnn_Nip24ExtraMetadata__init_), "$_init_46", $rt_wrapFunction1(onnn_Nip24ExtraMetadata__init_0), "$getDisplayName", $rt_wrapFunction0(onnn_Nip24ExtraMetadata_getDisplayName), "$setDisplayName", $rt_wrapFunction1(onnn_Nip24ExtraMetadata_setDisplayName), "$getName", $rt_wrapFunction0(onnn_Nip24ExtraMetadata_getName), "$getWebsite", $rt_wrapFunction0(onnn_Nip24ExtraMetadata_getWebsite), "$setWebsite",
$rt_wrapFunction1(onnn_Nip24ExtraMetadata_setWebsite), "$getBanner", $rt_wrapFunction0(onnn_Nip24ExtraMetadata_getBanner), "$setBanner", $rt_wrapFunction1(onnn_Nip24ExtraMetadata_setBanner), "$isBot", $rt_wrapFunction0(onnn_Nip24ExtraMetadata_isBot), "$setBot", $rt_wrapFunction1(onnn_Nip24ExtraMetadata_setBot), "$getUsername", $rt_wrapFunction0(onnn_Nip24ExtraMetadata_getUsername), "$getBirthday", $rt_wrapFunction0(onnn_Nip24ExtraMetadata_getBirthday), "$setBirthday", $rt_wrapFunction1(onnn_Nip24ExtraMetadata_setBirthday0),
"$setBirthday0", $rt_wrapFunction3(onnn_Nip24ExtraMetadata_setBirthday)],
jur_NonCapJointSet, "NonCapJointSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_69", $rt_wrapFunction2(jur_NonCapJointSet__init_), "$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, "AtomicJointSet", 6, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$_init_69", $rt_wrapFunction2(jur_AtomicJointSet__init_), "$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
jur_PositiveLookAhead, "PositiveLookAhead", 6, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_69", $rt_wrapFunction2(jur_PositiveLookAhead__init_), "$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
jur_NegativeLookAhead, "NegativeLookAhead", 6, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_69", $rt_wrapFunction2(jur_NegativeLookAhead__init_), "$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookAhead_getName)],
onp_AsyncExecutor, 0, jl_Object, [], 3, 3, 0, 0, 0,
onpt_TeaVMPlatform$2, "TeaVMPlatform$2", 49, jl_Object, [onp_AsyncExecutor], 0, 0, 0, 0, ["$_init_213", $rt_wrapFunction1(onpt_TeaVMPlatform$2__init_), "$run0", $rt_wrapFunction1(onpt_TeaVMPlatform$2_run), "$runLater", $rt_wrapFunction3(onpt_TeaVMPlatform$2_runLater), "$close", $rt_wrapFunction0(onpt_TeaVMPlatform$2_close)],
onp_AsyncTask, 0, jl_Object, [], 3, 3, 0, 0, 0,
onpt_TeaVMPlatform$1, "TeaVMPlatform$1", 49, jl_Object, [onp_AsyncTask], 0, 0, 0, 0, ["$_init_212", $rt_wrapFunction3(onpt_TeaVMPlatform$1__init_), "$await", $rt_wrapFunction0(onpt_TeaVMPlatform$1_await), "$isDone", $rt_wrapFunction0(onpt_TeaVMPlatform$1_isDone), "$isFailed", $rt_wrapFunction0(onpt_TeaVMPlatform$1_isFailed), "$then", $rt_wrapFunction1(onpt_TeaVMPlatform$1_then), "$catchException", $rt_wrapFunction1(onpt_TeaVMPlatform$1_catchException), "$compose", $rt_wrapFunction1(onpt_TeaVMPlatform$1_compose),
"$cancel0", $rt_wrapFunction0(onpt_TeaVMPlatform$1_cancel)],
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, ["$_init_59", $rt_wrapFunction2(jn_CharBuffer__init_), "$get0", $rt_wrapFunction3(jn_CharBuffer_get), "$get9", $rt_wrapFunction1(jn_CharBuffer_get0), "$put6", $rt_wrapFunction3(jn_CharBuffer_put1), "$put2", $rt_wrapFunction3(jn_CharBuffer_put0), "$put5", $rt_wrapFunction1(jn_CharBuffer_put), "$hasArray", $rt_wrapFunction0(jn_CharBuffer_hasArray), "$array0", $rt_wrapFunction0(jn_CharBuffer_array), "$length",
$rt_wrapFunction0(jn_CharBuffer_length), "$flip1", $rt_wrapFunction0(jn_CharBuffer_flip), "$position", $rt_wrapFunction1(jn_CharBuffer_position)],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, ["$_init_59", $rt_wrapFunction2(jn_CharBufferImpl__init_), "$isReadOnly", $rt_wrapFunction0(jn_CharBufferImpl_isReadOnly)],
jn_ArrayBufferViewProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBufferOverTypedArray, 0, jn_CharBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_77", function(var_1, var_2, var_3, var_4, var_5) { jn_CharBufferOverTypedArray__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_CharBufferOverTypedArray_readOnly), "$isArrayPresent", $rt_wrapFunction0(jn_CharBufferOverTypedArray_isArrayPresent), "$getArray", $rt_wrapFunction0(jn_CharBufferOverTypedArray_getArray), "$capacityImpl", $rt_wrapFunction0(jn_CharBufferOverTypedArray_capacityImpl),
"$getImpl", $rt_wrapFunction4(jn_CharBufferOverTypedArray_getImpl), "$putImpl1", $rt_wrapFunction4(jn_CharBufferOverTypedArray_putImpl0), "$putImpl2", $rt_wrapFunction4(jn_CharBufferOverTypedArray_putImpl)],
onne_NostrEvent$1, 0, jl_Object, [], 32, 0, 0, onne_NostrEvent$1_$callClinit, 0,
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjt_TypedArray, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jl_UnsupportedOperationException, "UnsupportedOperationException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_UnsupportedOperationException__init_1), "$_init_", $rt_wrapFunction1(jl_UnsupportedOperationException__init_2)],
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 10, jl_UnsupportedOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_ReadOnlyBufferException__init_0)],
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
cjj_InfCodes, 0, jl_Object, [], 4, 0, 0, cjj_InfCodes_$callClinit, ["$_init_176", $rt_wrapFunction2(cjj_InfCodes__init_), "$init0", function(var_1, var_2, var_3, var_4, var_5, var_6) { cjj_InfCodes_init(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$proc", $rt_wrapFunction1(cjj_InfCodes_proc), "$free0", $rt_wrapFunction1(cjj_InfCodes_free), "$inflate_fast", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { return cjj_InfCodes_inflate_fast(this, var_1, var_2, var_3, var_4, var_5, var_6,
var_7, var_8); }],
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnr_NostrRTCSocket$write$lambda$_18_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnr_NostrRTCSocket$write$lambda$_18_1__init_), "$run", $rt_wrapFunction0(onnr_NostrRTCSocket$write$lambda$_18_1_run)],
onnr_NostrRTCSocket$write$lambda$_18_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnr_NostrRTCSocket$write$lambda$_18_0__init_), "$run", $rt_wrapFunction0(onnr_NostrRTCSocket$write$lambda$_18_0_run)],
onnn_Nip44$getConversationKey$lambda$_15_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_58", $rt_wrapFunction2(onnn_Nip44$getConversationKey$lambda$_15_0__init_), "$call0", $rt_wrapFunction0(onnn_Nip44$getConversationKey$lambda$_15_0_call0), "$call1", $rt_wrapFunction0(onnn_Nip44$getConversationKey$lambda$_15_0_call)],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_218", $rt_wrapFunction3(onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1__init_), "$apply", $rt_wrapFunction1(onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_1_apply)]]);
$rt_metadata([juf_Consumer, 0, jl_Object, [], 3, 3, 0, 0, 0,
onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0, "TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0", 49, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_218", $rt_wrapFunction3(onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0_accept0), "$accept1", $rt_wrapFunction1(onpt_TeaVMPlatform$lambda$awaitAllSettled$7$lambda$_41_0_accept)],
juf_ToLongFunction, 0, jl_Object, [], 3, 3, 0, 0, 0,
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0, 0, jl_Object, [juf_ToLongFunction], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtc_ChronoLocalDateTime$_clinit_$lambda$_34_0__init_)],
jtf_DateTimeTextProvider, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtf_DateTimeTextProvider__init_)],
jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1, 0, jl_Object, [juf_ToLongFunction], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtc_ChronoLocalDateTime$_clinit_$lambda$_34_1__init_)],
onnrl_NostrRTCRoomListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnrl_NostrRTCRoomPeerDiscoveredListener, 0, jl_Object, [onnrl_NostrRTCRoomListener], 3, 3, 0, 0, 0,
otji_JS, 0, jl_Object, [], 4, 3, 0, 0, 0,
onnu_Bech32$Bech32InvalidRangeException, "Bech32$Bech32InvalidRangeException", 42, onnu_Bech32$Bech32Exception, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onnu_Bech32$Bech32InvalidRangeException__init_)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_154", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, ["$_init_79", $rt_wrapFunction2(jnc_Charset__init_), "$name", $rt_wrapFunction0(jnc_Charset_name), "$decode0", $rt_wrapFunction1(jnc_Charset_decode), "$encode3", $rt_wrapFunction1(jnc_Charset_encode), "$compareTo6", $rt_wrapFunction1(jnc_Charset_compareTo), "$compareTo7", $rt_wrapFunction1(jnc_Charset_compareTo0)],
jnci_UTF16Charset, "UTF16Charset", 12, jnc_Charset, [], 0, 3, 0, 0, ["$_init_281", $rt_wrapFunction3(jnci_UTF16Charset__init_0), "$newDecoder", $rt_wrapFunction0(jnci_UTF16Charset_newDecoder), "$newEncoder", $rt_wrapFunction0(jnci_UTF16Charset_newEncoder)],
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
jus_Collectors, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_1", $rt_wrapFunction4(jl_Object$monitorEnterWait$lambda$_6_0__init_), "$run", $rt_wrapFunction0(jl_Object$monitorEnterWait$lambda$_6_0_run)],
onn_NostrRelay$lambda$connect$18$lambda$_53_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_127", $rt_wrapFunction3(onn_NostrRelay$lambda$connect$18$lambda$_53_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$lambda$connect$18$lambda$_53_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$lambda$connect$18$lambda$_53_0_accept)],
onnp_NostrPoolAckPolicy, 0, jl_Object, [juf_Function], 3, 3, 0, 0, 0,
onnp_NostrPoolAnyAckPolicy, "NostrPoolAnyAckPolicy", 35, jl_Object, [onnp_NostrPoolAckPolicy], 0, 3, 0, onnp_NostrPoolAnyAckPolicy_$callClinit, ["$_init_0", $rt_wrapFunction0(onnp_NostrPoolAnyAckPolicy__init_0), "$apply2", $rt_wrapFunction1(onnp_NostrPoolAnyAckPolicy_apply0), "$apply", $rt_wrapFunction1(onnp_NostrPoolAnyAckPolicy_apply)],
otjc_JSUndefined, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
onn_NostrSubscription$callEventListeners$lambda$_15_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_233", $rt_wrapFunction3(onn_NostrSubscription$callEventListeners$lambda$_15_0__init_), "$call0", $rt_wrapFunction0(onn_NostrSubscription$callEventListeners$lambda$_15_0_call)],
jur_PositiveLookBehind, "PositiveLookBehind", 6, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_69", $rt_wrapFunction2(jur_PositiveLookBehind__init_), "$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong)],
ju_Comparator$NaturalOrder, 0, jl_Object, [ju_Comparator], 0, 3, 0, ju_Comparator$NaturalOrder_$callClinit, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong), "$_init_0", $rt_wrapFunction0(ju_Comparator$NaturalOrder__init_), "$compare5", $rt_wrapFunction2(ju_Comparator$NaturalOrder_compare)],
onns_NostrKeyPairSigner$sign$lambda$_2_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_35", $rt_wrapFunction3(onns_NostrKeyPairSigner$sign$lambda$_2_0__init_), "$apply", $rt_wrapFunction1(onns_NostrKeyPairSigner$sign$lambda$_2_0_apply0), "$apply3", $rt_wrapFunction1(onns_NostrKeyPairSigner$sign$lambda$_2_0_apply)],
onn_NostrSubscription$callEventListeners$lambda$_15_1, "NostrSubscription$callEventListeners$lambda$_15_1", 26, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_234", $rt_wrapFunction1(onn_NostrSubscription$callEventListeners$lambda$_15_1__init_), "$accept0", $rt_wrapFunction1(onn_NostrSubscription$callEventListeners$lambda$_15_1_accept0), "$accept1", $rt_wrapFunction1(onn_NostrSubscription$callEventListeners$lambda$_15_1_accept)],
jnci_AsciiCharset, "AsciiCharset", 12, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_AsciiCharset__init_), "$newDecoder", $rt_wrapFunction0(jnci_AsciiCharset_newDecoder), "$newEncoder", $rt_wrapFunction0(jnci_AsciiCharset_newEncoder)],
jtc_ChronoLocalDate, 0, jl_Object, [jtt_Temporal, jtt_TemporalAdjuster, jl_Comparable], 1, 3, 0, jtc_ChronoLocalDate_$callClinit, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$_init_0", $rt_wrapFunction0(jtc_ChronoLocalDate__init_), "$isSupported", $rt_wrapFunction1(jtc_ChronoLocalDate_isSupported), "$query", $rt_wrapFunction1(jtc_ChronoLocalDate_query), "$compareTo1", $rt_wrapFunction1(jtc_ChronoLocalDate_compareTo)],
jt_LocalDate, "LocalDate", 15, jtc_ChronoLocalDate, [jtt_Temporal, jtt_TemporalAdjuster, ji_Serializable], 4, 3, 0, jt_LocalDate_$callClinit, ["$isSupported", $rt_wrapFunction1(jt_LocalDate_isSupported), "$range0", $rt_wrapFunction1(jt_LocalDate_range), "$get2", $rt_wrapFunction1(jt_LocalDate_get), "$getLong", $rt_wrapFunction1(jt_LocalDate_getLong), "$getChronology0", $rt_wrapFunction0(jt_LocalDate_getChronology), "$getYear", $rt_wrapFunction0(jt_LocalDate_getYear), "$getMonth", $rt_wrapFunction0(jt_LocalDate_getMonth),
"$getDayOfYear", $rt_wrapFunction0(jt_LocalDate_getDayOfYear), "$getDayOfWeek", $rt_wrapFunction0(jt_LocalDate_getDayOfWeek), "$isLeapYear0", $rt_wrapFunction0(jt_LocalDate_isLeapYear), "$lengthOfMonth", $rt_wrapFunction0(jt_LocalDate_lengthOfMonth), "$lengthOfYear", $rt_wrapFunction0(jt_LocalDate_lengthOfYear), "$with1", $rt_wrapFunction1(jt_LocalDate_with0), "$with0", $rt_wrapFunction2(jt_LocalDate_with), "$withYear", $rt_wrapFunction1(jt_LocalDate_withYear), "$withMonth", $rt_wrapFunction1(jt_LocalDate_withMonth),
"$withDayOfMonth", $rt_wrapFunction1(jt_LocalDate_withDayOfMonth), "$withDayOfYear", $rt_wrapFunction1(jt_LocalDate_withDayOfYear), "$plus1", $rt_wrapFunction1(jt_LocalDate_plus0), "$plus0", $rt_wrapFunction2(jt_LocalDate_plus), "$plusYears", $rt_wrapFunction1(jt_LocalDate_plusYears), "$plusMonths", $rt_wrapFunction1(jt_LocalDate_plusMonths), "$plusWeeks", $rt_wrapFunction1(jt_LocalDate_plusWeeks), "$plusDays", $rt_wrapFunction1(jt_LocalDate_plusDays), "$minus", $rt_wrapFunction2(jt_LocalDate_minus), "$minusYears",
$rt_wrapFunction1(jt_LocalDate_minusYears), "$query", $rt_wrapFunction1(jt_LocalDate_query), "$atTime", $rt_wrapFunction1(jt_LocalDate_atTime), "$toEpochDay", $rt_wrapFunction0(jt_LocalDate_toEpochDay), "$compareTo1", $rt_wrapFunction1(jt_LocalDate_compareTo), "$compareTo01", $rt_wrapFunction1(jt_LocalDate_compareTo0), "$equals", $rt_wrapFunction1(jt_LocalDate_equals), "$hashCode", $rt_wrapFunction0(jt_LocalDate_hashCode), "$toString", $rt_wrapFunction0(jt_LocalDate_toString), "$atTime0", $rt_wrapFunction1(jt_LocalDate_atTime0),
"$plus4", $rt_wrapFunction1(jt_LocalDate_plus1), "$getChronology", $rt_wrapFunction0(jt_LocalDate_getChronology0), "$minus0", $rt_wrapFunction2(jt_LocalDate_minus0), "$plus2", $rt_wrapFunction2(jt_LocalDate_plus2), "$with2", $rt_wrapFunction2(jt_LocalDate_with1)],
jl_ArrayStoreException, "ArrayStoreException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ArrayStoreException__init_0)],
onp_RTCSettings, 0, jl_Object, [jl_Cloneable, ji_Serializable], 4, 3, 0, onp_RTCSettings_$callClinit, ["$_init_89", function(var_1, var_2, var_3, var_4, var_5) { onp_RTCSettings__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$getSignalingLoopInterval", $rt_wrapFunction0(onp_RTCSettings_getSignalingLoopInterval), "$getPeerExpiration", $rt_wrapFunction0(onp_RTCSettings_getPeerExpiration), "$getRoomLoopInterval", $rt_wrapFunction0(onp_RTCSettings_getRoomLoopInterval), "$getDelayedCandidatesInterval", $rt_wrapFunction0(onp_RTCSettings_getDelayedCandidatesInterval)],
otji_JS$WrapFunction, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, ["$_init_318", function(var_1, var_2, var_3, var_4, var_5, var_6) { jur_MatchResultImpl__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setConsumed", $rt_wrapFunction2(jur_MatchResultImpl_setConsumed), "$getConsumed", $rt_wrapFunction1(jur_MatchResultImpl_getConsumed), "$end0", $rt_wrapFunction0(jur_MatchResultImpl_end0), "$end", $rt_wrapFunction1(jur_MatchResultImpl_end), "$setStart", $rt_wrapFunction2(jur_MatchResultImpl_setStart),
"$setEnd", $rt_wrapFunction2(jur_MatchResultImpl_setEnd), "$getStart", $rt_wrapFunction1(jur_MatchResultImpl_getStart), "$getEnd", $rt_wrapFunction1(jur_MatchResultImpl_getEnd), "$getGroupNoCheck", $rt_wrapFunction1(jur_MatchResultImpl_getGroupNoCheck), "$start3", $rt_wrapFunction0(jur_MatchResultImpl_start0), "$start", $rt_wrapFunction1(jur_MatchResultImpl_start), "$finalizeMatch", $rt_wrapFunction0(jur_MatchResultImpl_finalizeMatch), "$getEnterCounter", $rt_wrapFunction1(jur_MatchResultImpl_getEnterCounter),
"$setEnterCounter", $rt_wrapFunction2(jur_MatchResultImpl_setEnterCounter), "$setValid", $rt_wrapFunction0(jur_MatchResultImpl_setValid), "$isValid", $rt_wrapFunction0(jur_MatchResultImpl_isValid), "$reset2", $rt_wrapFunction3(jur_MatchResultImpl_reset0), "$reset", $rt_wrapFunction0(jur_MatchResultImpl_reset), "$setStartIndex", $rt_wrapFunction1(jur_MatchResultImpl_setStartIndex), "$getLeftBound", $rt_wrapFunction0(jur_MatchResultImpl_getLeftBound), "$getRightBound", $rt_wrapFunction0(jur_MatchResultImpl_getRightBound),
"$setMode", $rt_wrapFunction1(jur_MatchResultImpl_setMode), "$mode", $rt_wrapFunction0(jur_MatchResultImpl_mode), "$useAnchoringBounds", $rt_wrapFunction1(jur_MatchResultImpl_useAnchoringBounds), "$hasAnchoringBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasAnchoringBounds), "$hasTransparentBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasTransparentBounds), "$getPreviousMatchEnd", $rt_wrapFunction0(jur_MatchResultImpl_getPreviousMatchEnd)],
otcit_DateTimeZone, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_", $rt_wrapFunction1(otcit_DateTimeZone__init_), "$getID", $rt_wrapFunction0(otcit_DateTimeZone_getID)],
juca_AtomicBoolean, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_146", $rt_wrapFunction1(juca_AtomicBoolean__init_), "$get17", $rt_wrapFunction0(juca_AtomicBoolean_get), "$set3", $rt_wrapFunction1(juca_AtomicBoolean_set)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_100", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
onnk_NostrKey, 0, jl_Object, [ji_Serializable, jl_Cloneable], 3, 3, 0, 0, 0,
onnk_NostrPrivateKey, "NostrPrivateKey", 34, jl_Object, [onnk_NostrKey], 4, 3, 0, onnk_NostrPrivateKey_$callClinit, ["$_init_90", $rt_wrapFunction1(onnk_NostrPrivateKey__init_0), "$asReadOnlyBytes", $rt_wrapFunction0(onnk_NostrPrivateKey_asReadOnlyBytes), "$asHex", $rt_wrapFunction0(onnk_NostrPrivateKey_asHex), "$_array", $rt_wrapFunction0(onnk_NostrPrivateKey__array), "$asBech32", $rt_wrapFunction0(onnk_NostrPrivateKey_asBech32), "$toString", $rt_wrapFunction0(onnk_NostrPrivateKey_toString), "$equals", $rt_wrapFunction1(onnk_NostrPrivateKey_equals),
"$hashCode", $rt_wrapFunction0(onnk_NostrPrivateKey_hashCode), "$clone4", $rt_wrapFunction0(onnk_NostrPrivateKey_clone), "$preload", $rt_wrapFunction0(onnk_NostrPrivateKey_preload), "$getPublicKey", $rt_wrapFunction0(onnk_NostrPrivateKey_getPublicKey), "$setKeySecurity", $rt_wrapFunction1(onnk_NostrPrivateKey_setKeySecurity), "$getKeySecurity", $rt_wrapFunction0(onnk_NostrPrivateKey_getKeySecurity), "$asNcryptsec", $rt_wrapFunction1(onnk_NostrPrivateKey_asNcryptsec), "$clone0", $rt_wrapFunction0(onnk_NostrPrivateKey_clone0)],
jur_DecomposedCharSet, "DecomposedCharSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_246", $rt_wrapFunction2(jur_DecomposedCharSet__init_), "$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$codePointAt", $rt_wrapFunction3(jur_DecomposedCharSet_codePointAt), "$first", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
onnpi_NostrEOSEMessage, "NostrEOSEMessage", 44, onnp_NostrMessage, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onnpi_NostrEOSEMessage__init_0), "$getSubId", $rt_wrapFunction0(onnpi_NostrEOSEMessage_getSubId), "$getPrefix", $rt_wrapFunction0(onnpi_NostrEOSEMessage_getPrefix), "$getFragments", $rt_wrapFunction0(onnpi_NostrEOSEMessage_getFragments)],
jl_IllegalArgumentException, "IllegalArgumentException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalArgumentException__init_2), "$_init_32", $rt_wrapFunction2(jl_IllegalArgumentException__init_4), "$_init_", $rt_wrapFunction1(jl_IllegalArgumentException__init_1)],
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 11, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_IllegalCharsetNameException__init_0)],
onnr_NostrRTCRoom, "NostrRTCRoom", 27, jl_Object, [ji_Closeable], 0, 3, 0, onnr_NostrRTCRoom_$callClinit, ["$_init_97", function(var_1, var_2, var_3, var_4, var_5) { onnr_NostrRTCRoom__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$close", $rt_wrapFunction0(onnr_NostrRTCRoom_close), "$addMessageListener", $rt_wrapFunction1(onnr_NostrRTCRoom_addMessageListener), "$addConnectionListener", $rt_wrapFunction1(onnr_NostrRTCRoom_addConnectionListener), "$addDisconnectionListener", $rt_wrapFunction1(onnr_NostrRTCRoom_addDisconnectionListener),
"$addPeerDiscoveryListener", $rt_wrapFunction1(onnr_NostrRTCRoom_addPeerDiscoveryListener), "$addListener1", $rt_wrapFunction1(onnr_NostrRTCRoom_addListener), "$removeListener", $rt_wrapFunction1(onnr_NostrRTCRoom_removeListener), "$discover", $rt_wrapFunction0(onnr_NostrRTCRoom_discover), "$start1", $rt_wrapFunction0(onnr_NostrRTCRoom_start), "$kick", $rt_wrapFunction1(onnr_NostrRTCRoom_kick), "$onRTCSocketClose", $rt_wrapFunction1(onnr_NostrRTCRoom_onRTCSocketClose), "$ban", $rt_wrapFunction1(onnr_NostrRTCRoom_ban),
"$unban", $rt_wrapFunction1(onnr_NostrRTCRoom_unban), "$onAddAnnounce", $rt_wrapFunction1(onnr_NostrRTCRoom_onAddAnnounce), "$onUpdateAnnounce", $rt_wrapFunction1(onnr_NostrRTCRoom_onUpdateAnnounce), "$onRemoveAnnounce", $rt_wrapFunction2(onnr_NostrRTCRoom_onRemoveAnnounce), "$getRemotePeerInfo", $rt_wrapFunction1(onnr_NostrRTCRoom_getRemotePeerInfo), "$getLocalPeerInfo", $rt_wrapFunction0(onnr_NostrRTCRoom_getLocalPeerInfo), "$onReceiveOffer", $rt_wrapFunction1(onnr_NostrRTCRoom_onReceiveOffer), "$onReceiveAnswer",
$rt_wrapFunction1(onnr_NostrRTCRoom_onReceiveAnswer), "$onReceiveCandidates", $rt_wrapFunction1(onnr_NostrRTCRoom_onReceiveCandidates), "$onRTCSocketLocalIceCandidate", $rt_wrapFunction2(onnr_NostrRTCRoom_onRTCSocketLocalIceCandidate), "$onRTCSocketMessage", $rt_wrapFunction3(onnr_NostrRTCRoom_onRTCSocketMessage), "$send", $rt_wrapFunction2(onnr_NostrRTCRoom_send), "$broadcast", $rt_wrapFunction1(onnr_NostrRTCRoom_broadcast)],
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, ["$_init_98", $rt_wrapFunction1(ji_FilterOutputStream__init_)]]);
$rt_metadata([ji_PrintStream, 0, ji_FilterOutputStream, [jl_Appendable], 0, 3, 0, 0, ["$_init_263", $rt_wrapFunction3(ji_PrintStream__init_)],
jur_NegativeLookBehind, "NegativeLookBehind", 6, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_69", $rt_wrapFunction2(jur_NegativeLookBehind__init_), "$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
jtf_SimpleDateTimeTextProvider, 0, jtf_DateTimeTextProvider, [], 4, 0, 0, jtf_SimpleDateTimeTextProvider_$callClinit, 0,
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
onn_NostrPool$lambda$fetch$17$lambda$_40_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_185", $rt_wrapFunction3(onn_NostrPool$lambda$fetch$17$lambda$_40_0__init_)],
juf_Predicate, 0, jl_Object, [], 3, 3, 0, 0, 0,
onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0__init_), "$test0", $rt_wrapFunction1(onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0_test0), "$test", $rt_wrapFunction1(onns_SdanTaxonomy$SdanTaxonomyTerm$term$lambda$_1_0_test)],
onn_NostrPool$lambda$fetch$17$lambda$_40_3, "NostrPool$lambda$fetch$17$lambda$_40_3", 26, jl_Object, [onnls_NostrSubEventListener], 0, 3, 0, 0, ["$_init_188", $rt_wrapFunction2(onn_NostrPool$lambda$fetch$17$lambda$_40_3__init_), "$onSubEvent", $rt_wrapFunction2(onn_NostrPool$lambda$fetch$17$lambda$_40_3_onSubEvent)],
onnls_NostrSubCloseListener, 0, jl_Object, [onnls_NostrSubListener], 3, 3, 0, 0, 0,
onn_NostrPool$lambda$fetch$17$lambda$_40_4, "NostrPool$lambda$fetch$17$lambda$_40_4", 26, jl_Object, [onnls_NostrSubCloseListener], 0, 3, 0, 0, ["$_init_189", $rt_wrapFunction4(onn_NostrPool$lambda$fetch$17$lambda$_40_4__init_), "$onSubClose", $rt_wrapFunction1(onn_NostrPool$lambda$fetch$17$lambda$_40_4_onSubClose)],
onn_NostrPool$lambda$fetch$17$lambda$_40_1, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_186", $rt_wrapFunction4(onn_NostrPool$lambda$fetch$17$lambda$_40_1__init_), "$accept0", $rt_wrapFunction1(onn_NostrPool$lambda$fetch$17$lambda$_40_1_accept0), "$accept2", $rt_wrapFunction1(onn_NostrPool$lambda$fetch$17$lambda$_40_1_accept)],
onnls_NostrSubEoseListener, 0, jl_Object, [onnls_NostrSubListener], 3, 3, 0, 0, 0,
onn_NostrPool$lambda$fetch$17$lambda$_40_2, "NostrPool$lambda$fetch$17$lambda$_40_2", 26, jl_Object, [onnls_NostrSubEoseListener], 0, 3, 0, 0, ["$_init_187", $rt_wrapFunction3(onn_NostrPool$lambda$fetch$17$lambda$_40_2__init_), "$onSubEose", $rt_wrapFunction1(onn_NostrPool$lambda$fetch$17$lambda$_40_2_onSubEose)],
jtf_DateTimePrintContext, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_310", $rt_wrapFunction3(jtf_DateTimePrintContext__init_), "$getTemporal", $rt_wrapFunction0(jtf_DateTimePrintContext_getTemporal), "$getValue3", $rt_wrapFunction1(jtf_DateTimePrintContext_getValue)],
onnrt_NostrTURNSettings, "NostrTURNSettings", 29, jl_Object, [jl_Cloneable, ji_Serializable], 4, 3, 0, onnrt_NostrTURNSettings_$callClinit, ["$_init_101", function(var_1, var_2, var_3, var_4, var_5) { onnrt_NostrTURNSettings__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$getChunkLength", $rt_wrapFunction0(onnrt_NostrTURNSettings_getChunkLength), "$getPacketTimeout", $rt_wrapFunction0(onnrt_NostrTURNSettings_getPacketTimeout), "$getMaxLatency", $rt_wrapFunction0(onnrt_NostrTURNSettings_getMaxLatency),
"$getLoopInterval", $rt_wrapFunction0(onnrt_NostrTURNSettings_getLoopInterval), "$getKind", $rt_wrapFunction0(onnrt_NostrTURNSettings_getKind), "$clone5", $rt_wrapFunction0(onnrt_NostrTURNSettings_clone), "$toString", $rt_wrapFunction0(onnrt_NostrTURNSettings_toString), "$equals", $rt_wrapFunction1(onnrt_NostrTURNSettings_equals), "$hashCode", $rt_wrapFunction0(onnrt_NostrTURNSettings_hashCode), "$clone0", $rt_wrapFunction0(onnrt_NostrTURNSettings_clone0)],
onn_NostrPool$lambda$fetch$17$lambda$_40_5, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_184", $rt_wrapFunction4(onn_NostrPool$lambda$fetch$17$lambda$_40_5__init_), "$run", $rt_wrapFunction0(onn_NostrPool$lambda$fetch$17$lambda$_40_5_run)],
onns_SdanOffer, "SdanOffer", 40, jl_Object, [], 0, 3, 0, 0, ["$_init_102", $rt_wrapFunction1(onns_SdanOffer__init_), "$getBid", $rt_wrapFunction0(onns_SdanOffer_getBid)],
jtf_DateTimeFormatter, 0, jl_Object, [], 4, 3, 0, jtf_DateTimeFormatter_$callClinit, ["$_init_30", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { jtf_DateTimeFormatter__init_(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$getLocale", $rt_wrapFunction0(jtf_DateTimeFormatter_getLocale), "$getDecimalStyle", $rt_wrapFunction0(jtf_DateTimeFormatter_getDecimalStyle), "$getChronology", $rt_wrapFunction0(jtf_DateTimeFormatter_getChronology), "$withChronology", $rt_wrapFunction1(jtf_DateTimeFormatter_withChronology),
"$getZone", $rt_wrapFunction0(jtf_DateTimeFormatter_getZone), "$withResolverStyle", $rt_wrapFunction1(jtf_DateTimeFormatter_withResolverStyle), "$parse9", $rt_wrapFunction2(jtf_DateTimeFormatter_parse), "$toPrinterParser", $rt_wrapFunction1(jtf_DateTimeFormatter_toPrinterParser)],
jur_LeafQuantifierSet, "LeafQuantifierSet", 6, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_106", $rt_wrapFunction3(jur_LeafQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 6, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_292", $rt_wrapFunction1(jur_UnifiedQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, "Class", 22, jl_Object, [jlr_AnnotatedElement, jlr_Type], 4, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString), "$getPlatformClass", $rt_wrapFunction0(jl_Class_getPlatformClass), "$isInstance", $rt_wrapFunction1(jl_Class_isInstance), "$isAssignableFrom", $rt_wrapFunction1(jl_Class_isAssignableFrom), "$getName", $rt_wrapFunction0(jl_Class_getName), "$isPrimitive", $rt_wrapFunction0(jl_Class_isPrimitive), "$isArray", $rt_wrapFunction0(jl_Class_isArray), "$isEnum0", $rt_wrapFunction0(jl_Class_isEnum),
"$isInterface", $rt_wrapFunction0(jl_Class_isInterface), "$getComponentType", $rt_wrapFunction0(jl_Class_getComponentType), "$getDeclaredConstructors", $rt_wrapFunction0(jl_Class_getDeclaredConstructors), "$getDeclaredConstructor", $rt_wrapFunction1(jl_Class_getDeclaredConstructor), "$desiredAssertionStatus", $rt_wrapFunction0(jl_Class_desiredAssertionStatus), "$getSuperclass", $rt_wrapFunction0(jl_Class_getSuperclass), "$getEnumConstants", $rt_wrapFunction0(jl_Class_getEnumConstants), "$cast", $rt_wrapFunction1(jl_Class_cast),
"$getClassLoader", $rt_wrapFunction0(jl_Class_getClassLoader), "$getResourceAsStream", $rt_wrapFunction1(jl_Class_getResourceAsStream)],
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_BitSet__init_0), "$_init_9", $rt_wrapFunction1(ju_BitSet__init_), "$set2", $rt_wrapFunction1(ju_BitSet_set0), "$set", $rt_wrapFunction2(ju_BitSet_set), "$clear0", $rt_wrapFunction1(ju_BitSet_clear0), "$clear1", $rt_wrapFunction2(ju_BitSet_clear), "$get13", $rt_wrapFunction1(ju_BitSet_get), "$nextSetBit", $rt_wrapFunction1(ju_BitSet_nextSetBit), "$nextClearBit", $rt_wrapFunction1(ju_BitSet_nextClearBit), "$intersects",
$rt_wrapFunction1(ju_BitSet_intersects), "$and", $rt_wrapFunction1(ju_BitSet_and), "$andNot", $rt_wrapFunction1(ju_BitSet_andNot), "$or", $rt_wrapFunction1(ju_BitSet_or), "$xor", $rt_wrapFunction1(ju_BitSet_xor), "$isEmpty", $rt_wrapFunction0(ju_BitSet_isEmpty)],
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Float_$callClinit, 0,
jur_CharSet, "CharSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction1(jur_CharSet__init_0), "$charCount", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName", $rt_wrapFunction0(jur_CharSet_getName), "$getChar", $rt_wrapFunction0(jur_CharSet_getChar), "$first", $rt_wrapFunction1(jur_CharSet_first)],
jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong), "$_init_0", $rt_wrapFunction0(jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0__init_), "$compare5", $rt_wrapFunction2(jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0_compare0), "$compare1", $rt_wrapFunction2(jtf_SimpleDateTimeTextProvider$_clinit_$lambda$_8_0_compare)],
otcit_StorableDateTimeZone, 0, otcit_DateTimeZone, [], 1, 3, 0, 0, ["$_init_", $rt_wrapFunction1(otcit_StorableDateTimeZone__init_)],
otcit_DateTimeZoneBuilder$RuleBasedZone, "DateTimeZoneBuilder$RuleBasedZone", 55, otcit_StorableDateTimeZone, [], 4, 0, 0, 0, ["$_init_110", $rt_wrapFunction2(otcit_DateTimeZoneBuilder$RuleBasedZone__init_), "$getOffset", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$RuleBasedZone_getOffset), "$getStandardOffset", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$RuleBasedZone_getStandardOffset), "$asZoneRules", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$RuleBasedZone_asZoneRules)],
ju_ListIterator, 0, jl_Object, [ju_Iterator], 3, 3, 0, 0, 0,
ju_Collections$5, 0, jl_Object, [ju_ListIterator], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Collections$5__init_)],
ju_SequencedCollection, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream)],
ju_List, 0, jl_Object, [ju_SequencedCollection], 3, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream)],
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_AbstractList__init_), "$add1", $rt_wrapFunction1(ju_AbstractList_add), "$iterator", $rt_wrapFunction0(ju_AbstractList_iterator), "$set0", $rt_wrapFunction2(ju_AbstractList_set), "$add2", $rt_wrapFunction2(ju_AbstractList_add0), "$remove0", $rt_wrapFunction1(ju_AbstractList_remove), "$indexOf2", $rt_wrapFunction1(ju_AbstractList_indexOf),
"$hashCode", $rt_wrapFunction0(ju_AbstractList_hashCode), "$equals", $rt_wrapFunction1(ju_AbstractList_equals)],
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_TemplateCollections$AbstractImmutableList, 0, ju_AbstractList, [ju_RandomAccess], 1, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_TemplateCollections$AbstractImmutableList__init_), "$remove0", $rt_wrapFunction1(ju_TemplateCollections$AbstractImmutableList_remove)],
ju_Collections$3, "Collections$3", 4, ju_TemplateCollections$AbstractImmutableList, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_Collections$3__init_), "$get", $rt_wrapFunction1(ju_Collections$3_get), "$size", $rt_wrapFunction0(ju_Collections$3_size), "$iterator", $rt_wrapFunction0(ju_Collections$3_iterator), "$isEmpty", $rt_wrapFunction0(ju_Collections$3_isEmpty)],
ju_Collections$4, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Collections$4__init_), "$hasNext", $rt_wrapFunction0(ju_Collections$4_hasNext), "$next", $rt_wrapFunction0(ju_Collections$4_next), "$remove", $rt_wrapFunction0(ju_Collections$4_remove)],
ju_TemplateCollections$AbstractImmutableSet, 0, ju_AbstractSet, [], 1, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_TemplateCollections$AbstractImmutableSet__init_)],
ju_Collections$1, 0, ju_TemplateCollections$AbstractImmutableSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_Collections$1__init_), "$size", $rt_wrapFunction0(ju_Collections$1_size), "$iterator", $rt_wrapFunction0(ju_Collections$1_iterator)],
ju_TemplateCollections$AbstractImmutableMap, 0, ju_AbstractMap, [], 1, 0, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent), "$_init_0", $rt_wrapFunction0(ju_TemplateCollections$AbstractImmutableMap__init_), "$put1", $rt_wrapFunction2(ju_TemplateCollections$AbstractImmutableMap_put), "$remove1", $rt_wrapFunction1(ju_TemplateCollections$AbstractImmutableMap_remove)],
ju_Collections$2, "Collections$2", 4, ju_TemplateCollections$AbstractImmutableMap, [], 0, 0, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent), "$_init_0", $rt_wrapFunction0(ju_Collections$2__init_), "$entrySet", $rt_wrapFunction0(ju_Collections$2_entrySet), "$size", $rt_wrapFunction0(ju_Collections$2_size), "$get1", $rt_wrapFunction1(ju_Collections$2_get), "$isEmpty", $rt_wrapFunction0(ju_Collections$2_isEmpty),
"$containsKey", $rt_wrapFunction1(ju_Collections$2_containsKey)],
jtf_DateTimeFormatterBuilder$DateTimePrinterParser, 0, jl_Object, [], 3, 0, 0, 0, 0,
jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser, "DateTimeFormatterBuilder$StringLiteralPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, 0, ["$_init_", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser__init_), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$StringLiteralPrinterParser_toString)],
jtf_DateTimeFormatterBuilder$InstantPrinterParser, "DateTimeFormatterBuilder$InstantPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder$InstantPrinterParser__init_), "$print0", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$InstantPrinterParser_print), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$InstantPrinterParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$InstantPrinterParser_toString)],
juf_IntPredicate, 0, jl_Object, [], 3, 3, 0, 0, 0,
jusi_SimpleIntStreamImpl$ArrayFillingConsumer, 0, jl_Object, [juf_IntPredicate], 0, 0, 0, 0, ["$_init_16", $rt_wrapFunction1(jusi_SimpleIntStreamImpl$ArrayFillingConsumer__init_), "$test2", $rt_wrapFunction1(jusi_SimpleIntStreamImpl$ArrayFillingConsumer_test)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_60", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategoryScope__init_0), "$_init_61", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategoryScope__init_1), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
ju_Collections$9, "Collections$9", 4, ju_AbstractList, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_17", $rt_wrapFunction1(ju_Collections$9__init_), "$get", $rt_wrapFunction1(ju_Collections$9_get), "$size", $rt_wrapFunction0(ju_Collections$9_size), "$remove2", $rt_wrapFunction1(ju_Collections$9_remove)],
ju_Collections$7, 0, ju_AbstractMap, [], 0, 0, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent), "$_init_229", $rt_wrapFunction1(ju_Collections$7__init_), "$entrySet", $rt_wrapFunction0(ju_Collections$7_entrySet)],
onnr_NostrRTCRoom$broadcast$lambda$_27_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnr_NostrRTCRoom$broadcast$lambda$_27_0__init_), "$apply", $rt_wrapFunction1(onnr_NostrRTCRoom$broadcast$lambda$_27_0_apply0), "$apply4", $rt_wrapFunction1(onnr_NostrRTCRoom$broadcast$lambda$_27_0_apply)]]);
$rt_metadata([ju_SequencedSet, 0, jl_Object, [ju_SequencedCollection, ju_Set], 3, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream)],
onns_NostrNIP46Signer$getPublicKey$lambda$_16_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$getPublicKey$lambda$_16_0__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$getPublicKey$lambda$_16_0_apply0), "$apply5", $rt_wrapFunction1(onns_NostrNIP46Signer$getPublicKey$lambda$_16_0_apply)],
onns_NostrNIP46Signer$getPublicKey$lambda$_16_1, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$getPublicKey$lambda$_16_1__init_), "$accept3", $rt_wrapFunction2(onns_NostrNIP46Signer$getPublicKey$lambda$_16_1_accept0), "$accept", $rt_wrapFunction2(onns_NostrNIP46Signer$getPublicKey$lambda$_16_1_accept)],
jtz_ZoneOffsetTransition, "ZoneOffsetTransition", 16, jl_Object, [jl_Comparable, ji_Serializable], 4, 3, 0, 0, ["$_init_113", $rt_wrapFunction3(jtz_ZoneOffsetTransition__init_0), "$getInstant", $rt_wrapFunction0(jtz_ZoneOffsetTransition_getInstant), "$toEpochSecond0", $rt_wrapFunction0(jtz_ZoneOffsetTransition_toEpochSecond), "$getDateTimeBefore", $rt_wrapFunction0(jtz_ZoneOffsetTransition_getDateTimeBefore), "$getDateTimeAfter", $rt_wrapFunction0(jtz_ZoneOffsetTransition_getDateTimeAfter), "$getOffsetBefore",
$rt_wrapFunction0(jtz_ZoneOffsetTransition_getOffsetBefore), "$getOffsetAfter", $rt_wrapFunction0(jtz_ZoneOffsetTransition_getOffsetAfter), "$getDuration", $rt_wrapFunction0(jtz_ZoneOffsetTransition_getDuration), "$isGap", $rt_wrapFunction0(jtz_ZoneOffsetTransition_isGap), "$getValidOffsets", $rt_wrapFunction0(jtz_ZoneOffsetTransition_getValidOffsets), "$compareTo9", $rt_wrapFunction1(jtz_ZoneOffsetTransition_compareTo), "$equals", $rt_wrapFunction1(jtz_ZoneOffsetTransition_equals), "$hashCode", $rt_wrapFunction0(jtz_ZoneOffsetTransition_hashCode),
"$toString", $rt_wrapFunction0(jtz_ZoneOffsetTransition_toString), "$compareTo7", $rt_wrapFunction1(jtz_ZoneOffsetTransition_compareTo0)],
onn_NostrRelay, "NostrRelay", 26, jl_Object, [], 4, 3, 0, onn_NostrRelay_$callClinit, ["$_init_", $rt_wrapFunction1(onn_NostrRelay__init_2), "$_init_114", $rt_wrapFunction2(onn_NostrRelay__init_0), "$getInfo", $rt_wrapFunction0(onn_NostrRelay_getInfo), "$setVerifyEvents", $rt_wrapFunction1(onn_NostrRelay_setVerifyEvents), "$isVerifyEvents", $rt_wrapFunction0(onn_NostrRelay_isVerifyEvents), "$setAsyncEventsVerification", $rt_wrapFunction1(onn_NostrRelay_setAsyncEventsVerification), "$isAsyncEventsVerification",
$rt_wrapFunction0(onn_NostrRelay_isAsyncEventsVerification), "$runInRelayExecutor", $rt_wrapFunction2(onn_NostrRelay_runInRelayExecutor), "$setAutoReconnect", $rt_wrapFunction1(onn_NostrRelay_setAutoReconnect), "$isAutoReconnect", $rt_wrapFunction0(onn_NostrRelay_isAutoReconnect), "$setAckTimeout", $rt_wrapFunction2(onn_NostrRelay_setAckTimeout), "$getAckTimeout", $rt_wrapFunction1(onn_NostrRelay_getAckTimeout), "$addComponent", $rt_wrapFunction1(onn_NostrRelay_addComponent), "$removeComponent", $rt_wrapFunction1(onn_NostrRelay_removeComponent),
"$getComponent", $rt_wrapFunction1(onn_NostrRelay_getComponent), "$isConnected", $rt_wrapFunction0(onn_NostrRelay_isConnected), "$beforeSendMessage", $rt_wrapFunction1(onn_NostrRelay_beforeSendMessage), "$afterSendMessage", $rt_wrapFunction1(onn_NostrRelay_afterSendMessage), "$sendMessage", $rt_wrapFunction1(onn_NostrRelay_sendMessage), "$getUrl", $rt_wrapFunction0(onn_NostrRelay_getUrl), "$connect0", $rt_wrapFunction0(onn_NostrRelay_connect), "$disconnect", $rt_wrapFunction1(onn_NostrRelay_disconnect), "$loop",
$rt_wrapFunction0(onn_NostrRelay_loop)],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_202", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
onns_NostrNIP46Signer$sign$lambda$_13_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_273", $rt_wrapFunction1(onns_NostrNIP46Signer$sign$lambda$_13_0__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$sign$lambda$_13_0_apply0), "$apply3", $rt_wrapFunction1(onns_NostrNIP46Signer$sign$lambda$_13_0_apply)],
ju_Collections$_clinit_$lambda$_59_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong), "$_init_0", $rt_wrapFunction0(ju_Collections$_clinit_$lambda$_59_0__init_)],
onn_Nostr4jsModule, 0, jl_Object, [], 0, 3, 0, onn_Nostr4jsModule_$callClinit, 0,
onn_NostrRelay$beforeSendMessage$lambda$_16_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$beforeSendMessage$lambda$_16_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$beforeSendMessage$lambda$_16_0_run)],
jtc_Chronology, 0, jl_Object, [jl_Comparable], 1, 3, 0, jtc_Chronology_$callClinit, ["$_init_0", $rt_wrapFunction0(jtc_Chronology__init_), "$updateResolveMap", $rt_wrapFunction3(jtc_Chronology_updateResolveMap), "$compareTo3", $rt_wrapFunction1(jtc_Chronology_compareTo), "$equals", $rt_wrapFunction1(jtc_Chronology_equals), "$toString", $rt_wrapFunction0(jtc_Chronology_toString)],
onn_NostrRelay$beforeSendMessage$lambda$_16_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction1(onn_NostrRelay$beforeSendMessage$lambda$_16_1__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$beforeSendMessage$lambda$_16_1_run)],
ju_LinkedHashMapIterator, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction2(ju_LinkedHashMapIterator__init_), "$hasNext", $rt_wrapFunction0(ju_LinkedHashMapIterator_hasNext), "$checkConcurrentMod", $rt_wrapFunction0(ju_LinkedHashMapIterator_checkConcurrentMod), "$makeNext", $rt_wrapFunction0(ju_LinkedHashMapIterator_makeNext), "$remove", $rt_wrapFunction0(ju_LinkedHashMapIterator_remove)],
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 11, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_UnsupportedCharsetException__init_)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_326", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$sendMessage$12$lambda$_59_0_run)],
cjj_GZIPHeader, 0, jl_Object, [jl_Cloneable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cjj_GZIPHeader__init_0), "$setCRC", $rt_wrapFunction1(cjj_GZIPHeader_setCRC), "$put9", $rt_wrapFunction1(cjj_GZIPHeader_put)],
jus_Stream, 0, jl_Object, [jus_BaseStream], 3, 3, 0, 0, 0,
jusi_SimpleStreamImpl, 0, jl_Object, [jus_Stream], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jusi_SimpleStreamImpl__init_), "$filter", $rt_wrapFunction1(jusi_SimpleStreamImpl_filter), "$mapToInt", $rt_wrapFunction1(jusi_SimpleStreamImpl_mapToInt), "$collect", $rt_wrapFunction1(jusi_SimpleStreamImpl_collect), "$anyMatch", $rt_wrapFunction1(jusi_SimpleStreamImpl_anyMatch), "$findFirst", $rt_wrapFunction0(jusi_SimpleStreamImpl_findFirst)],
jusi_WrappingStreamImpl, 0, jusi_SimpleStreamImpl, [], 1, 3, 0, 0, ["$_init_298", $rt_wrapFunction1(jusi_WrappingStreamImpl__init_), "$next1", $rt_wrapFunction1(jusi_WrappingStreamImpl_next)],
jur_AtomicFSet, "AtomicFSet", 6, jur_FSet, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_AtomicFSet__init_), "$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getIndex", $rt_wrapFunction0(jur_AtomicFSet_getIndex), "$getName", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
jn_JSBufferHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction1(jur_LowSurrogateCharSet__init_), "$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_LowSurrogateCharSet_first),
"$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Error__init_), "$_init_32", $rt_wrapFunction2(jl_Error__init_0), "$_init_", $rt_wrapFunction1(jl_Error__init_1), "$_init_13", $rt_wrapFunction1(jl_Error__init_2)],
onns_SdanTaxonomy$SdanTaxonomyTerm, "SdanTaxonomy$SdanTaxonomyTerm", 40, jl_Record, [ji_Serializable], 32772, 3, 0, 0, ["$_init_50", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { onns_SdanTaxonomy$SdanTaxonomyTerm__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$term", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_term), "$toString", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_toString), "$hashCode", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_hashCode),
"$equals", $rt_wrapFunction1(onns_SdanTaxonomy$SdanTaxonomyTerm_equals), "$id", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_id), "$parent", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_parent), "$name", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_name), "$tier1", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_tier1), "$tier2", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_tier2), "$tier3", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_tier3), "$tier4", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_tier4),
"$extension", $rt_wrapFunction0(onns_SdanTaxonomy$SdanTaxonomyTerm_extension)],
onnn_Nip49FailedException, "Nip49FailedException", 33, jl_Exception, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onnn_Nip49FailedException__init_0), "$_init_32", $rt_wrapFunction2(onnn_Nip49FailedException__init_2), "$_init_13", $rt_wrapFunction1(onnn_Nip49FailedException__init_1)],
jl_AssertionError, "AssertionError", 22, jl_Error, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_AssertionError__init_4), "$_init_32", $rt_wrapFunction2(jl_AssertionError__init_3), "$_init_2", $rt_wrapFunction1(jl_AssertionError__init_1)],
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 6, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_169", $rt_wrapFunction4(jur_CompositeQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
jm_Division, 0, jl_Object, [], 0, 0, 0, 0, 0,
jm_BitLevel, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_SupplRangeSet, "SupplRangeSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_204", $rt_wrapFunction1(jur_SupplRangeSet__init_), "$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains0", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first", $rt_wrapFunction1(jur_SupplRangeSet_first), "$getChars", $rt_wrapFunction0(jur_SupplRangeSet_getChars), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
onnn_Nip01$update$lambda$_4_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_48", $rt_wrapFunction1(onnn_Nip01$update$lambda$_4_0__init_), "$apply", $rt_wrapFunction1(onnn_Nip01$update$lambda$_4_0_apply0), "$apply6", $rt_wrapFunction1(onnn_Nip01$update$lambda$_4_0_apply)],
jl_String, "String", 22, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, jl_String_$callClinit, ["$_init_0", $rt_wrapFunction0(jl_String__init_4), "$_init_67", $rt_wrapFunction1(jl_String__init_3), "$_init_2", $rt_wrapFunction1(jl_String__init_5), "$_init_52", $rt_wrapFunction3(jl_String__init_8), "$_init_96", $rt_wrapFunction1(jl_String__init_7), "$_init_49", $rt_wrapFunction2(jl_String__init_0), "$charAt", $rt_wrapFunction1(jl_String_charAt), "$length", $rt_wrapFunction0(jl_String_length),
"$isEmpty", $rt_wrapFunction0(jl_String_isEmpty), "$isBlank", $rt_wrapFunction0(jl_String_isBlank), "$compareTo0", $rt_wrapFunction1(jl_String_compareTo0), "$compareToIgnoreCase", $rt_wrapFunction1(jl_String_compareToIgnoreCase), "$startsWith0", $rt_wrapFunction2(jl_String_startsWith0), "$startsWith", $rt_wrapFunction1(jl_String_startsWith), "$endsWith", $rt_wrapFunction1(jl_String_endsWith), "$indexOf0", $rt_wrapFunction2(jl_String_indexOf1), "$indexOf", $rt_wrapFunction1(jl_String_indexOf0), "$lastIndexOf0",
$rt_wrapFunction2(jl_String_lastIndexOf1), "$lastIndexOf", $rt_wrapFunction1(jl_String_lastIndexOf0), "$indexOf1", $rt_wrapFunction2(jl_String_indexOf), "$indexOf5", $rt_wrapFunction1(jl_String_indexOf2), "$lastIndexOf2", $rt_wrapFunction2(jl_String_lastIndexOf), "$substring", $rt_wrapFunction2(jl_String_substring), "$substring0", $rt_wrapFunction1(jl_String_substring0), "$subSequence", $rt_wrapFunction2(jl_String_subSequence), "$concat", $rt_wrapFunction1(jl_String_concat), "$replace0", $rt_wrapFunction2(jl_String_replace0),
"$replace", $rt_wrapFunction2(jl_String_replace), "$trim", $rt_wrapFunction0(jl_String_trim), "$toString", $rt_wrapFunction0(jl_String_toString), "$toCharArray", $rt_wrapFunction0(jl_String_toCharArray), "$equals", $rt_wrapFunction1(jl_String_equals), "$equalsIgnoreCase", $rt_wrapFunction1(jl_String_equalsIgnoreCase), "$getBytes", $rt_wrapFunction1(jl_String_getBytes), "$hashCode", $rt_wrapFunction0(jl_String_hashCode), "$toLowerCase2", $rt_wrapFunction0(jl_String_toLowerCase0), "$toLowerCase1", $rt_wrapFunction1(jl_String_toLowerCase),
"$toUpperCase", $rt_wrapFunction0(jl_String_toUpperCase), "$split0", $rt_wrapFunction1(jl_String_split0), "$split", $rt_wrapFunction2(jl_String_split), "$compareTo7", $rt_wrapFunction1(jl_String_compareTo)],
onpt_TeaVMWebsocketTransport$connect$lambda$_2_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_141", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$connect$lambda$_2_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$connect$lambda$_2_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$connect$lambda$_2_0_accept)],
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_87", $rt_wrapFunction1(jnci_UTF8Encoder__init_), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
onnrl_NostrRTCRoomPeerConnectedListener, 0, jl_Object, [onnrl_NostrRTCRoomListener], 3, 3, 0, 0, 0,
cjj_ZStream, 0, jl_Object, [], 128, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cjj_ZStream__init_), "$_init_140", $rt_wrapFunction1(cjj_ZStream__init_0), "$flush_pending", $rt_wrapFunction0(cjj_ZStream_flush_pending), "$read_buf", $rt_wrapFunction3(cjj_ZStream_read_buf), "$setOutput", $rt_wrapFunction3(cjj_ZStream_setOutput), "$setInput0", $rt_wrapFunction4(cjj_ZStream_setInput)],
onpt_WebsocketTransport, 0, jl_Object, [], 3, 3, 0, 0, 0,
onpt_TeaVMWebsocketTransport, "TeaVMWebsocketTransport", 49, jl_Object, [onpt_WebsocketTransport], 0, 3, 0, onpt_TeaVMWebsocketTransport_$callClinit, ["$_init_213", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport__init_), "$connect1", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport_connect), "$close1", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport_close), "$send0", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport_send), "$addListener2", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport_addListener)],
jtt_TemporalUnit, 0, jl_Object, [], 3, 3, 0, 0, 0,
jtt_ChronoUnit, "ChronoUnit", 19, jl_Enum, [jtt_TemporalUnit], 12, 3, 0, jtt_ChronoUnit_$callClinit, ["$addTo0", $rt_wrapFunction2(jtt_ChronoUnit_addTo), "$toString", $rt_wrapFunction0(jtt_ChronoUnit_toString)],
jnci_UTF8Charset, "UTF8Charset", 12, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, ["$newDecoder", $rt_wrapFunction0(jnci_UTF8Charset_newDecoder), "$newEncoder", $rt_wrapFunction0(jnci_UTF8Charset_newEncoder)],
jur_MultiLineEOLSet, "MultiLineEOLSet", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_MultiLineEOLSet__init_), "$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ReflectiveOperationException__init_)],
jl_ClassNotFoundException, "ClassNotFoundException", 22, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ClassNotFoundException__init_)],
onnu_ScheduledAction, "ScheduledAction", 42, jl_Object, [], 0, 3, 0, 0, ["$_init_145", $rt_wrapFunction2(onnu_ScheduledAction__init_)],
onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState, "NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState", 28, jl_Enum, [], 12, 3, 0, onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$callClinit, 0,
juz_Inflater, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(juz_Inflater__init_0), "$_init_146", $rt_wrapFunction1(juz_Inflater__init_), "$end1", $rt_wrapFunction0(juz_Inflater_end), "$finished", $rt_wrapFunction0(juz_Inflater_finished), "$inflate1", $rt_wrapFunction1(juz_Inflater_inflate0), "$inflate", $rt_wrapFunction3(juz_Inflater_inflate), "$setInput1", $rt_wrapFunction1(juz_Inflater_setInput), "$setInput", $rt_wrapFunction3(juz_Inflater_setInput0)],
onnn_Nip49, "Nip49", 33, jl_Object, [], 0, 3, 0, onnn_Nip49_$callClinit, ["$_init_0", $rt_wrapFunction0(onnn_Nip49__init_)],
ju_HashMap$AbstractMapIterator, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_40", $rt_wrapFunction1(ju_HashMap$AbstractMapIterator__init_), "$hasNext", $rt_wrapFunction0(ju_HashMap$AbstractMapIterator_hasNext), "$checkConcurrentMod", $rt_wrapFunction0(ju_HashMap$AbstractMapIterator_checkConcurrentMod), "$makeNext", $rt_wrapFunction0(ju_HashMap$AbstractMapIterator_makeNext), "$remove", $rt_wrapFunction0(ju_HashMap$AbstractMapIterator_remove)]]);
$rt_metadata([otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0, 0,
otci_Base64Impl, 0, jl_Object, [], 4, 3, 0, otci_Base64Impl_$callClinit, 0,
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Object$Monitor__init_)],
ju_LinkedHashMapEntrySet, 0, ju_AbstractSet, [ju_SequencedSet], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_42", $rt_wrapFunction2(ju_LinkedHashMapEntrySet__init_), "$size", $rt_wrapFunction0(ju_LinkedHashMapEntrySet_size), "$iterator", $rt_wrapFunction0(ju_LinkedHashMapEntrySet_iterator)],
onpt_TeaVMPlatform$awaitAll$lambda$_21_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_17", $rt_wrapFunction1(onpt_TeaVMPlatform$awaitAll$lambda$_21_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$awaitAll$lambda$_21_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$awaitAll$lambda$_21_0_accept)],
onn_NostrPool$fetch$lambda$_22_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_182", function(var_1, var_2, var_3, var_4, var_5, var_6) { onn_NostrPool$fetch$lambda$_22_0__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$accept3", $rt_wrapFunction2(onn_NostrPool$fetch$lambda$_22_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrPool$fetch$lambda$_22_0_accept)],
onne_SignedNostrEvent$_init_$lambda$_0_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onne_SignedNostrEvent$_init_$lambda$_0_0__init_), "$apply", $rt_wrapFunction1(onne_SignedNostrEvent$_init_$lambda$_0_0_apply0), "$apply7", $rt_wrapFunction1(onne_SignedNostrEvent$_init_$lambda$_0_0_apply)],
onns_NostrNIP46Signer$waitForResponse$lambda$_10_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_270", $rt_wrapFunction3(onns_NostrNIP46Signer$waitForResponse$lambda$_10_1__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$waitForResponse$lambda$_10_1_run)],
onns_NostrNIP46Signer$waitForResponse$lambda$_10_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_271", function(var_1, var_2, var_3, var_4, var_5) { onns_NostrNIP46Signer$waitForResponse$lambda$_10_0__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$accept3", $rt_wrapFunction2(onns_NostrNIP46Signer$waitForResponse$lambda$_10_0_accept0), "$accept", $rt_wrapFunction2(onns_NostrNIP46Signer$waitForResponse$lambda$_10_0_accept)],
otcit_DateTimeZoneBuilder$Recurrence, 0, jl_Object, [], 4, 0, 0, 0, ["$_init_149", $rt_wrapFunction2(otcit_DateTimeZoneBuilder$Recurrence__init_), "$next2", $rt_wrapFunction4(otcit_DateTimeZoneBuilder$Recurrence_next), "$getSaveMillis", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis)],
onpt_WebsocketTransportListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
onp_NGEUtils$dbg$lambda$_17_0, 0, jl_Object, [juf_Supplier], 0, 3, 0, 0, ["$_init_207", $rt_wrapFunction1(onp_NGEUtils$dbg$lambda$_17_0__init_), "$get8", $rt_wrapFunction0(onp_NGEUtils$dbg$lambda$_17_0_get0), "$get12", $rt_wrapFunction0(onp_NGEUtils$dbg$lambda$_17_0_get)],
onnrs_NostrRTCSignaling$Listener$RemoveReason, "NostrRTCSignaling$Listener$RemoveReason", 30, jl_Enum, [], 12, 3, 0, onnrs_NostrRTCSignaling$Listener$RemoveReason_$callClinit, 0,
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otcit_DateTimeZoneBuilder$OfYear, 0, jl_Object, [], 4, 0, 0, 0, ["$_init_150", function(var_1, var_2, var_3, var_4, var_5, var_6) { otcit_DateTimeZoneBuilder$OfYear__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setInstant", $rt_wrapFunction3(otcit_DateTimeZoneBuilder$OfYear_setInstant), "$next2", $rt_wrapFunction4(otcit_DateTimeZoneBuilder$OfYear_next)],
jtf_DateTimeFormatterBuilder$TextPrinterParser, "DateTimeFormatterBuilder$TextPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, 0, ["$_init_23", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$TextPrinterParser__init_), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$TextPrinterParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$TextPrinterParser_toString)],
jn_BufferOverflowException, "BufferOverflowException", 10, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferOverflowException__init_0)],
onn_NostrRelay$onConnectionError$lambda$_27_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_123", $rt_wrapFunction2(onn_NostrRelay$onConnectionError$lambda$_27_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$onConnectionError$lambda$_27_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$onConnectionError$lambda$_27_0_accept)],
onpt_TeaVMPlatform$httpGet$lambda$_29_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_216", $rt_wrapFunction3(onpt_TeaVMPlatform$httpGet$lambda$_29_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$httpGet$lambda$_29_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$httpGet$lambda$_29_0_accept)],
onpt_TeaVMPlatform$2$run$lambda$_1_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_70", $rt_wrapFunction1(onpt_TeaVMPlatform$2$run$lambda$_1_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$2$run$lambda$_1_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$2$run$lambda$_1_0_accept)],
juca_AtomicReference, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_2", $rt_wrapFunction1(juca_AtomicReference__init_), "$get8", $rt_wrapFunction0(juca_AtomicReference_get), "$set1", $rt_wrapFunction1(juca_AtomicReference_set)],
jtf_SimpleDateTimeTextProvider$LocaleStore, 0, jl_Object, [], 4, 0, 0, 0, ["$_init_21", $rt_wrapFunction1(jtf_SimpleDateTimeTextProvider$LocaleStore__init_), "$getTextIterator0", $rt_wrapFunction1(jtf_SimpleDateTimeTextProvider$LocaleStore_getTextIterator)],
otcir_MethodCaller, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 56, jl_Object, [], 0, 3, 0, 0, ["$_init_82", $rt_wrapFunction3(otciu_UnicodeHelper$Range__init_0)],
onnn_Nip49$decrypt$lambda$_9_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_147", $rt_wrapFunction3(onnn_Nip49$decrypt$lambda$_9_0__init_), "$call0", $rt_wrapFunction0(onnn_Nip49$decrypt$lambda$_9_0_call0), "$call2", $rt_wrapFunction0(onnn_Nip49$decrypt$lambda$_9_0_call)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator__init_)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$2__init_), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
juc_ConcurrentHashMap$2, 0, ju_AbstractCollection, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_8", $rt_wrapFunction1(juc_ConcurrentHashMap$2__init_), "$iterator", $rt_wrapFunction0(juc_ConcurrentHashMap$2_iterator)],
jtf_DateTimeFormatterBuilder$NumberPrinterParser, "DateTimeFormatterBuilder$NumberPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 0, 0, 0, jtf_DateTimeFormatterBuilder$NumberPrinterParser_$callClinit, ["$_init_19", $rt_wrapFunction4(jtf_DateTimeFormatterBuilder$NumberPrinterParser__init_), "$withFixedWidth", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$NumberPrinterParser_withFixedWidth), "$withSubsequentWidth", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder$NumberPrinterParser_withSubsequentWidth),
"$isFixedWidth", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder$NumberPrinterParser_isFixedWidth), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$NumberPrinterParser_parse), "$setValue", $rt_wrapFunction4(jtf_DateTimeFormatterBuilder$NumberPrinterParser_setValue), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$NumberPrinterParser_toString)],
otciu_CharMapping, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_81", $rt_wrapFunction2(otciu_CharMapping__init_)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$1__init_), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
otjc_JSWeakRef, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_67", $rt_wrapFunction1(otci_CharFlow__init_0)],
jur_RangeSet, "RangeSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_204", $rt_wrapFunction1(jur_RangeSet__init_), "$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName", $rt_wrapFunction0(jur_RangeSet_getName), "$first", $rt_wrapFunction1(jur_RangeSet_first), "$getChars", $rt_wrapFunction0(jur_RangeSet_getChars)],
jtz_ZoneRules, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtz_ZoneRules__init_)],
jtz_StandardZoneRules, "StandardZoneRules", 16, jtz_ZoneRules, [ji_Serializable], 4, 0, 0, 0, ["$_init_155", function(var_1, var_2, var_3, var_4, var_5) { jtz_StandardZoneRules__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$isFixedOffset", $rt_wrapFunction0(jtz_StandardZoneRules_isFixedOffset), "$getOffset0", $rt_wrapFunction1(jtz_StandardZoneRules_getOffset), "$getValidOffsets0", $rt_wrapFunction1(jtz_StandardZoneRules_getValidOffsets), "$getTransition", $rt_wrapFunction1(jtz_StandardZoneRules_getTransition),
"$equals", $rt_wrapFunction1(jtz_StandardZoneRules_equals), "$hashCode", $rt_wrapFunction0(jtz_StandardZoneRules_hashCode), "$toString", $rt_wrapFunction0(jtz_StandardZoneRules_toString)],
onnr_NostrRTCSocket$emitCandidates$lambda$_7_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_306", $rt_wrapFunction1(onnr_NostrRTCSocket$emitCandidates$lambda$_7_0__init_), "$call0", $rt_wrapFunction0(onnr_NostrRTCSocket$emitCandidates$lambda$_7_0_call0), "$call3", $rt_wrapFunction0(onnr_NostrRTCSocket$emitCandidates$lambda$_7_0_call)],
onnrs_NostrRTCSignaling$Listener, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnrl_NostrRTCSocketListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnr_NostrRTCRoom$Listener, 0, jl_Object, [onnrs_NostrRTCSignaling$Listener, onnrl_NostrRTCSocketListener], 3, 0, 0, 0, 0,
jur_CharClass, "CharClass", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_CharClass__init_1), "$_init_157", $rt_wrapFunction2(jur_CharClass__init_0), "$_init_295", $rt_wrapFunction3(jur_CharClass__init_2), "$add", $rt_wrapFunction1(jur_CharClass_add), "$add10", $rt_wrapFunction1(jur_CharClass_add1), "$add0", $rt_wrapFunction2(jur_CharClass_add0), "$union", $rt_wrapFunction1(jur_CharClass_union), "$intersection", $rt_wrapFunction1(jur_CharClass_intersection), "$contains0", $rt_wrapFunction1(jur_CharClass_contains),
"$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
jn_BufferUnderflowException, "BufferUnderflowException", 10, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferUnderflowException__init_0)],
juc_TimeUnit, "TimeUnit", 8, jl_Enum, [], 12, 3, 0, juc_TimeUnit_$callClinit, ["$convert", $rt_wrapFunction2(juc_TimeUnit_convert), "$toMillis", $rt_wrapFunction1(juc_TimeUnit_toMillis), "$toSeconds", $rt_wrapFunction1(juc_TimeUnit_toSeconds)],
onnpi_NostrNoticeMessage, "NostrNoticeMessage", 44, onnp_NostrMessage, [], 0, 3, 0, 0, ["$_init_32", $rt_wrapFunction2(onnpi_NostrNoticeMessage__init_), "$_init_", $rt_wrapFunction1(onnpi_NostrNoticeMessage__init_0), "$getMessage", $rt_wrapFunction0(onnpi_NostrNoticeMessage_getMessage), "$getException", $rt_wrapFunction0(onnpi_NostrNoticeMessage_getException), "$throwException", $rt_wrapFunction0(onnpi_NostrNoticeMessage_throwException), "$getPrefix", $rt_wrapFunction0(onnpi_NostrNoticeMessage_getPrefix), "$getFragments",
$rt_wrapFunction0(onnpi_NostrNoticeMessage_getFragments)],
onnn_Nip01$fetch$lambda$_3_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnn_Nip01$fetch$lambda$_3_0__init_), "$apply", $rt_wrapFunction1(onnn_Nip01$fetch$lambda$_3_0_apply0), "$apply8", $rt_wrapFunction1(onnn_Nip01$fetch$lambda$_3_0_apply)],
onn_NostrRelay$1, "NostrRelay$1", 26, jl_Object, [onpt_WebsocketTransportListener], 0, 0, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$1__init_), "$onConnectionClosedByServer", $rt_wrapFunction1(onn_NostrRelay$1_onConnectionClosedByServer), "$onConnectionOpen", $rt_wrapFunction0(onn_NostrRelay$1_onConnectionOpen), "$onConnectionMessage", $rt_wrapFunction1(onn_NostrRelay$1_onConnectionMessage), "$onConnectionClosedByClient", $rt_wrapFunction1(onn_NostrRelay$1_onConnectionClosedByClient), "$onConnectionError",
$rt_wrapFunction1(onn_NostrRelay$1_onConnectionError)],
ji_IOException, "IOException", 13, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_IOException__init_0), "$_init_32", $rt_wrapFunction2(ji_IOException__init_2), "$_init_", $rt_wrapFunction1(ji_IOException__init_)],
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_CharacterCodingException__init_)]]);
$rt_metadata([jnc_MalformedInputException, "MalformedInputException", 11, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(jnc_MalformedInputException__init_), "$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
cjj_StaticTree, 0, jl_Object, [], 4, 0, 0, cjj_StaticTree_$callClinit, 0,
jl_CloneNotSupportedException, "CloneNotSupportedException", 22, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_CloneNotSupportedException__init_0)],
jtt_TemporalAmount, 0, jl_Object, [], 3, 3, 0, 0, 0,
jt_Duration, "Duration", 15, jl_Object, [jtt_TemporalAmount, jl_Comparable, ji_Serializable], 4, 3, 0, jt_Duration_$callClinit, ["$getSeconds", $rt_wrapFunction0(jt_Duration_getSeconds), "$addTo", $rt_wrapFunction1(jt_Duration_addTo), "$toMillis0", $rt_wrapFunction0(jt_Duration_toMillis), "$compareTo10", $rt_wrapFunction1(jt_Duration_compareTo), "$equals", $rt_wrapFunction1(jt_Duration_equals), "$hashCode", $rt_wrapFunction0(jt_Duration_hashCode), "$toString", $rt_wrapFunction0(jt_Duration_toString), "$compareTo7",
$rt_wrapFunction1(jt_Duration_compareTo0)],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
juc_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, ["$_init_99", $rt_wrapFunction2(juc_MapEntry__init_), "$getKey", $rt_wrapFunction0(juc_MapEntry_getKey), "$getValue", $rt_wrapFunction0(juc_MapEntry_getValue), "$setValue0", $rt_wrapFunction1(juc_MapEntry_setValue)],
juc_ConcurrentHashMap$HashEntry, 0, juc_MapEntry, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(juc_ConcurrentHashMap$HashEntry__init_)],
onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0__init_), "$apply", $rt_wrapFunction1(onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0_apply0), "$apply9", $rt_wrapFunction1(onn_NostrRelaySubManager$onRelayBeforeSend$lambda$_9_0_apply)],
jm_BigInteger, 0, jl_Number, [jl_Comparable, ji_Serializable], 0, 3, 0, jm_BigInteger_$callClinit, ["$_init_59", $rt_wrapFunction2(jm_BigInteger__init_3), "$_init_139", $rt_wrapFunction3(jm_BigInteger__init_4), "$_init_166", $rt_wrapFunction2(jm_BigInteger__init_2), "$_init_320", $rt_wrapFunction2(jm_BigInteger__init_5), "$abs1", $rt_wrapFunction0(jm_BigInteger_abs), "$negate", $rt_wrapFunction0(jm_BigInteger_negate), "$add4", $rt_wrapFunction1(jm_BigInteger_add), "$subtract2", $rt_wrapFunction1(jm_BigInteger_subtract),
"$signum", $rt_wrapFunction0(jm_BigInteger_signum), "$shiftRight1", $rt_wrapFunction1(jm_BigInteger_shiftRight), "$shiftLeft1", $rt_wrapFunction1(jm_BigInteger_shiftLeft), "$shiftLeftOneBit1", $rt_wrapFunction0(jm_BigInteger_shiftLeftOneBit), "$bitLength", $rt_wrapFunction0(jm_BigInteger_bitLength), "$testBit", $rt_wrapFunction1(jm_BigInteger_testBit), "$getLowestSetBit", $rt_wrapFunction0(jm_BigInteger_getLowestSetBit), "$longValue", $rt_wrapFunction0(jm_BigInteger_longValue), "$compareTo15", $rt_wrapFunction1(jm_BigInteger_compareTo),
"$equals", $rt_wrapFunction1(jm_BigInteger_equals), "$equalsArrays", $rt_wrapFunction1(jm_BigInteger_equalsArrays), "$multiply", $rt_wrapFunction1(jm_BigInteger_multiply), "$pow0", $rt_wrapFunction1(jm_BigInteger_pow), "$divideAndRemainder", $rt_wrapFunction1(jm_BigInteger_divideAndRemainder), "$divide", $rt_wrapFunction1(jm_BigInteger_divide), "$cutOffLeadingZeroes", $rt_wrapFunction0(jm_BigInteger_cutOffLeadingZeroes), "$isOne", $rt_wrapFunction0(jm_BigInteger_isOne), "$getFirstNonzeroDigit", $rt_wrapFunction0(jm_BigInteger_getFirstNonzeroDigit)],
jt_ZoneId, 0, jl_Object, [ji_Serializable], 1, 3, 0, jt_ZoneId_$callClinit, ["$_init_0", $rt_wrapFunction0(jt_ZoneId__init_), "$equals", $rt_wrapFunction1(jt_ZoneId_equals), "$toString", $rt_wrapFunction0(jt_ZoneId_toString)],
jt_ZoneOffset, "ZoneOffset", 15, jt_ZoneId, [jtt_TemporalAccessor, jtt_TemporalAdjuster, jl_Comparable, ji_Serializable], 4, 3, 0, jt_ZoneOffset_$callClinit, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$getTotalSeconds", $rt_wrapFunction0(jt_ZoneOffset_getTotalSeconds), "$getId", $rt_wrapFunction0(jt_ZoneOffset_getId), "$getRules", $rt_wrapFunction0(jt_ZoneOffset_getRules), "$compareTo11",
$rt_wrapFunction1(jt_ZoneOffset_compareTo), "$equals", $rt_wrapFunction1(jt_ZoneOffset_equals), "$hashCode", $rt_wrapFunction0(jt_ZoneOffset_hashCode), "$toString", $rt_wrapFunction0(jt_ZoneOffset_toString), "$compareTo7", $rt_wrapFunction1(jt_ZoneOffset_compareTo0)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
onpt_TeaVMPlatform$signAsync$lambda$_25_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_214", $rt_wrapFunction3(onpt_TeaVMPlatform$signAsync$lambda$_25_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$signAsync$lambda$_25_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$signAsync$lambda$_25_0_accept)],
ju_EnumSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 1, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_EnumSet__init_)],
jur_CIBackReferenceSet, "CIBackReferenceSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_59", $rt_wrapFunction2(jur_CIBackReferenceSet__init_), "$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getString", $rt_wrapFunction1(jur_CIBackReferenceSet_getString), "$getName", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_AbstractCharClass$1, "AbstractCharClass$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_54", $rt_wrapFunction2(jur_AbstractCharClass$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_55", $rt_wrapFunction3(jur_AbstractCharClass$2__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 6, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_169", $rt_wrapFunction4(jur_PossessiveCompositeQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
ju_GregorianCalendar, 0, ju_Calendar, [], 0, 3, 0, ju_GregorianCalendar_$callClinit, ["$_init_0", $rt_wrapFunction0(ju_GregorianCalendar__init_2), "$_init_170", $rt_wrapFunction1(ju_GregorianCalendar__init_1), "$_init_44", $rt_wrapFunction1(ju_GregorianCalendar__init_3), "$_init_171", $rt_wrapFunction2(ju_GregorianCalendar__init_), "$add3", $rt_wrapFunction2(ju_GregorianCalendar_add), "$getTimeZoneOffset", $rt_wrapFunction1(ju_GregorianCalendar_getTimeZoneOffset), "$computeFields", $rt_wrapFunction0(ju_GregorianCalendar_computeFields),
"$computeTime", $rt_wrapFunction0(ju_GregorianCalendar_computeTime), "$isLeapYear1", $rt_wrapFunction1(ju_GregorianCalendar_isLeapYear), "$setFirstDayOfWeek", $rt_wrapFunction1(ju_GregorianCalendar_setFirstDayOfWeek), "$setMinimalDaysInFirstWeek", $rt_wrapFunction1(ju_GregorianCalendar_setMinimalDaysInFirstWeek)],
onn_NostrRelay$disconnect$lambda$_21_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_118", $rt_wrapFunction3(onn_NostrRelay$disconnect$lambda$_21_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$disconnect$lambda$_21_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$disconnect$lambda$_21_0_accept)],
juc_ConcurrentHashMap$AbstractMapIterator, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_8", $rt_wrapFunction1(juc_ConcurrentHashMap$AbstractMapIterator__init_), "$hasNext", $rt_wrapFunction0(juc_ConcurrentHashMap$AbstractMapIterator_hasNext), "$checkConcurrentMod", $rt_wrapFunction0(juc_ConcurrentHashMap$AbstractMapIterator_checkConcurrentMod), "$makeNext", $rt_wrapFunction0(juc_ConcurrentHashMap$AbstractMapIterator_makeNext), "$remove", $rt_wrapFunction0(juc_ConcurrentHashMap$AbstractMapIterator_remove)],
juc_ConcurrentHashMap$EntryIterator, 0, juc_ConcurrentHashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, 0, ["$_init_8", $rt_wrapFunction1(juc_ConcurrentHashMap$EntryIterator__init_), "$next3", $rt_wrapFunction0(juc_ConcurrentHashMap$EntryIterator_next), "$next", $rt_wrapFunction0(juc_ConcurrentHashMap$EntryIterator_next0)],
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
jt_Instant$1, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jt_Instant$1__init_), "$queryFrom0", $rt_wrapFunction1(jt_Instant$1_queryFrom0), "$queryFrom", $rt_wrapFunction1(jt_Instant$1_queryFrom)],
jur_UCISequenceSet, "UCISequenceSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_290", $rt_wrapFunction1(jur_UCISequenceSet__init_), "$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_287", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
otjt_Int8Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
onnrs_NostrRTCSignaling$start$lambda$_7_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_257", $rt_wrapFunction2(onnrs_NostrRTCSignaling$start$lambda$_7_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$start$lambda$_7_0_apply0), "$apply10", $rt_wrapFunction1(onnrs_NostrRTCSignaling$start$lambda$_7_0_apply)],
jt_Instant$2, 0, jl_Object, [], 32, 0, 0, jt_Instant$2_$callClinit, 0,
onn_NostrSubscription$close$lambda$_7_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onn_NostrSubscription$close$lambda$_7_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrSubscription$close$lambda$_7_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrSubscription$close$lambda$_7_0_accept)],
jur_CompositeRangeSet, "CompositeRangeSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_296", $rt_wrapFunction2(jur_CompositeRangeSet__init_0), "$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
juc_CopyOnWriteArrayList, "CopyOnWriteArrayList", 8, jl_Object, [ju_List, ju_RandomAccess, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(juc_CopyOnWriteArrayList__init_0), "$add1", $rt_wrapFunction1(juc_CopyOnWriteArrayList_add), "$addIfAbsent", $rt_wrapFunction1(juc_CopyOnWriteArrayList_addIfAbsent), "$clear", $rt_wrapFunction0(juc_CopyOnWriteArrayList_clear), "$contains",
$rt_wrapFunction1(juc_CopyOnWriteArrayList_contains), "$get", $rt_wrapFunction1(juc_CopyOnWriteArrayList_get), "$indexOf4", $rt_wrapFunction2(juc_CopyOnWriteArrayList_indexOf), "$indexOf2", $rt_wrapFunction1(juc_CopyOnWriteArrayList_indexOf1), "$isEmpty", $rt_wrapFunction0(juc_CopyOnWriteArrayList_isEmpty), "$iterator", $rt_wrapFunction0(juc_CopyOnWriteArrayList_iterator), "$listIterator", $rt_wrapFunction0(juc_CopyOnWriteArrayList_listIterator), "$remove0", $rt_wrapFunction1(juc_CopyOnWriteArrayList_remove),
"$remove2", $rt_wrapFunction1(juc_CopyOnWriteArrayList_remove0), "$size", $rt_wrapFunction0(juc_CopyOnWriteArrayList_size), "$toString", $rt_wrapFunction0(juc_CopyOnWriteArrayList_toString)],
jur_FinalSet, "FinalSet", 6, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FinalSet__init_), "$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName", $rt_wrapFunction0(jur_FinalSet_getName)],
jur_EmptySet, "EmptySet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_18", $rt_wrapFunction1(jur_EmptySet__init_0), "$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, 0, ["$_init_24", $rt_wrapFunction2(ju_StringTokenizer__init_1), "$_init_173", $rt_wrapFunction3(ju_StringTokenizer__init_0), "$hasMoreTokens", $rt_wrapFunction0(ju_StringTokenizer_hasMoreTokens), "$nextToken", $rt_wrapFunction0(ju_StringTokenizer_nextToken)],
otcit_DateTimeZoneBuilder$Transition, "DateTimeZoneBuilder$Transition", 55, jl_Object, [], 4, 0, 0, 0, ["$_init_314", $rt_wrapFunction2(otcit_DateTimeZoneBuilder$Transition__init_), "$_init_315", $rt_wrapFunction3(otcit_DateTimeZoneBuilder$Transition__init_2), "$_init_313", $rt_wrapFunction3(otcit_DateTimeZoneBuilder$Transition__init_3), "$getMillis", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$Transition_getMillis), "$getWallOffset", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$Transition_getWallOffset), "$getStandardOffset0",
$rt_wrapFunction0(otcit_DateTimeZoneBuilder$Transition_getStandardOffset), "$getSaveMillis", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$Transition_getSaveMillis), "$isTransitionFrom", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$Transition_isTransitionFrom)],
jl_StackTraceElement, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0, 0, jl_Object, [juf_ToLongFunction], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtc_ChronoZonedDateTime$_clinit_$lambda$_41_0__init_)],
onnrt_NostrTURN$Chunk, "NostrTURN$Chunk", 29, jl_Object, [], 0, 0, 0, 0, ["$_init_", $rt_wrapFunction1(onnrt_NostrTURN$Chunk__init_0)],
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, ["$_init_99", $rt_wrapFunction2(ju_MapEntry__init_), "$equals", $rt_wrapFunction1(ju_MapEntry_equals), "$getKey", $rt_wrapFunction0(ju_MapEntry_getKey), "$getValue", $rt_wrapFunction0(ju_MapEntry_getValue), "$hashCode", $rt_wrapFunction0(ju_MapEntry_hashCode), "$setValue0", $rt_wrapFunction1(ju_MapEntry_setValue), "$toString", $rt_wrapFunction0(ju_MapEntry_toString)],
ju_HashMap$HashEntry, "HashMap$HashEntry", 4, ju_MapEntry, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(ju_HashMap$HashEntry__init_)],
ju_LinkedHashMap$LinkedHashMapEntry, "LinkedHashMap$LinkedHashMapEntry", 4, ju_HashMap$HashEntry, [], 4, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(ju_LinkedHashMap$LinkedHashMapEntry__init_)],
jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1, 0, jl_Object, [juf_ToLongFunction], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtc_ChronoZonedDateTime$_clinit_$lambda$_41_1__init_)],
onnn_Nip44$encrypt$lambda$_13_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_57", $rt_wrapFunction2(onnn_Nip44$encrypt$lambda$_13_0__init_), "$call0", $rt_wrapFunction0(onnn_Nip44$encrypt$lambda$_13_0_call0), "$call4", $rt_wrapFunction0(onnn_Nip44$encrypt$lambda$_13_0_call)],
jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser, "DateTimeFormatterBuilder$OffsetIdPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_$callClinit, ["$_init_24", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser__init_), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$OffsetIdPrinterParser_toString)],
jus_Collectors$joining$lambda$_8_3, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_83", $rt_wrapFunction2(jus_Collectors$joining$lambda$_8_3__init_), "$apply", $rt_wrapFunction1(jus_Collectors$joining$lambda$_8_3_apply0), "$apply11", $rt_wrapFunction1(jus_Collectors$joining$lambda$_8_3_apply)],
jus_Collectors$joining$lambda$_8_2, 0, jl_Object, [juf_Supplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jus_Collectors$joining$lambda$_8_2__init_), "$get8", $rt_wrapFunction0(jus_Collectors$joining$lambda$_8_2_get0), "$get14", $rt_wrapFunction0(jus_Collectors$joining$lambda$_8_2_get)],
juf_BiFunction, 0, jl_Object, [], 3, 3, 0, 0, 0]);
$rt_metadata([juf_BinaryOperator, 0, jl_Object, [juf_BiFunction], 3, 3, 0, 0, 0,
jus_Collectors$joining$lambda$_8_1, 0, jl_Object, [juf_BinaryOperator], 0, 3, 0, 0, ["$_init_51", $rt_wrapFunction1(jus_Collectors$joining$lambda$_8_1__init_)],
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IndexOutOfBoundsException__init_0), "$_init_", $rt_wrapFunction1(jl_IndexOutOfBoundsException__init_1)],
jl_ArrayIndexOutOfBoundsException, "ArrayIndexOutOfBoundsException", 22, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ArrayIndexOutOfBoundsException__init_0)],
jus_Collectors$joining$lambda$_8_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_51", $rt_wrapFunction1(jus_Collectors$joining$lambda$_8_0__init_), "$accept3", $rt_wrapFunction2(jus_Collectors$joining$lambda$_8_0_accept0), "$accept4", $rt_wrapFunction2(jus_Collectors$joining$lambda$_8_0_accept)],
onp_NGEPlatform, "NGEPlatform", 48, jl_Object, [], 1, 3, 0, onp_NGEPlatform_$callClinit, ["$_init_0", $rt_wrapFunction0(onp_NGEPlatform__init_), "$newRelayExecutor", $rt_wrapFunction0(onp_NGEPlatform_newRelayExecutor), "$newSubscriptionExecutor", $rt_wrapFunction0(onp_NGEPlatform_newSubscriptionExecutor), "$newSignerExecutor", $rt_wrapFunction0(onp_NGEPlatform_newSignerExecutor), "$newPoolExecutor", $rt_wrapFunction0(onp_NGEPlatform_newPoolExecutor)],
onne_NostrEvent, "NostrEvent", 45, jl_Object, [jl_Cloneable, ji_Serializable], 3, 3, 0, onne_NostrEvent_$callClinit, ["$getExpiration", $rt_wrapFunction0(onne_NostrEvent_getExpiration), "$isReplaceable0", $rt_wrapFunction0(onne_NostrEvent_isReplaceable), "$isAddressable0", $rt_wrapFunction0(onne_NostrEvent_isAddressable), "$isEphemeral0", $rt_wrapFunction0(onne_NostrEvent_isEphemeral), "$isRegular0", $rt_wrapFunction0(onne_NostrEvent_isRegular)],
onne_SignedNostrEvent, "SignedNostrEvent", 45, onnp_NostrMessage, [onne_NostrEvent], 0, 3, 0, onne_SignedNostrEvent_$callClinit, ["$isReplaceable0", $rt_wrapFunction0(onne_NostrEvent_isReplaceable), "$isAddressable0", $rt_wrapFunction0(onne_NostrEvent_isAddressable), "$isEphemeral0", $rt_wrapFunction0(onne_NostrEvent_isEphemeral), "$isRegular0", $rt_wrapFunction0(onne_NostrEvent_isRegular), "$_init_37", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { onne_SignedNostrEvent__init_(this, var_1, var_2,
var_3, var_4, var_5, var_6, var_7); }, "$_init_21", $rt_wrapFunction1(onne_SignedNostrEvent__init_0), "$getCreatedAt", $rt_wrapFunction0(onne_SignedNostrEvent_getCreatedAt), "$getKind", $rt_wrapFunction0(onne_SignedNostrEvent_getKind), "$getContent", $rt_wrapFunction0(onne_SignedNostrEvent_getContent), "$getSignature", $rt_wrapFunction0(onne_SignedNostrEvent_getSignature), "$getId", $rt_wrapFunction0(onne_SignedNostrEvent_getId), "$getPubkey", $rt_wrapFunction0(onne_SignedNostrEvent_getPubkey), "$getAuthor",
$rt_wrapFunction0(onne_SignedNostrEvent_getAuthor), "$toMap", $rt_wrapFunction0(onne_SignedNostrEvent_toMap), "$equals", $rt_wrapFunction1(onne_SignedNostrEvent_equals), "$hashCode", $rt_wrapFunction0(onne_SignedNostrEvent_hashCode), "$clone6", $rt_wrapFunction0(onne_SignedNostrEvent_clone), "$verify", $rt_wrapFunction0(onne_SignedNostrEvent_verify), "$verifyAsync", $rt_wrapFunction0(onne_SignedNostrEvent_verifyAsync), "$getIdBech32", $rt_wrapFunction0(onne_SignedNostrEvent_getIdBech32), "$getIdentifier", $rt_wrapFunction0(onne_SignedNostrEvent_getIdentifier),
"$getPrefix", $rt_wrapFunction0(onne_SignedNostrEvent_getPrefix), "$getFragments", $rt_wrapFunction0(onne_SignedNostrEvent_getFragments), "$getExpiration", $rt_wrapFunction0(onne_SignedNostrEvent_getExpiration), "$hasTag", $rt_wrapFunction1(onne_SignedNostrEvent_hasTag), "$getTag", $rt_wrapFunction1(onne_SignedNostrEvent_getTag), "$getFirstTag", $rt_wrapFunction1(onne_SignedNostrEvent_getFirstTag), "$listTagKeys", $rt_wrapFunction0(onne_SignedNostrEvent_listTagKeys), "$getTagRows", $rt_wrapFunction0(onne_SignedNostrEvent_getTagRows),
"$getCoordinates", $rt_wrapFunction0(onne_SignedNostrEvent_getCoordinates), "$clone0", $rt_wrapFunction0(onne_SignedNostrEvent_clone0)],
onne_SignedNostrEvent$ReceivedSignedNostrEvent, "SignedNostrEvent$ReceivedSignedNostrEvent", 45, onne_SignedNostrEvent, [], 0, 3, 0, 0, ["$isReplaceable0", $rt_wrapFunction0(onne_NostrEvent_isReplaceable), "$isAddressable0", $rt_wrapFunction0(onne_NostrEvent_isAddressable), "$isEphemeral0", $rt_wrapFunction0(onne_NostrEvent_isEphemeral), "$isRegular0", $rt_wrapFunction0(onne_NostrEvent_isRegular), "$_init_175", $rt_wrapFunction2(onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_), "$getSubId", $rt_wrapFunction0(onne_SignedNostrEvent$ReceivedSignedNostrEvent_getSubId),
"$equals", $rt_wrapFunction1(onne_SignedNostrEvent$ReceivedSignedNostrEvent_equals), "$hashCode", $rt_wrapFunction0(onne_SignedNostrEvent$ReceivedSignedNostrEvent_hashCode), "$clone0", $rt_wrapFunction0(onne_SignedNostrEvent$ReceivedSignedNostrEvent_clone)],
juca_AtomicLong, 0, jl_Number, [ji_Serializable], 0, 3, 0, 0, ["$_init_45", $rt_wrapFunction1(juca_AtomicLong__init_), "$incrementAndGet", $rt_wrapFunction0(juca_AtomicLong_incrementAndGet)],
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_112", $rt_wrapFunction1(ju_AbstractList$1__init_), "$hasNext", $rt_wrapFunction0(ju_AbstractList$1_hasNext), "$next", $rt_wrapFunction0(ju_AbstractList$1_next), "$remove", $rt_wrapFunction0(ju_AbstractList$1_remove)],
jt_DayOfWeek, "DayOfWeek", 15, jl_Enum, [jtt_TemporalAccessor, jtt_TemporalAdjuster], 12, 3, 0, jt_DayOfWeek_$callClinit, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$getValue2", $rt_wrapFunction0(jt_DayOfWeek_getValue)],
cjj_InfBlocks, 0, jl_Object, [], 4, 0, 0, cjj_InfBlocks_$callClinit, ["$_init_4", $rt_wrapFunction2(cjj_InfBlocks__init_), "$reset", $rt_wrapFunction0(cjj_InfBlocks_reset), "$proc", $rt_wrapFunction1(cjj_InfBlocks_proc), "$free", $rt_wrapFunction0(cjj_InfBlocks_free), "$inflate_flush", $rt_wrapFunction1(cjj_InfBlocks_inflate_flush)],
ju_Date, "Date", 4, jl_Object, [jl_Comparable], 0, 3, 0, ju_Date_$callClinit, ["$_init_45", $rt_wrapFunction1(ju_Date__init_), "$getTime", $rt_wrapFunction0(ju_Date_getTime), "$equals", $rt_wrapFunction1(ju_Date_equals), "$compareTo12", $rt_wrapFunction1(ju_Date_compareTo), "$hashCode", $rt_wrapFunction0(ju_Date_hashCode), "$toString", $rt_wrapFunction0(ju_Date_toString), "$compareTo7", $rt_wrapFunction1(ju_Date_compareTo0)],
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_14", $rt_wrapFunction3(jnc_CharsetDecoder__init_), "$onMalformedInput", $rt_wrapFunction1(jnc_CharsetDecoder_onMalformedInput), "$implOnMalformedInput", $rt_wrapFunction1(jnc_CharsetDecoder_implOnMalformedInput), "$onUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetDecoder_onUnmappableCharacter), "$implOnUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetDecoder_implOnUnmappableCharacter), "$decode5", $rt_wrapFunction3(jnc_CharsetDecoder_decode), "$flush0",
$rt_wrapFunction1(jnc_CharsetDecoder_flush), "$reset3", $rt_wrapFunction0(jnc_CharsetDecoder_reset), "$decode0", $rt_wrapFunction1(jnc_CharsetDecoder_decode0), "$implFlush0", $rt_wrapFunction1(jnc_CharsetDecoder_implFlush), "$implReset", $rt_wrapFunction0(jnc_CharsetDecoder_implReset)],
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, ["$_init_14", $rt_wrapFunction3(jnci_BufferedDecoder__init_), "$decodeLoop", $rt_wrapFunction2(jnci_BufferedDecoder_decodeLoop)],
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_87", $rt_wrapFunction1(jnci_UTF8Decoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jtc_IsoChronology, "IsoChronology", 18, jtc_Chronology, [ji_Serializable], 4, 3, 0, jtc_IsoChronology_$callClinit, ["$getId", $rt_wrapFunction0(jtc_IsoChronology_getId), "$zonedDateTime", $rt_wrapFunction2(jtc_IsoChronology_zonedDateTime), "$isLeapYear", $rt_wrapFunction1(jtc_IsoChronology_isLeapYear), "$resolveDate", $rt_wrapFunction2(jtc_IsoChronology_resolveDate), "$zonedDateTime0", $rt_wrapFunction2(jtc_IsoChronology_zonedDateTime0)],
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 6, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_106", $rt_wrapFunction3(jur_PossessiveQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_177", $rt_wrapFunction2(jnci_BufferedDecoder$Controller__init_), "$hasMoreInput0", $rt_wrapFunction0(jnci_BufferedDecoder$Controller_hasMoreInput0), "$hasMoreInput", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_hasMoreInput), "$hasMoreOutput0", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_hasMoreOutput), "$setInPosition", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_setInPosition), "$setOutPosition", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_setOutPosition)],
ju_Locale, 0, jl_Object, [jl_Cloneable, ji_Serializable], 4, 3, 0, ju_Locale_$callClinit, ["$_init_24", $rt_wrapFunction2(ju_Locale__init_1), "$_init_53", $rt_wrapFunction3(ju_Locale__init_0), "$getCountry", $rt_wrapFunction0(ju_Locale_getCountry), "$getLanguage", $rt_wrapFunction0(ju_Locale_getLanguage), "$toLanguageTag", $rt_wrapFunction0(ju_Locale_toLanguageTag)],
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_DefaultUncaughtExceptionHandler__init_)],
jl_InstantiationException, "InstantiationException", 22, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_InstantiationException__init_)],
onn_NostrPool, "NostrPool", 26, jl_Object, [], 0, 3, 0, onn_NostrPool_$callClinit, ["$_init_0", $rt_wrapFunction0(onn_NostrPool__init_2), "$_init_168", $rt_wrapFunction1(onn_NostrPool__init_0), "$addNoticeListener", $rt_wrapFunction1(onn_NostrPool_addNoticeListener), "$removeNoticeListener", $rt_wrapFunction1(onn_NostrPool_removeNoticeListener), "$publish", $rt_wrapFunction1(onn_NostrPool_publish), "$publish0", $rt_wrapFunction2(onn_NostrPool_publish0), "$send1", $rt_wrapFunction1(onn_NostrPool_send), "$sendMessage",
$rt_wrapFunction1(onn_NostrPool_sendMessage), "$sendMessage0", $rt_wrapFunction2(onn_NostrPool_sendMessage0), "$connectRelay", $rt_wrapFunction1(onn_NostrPool_connectRelay), "$removeRelay", $rt_wrapFunction1(onn_NostrPool_removeRelay), "$subscribe1", $rt_wrapFunction1(onn_NostrPool_subscribe0), "$subscribe2", $rt_wrapFunction1(onn_NostrPool_subscribe), "$subscribe0", $rt_wrapFunction2(onn_NostrPool_subscribe2), "$subscribe", $rt_wrapFunction2(onn_NostrPool_subscribe1), "$fetch0", $rt_wrapFunction1(onn_NostrPool_fetch6),
"$fetch2", $rt_wrapFunction1(onn_NostrPool_fetch2), "$fetch7", $rt_wrapFunction3(onn_NostrPool_fetch1), "$fetch3", $rt_wrapFunction3(onn_NostrPool_fetch4), "$fetch8", $rt_wrapFunction2(onn_NostrPool_fetch0), "$fetch5", $rt_wrapFunction2(onn_NostrPool_fetch5), "$fetch6", $rt_wrapFunction4(onn_NostrPool_fetch), "$fetch4", $rt_wrapFunction4(onn_NostrPool_fetch3), "$onRelayMessage", $rt_wrapFunction2(onn_NostrPool_onRelayMessage), "$close2", $rt_wrapFunction0(onn_NostrPool_close), "$unsubscribeAll", $rt_wrapFunction0(onn_NostrPool_unsubscribeAll),
"$getRelays", $rt_wrapFunction0(onn_NostrPool_getRelays), "$onRelayConnect", $rt_wrapFunction1(onn_NostrPool_onRelayConnect), "$onRelayError", $rt_wrapFunction2(onn_NostrPool_onRelayError), "$onRelayConnectRequest", $rt_wrapFunction1(onn_NostrPool_onRelayConnectRequest), "$onRelayLoop", $rt_wrapFunction2(onn_NostrPool_onRelayLoop), "$onRelayDisconnect", $rt_wrapFunction3(onn_NostrPool_onRelayDisconnect), "$onRelaySend", $rt_wrapFunction2(onn_NostrPool_onRelaySend), "$onRelayDisconnectRequest", $rt_wrapFunction2(onn_NostrPool_onRelayDisconnectRequest),
"$onBeforeRelaySend", $rt_wrapFunction2(onn_NostrPool_onBeforeRelaySend), "$onAfterRelaySend", $rt_wrapFunction2(onn_NostrPool_onAfterRelaySend)],
onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_47", $rt_wrapFunction1(onnr_NostrRTCRoom$onReceiveAnswer$lambda$_22_0__init_)],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_65", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
onns_NostrNIP46Signer$PendingChallenge, "NostrNIP46Signer$PendingChallenge", 47, jl_Object, [], 0, 0, 0, 0, ["$close3", $rt_wrapFunction1(onns_NostrNIP46Signer$PendingChallenge_close), "$_init_195", $rt_wrapFunction2(onns_NostrNIP46Signer$PendingChallenge__init_)],
cjj_Deflater, 0, cjj_ZStream, [], 4, 3, 0, 0, ["$_init_60", $rt_wrapFunction2(cjj_Deflater__init_0), "$_init_196", $rt_wrapFunction3(cjj_Deflater__init_), "$init1", $rt_wrapFunction3(cjj_Deflater_init), "$deflate", $rt_wrapFunction1(cjj_Deflater_deflate)],
jtc_ChronoLocalDate$_clinit_$lambda$_36_0, 0, jl_Object, [juf_ToLongFunction], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtc_ChronoLocalDate$_clinit_$lambda$_36_0__init_)],
ju_TimeZone, 0, jl_Object, [ji_Serializable, jl_Cloneable], 1, 3, 0, ju_TimeZone_$callClinit, ["$_init_", $rt_wrapFunction1(ju_TimeZone__init_), "$clone0", $rt_wrapFunction0(ju_TimeZone_clone)],
ju_IANATimeZone, 0, ju_TimeZone, [], 0, 0, 0, 0, ["$_init_198", $rt_wrapFunction1(ju_IANATimeZone__init_0), "$getOffset", $rt_wrapFunction1(ju_IANATimeZone_getOffset), "$clone7", $rt_wrapFunction0(ju_IANATimeZone_clone0), "$clone0", $rt_wrapFunction0(ju_IANATimeZone_clone)],
jnci_Iso8859Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_87", $rt_wrapFunction1(jnci_Iso8859Decoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
onnrt_NostrTURN$lambda$write$10$lambda$_11_1, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onnrt_NostrTURN$lambda$write$10$lambda$_11_1__init_), "$accept0", $rt_wrapFunction1(onnrt_NostrTURN$lambda$write$10$lambda$_11_1_accept0), "$accept5", $rt_wrapFunction1(onnrt_NostrTURN$lambda$write$10$lambda$_11_1_accept)],
jusi_StreamOverSpliterator, 0, jusi_SimpleStreamImpl, [], 0, 3, 0, 0, ["$_init_7", $rt_wrapFunction1(jusi_StreamOverSpliterator__init_), "$next1", $rt_wrapFunction1(jusi_StreamOverSpliterator_next), "$estimateSize", $rt_wrapFunction0(jusi_StreamOverSpliterator_estimateSize)],
onnrt_NostrTURN$lambda$write$10$lambda$_11_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onnrt_NostrTURN$lambda$write$10$lambda$_11_0__init_), "$run", $rt_wrapFunction0(onnrt_NostrTURN$lambda$write$10$lambda$_11_0_run)],
ju_Spliterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
onnr_NostrRTCRoom$1, "NostrRTCRoom$1", 27, jl_Object, [onnr_NostrRTCRoom$Listener], 0, 0, 0, 0, ["$_init_91", $rt_wrapFunction1(onnr_NostrRTCRoom$1__init_0), "$onAddAnnounce", $rt_wrapFunction1(onnr_NostrRTCRoom$1_onAddAnnounce), "$onUpdateAnnounce", $rt_wrapFunction1(onnr_NostrRTCRoom$1_onUpdateAnnounce), "$onRTCSocketClose", $rt_wrapFunction1(onnr_NostrRTCRoom$1_onRTCSocketClose), "$onReceiveOffer", $rt_wrapFunction1(onnr_NostrRTCRoom$1_onReceiveOffer), "$onReceiveAnswer", $rt_wrapFunction1(onnr_NostrRTCRoom$1_onReceiveAnswer),
"$onReceiveCandidates", $rt_wrapFunction1(onnr_NostrRTCRoom$1_onReceiveCandidates), "$onRTCSocketMessage", $rt_wrapFunction3(onnr_NostrRTCRoom$1_onRTCSocketMessage), "$onRTCSocketLocalIceCandidate", $rt_wrapFunction2(onnr_NostrRTCRoom$1_onRTCSocketLocalIceCandidate), "$onRemoveAnnounce", $rt_wrapFunction2(onnr_NostrRTCRoom$1_onRemoveAnnounce)],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
ju_HashMap$KeyIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, 0, ["$_init_40", $rt_wrapFunction1(ju_HashMap$KeyIterator__init_), "$next", $rt_wrapFunction0(ju_HashMap$KeyIterator_next)],
otji_JSWrapper, "JSWrapper", 52, jl_Object, [], 4, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(otji_JSWrapper_hashCode), "$equals", $rt_wrapFunction1(otji_JSWrapper_equals), "$toString", $rt_wrapFunction0(otji_JSWrapper_toString)],
juc_ConcurrentMap, 0, jl_Object, [ju_Map], 3, 3, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent)],
jul_Level, 0, jl_Object, [ji_Serializable], 0, 3, 0, jul_Level_$callClinit, ["$_init_66", $rt_wrapFunction2(jul_Level__init_0), "$intValue", $rt_wrapFunction0(jul_Level_intValue)],
ju_HashSet, "HashSet", 4, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_HashSet__init_0), "$_init_6", $rt_wrapFunction1(ju_HashSet__init_2), "$_init_40", $rt_wrapFunction1(ju_HashSet__init_), "$add1", $rt_wrapFunction1(ju_HashSet_add), "$clear", $rt_wrapFunction0(ju_HashSet_clear), "$contains", $rt_wrapFunction1(ju_HashSet_contains), "$isEmpty", $rt_wrapFunction0(ju_HashSet_isEmpty),
"$iterator", $rt_wrapFunction0(ju_HashSet_iterator), "$size", $rt_wrapFunction0(ju_HashSet_size)],
jusi_MappingToIntStreamImpl$next$lambda$_1_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_245", $rt_wrapFunction2(jusi_MappingToIntStreamImpl$next$lambda$_1_0__init_), "$test0", $rt_wrapFunction1(jusi_MappingToIntStreamImpl$next$lambda$_1_0_test)],
jur_MultiLineSOLSet, "MultiLineSOLSet", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_294", $rt_wrapFunction1(jur_MultiLineSOLSet__init_), "$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree, "DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree", 17, jl_Object, [], 4, 0, 0, 0, 0,
jtz_ZoneOffsetTransitionRule$TimeDefinition, "ZoneOffsetTransitionRule$TimeDefinition", 16, jl_Enum, [], 12, 3, 0, jtz_ZoneOffsetTransitionRule$TimeDefinition_$callClinit, ["$createDateTime", $rt_wrapFunction3(jtz_ZoneOffsetTransitionRule$TimeDefinition_createDateTime)],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_258", $rt_wrapFunction4(onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0_apply0), "$apply0", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendCandidates$lambda$_12_0_apply)]]);
$rt_metadata([onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_24", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$sendMessage$9$lambda$_62_0_run)],
ju_AbstractMap$SimpleImmutableEntry, "AbstractMap$SimpleImmutableEntry", 4, jl_Object, [ju_Map$Entry, ji_Serializable], 0, 3, 0, 0, ["$_init_99", $rt_wrapFunction2(ju_AbstractMap$SimpleImmutableEntry__init_0), "$_init_297", $rt_wrapFunction1(ju_AbstractMap$SimpleImmutableEntry__init_1), "$getValue", $rt_wrapFunction0(ju_AbstractMap$SimpleImmutableEntry_getValue), "$getKey", $rt_wrapFunction0(ju_AbstractMap$SimpleImmutableEntry_getKey), "$equals", $rt_wrapFunction1(ju_AbstractMap$SimpleImmutableEntry_equals),
"$hashCode", $rt_wrapFunction0(ju_AbstractMap$SimpleImmutableEntry_hashCode), "$toString", $rt_wrapFunction0(ju_AbstractMap$SimpleImmutableEntry_toString)],
jt_DateTimeException, "DateTimeException", 15, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jt_DateTimeException__init_), "$_init_32", $rt_wrapFunction2(jt_DateTimeException__init_1)],
jtz_ZoneRulesException, "ZoneRulesException", 16, jt_DateTimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jtz_ZoneRulesException__init_)],
otcit_DateTimeZoneBuilder$PrecalculatedZone, "DateTimeZoneBuilder$PrecalculatedZone", 55, otcit_StorableDateTimeZone, [], 4, 0, 0, 0, ["$getOffset", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$PrecalculatedZone_getOffset), "$getStandardOffset", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$PrecalculatedZone_getStandardOffset), "$nextTransition", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$PrecalculatedZone_nextTransition), "$isCachable", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$PrecalculatedZone_isCachable),
"$asZoneRules", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$PrecalculatedZone_asZoneRules)],
onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1__init_), "$apply", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_1_apply)],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
jur_PreviousMatch, "PreviousMatch", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_PreviousMatch__init_), "$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName", $rt_wrapFunction0(jur_PreviousMatch_getName)],
onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0, "TeaVMPlatform$1$lambda$compose$4$lambda$_10_0", 49, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0_accept0), "$accept1", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$4$lambda$_10_0_accept)],
onnu_Bech32$Bech32InvalidChecksumException, "Bech32$Bech32InvalidChecksumException", 42, onnu_Bech32$Bech32Exception, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onnu_Bech32$Bech32InvalidChecksumException__init_)],
onns_SdanActionType, "SdanActionType", 40, jl_Enum, [], 12, 3, 0, onns_SdanActionType_$callClinit, ["$getValue4", $rt_wrapFunction0(onns_SdanActionType_getValue)],
cjj_Checksum, 0, jl_Object, [], 3, 0, 0, 0, 0,
cjj_Adler32, 0, jl_Object, [cjj_Checksum], 4, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cjj_Adler32__init_), "$reset0", $rt_wrapFunction1(cjj_Adler32_reset), "$reset", $rt_wrapFunction0(cjj_Adler32_reset0), "$getValue0", $rt_wrapFunction0(cjj_Adler32_getValue), "$update", $rt_wrapFunction3(cjj_Adler32_update)],
jur_NonCapFSet, "NonCapFSet", 6, jur_FSet, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_NonCapFSet__init_), "$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
jur_UCISupplCharSet, "UCISupplCharSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_UCISupplCharSet__init_), "$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_59", $rt_wrapFunction2(jur_AbstractCharClass$LazyRange__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AltQuantifierSet, "AltQuantifierSet", 6, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_106", $rt_wrapFunction3(jur_AltQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_305", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0, "TeaVMPlatform$1$lambda$then$1$lambda$_13_0", 49, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_76", $rt_wrapFunction3(onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_0_accept)],
otcit_FixedDateTimeZone, "FixedDateTimeZone", 55, otcit_StorableDateTimeZone, [], 4, 3, 0, 0, ["$_init_199", $rt_wrapFunction3(otcit_FixedDateTimeZone__init_0), "$getOffset", $rt_wrapFunction1(otcit_FixedDateTimeZone_getOffset), "$getStandardOffset", $rt_wrapFunction1(otcit_FixedDateTimeZone_getStandardOffset), "$asZoneRules", $rt_wrapFunction0(otcit_FixedDateTimeZone_asZoneRules)],
onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1, "TeaVMPlatform$1$lambda$then$1$lambda$_13_1", 49, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1_accept0), "$accept1", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$then$1$lambda$_13_1_accept)],
onnu_ByteBufferList, "ByteBufferList", 42, ju_AbstractList, [], 0, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_90", $rt_wrapFunction1(onnu_ByteBufferList__init_0), "$get18", $rt_wrapFunction1(onnu_ByteBufferList_get), "$size", $rt_wrapFunction0(onnu_ByteBufferList_size), "$get", $rt_wrapFunction1(onnu_ByteBufferList_get0)],
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_2", $rt_wrapFunction1(jl_Object$monitorExit$lambda$_8_0__init_), "$run", $rt_wrapFunction0(jl_Object$monitorExit$lambda$_8_0_run)],
jur_UCISupplRangeSet, "UCISupplRangeSet", 6, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$_init_204", $rt_wrapFunction1(jur_UCISupplRangeSet__init_), "$contains0", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
onnn_ExternalIdentity, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_205", $rt_wrapFunction3(onnn_ExternalIdentity__init_), "$getPlatform0", $rt_wrapFunction0(onnn_ExternalIdentity_getPlatform), "$getIdentity", $rt_wrapFunction0(onnn_ExternalIdentity_getIdentity), "$getProof", $rt_wrapFunction0(onnn_ExternalIdentity_getProof), "$toString", $rt_wrapFunction0(onnn_ExternalIdentity_toString), "$equals", $rt_wrapFunction1(onnn_ExternalIdentity_equals), "$hashCode", $rt_wrapFunction0(onnn_ExternalIdentity_hashCode)],
onnn_GenericIdentity, "GenericIdentity", 31, onnn_ExternalIdentity, [], 0, 3, 0, 0, ["$_init_205", $rt_wrapFunction3(onnn_GenericIdentity__init_0)],
jl_Void, 0, jl_Object, [], 4, 3, 0, 0, 0,
onpt_RTCTransportListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0__init_), "$accept3", $rt_wrapFunction2(onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0_accept0), "$accept", $rt_wrapFunction2(onnrs_NostrRTCSignaling$lambda$start$7$lambda$_27_0_accept)],
onn_NostrSubscription$NostrSubCloseMessage, "NostrSubscription$NostrSubCloseMessage", 26, onnp_NostrMessage, [], 4, 0, 0, 0, ["$_init_", $rt_wrapFunction1(onn_NostrSubscription$NostrSubCloseMessage__init_), "$getId", $rt_wrapFunction0(onn_NostrSubscription$NostrSubCloseMessage_getId), "$getPrefix", $rt_wrapFunction0(onn_NostrSubscription$NostrSubCloseMessage_getPrefix), "$getFragments", $rt_wrapFunction0(onn_NostrSubscription$NostrSubCloseMessage_getFragments)],
otcit_CachedDateTimeZone$Info, 0, jl_Object, [], 4, 0, 0, 0, ["$_init_322", $rt_wrapFunction2(otcit_CachedDateTimeZone$Info__init_), "$getOffset", $rt_wrapFunction1(otcit_CachedDateTimeZone$Info_getOffset), "$getStandardOffset", $rt_wrapFunction1(otcit_CachedDateTimeZone$Info_getStandardOffset)],
jn_URLStreamHandler, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_URLStreamHandler__init_), "$parseURL", $rt_wrapFunction4(jn_URLStreamHandler_parseURL), "$setURL", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { jn_URLStreamHandler_setURL(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }],
jni_DummyStreamHandler, "DummyStreamHandler", 21, jn_URLStreamHandler, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(jni_DummyStreamHandler__init_)],
jtt_TemporalAdjusters, 0, jl_Object, [], 4, 3, 0, 0, 0,
onn_NostrSubscription$callEoseListeners$lambda$_14_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_231", $rt_wrapFunction2(onn_NostrSubscription$callEoseListeners$lambda$_14_0__init_), "$call0", $rt_wrapFunction0(onn_NostrSubscription$callEoseListeners$lambda$_14_0_call)],
otjc_JSBoolean, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
onn_NostrSubscription$callEoseListeners$lambda$_14_1, "NostrSubscription$callEoseListeners$lambda$_14_1", 26, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_232", $rt_wrapFunction1(onn_NostrSubscription$callEoseListeners$lambda$_14_1__init_), "$accept0", $rt_wrapFunction1(onn_NostrSubscription$callEoseListeners$lambda$_14_1_accept0), "$accept1", $rt_wrapFunction1(onn_NostrSubscription$callEoseListeners$lambda$_14_1_accept)],
onns_NostrNIP46Signer$loop$lambda$_3_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$loop$lambda$_3_0__init_), "$call0", $rt_wrapFunction0(onns_NostrNIP46Signer$loop$lambda$_3_0_call)],
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
ju_HashMap$1, "HashMap$1", 4, ju_AbstractSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_40", $rt_wrapFunction1(ju_HashMap$1__init_), "$contains", $rt_wrapFunction1(ju_HashMap$1_contains), "$size", $rt_wrapFunction0(ju_HashMap$1_size), "$iterator", $rt_wrapFunction0(ju_HashMap$1_iterator)],
ju_HashMap$2, 0, ju_AbstractCollection, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_40", $rt_wrapFunction1(ju_HashMap$2__init_), "$size", $rt_wrapFunction0(ju_HashMap$2_size), "$iterator", $rt_wrapFunction0(ju_HashMap$2_iterator)],
jm_Elementary, 0, jl_Object, [], 0, 0, 0, 0, 0,
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_193", $rt_wrapFunction1(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_0_run)],
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_130", $rt_wrapFunction1(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2__init_), "$run", $rt_wrapFunction0(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_2_run)],
onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_193", $rt_wrapFunction1(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1__init_), "$run", $rt_wrapFunction0(onn_NostrRelayLifecycleManager$onRelaySend$lambda$_10_1_run)],
onp_NGEUtils, "NGEUtils", 48, jl_Object, [], 0, 3, 0, onp_NGEUtils_$callClinit, 0,
ju_LinkedList$SequentialListIterator, 0, jl_Object, [ju_ListIterator], 0, 0, 0, 0, ["$_init_312", $rt_wrapFunction4(ju_LinkedList$SequentialListIterator__init_0), "$hasNext", $rt_wrapFunction0(ju_LinkedList$SequentialListIterator_hasNext), "$next", $rt_wrapFunction0(ju_LinkedList$SequentialListIterator_next), "$remove", $rt_wrapFunction0(ju_LinkedList$SequentialListIterator_remove), "$hasPrevious", $rt_wrapFunction0(ju_LinkedList$SequentialListIterator_hasPrevious), "$previous", $rt_wrapFunction0(ju_LinkedList$SequentialListIterator_previous),
"$add9", $rt_wrapFunction1(ju_LinkedList$SequentialListIterator_add)],
jt_ZoneRegion, "ZoneRegion", 15, jt_ZoneId, [ji_Serializable], 4, 0, 0, 0, ["$_init_167", $rt_wrapFunction2(jt_ZoneRegion__init_), "$getId", $rt_wrapFunction0(jt_ZoneRegion_getId), "$getRules", $rt_wrapFunction0(jt_ZoneRegion_getRules)],
otcit_DateTimeZoneProvider, 0, jl_Object, [], 4, 3, 0, otcit_DateTimeZoneProvider_$callClinit, 0]);
$rt_metadata([onnn_NostrconnectUrl, "NostrconnectUrl", 37, jl_Object, [ji_Serializable, jl_Cloneable], 0, 3, 0, 0, ["$_init_209", $rt_wrapFunction4(onnn_NostrconnectUrl__init_0), "$toString", $rt_wrapFunction0(onnn_NostrconnectUrl_toString), "$clone8", $rt_wrapFunction0(onnn_NostrconnectUrl_clone), "$clone0", $rt_wrapFunction0(onnn_NostrconnectUrl_clone0)],
jl_NegativeArraySizeException, "NegativeArraySizeException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NegativeArraySizeException__init_)],
jusi_ArrayStreamImpl, 0, jusi_SimpleStreamImpl, [], 0, 3, 0, 0, ["$_init_134", $rt_wrapFunction3(jusi_ArrayStreamImpl__init_), "$next1", $rt_wrapFunction1(jusi_ArrayStreamImpl_next)],
onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_64", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0_apply0), "$apply6", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendCandidates$15$lambda$_19_0_apply)],
onpt_TeaVMPlatform, 0, onp_NGEPlatform, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onpt_TeaVMPlatform__init_), "$generatePrivateKey", $rt_wrapFunction0(onpt_TeaVMPlatform_generatePrivateKey), "$genPubKey", $rt_wrapFunction1(onpt_TeaVMPlatform_genPubKey), "$toJSON", $rt_wrapFunction1(onpt_TeaVMPlatform_toJSON), "$fromJSON", $rt_wrapFunction2(onpt_TeaVMPlatform_fromJSON), "$secp256k1SharedSecret", $rt_wrapFunction2(onpt_TeaVMPlatform_secp256k1SharedSecret), "$hmac", $rt_wrapFunction3(onpt_TeaVMPlatform_hmac),
"$hkdf_extract", $rt_wrapFunction2(onpt_TeaVMPlatform_hkdf_extract), "$hkdf_expand", $rt_wrapFunction3(onpt_TeaVMPlatform_hkdf_expand), "$base64encode", $rt_wrapFunction1(onpt_TeaVMPlatform_base64encode), "$base64decode", $rt_wrapFunction1(onpt_TeaVMPlatform_base64decode), "$chacha20", $rt_wrapFunction4(onpt_TeaVMPlatform_chacha20), "$sha256", $rt_wrapFunction1(onpt_TeaVMPlatform_sha256), "$sign0", $rt_wrapFunction2(onpt_TeaVMPlatform_sign), "$verify0", $rt_wrapFunction3(onpt_TeaVMPlatform_verify), "$randomBytes",
$rt_wrapFunction1(onpt_TeaVMPlatform_randomBytes), "$getTimestampSeconds", $rt_wrapFunction0(onpt_TeaVMPlatform_getTimestampSeconds), "$promisify", $rt_wrapFunction2(onpt_TeaVMPlatform_promisify), "$wrapPromise", $rt_wrapFunction1(onpt_TeaVMPlatform_wrapPromise), "$awaitAll", $rt_wrapFunction1(onpt_TeaVMPlatform_awaitAll), "$newTransport", $rt_wrapFunction0(onpt_TeaVMPlatform_newTransport), "$newConcurrentQueue", $rt_wrapFunction1(onpt_TeaVMPlatform_newConcurrentQueue), "$signAsync", $rt_wrapFunction2(onpt_TeaVMPlatform_signAsync),
"$verifyAsync0", $rt_wrapFunction3(onpt_TeaVMPlatform_verifyAsync), "$newAsyncExecutor", $rt_wrapFunction1(onpt_TeaVMPlatform_newAsyncExecutor), "$awaitAllSettled", $rt_wrapFunction1(onpt_TeaVMPlatform_awaitAllSettled), "$httpGet", $rt_wrapFunction3(onpt_TeaVMPlatform_httpGet), "$newRTCTransport", $rt_wrapFunction3(onpt_TeaVMPlatform_newRTCTransport), "$scrypt", function(var_1, var_2, var_3, var_4, var_5, var_6) { return onpt_TeaVMPlatform_scrypt(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$xchacha20poly1305",
function(var_1, var_2, var_3, var_4, var_5) { return onpt_TeaVMPlatform_xchacha20poly1305(this, var_1, var_2, var_3, var_4, var_5); }, "$nfkc", $rt_wrapFunction1(onpt_TeaVMPlatform_nfkc)],
onnrs_NostrRTCSignaling$decrypt$lambda$_15_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_259", $rt_wrapFunction2(onnrs_NostrRTCSignaling$decrypt$lambda$_15_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$decrypt$lambda$_15_0_apply0), "$apply0", $rt_wrapFunction1(onnrs_NostrRTCSignaling$decrypt$lambda$_15_0_apply)],
onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionError$43$lambda$_28_0_run)],
jtf_DateTimeFormatterBuilder$SettingsParser, "DateTimeFormatterBuilder$SettingsParser", 17, jl_Enum, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 12, 0, 0, jtf_DateTimeFormatterBuilder$SettingsParser_$callClinit, ["$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$SettingsParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$SettingsParser_toString)],
onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_121", $rt_wrapFunction2(onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$onConnectionClosedByClient$lambda$_25_0_accept)],
onnp_NostrMessageAck$Status, "NostrMessageAck$Status", 43, jl_Enum, [], 12, 3, 0, onnp_NostrMessageAck$Status_$callClinit, 0,
jtf_DecimalStyle, 0, jl_Object, [], 4, 3, 0, jtf_DecimalStyle_$callClinit, ["$getPositiveSign", $rt_wrapFunction0(jtf_DecimalStyle_getPositiveSign), "$getNegativeSign", $rt_wrapFunction0(jtf_DecimalStyle_getNegativeSign), "$getDecimalSeparator", $rt_wrapFunction0(jtf_DecimalStyle_getDecimalSeparator), "$convertToDigit", $rt_wrapFunction1(jtf_DecimalStyle_convertToDigit)],
jnci_UTF16Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_80", $rt_wrapFunction3(jnci_UTF16Decoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1, "TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1", 49, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_143", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1__init_), "$handleEvent", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1_handleEvent)],
jl_IllegalStateException, "IllegalStateException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalStateException__init_3), "$_init_32", $rt_wrapFunction2(jl_IllegalStateException__init_2), "$_init_", $rt_wrapFunction1(jl_IllegalStateException__init_1)],
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2, "TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2", 49, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_143", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2__init_), "$handleEvent", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2_handleEvent)],
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0, "TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0", 49, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_142", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0__init_), "$handleEvent", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0_handleEvent)],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 6, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_169", $rt_wrapFunction4(jur_ReluctantCompositeQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
onpt_TeaVMWebsocketTransport$close$lambda$_3_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_141", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$close$lambda$_3_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$close$lambda$_3_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$close$lambda$_3_0_accept)],
jtt_TemporalQueries, 0, jl_Object, [], 4, 3, 0, jtt_TemporalQueries_$callClinit, 0,
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_ByteBuffer__init_), "$get16", $rt_wrapFunction3(jn_ByteBuffer_get0), "$get5", $rt_wrapFunction1(jn_ByteBuffer_get), "$put3", $rt_wrapFunction1(jn_ByteBuffer_put0), "$put0", $rt_wrapFunction3(jn_ByteBuffer_put1), "$put", $rt_wrapFunction1(jn_ByteBuffer_put), "$hasArray", $rt_wrapFunction0(jn_ByteBuffer_hasArray), "$array", $rt_wrapFunction0(jn_ByteBuffer_array), "$arrayOffset", $rt_wrapFunction0(jn_ByteBuffer_arrayOffset),
"$hashCode", $rt_wrapFunction0(jn_ByteBuffer_hashCode), "$flip", $rt_wrapFunction0(jn_ByteBuffer_flip), "$rewind", $rt_wrapFunction0(jn_ByteBuffer_rewind), "$position1", $rt_wrapFunction1(jn_ByteBuffer_position)],
onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3, "TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3", 49, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3__init_), "$handleEvent", $rt_wrapFunction1(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3_handleEvent)],
jur_SOLSet, "SOLSet", 6, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SOLSet__init_), "$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_SOLSet_getName)],
onn_NostrRelaySubManager$SubAttachment, "NostrRelaySubManager$SubAttachment", 26, jl_Object, [], 0, 0, 0, 0, 0,
ju_HashMap$HashMapEntrySet, 0, ju_AbstractSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_40", $rt_wrapFunction1(ju_HashMap$HashMapEntrySet__init_), "$size", $rt_wrapFunction0(ju_HashMap$HashMapEntrySet_size), "$iterator", $rt_wrapFunction0(ju_HashMap$HashMapEntrySet_iterator)],
jl_Byte, "Byte", 22, jl_Number, [jl_Comparable], 0, 3, 0, jl_Byte_$callClinit, ["$_init_222", $rt_wrapFunction1(jl_Byte__init_), "$intValue", $rt_wrapFunction0(jl_Byte_intValue), "$longValue", $rt_wrapFunction0(jl_Byte_longValue), "$toString", $rt_wrapFunction0(jl_Byte_toString0), "$equals", $rt_wrapFunction1(jl_Byte_equals), "$hashCode", $rt_wrapFunction0(jl_Byte_hashCode0), "$compareTo13", $rt_wrapFunction1(jl_Byte_compareTo0), "$compareTo7", $rt_wrapFunction1(jl_Byte_compareTo)],
jusi_FindFirstConsumer, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jusi_FindFirstConsumer__init_), "$test0", $rt_wrapFunction1(jusi_FindFirstConsumer_test)],
jul_Logger, "Logger", 9, jl_Object, [], 0, 3, 0, jul_Logger_$callClinit, ["$_init_", $rt_wrapFunction1(jul_Logger__init_), "$log0", $rt_wrapFunction1(jul_Logger_log0), "$log1", $rt_wrapFunction2(jul_Logger_log1), "$log", $rt_wrapFunction3(jul_Logger_log), "$severe", $rt_wrapFunction1(jul_Logger_severe), "$warning", $rt_wrapFunction1(jul_Logger_warning), "$info", $rt_wrapFunction1(jul_Logger_info), "$fine", $rt_wrapFunction1(jul_Logger_fine), "$finer", $rt_wrapFunction1(jul_Logger_finer), "$finest", $rt_wrapFunction1(jul_Logger_finest)],
onn_NostrRelayInfo, "NostrRelayInfo", 26, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, onn_NostrRelayInfo_$callClinit, ["$_init_175", $rt_wrapFunction2(onn_NostrRelayInfo__init_), "$clone9", $rt_wrapFunction0(onn_NostrRelayInfo_clone), "$get20", $rt_wrapFunction0(onn_NostrRelayInfo_get0), "$getName", $rt_wrapFunction0(onn_NostrRelayInfo_getName), "$getDescription", $rt_wrapFunction0(onn_NostrRelayInfo_getDescription), "$getBanner", $rt_wrapFunction0(onn_NostrRelayInfo_getBanner), "$getIcon", $rt_wrapFunction0(onn_NostrRelayInfo_getIcon),
"$getPubkey", $rt_wrapFunction0(onn_NostrRelayInfo_getPubkey), "$getContact", $rt_wrapFunction0(onn_NostrRelayInfo_getContact), "$getSupportedNips", $rt_wrapFunction0(onn_NostrRelayInfo_getSupportedNips), "$getSoftware", $rt_wrapFunction0(onn_NostrRelayInfo_getSoftware), "$getVersion", $rt_wrapFunction0(onn_NostrRelayInfo_getVersion), "$getPrivacyPolicy", $rt_wrapFunction0(onn_NostrRelayInfo_getPrivacyPolicy), "$getTermsOfService", $rt_wrapFunction0(onn_NostrRelayInfo_getTermsOfService), "$getRelayUrl", $rt_wrapFunction0(onn_NostrRelayInfo_getRelayUrl),
"$isNipSupported", $rt_wrapFunction1(onn_NostrRelayInfo_isNipSupported0), "$isNipSupported0", $rt_wrapFunction1(onn_NostrRelayInfo_isNipSupported), "$getLimitation", $rt_wrapFunction2(onn_NostrRelayInfo_getLimitation0), "$getLimitation0", $rt_wrapFunction2(onn_NostrRelayInfo_getLimitation), "$getCountries", $rt_wrapFunction0(onn_NostrRelayInfo_getCountries), "$getLanguageTags", $rt_wrapFunction0(onn_NostrRelayInfo_getLanguageTags), "$getTags", $rt_wrapFunction0(onn_NostrRelayInfo_getTags), "$getPostingPolicy",
$rt_wrapFunction0(onn_NostrRelayInfo_getPostingPolicy), "$toString", $rt_wrapFunction0(onn_NostrRelayInfo_toString), "$clone0", $rt_wrapFunction0(onn_NostrRelayInfo_clone0)],
jlr_Modifier, 0, jl_Object, [], 0, 3, 0, jlr_Modifier_$callClinit, 0,
ju_TemplateCollections$SingleElementList, "TemplateCollections$SingleElementList", 4, ju_TemplateCollections$AbstractImmutableList, [ju_RandomAccess], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_2", $rt_wrapFunction1(ju_TemplateCollections$SingleElementList__init_), "$size", $rt_wrapFunction0(ju_TemplateCollections$SingleElementList_size), "$get", $rt_wrapFunction1(ju_TemplateCollections$SingleElementList_get)],
onnrl_NostrRTCRoomPeerMessageListener, 0, jl_Object, [onnrl_NostrRTCRoomListener], 3, 3, 0, 0, 0,
onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0, "TeaVMPlatform$1$lambda$compose$5$lambda$_9_0", 49, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_74", $rt_wrapFunction3(onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_0_accept)],
onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1, "TeaVMPlatform$1$lambda$compose$5$lambda$_9_1", 49, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1_accept0), "$accept1", $rt_wrapFunction1(onpt_TeaVMPlatform$1$lambda$compose$5$lambda$_9_1_accept)],
jtt_ChronoField, "ChronoField", 19, jl_Enum, [jtt_TemporalField], 12, 3, 0, jtt_ChronoField_$callClinit, ["$range", $rt_wrapFunction0(jtt_ChronoField_range), "$isDateBased", $rt_wrapFunction0(jtt_ChronoField_isDateBased), "$isTimeBased", $rt_wrapFunction0(jtt_ChronoField_isTimeBased), "$checkValidValue", $rt_wrapFunction1(jtt_ChronoField_checkValidValue), "$checkValidIntValue0", $rt_wrapFunction1(jtt_ChronoField_checkValidIntValue), "$isSupportedBy", $rt_wrapFunction1(jtt_ChronoField_isSupportedBy), "$rangeRefinedBy",
$rt_wrapFunction1(jtt_ChronoField_rangeRefinedBy), "$getFrom", $rt_wrapFunction1(jtt_ChronoField_getFrom), "$adjustInto0", $rt_wrapFunction2(jtt_ChronoField_adjustInto), "$resolve0", $rt_wrapFunction3(jtt_ChronoField_resolve), "$toString", $rt_wrapFunction0(jtt_ChronoField_toString)],
onnn_Nip46AppMetadata, "Nip46AppMetadata", 37, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$_init_210", $rt_wrapFunction4(onnn_Nip46AppMetadata__init_1), "$_init_0", $rt_wrapFunction0(onnn_Nip46AppMetadata__init_), "$setName0", $rt_wrapFunction1(onnn_Nip46AppMetadata_setName), "$setUrl", $rt_wrapFunction1(onnn_Nip46AppMetadata_setUrl), "$setImage", $rt_wrapFunction1(onnn_Nip46AppMetadata_setImage), "$setPerms", $rt_wrapFunction1(onnn_Nip46AppMetadata_setPerms), "$addPerm", $rt_wrapFunction1(onnn_Nip46AppMetadata_addPerm),
"$removePerm", $rt_wrapFunction1(onnn_Nip46AppMetadata_removePerm), "$permsFromCsv", $rt_wrapFunction1(onnn_Nip46AppMetadata_permsFromCsv), "$getName", $rt_wrapFunction0(onnn_Nip46AppMetadata_getName), "$getUrl", $rt_wrapFunction0(onnn_Nip46AppMetadata_getUrl), "$getImage", $rt_wrapFunction0(onnn_Nip46AppMetadata_getImage), "$getPerms", $rt_wrapFunction0(onnn_Nip46AppMetadata_getPerms), "$toString", $rt_wrapFunction0(onnn_Nip46AppMetadata_toString), "$clone10", $rt_wrapFunction0(onnn_Nip46AppMetadata_clone),
"$clone0", $rt_wrapFunction0(onnn_Nip46AppMetadata_clone0)],
onnn_Nip05Nip46Data, "Nip05Nip46Data", 32, onnn_Nip46AppMetadata, [], 0, 3, 0, 0, ["$_init_47", $rt_wrapFunction1(onnn_Nip05Nip46Data__init_0), "$getSignerPubkey", $rt_wrapFunction0(onnn_Nip05Nip46Data_getSignerPubkey), "$setRelays", $rt_wrapFunction1(onnn_Nip05Nip46Data_setRelays), "$getRelays", $rt_wrapFunction0(onnn_Nip05Nip46Data_getRelays), "$setNostrconnectRedirectTemplate", $rt_wrapFunction1(onnn_Nip05Nip46Data_setNostrconnectRedirectTemplate), "$getNostrconnectRedirectTemplate", $rt_wrapFunction0(onnn_Nip05Nip46Data_getNostrconnectRedirectTemplate)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
cjj_Inflater, 0, cjj_ZStream, [], 4, 3, 0, 0, ["$_init_146", $rt_wrapFunction1(cjj_Inflater__init_0), "$_init_60", $rt_wrapFunction2(cjj_Inflater__init_), "$init2", $rt_wrapFunction2(cjj_Inflater_init), "$inflate0", $rt_wrapFunction1(cjj_Inflater_inflate)],
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1, "NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1", 30, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1__init_), "$accept0", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1_accept0), "$accept1", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_1_accept)],
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_260", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0__init_), "$test0", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0_test0), "$test1", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_0_test)],
onnl_NostrRelayComponent, 0, jl_Object, [], 3, 3, 0, 0, 0,
onn_NostrRelaySubManager, "NostrRelaySubManager", 26, jl_Object, [onnl_NostrRelayComponent], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onn_NostrRelaySubManager__init_), "$onRelayConnectRequest", $rt_wrapFunction1(onn_NostrRelaySubManager_onRelayConnectRequest), "$onRelayConnect", $rt_wrapFunction1(onn_NostrRelaySubManager_onRelayConnect), "$onRelayMessage", $rt_wrapFunction2(onn_NostrRelaySubManager_onRelayMessage), "$isActive", $rt_wrapFunction1(onn_NostrRelaySubManager_isActive), "$isEose", $rt_wrapFunction1(onn_NostrRelaySubManager_isEose),
"$onRelayError", $rt_wrapFunction2(onn_NostrRelaySubManager_onRelayError), "$onRelayLoop", $rt_wrapFunction2(onn_NostrRelaySubManager_onRelayLoop), "$onRelayDisconnect", $rt_wrapFunction3(onn_NostrRelaySubManager_onRelayDisconnect), "$onRelayBeforeSend", $rt_wrapFunction2(onn_NostrRelaySubManager_onRelayBeforeSend), "$onRelaySend", $rt_wrapFunction2(onn_NostrRelaySubManager_onRelaySend), "$onRelayAfterSend", $rt_wrapFunction2(onn_NostrRelaySubManager_onRelayAfterSend), "$onRelayDisconnectRequest", $rt_wrapFunction2(onn_NostrRelaySubManager_onRelayDisconnectRequest)],
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_260", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3__init_), "$run", $rt_wrapFunction0(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_3_run)],
onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_262", $rt_wrapFunction4(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2_apply0), "$apply12", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$5$lambda$_29_2_apply)],
ju_LinkedHashMapIterator$KeyIterator, 0, ju_LinkedHashMapIterator, [ju_Iterator], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction2(ju_LinkedHashMapIterator$KeyIterator__init_), "$next", $rt_wrapFunction0(ju_LinkedHashMapIterator$KeyIterator_next)],
jn_ByteBufferJsImpl, 0, jn_ByteBuffer, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_221", function(var_1, var_2, var_3, var_4, var_5) { jn_ByteBufferJsImpl__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$arrayImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_arrayImpl), "$arrayOffsetImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_arrayOffsetImpl), "$hasArrayImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_hasArrayImpl), "$capacityImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_capacityImpl), "$getImpl0", $rt_wrapFunction4(jn_ByteBufferJsImpl_getImpl),
"$putImpl3", $rt_wrapFunction4(jn_ByteBufferJsImpl_putImpl), "$putImpl4", $rt_wrapFunction4(jn_ByteBufferJsImpl_putImpl0), "$slice", $rt_wrapFunction0(jn_ByteBufferJsImpl_slice), "$get11", $rt_wrapFunction0(jn_ByteBufferJsImpl_get0), "$put4", $rt_wrapFunction1(jn_ByteBufferJsImpl_put0), "$get6", $rt_wrapFunction1(jn_ByteBufferJsImpl_get), "$put7", $rt_wrapFunction2(jn_ByteBufferJsImpl_put), "$isReadOnly", $rt_wrapFunction0(jn_ByteBufferJsImpl_isReadOnly), "$getArrayBufferView", $rt_wrapFunction0(jn_ByteBufferJsImpl_getArrayBufferView)],
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, jnc_CoderResult_$callClinit, ["$_init_227", $rt_wrapFunction2(jnc_CoderResult__init_0), "$isUnderflow", $rt_wrapFunction0(jnc_CoderResult_isUnderflow), "$isOverflow", $rt_wrapFunction0(jnc_CoderResult_isOverflow), "$isError", $rt_wrapFunction0(jnc_CoderResult_isError), "$isMalformed", $rt_wrapFunction0(jnc_CoderResult_isMalformed), "$isUnmappable", $rt_wrapFunction0(jnc_CoderResult_isUnmappable), "$length", $rt_wrapFunction0(jnc_CoderResult_length), "$throwException",
$rt_wrapFunction0(jnc_CoderResult_throwException)],
otcit_DoubleAnalyzer, 0, jl_Object, [], 4, 3, 0, otcit_DoubleAnalyzer_$callClinit, 0,
jur_EOLSet, "EOLSet", 6, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_EOLSet__init_), "$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOLSet_getName)]]);
$rt_metadata([jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_66", $rt_wrapFunction2(jur_Lexer__init_), "$peek", $rt_wrapFunction0(jur_Lexer_peek), "$setMode", $rt_wrapFunction1(jur_Lexer_setMode), "$restoreFlags", $rt_wrapFunction1(jur_Lexer_restoreFlags), "$peekSpecial", $rt_wrapFunction0(jur_Lexer_peekSpecial), "$isSpecial", $rt_wrapFunction0(jur_Lexer_isSpecial), "$isNextSpecial", $rt_wrapFunction0(jur_Lexer_isNextSpecial), "$next4", $rt_wrapFunction0(jur_Lexer_next), "$nextSpecial", $rt_wrapFunction0(jur_Lexer_nextSpecial),
"$lookAhead", $rt_wrapFunction0(jur_Lexer_lookAhead), "$back", $rt_wrapFunction0(jur_Lexer_back), "$toString", $rt_wrapFunction0(jur_Lexer_toString), "$isEmpty", $rt_wrapFunction0(jur_Lexer_isEmpty), "$isLetter0", $rt_wrapFunction0(jur_Lexer_isLetter0), "$isHighSurrogate1", $rt_wrapFunction0(jur_Lexer_isHighSurrogate0), "$isLowSurrogate1", $rt_wrapFunction0(jur_Lexer_isLowSurrogate0), "$getIndex", $rt_wrapFunction0(jur_Lexer_getIndex)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
jn_MalformedURLException, "MalformedURLException", 20, ji_IOException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_MalformedURLException__init_1), "$_init_", $rt_wrapFunction1(jn_MalformedURLException__init_2)],
jn_URLEncoder, 0, jl_Object, [], 4, 3, 0, 0, 0,
jt_Clock, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jt_Clock__init_)],
onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_36", $rt_wrapFunction1(onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0__init_), "$accept3", $rt_wrapFunction2(onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0_accept0), "$accept", $rt_wrapFunction2(onns_NostrKeyPairSigner$getPublicKey$lambda$_5_0_accept)],
ju_HashMap$EntryIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, 0, ["$_init_40", $rt_wrapFunction1(ju_HashMap$EntryIterator__init_), "$next3", $rt_wrapFunction0(ju_HashMap$EntryIterator_next), "$next", $rt_wrapFunction0(ju_HashMap$EntryIterator_next0)],
onn_NostrRelay$onConnectionMessage$lambda$_23_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onn_NostrRelay$onConnectionMessage$lambda$_23_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$onConnectionMessage$lambda$_23_0_run)],
ju_Collections, 0, jl_Object, [], 0, 3, 0, ju_Collections_$callClinit, 0,
onn_NostrRelay$onConnectionMessage$lambda$_23_1, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_119", $rt_wrapFunction3(onn_NostrRelay$onConnectionMessage$lambda$_23_1__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$onConnectionMessage$lambda$_23_1_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$onConnectionMessage$lambda$_23_1_accept)],
onn_NostrSubscription, "NostrSubscription", 26, onnp_NostrMessage, [], 0, 3, 0, onn_NostrSubscription_$callClinit, ["$_init_180", function(var_1, var_2, var_3, var_4, var_5) { onn_NostrSubscription__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$registerClosure", $rt_wrapFunction1(onn_NostrSubscription_registerClosure), "$getFilters", $rt_wrapFunction0(onn_NostrSubscription_getFilters), "$getExecutor", $rt_wrapFunction0(onn_NostrSubscription_getExecutor), "$getId", $rt_wrapFunction0(onn_NostrSubscription_getId),
"$open", $rt_wrapFunction0(onn_NostrSubscription_open), "$isOpened", $rt_wrapFunction0(onn_NostrSubscription_isOpened), "$close0", $rt_wrapFunction0(onn_NostrSubscription_close), "$getSubId", $rt_wrapFunction0(onn_NostrSubscription_getSubId), "$addEventListener", $rt_wrapFunction1(onn_NostrSubscription_addEventListener), "$addEoseListener", $rt_wrapFunction1(onn_NostrSubscription_addEoseListener), "$addCloseListener", $rt_wrapFunction1(onn_NostrSubscription_addCloseListener), "$addListener3", $rt_wrapFunction1(onn_NostrSubscription_addListener),
"$removeListener0", $rt_wrapFunction1(onn_NostrSubscription_removeListener), "$callEoseListeners", $rt_wrapFunction1(onn_NostrSubscription_callEoseListeners), "$callEventListeners", $rt_wrapFunction2(onn_NostrSubscription_callEventListeners), "$callCloseListeners", $rt_wrapFunction0(onn_NostrSubscription_callCloseListeners), "$getPrefix", $rt_wrapFunction0(onn_NostrSubscription_getPrefix), "$getFragments", $rt_wrapFunction0(onn_NostrSubscription_getFragments)],
jtz_ZoneRulesProvider, 0, jl_Object, [], 1, 3, 0, jtz_ZoneRulesProvider_$callClinit, ["$_init_0", $rt_wrapFunction0(jtz_ZoneRulesProvider__init_)],
onpt_TeaVMPlatform$2$runLater$lambda$_2_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_71", $rt_wrapFunction2(onpt_TeaVMPlatform$2$runLater$lambda$_2_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$2$runLater$lambda$_2_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$2$runLater$lambda$_2_0_accept)],
onne_UnsignedNostrEvent, "UnsignedNostrEvent", 45, jl_Object, [onne_NostrEvent], 0, 3, 0, 0, ["$getExpiration", $rt_wrapFunction0(onne_NostrEvent_getExpiration), "$isReplaceable0", $rt_wrapFunction0(onne_NostrEvent_isReplaceable), "$isAddressable0", $rt_wrapFunction0(onne_NostrEvent_isAddressable), "$isEphemeral0", $rt_wrapFunction0(onne_NostrEvent_isEphemeral), "$isRegular0", $rt_wrapFunction0(onne_NostrEvent_isRegular), "$_init_0", $rt_wrapFunction0(onne_UnsignedNostrEvent__init_1), "$_init_21", $rt_wrapFunction1(onne_UnsignedNostrEvent__init_0),
"$withKind", $rt_wrapFunction1(onne_UnsignedNostrEvent_withKind), "$withContent", $rt_wrapFunction1(onne_UnsignedNostrEvent_withContent), "$createdAt", $rt_wrapFunction1(onne_UnsignedNostrEvent_createdAt), "$withExpiration", $rt_wrapFunction1(onne_UnsignedNostrEvent_withExpiration), "$withTag0", $rt_wrapFunction2(onne_UnsignedNostrEvent_withTag1), "$withTag1", $rt_wrapFunction2(onne_UnsignedNostrEvent_withTag0), "$withTag", $rt_wrapFunction2(onne_UnsignedNostrEvent_withTag), "$clearTags", $rt_wrapFunction1(onne_UnsignedNostrEvent_clearTags),
"$getTagRows", $rt_wrapFunction0(onne_UnsignedNostrEvent_getTagRows), "$fromMap", $rt_wrapFunction1(onne_UnsignedNostrEvent_fromMap), "$toString", $rt_wrapFunction0(onne_UnsignedNostrEvent_toString), "$getCreatedAt", $rt_wrapFunction0(onne_UnsignedNostrEvent_getCreatedAt), "$getKind", $rt_wrapFunction0(onne_UnsignedNostrEvent_getKind), "$getContent", $rt_wrapFunction0(onne_UnsignedNostrEvent_getContent), "$equals", $rt_wrapFunction1(onne_UnsignedNostrEvent_equals), "$hashCode", $rt_wrapFunction0(onne_UnsignedNostrEvent_hashCode),
"$clone11", $rt_wrapFunction0(onne_UnsignedNostrEvent_clone), "$hasTag", $rt_wrapFunction1(onne_UnsignedNostrEvent_hasTag), "$getTag", $rt_wrapFunction1(onne_UnsignedNostrEvent_getTag), "$getFirstTag", $rt_wrapFunction1(onne_UnsignedNostrEvent_getFirstTag), "$listTagKeys", $rt_wrapFunction0(onne_UnsignedNostrEvent_listTagKeys), "$clone0", $rt_wrapFunction0(onne_UnsignedNostrEvent_clone0)],
onnrs_NostrRTCSignal, 0, jl_Object, [ji_Serializable], 3, 3, 0, 0, 0,
onnrs_NostrRTCAnswer, "NostrRTCAnswer", 30, jl_Object, [onnrs_NostrRTCSignal], 0, 3, 0, 0, ["$_init_237", $rt_wrapFunction4(onnrs_NostrRTCAnswer__init_), "$_init_239", $rt_wrapFunction2(onnrs_NostrRTCAnswer__init_1), "$getSdp", $rt_wrapFunction0(onnrs_NostrRTCAnswer_getSdp), "$getTurnServers", $rt_wrapFunction0(onnrs_NostrRTCAnswer_getTurnServers), "$get20", $rt_wrapFunction0(onnrs_NostrRTCAnswer_get), "$getPeerInfo", $rt_wrapFunction0(onnrs_NostrRTCAnswer_getPeerInfo), "$toString", $rt_wrapFunction0(onnrs_NostrRTCAnswer_toString)],
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, jl_AbstractStringBuilder$Constants_$callClinit, 0,
jur_SingleSet, "SingleSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_244", $rt_wrapFunction2(jur_SingleSet__init_), "$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
jtf_SignStyle, "SignStyle", 17, jl_Enum, [], 12, 3, 0, jtf_SignStyle_$callClinit, ["$parse6", $rt_wrapFunction3(jtf_SignStyle_parse)],
ju_Comparator$thenComparingLong$lambda$_6_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong), "$_init_85", $rt_wrapFunction2(ju_Comparator$thenComparingLong$lambda$_6_0__init_)],
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, jl_Thread_$callClinit, ["$_init_", $rt_wrapFunction1(jl_Thread__init_0), "$_init_241", $rt_wrapFunction2(jl_Thread__init_), "$getId0", $rt_wrapFunction0(jl_Thread_getId)],
onn_NostrRelayInfo$get$lambda$_1_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_224", $rt_wrapFunction2(onn_NostrRelayInfo$get$lambda$_1_0__init_), "$apply", $rt_wrapFunction1(onn_NostrRelayInfo$get$lambda$_1_0_apply0), "$apply14", $rt_wrapFunction1(onn_NostrRelayInfo$get$lambda$_1_0_apply)],
jus_Collector, 0, jl_Object, [], 3, 3, 0, 0, 0,
jtz_ZoneOffsetTransitionRule, "ZoneOffsetTransitionRule", 16, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$_init_243", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { jtz_ZoneOffsetTransitionRule__init_(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$createTransition", $rt_wrapFunction1(jtz_ZoneOffsetTransitionRule_createTransition), "$equals", $rt_wrapFunction1(jtz_ZoneOffsetTransitionRule_equals), "$hashCode", $rt_wrapFunction0(jtz_ZoneOffsetTransitionRule_hashCode),
"$toString", $rt_wrapFunction0(jtz_ZoneOffsetTransitionRule_toString)],
jnc_BufferOverflowException, "BufferOverflowException", 11, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferOverflowException__init_)],
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 6, jur_SingleSet, [], 0, 0, 0, 0, ["$_init_240", $rt_wrapFunction1(jur_BackReferencedSingleSet__init_), "$find", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jni_XHRStreamHandler, "XHRStreamHandler", 21, jn_URLStreamHandler, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jni_XHRStreamHandler__init_)],
onns_NostrKeyPairSigner$encrypt$lambda$_3_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onns_NostrKeyPairSigner$encrypt$lambda$_3_0__init_), "$apply", $rt_wrapFunction1(onns_NostrKeyPairSigner$encrypt$lambda$_3_0_apply0), "$apply15", $rt_wrapFunction1(onns_NostrKeyPairSigner$encrypt$lambda$_3_0_apply)],
onns_NostrKeyPairSigner$encrypt$lambda$_3_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onns_NostrKeyPairSigner$encrypt$lambda$_3_1__init_), "$apply", $rt_wrapFunction1(onns_NostrKeyPairSigner$encrypt$lambda$_3_1_apply0), "$apply16", $rt_wrapFunction1(onns_NostrKeyPairSigner$encrypt$lambda$_3_1_apply)],
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_124", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_3_run)],
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_2_run)],
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_1_run)],
otciu_CLDRHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
onnrt_NostrTURN$close$lambda$_4_0, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnrt_NostrTURN$close$lambda$_4_0__init_), "$accept0", $rt_wrapFunction1(onnrt_NostrTURN$close$lambda$_4_0_accept0), "$accept6", $rt_wrapFunction1(onnrt_NostrTURN$close$lambda$_4_0_accept)],
onnrt_NostrTURN$close$lambda$_4_1, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnrt_NostrTURN$close$lambda$_4_1__init_), "$accept0", $rt_wrapFunction1(onnrt_NostrTURN$close$lambda$_4_1_accept0), "$accept6", $rt_wrapFunction1(onnrt_NostrTURN$close$lambda$_4_1_accept)],
onn_NostrSubscription$callCloseListeners$lambda$_16_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_235", $rt_wrapFunction2(onn_NostrSubscription$callCloseListeners$lambda$_16_0__init_), "$call0", $rt_wrapFunction0(onn_NostrSubscription$callCloseListeners$lambda$_16_0_call)],
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 22, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_StringIndexOutOfBoundsException__init_1), "$_init_9", $rt_wrapFunction1(jl_StringIndexOutOfBoundsException__init_0)],
ju_MissingResourceException, "MissingResourceException", 4, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_53", $rt_wrapFunction3(ju_MissingResourceException__init_)],
jtt_TemporalQueries$2, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jtt_TemporalQueries$2__init_), "$queryFrom1", $rt_wrapFunction1(jtt_TemporalQueries$2_queryFrom0), "$queryFrom", $rt_wrapFunction1(jtt_TemporalQueries$2_queryFrom)],
jusi_MappingToIntStreamImpl, 0, jusi_SimpleIntStreamImpl, [], 0, 3, 0, 0, ["$_init_136", $rt_wrapFunction2(jusi_MappingToIntStreamImpl__init_), "$next0", $rt_wrapFunction1(jusi_MappingToIntStreamImpl_next), "$estimateSize", $rt_wrapFunction0(jusi_MappingToIntStreamImpl_estimateSize)],
jtt_TemporalQueries$1, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jtt_TemporalQueries$1__init_)],
onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_11", $rt_wrapFunction3(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionMessage$33$lambda$_38_0_run)],
jtt_TemporalQueries$4, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jtt_TemporalQueries$4__init_)],
jtt_TemporalQueries$3, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jtt_TemporalQueries$3__init_)],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 6, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_59", $rt_wrapFunction2(jur_UCIBackReferenceSet__init_), "$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
jtz_JodaRulesProvider, "JodaRulesProvider", 16, jtz_ZoneRulesProvider, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jtz_JodaRulesProvider__init_), "$provideZoneIds", $rt_wrapFunction0(jtz_JodaRulesProvider_provideZoneIds), "$provideRules", $rt_wrapFunction2(jtz_JodaRulesProvider_provideRules)],
onnrs_NostrRTCOffer, "NostrRTCOffer", 30, jl_Object, [onnrs_NostrRTCSignal], 0, 3, 0, 0, ["$_init_237", $rt_wrapFunction4(onnrs_NostrRTCOffer__init_), "$_init_239", $rt_wrapFunction2(onnrs_NostrRTCOffer__init_1), "$getOfferString", $rt_wrapFunction0(onnrs_NostrRTCOffer_getOfferString), "$getTurnServer", $rt_wrapFunction0(onnrs_NostrRTCOffer_getTurnServer), "$get20", $rt_wrapFunction0(onnrs_NostrRTCOffer_get), "$getPeerInfo", $rt_wrapFunction0(onnrs_NostrRTCOffer_getPeerInfo), "$toString", $rt_wrapFunction0(onnrs_NostrRTCOffer_toString)],
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, jn_ByteOrder_$callClinit, 0,
onn_NostrRelay$QueuedMessage, "NostrRelay$QueuedMessage", 26, jl_Object, [], 4, 0, 0, 0, ["$_init_131", $rt_wrapFunction3(onn_NostrRelay$QueuedMessage__init_0), "$equals", $rt_wrapFunction1(onn_NostrRelay$QueuedMessage_equals), "$hashCode", $rt_wrapFunction0(onn_NostrRelay$QueuedMessage_hashCode)]]);
$rt_metadata([jur_DotAllQuantifierSet, "DotAllQuantifierSet", 6, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_DotAllQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
onn_NostrFilter, "NostrFilter", 26, onnp_NostrMessageFragment, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onn_NostrFilter__init_0), "$_init_21", $rt_wrapFunction1(onn_NostrFilter__init_1), "$id0", $rt_wrapFunction1(onn_NostrFilter_id), "$getIds0", $rt_wrapFunction0(onn_NostrFilter_getIds), "$withAuthor", $rt_wrapFunction1(onn_NostrFilter_withAuthor), "$withAuthor0", $rt_wrapFunction1(onn_NostrFilter_withAuthor0), "$getAuthors", $rt_wrapFunction0(onn_NostrFilter_getAuthors), "$withKind0", $rt_wrapFunction1(onn_NostrFilter_withKind),
"$getKinds", $rt_wrapFunction0(onn_NostrFilter_getKinds), "$since", $rt_wrapFunction1(onn_NostrFilter_since), "$getSince", $rt_wrapFunction0(onn_NostrFilter_getSince), "$getUntil", $rt_wrapFunction0(onn_NostrFilter_getUntil), "$until", $rt_wrapFunction1(onn_NostrFilter_until), "$limit0", $rt_wrapFunction1(onn_NostrFilter_limit), "$getLimit", $rt_wrapFunction0(onn_NostrFilter_getLimit), "$withTag2", $rt_wrapFunction2(onn_NostrFilter_withTag), "$getTags0", $rt_wrapFunction0(onn_NostrFilter_getTags), "$getTagValues",
$rt_wrapFunction1(onn_NostrFilter_getTagValues), "$toMap", $rt_wrapFunction0(onn_NostrFilter_toMap)],
onn_NostrSubscription$callCloseListeners$lambda$_16_1, "NostrSubscription$callCloseListeners$lambda$_16_1", 26, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_236", $rt_wrapFunction1(onn_NostrSubscription$callCloseListeners$lambda$_16_1__init_), "$accept0", $rt_wrapFunction1(onn_NostrSubscription$callCloseListeners$lambda$_16_1_accept0), "$accept1", $rt_wrapFunction1(onn_NostrSubscription$callCloseListeners$lambda$_16_1_accept)],
onn_NostrRelayLifecycleManager, "NostrRelayLifecycleManager", 26, jl_Object, [onnl_NostrRelayComponent], 0, 3, 0, onn_NostrRelayLifecycleManager_$callClinit, ["$_init_0", $rt_wrapFunction0(onn_NostrRelayLifecycleManager__init_), "$setKeepAliveTime", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_setKeepAliveTime), "$getKeepAliveTime", $rt_wrapFunction1(onn_NostrRelayLifecycleManager_getKeepAliveTime), "$hasActiveSubscription", $rt_wrapFunction1(onn_NostrRelayLifecycleManager_hasActiveSubscription), "$onRelayConnect",
$rt_wrapFunction1(onn_NostrRelayLifecycleManager_onRelayConnect), "$onRelayMessage", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_onRelayMessage), "$keepAlive", $rt_wrapFunction0(onn_NostrRelayLifecycleManager_keepAlive), "$onRelayError", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_onRelayError), "$onRelayLoop", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_onRelayLoop), "$onRelayDisconnect", $rt_wrapFunction3(onn_NostrRelayLifecycleManager_onRelayDisconnect), "$onRelaySend", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_onRelaySend),
"$onRelayConnectRequest", $rt_wrapFunction1(onn_NostrRelayLifecycleManager_onRelayConnectRequest), "$onRelayDisconnectRequest", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_onRelayDisconnectRequest), "$onRelayBeforeSend", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_onRelayBeforeSend), "$onRelayAfterSend", $rt_wrapFunction2(onn_NostrRelayLifecycleManager_onRelayAfterSend)],
otcit_DateTimeZoneBuilder$Rule, "DateTimeZoneBuilder$Rule", 55, jl_Object, [], 4, 0, 0, 0, ["$_init_109", $rt_wrapFunction3(otcit_DateTimeZoneBuilder$Rule__init_), "$getToYear", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$Rule_getToYear), "$getSaveMillis", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$Rule_getSaveMillis), "$next2", $rt_wrapFunction4(otcit_DateTimeZoneBuilder$Rule_next)],
ju_Base64$Decoder, 0, jl_Object, [], 0, 3, 0, 0, ["$decode6", $rt_wrapFunction1(ju_Base64$Decoder_decode), "$decode7", $rt_wrapFunction1(ju_Base64$Decoder_decode0)],
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 6, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
jnc_CoderMalfunctionError, "CoderMalfunctionError", 11, jl_Error, [], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction1(jnc_CoderMalfunctionError__init_)],
onn_NostrPool$subscribe$lambda$_14_1, 0, jl_Object, [juf_BiFunction], 0, 3, 0, 0, ["$_init_181", $rt_wrapFunction2(onn_NostrPool$subscribe$lambda$_14_1__init_), "$apply13", $rt_wrapFunction2(onn_NostrPool$subscribe$lambda$_14_1_apply0), "$apply17", $rt_wrapFunction2(onn_NostrPool$subscribe$lambda$_14_1_apply)],
onn_NostrPool$subscribe$lambda$_14_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_179", $rt_wrapFunction2(onn_NostrPool$subscribe$lambda$_14_2__init_), "$run", $rt_wrapFunction0(onn_NostrPool$subscribe$lambda$_14_2_run)],
onn_NostrPool$subscribe$lambda$_14_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_48", $rt_wrapFunction1(onn_NostrPool$subscribe$lambda$_14_0__init_), "$apply", $rt_wrapFunction1(onn_NostrPool$subscribe$lambda$_14_0_apply0), "$apply18", $rt_wrapFunction1(onn_NostrPool$subscribe$lambda$_14_0_apply)],
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 6, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_246", $rt_wrapFunction2(jur_CIDecomposedCharSet__init_)],
jnci_AsciiDecoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_87", $rt_wrapFunction1(jnci_AsciiDecoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiDecoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong), "$_init_0", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1__init_), "$compare5", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1_compare0), "$compare3", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_1_compare)],
jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0, 0, jl_Object, [jtt_TemporalQuery], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$_clinit_$lambda$_48_0__init_)],
jusi_SimpleIntStreamImpl$toArray$lambda$_16_0, 0, jl_Object, [juf_IntPredicate], 0, 3, 0, 0, ["$_init_17", $rt_wrapFunction1(jusi_SimpleIntStreamImpl$toArray$lambda$_16_0__init_), "$test2", $rt_wrapFunction1(jusi_SimpleIntStreamImpl$toArray$lambda$_16_0_test)],
onnet_ForwardSlidingWindowEventTracker, "ForwardSlidingWindowEventTracker", 46, jl_Object, [onnet_EventTracker], 0, 3, 0, onnet_ForwardSlidingWindowEventTracker_$callClinit, ["$_init_0", $rt_wrapFunction0(onnet_ForwardSlidingWindowEventTracker__init_0), "$_init_247", function(var_1, var_2, var_3, var_4, var_5, var_6) { onnet_ForwardSlidingWindowEventTracker__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$seen", $rt_wrapFunction1(onnet_ForwardSlidingWindowEventTracker_seen), "$count", $rt_wrapFunction0(onnet_ForwardSlidingWindowEventTracker_count),
"$currentTimeSeconds", $rt_wrapFunction0(onnet_ForwardSlidingWindowEventTracker_currentTimeSeconds), "$getAll0", $rt_wrapFunction0(onnet_ForwardSlidingWindowEventTracker_getAll), "$update1", $rt_wrapFunction0(onnet_ForwardSlidingWindowEventTracker_update), "$checkOrder", $rt_wrapFunction0(onnet_ForwardSlidingWindowEventTracker_checkOrder), "$tuneFor", $rt_wrapFunction1(onnet_ForwardSlidingWindowEventTracker_tuneFor)],
otcir_MethodCaller$forJs$lambda$_1_0, 0, jl_Object, [otcir_MethodCaller], 0, 3, 0, 0, ["$_init_151", $rt_wrapFunction1(otcir_MethodCaller$forJs$lambda$_1_0__init_), "$call", $rt_wrapFunction2(otcir_MethodCaller$forJs$lambda$_1_0_call)],
onnrt_NostrTURN, "NostrTURN", 29, jl_Object, [], 0, 3, 0, onnrt_NostrTURN_$callClinit, ["$_init_252", $rt_wrapFunction4(onnrt_NostrTURN__init_0), "$addListener4", $rt_wrapFunction1(onnrt_NostrTURN_addListener), "$removeListener1", $rt_wrapFunction1(onnrt_NostrTURN_removeListener), "$start2", $rt_wrapFunction0(onnrt_NostrTURN_start), "$close", $rt_wrapFunction0(onnrt_NostrTURN_close), "$write0", $rt_wrapFunction1(onnrt_NostrTURN_write)],
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0__init_), "$test0", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0_test0), "$test3", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_0_test)],
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_277", $rt_wrapFunction2(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2_apply0), "$apply19", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_2_apply)],
jtt_UnsupportedTemporalTypeException, "UnsupportedTemporalTypeException", 19, jt_DateTimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jtt_UnsupportedTemporalTypeException__init_)],
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1, "NostrNIP46Signer$lambda$check$13$lambda$_32_1", 47, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1__init_), "$accept0", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1_accept0), "$accept1", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_1_accept)],
jus_Collector$Characteristics, "Collector$Characteristics", 7, jl_Enum, [], 12, 3, 0, jus_Collector$Characteristics_$callClinit, 0,
onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$lambda$check$13$lambda$_32_3_run)],
juc_ExecutionException, "ExecutionException", 8, jl_Exception, [], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction1(juc_ExecutionException__init_0)],
onnet_NaiveEventTracker, "NaiveEventTracker", 46, jl_Object, [onnet_EventTracker], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnet_NaiveEventTracker__init_), "$seen", $rt_wrapFunction1(onnet_NaiveEventTracker_seen), "$clear", $rt_wrapFunction0(onnet_NaiveEventTracker_clear), "$tuneFor", $rt_wrapFunction1(onnet_NaiveEventTracker_tuneFor)],
onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_94", $rt_wrapFunction2(onnr_NostrRTCRoom$onReceiveOffer$lambda$_21_0__init_)],
jtt_TemporalQueries$_clinit_$lambda$_11_0, 0, jl_Object, [jtt_TemporalQuery], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtt_TemporalQueries$_clinit_$lambda$_11_0__init_)],
jusi_StreamOverSpliterator$AdapterAction, 0, jl_Object, [juf_Consumer], 0, 0, 0, 0, ["$_init_138", $rt_wrapFunction1(jusi_StreamOverSpliterator$AdapterAction__init_), "$accept0", $rt_wrapFunction1(jusi_StreamOverSpliterator$AdapterAction_accept)],
jn_URIEncoderDecoder, 0, jl_Object, [], 0, 0, 0, 0, 0,
jn_URISyntaxException, "URISyntaxException", 20, jl_Exception, [], 0, 3, 0, 0, ["$_init_147", $rt_wrapFunction3(jn_URISyntaxException__init_2), "$_init_24", $rt_wrapFunction2(jn_URISyntaxException__init_1), "$getIndex", $rt_wrapFunction0(jn_URISyntaxException_getIndex), "$getMessage", $rt_wrapFunction0(jn_URISyntaxException_getMessage)],
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_DoubleAnalyzer$Result__init_)],
jtt_TemporalQueries$_clinit_$lambda$_11_2, 0, jl_Object, [jtt_TemporalQuery], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtt_TemporalQueries$_clinit_$lambda$_11_2__init_)],
onnn_Nip05Identity, "Nip05Identity", 32, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_253", $rt_wrapFunction3(onnn_Nip05Identity__init_), "$getNip46Data", $rt_wrapFunction0(onnn_Nip05Identity_getNip46Data), "$getName", $rt_wrapFunction0(onnn_Nip05Identity_getName), "$getDomain", $rt_wrapFunction0(onnn_Nip05Identity_getDomain), "$getIdentifier0", $rt_wrapFunction0(onnn_Nip05Identity_getIdentifier), "$getPublicKey", $rt_wrapFunction0(onnn_Nip05Identity_getPublicKey), "$getRecommendedRelays", $rt_wrapFunction0(onnn_Nip05Identity_getRecommendedRelays)],
jtt_TemporalQueries$_clinit_$lambda$_11_1, 0, jl_Object, [jtt_TemporalQuery], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtt_TemporalQueries$_clinit_$lambda$_11_1__init_), "$queryFrom", $rt_wrapFunction1(jtt_TemporalQueries$_clinit_$lambda$_11_1_queryFrom0), "$queryFrom2", $rt_wrapFunction1(jtt_TemporalQueries$_clinit_$lambda$_11_1_queryFrom)],
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$_init_254", $rt_wrapFunction3(ji_ByteArrayInputStream__init_), "$_init_96", $rt_wrapFunction1(ji_ByteArrayInputStream__init_0), "$read", $rt_wrapFunction3(ji_ByteArrayInputStream_read), "$available", $rt_wrapFunction0(ji_ByteArrayInputStream_available), "$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
juca_AtomicInteger, 0, jl_Number, [ji_Serializable], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(juca_AtomicInteger__init_), "$get19", $rt_wrapFunction0(juca_AtomicInteger_get), "$decrementAndGet", $rt_wrapFunction0(juca_AtomicInteger_decrementAndGet)],
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 6, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_106", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
jl_SecurityException, "SecurityException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_SecurityException__init_)],
otjc_JSObjects, 0, jl_Object, [], 4, 3, 0, 0, 0,
onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_260", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0__init_), "$run", $rt_wrapFunction0(onnrs_NostrRTCSignaling$lambda$onSubEvent$4$lambda$_30_0_run)],
onnrt_NostrTURN$lambda$loop$6$lambda$_15_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onnrt_NostrTURN$lambda$loop$6$lambda$_15_0__init_), "$run", $rt_wrapFunction0(onnrt_NostrTURN$lambda$loop$6$lambda$_15_0_run)],
onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_94", $rt_wrapFunction2(onnr_NostrRTCRoom$lambda$loop$1$lambda$_32_0__init_)],
onns_NostrNIP46Signer$listen$lambda$_6_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_266", $rt_wrapFunction3(onns_NostrNIP46Signer$listen$lambda$_6_1__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$listen$lambda$_6_1_apply0), "$apply10", $rt_wrapFunction1(onns_NostrNIP46Signer$listen$lambda$_6_1_apply)],
jtf_DateTimeParseContext, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_105", $rt_wrapFunction1(jtf_DateTimeParseContext__init_0), "$_init_255", $rt_wrapFunction1(jtf_DateTimeParseContext__init_), "$copy", $rt_wrapFunction0(jtf_DateTimeParseContext_copy), "$getLocale", $rt_wrapFunction0(jtf_DateTimeParseContext_getLocale), "$getSymbols", $rt_wrapFunction0(jtf_DateTimeParseContext_getSymbols), "$getEffectiveChronology", $rt_wrapFunction0(jtf_DateTimeParseContext_getEffectiveChronology), "$isCaseSensitive", $rt_wrapFunction0(jtf_DateTimeParseContext_isCaseSensitive),
"$setCaseSensitive", $rt_wrapFunction1(jtf_DateTimeParseContext_setCaseSensitive), "$subSequenceEquals", function(var_1, var_2, var_3, var_4, var_5) { return jtf_DateTimeParseContext_subSequenceEquals(this, var_1, var_2, var_3, var_4, var_5); }, "$charEquals", $rt_wrapFunction2(jtf_DateTimeParseContext_charEquals), "$isStrict", $rt_wrapFunction0(jtf_DateTimeParseContext_isStrict), "$setStrict", $rt_wrapFunction1(jtf_DateTimeParseContext_setStrict), "$startOptional", $rt_wrapFunction0(jtf_DateTimeParseContext_startOptional),
"$endOptional", $rt_wrapFunction1(jtf_DateTimeParseContext_endOptional), "$getParsed", $rt_wrapFunction1(jtf_DateTimeParseContext_getParsed), "$setParsedField", $rt_wrapFunction4(jtf_DateTimeParseContext_setParsedField), "$setParsed", $rt_wrapFunction1(jtf_DateTimeParseContext_setParsed), "$setParsedLeapSecond", $rt_wrapFunction0(jtf_DateTimeParseContext_setParsedLeapSecond), "$toParsed", $rt_wrapFunction0(jtf_DateTimeParseContext_toParsed)],
onns_NostrNIP46Signer$listen$lambda$_6_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onns_NostrNIP46Signer$listen$lambda$_6_0__init_), "$accept3", $rt_wrapFunction2(onns_NostrNIP46Signer$listen$lambda$_6_0_accept0), "$accept", $rt_wrapFunction2(onns_NostrNIP46Signer$listen$lambda$_6_0_accept)],
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
onn_NostrPool$lambda$fetch$16$lambda$_41_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_190", $rt_wrapFunction2(onn_NostrPool$lambda$fetch$16$lambda$_41_0__init_), "$run", $rt_wrapFunction0(onn_NostrPool$lambda$fetch$16$lambda$_41_0_run)]]);
$rt_metadata([jur_SequenceSet, "SequenceSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_290", $rt_wrapFunction1(jur_SequenceSet__init_), "$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName", $rt_wrapFunction0(jur_SequenceSet_getName), "$first", $rt_wrapFunction1(jur_SequenceSet_first), "$indexOf6", $rt_wrapFunction3(jur_SequenceSet_indexOf), "$lastIndexOf1", $rt_wrapFunction3(jur_SequenceSet_lastIndexOf),
"$startsWith1", $rt_wrapFunction2(jur_SequenceSet_startsWith)],
onnrs_NostrRTCSignaling, "NostrRTCSignaling", 30, jl_Object, [ji_Closeable], 0, 3, 0, onnrs_NostrRTCSignaling_$callClinit, ["$_init_92", $rt_wrapFunction4(onnrs_NostrRTCSignaling__init_0), "$getAnnounces", $rt_wrapFunction0(onnrs_NostrRTCSignaling_getAnnounces), "$addListener", $rt_wrapFunction1(onnrs_NostrRTCSignaling_addListener), "$removeListener2", $rt_wrapFunction1(onnrs_NostrRTCSignaling_removeListener), "$onSubEvent", $rt_wrapFunction2(onnrs_NostrRTCSignaling_onSubEvent), "$isDiscoveryStarted", $rt_wrapFunction0(onnrs_NostrRTCSignaling_isDiscoveryStarted),
"$isSignalingStarted", $rt_wrapFunction0(onnrs_NostrRTCSignaling_isSignalingStarted), "$start0", $rt_wrapFunction1(onnrs_NostrRTCSignaling_start), "$sendAnnounce", $rt_wrapFunction0(onnrs_NostrRTCSignaling_sendAnnounce), "$sendOffer", $rt_wrapFunction2(onnrs_NostrRTCSignaling_sendOffer), "$sendAnswer", $rt_wrapFunction2(onnrs_NostrRTCSignaling_sendAnswer), "$sendCandidates", $rt_wrapFunction2(onnrs_NostrRTCSignaling_sendCandidates), "$close", $rt_wrapFunction0(onnrs_NostrRTCSignaling_close)],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 6, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_AltGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
otjc_JSFinalizationRegistryConsumer, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
onne_SignedNostrEvent$Identifier, "SignedNostrEvent$Identifier", 45, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_174", $rt_wrapFunction2(onne_SignedNostrEvent$Identifier__init_0), "$equals", $rt_wrapFunction1(onne_SignedNostrEvent$Identifier_equals), "$hashCode", $rt_wrapFunction0(onne_SignedNostrEvent$Identifier_hashCode)],
jur_UCIRangeSet, "UCIRangeSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_204", $rt_wrapFunction1(jur_UCIRangeSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
juc_CopyOnWriteArrayList$ListIteratorImpl, 0, jl_Object, [ju_ListIterator], 0, 0, 0, 0, ["$_init_172", $rt_wrapFunction2(juc_CopyOnWriteArrayList$ListIteratorImpl__init_), "$hasNext", $rt_wrapFunction0(juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext), "$next", $rt_wrapFunction0(juc_CopyOnWriteArrayList$ListIteratorImpl_next)],
otcic_JsConsolePrintStream, 0, ji_PrintStream, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcic_JsConsolePrintStream__init_), "$println1", $rt_wrapFunction1(otcic_JsConsolePrintStream_println1), "$println", $rt_wrapFunction0(otcic_JsConsolePrintStream_println0), "$println0", $rt_wrapFunction1(otcic_JsConsolePrintStream_println)],
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, jnc_CodingErrorAction_$callClinit, ["$_init_", $rt_wrapFunction1(jnc_CodingErrorAction__init_0)],
jl_Boolean, "Boolean", 22, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, jl_Boolean_$callClinit, ["$_init_146", $rt_wrapFunction1(jl_Boolean__init_0), "$compareTo14", $rt_wrapFunction1(jl_Boolean_compareTo), "$booleanValue", $rt_wrapFunction0(jl_Boolean_booleanValue), "$toString", $rt_wrapFunction0(jl_Boolean_toString), "$hashCode", $rt_wrapFunction0(jl_Boolean_hashCode), "$equals", $rt_wrapFunction1(jl_Boolean_equals), "$compareTo7", $rt_wrapFunction1(jl_Boolean_compareTo0)],
ju_NoSuchElementException, "NoSuchElementException", 4, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_NoSuchElementException__init_1), "$_init_", $rt_wrapFunction1(ju_NoSuchElementException__init_0)],
onpt_TeaVMPlatform$1$then$lambda$_5_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_73", $rt_wrapFunction2(onpt_TeaVMPlatform$1$then$lambda$_5_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$1$then$lambda$_5_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$1$then$lambda$_5_0_accept)],
jtc_ChronoPeriod, 0, jl_Object, [jtt_TemporalAmount], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jtc_ChronoPeriod__init_)],
jt_Period, 0, jtc_ChronoPeriod, [ji_Serializable], 4, 3, 0, jt_Period_$callClinit, ["$isZero", $rt_wrapFunction0(jt_Period_isZero), "$toTotalMonths", $rt_wrapFunction0(jt_Period_toTotalMonths), "$addTo", $rt_wrapFunction1(jt_Period_addTo)],
onn_NostrRelay$lambda$connect$17$lambda$_54_0, "NostrRelay$lambda$connect$17$lambda$_54_0", 26, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_128", $rt_wrapFunction2(onn_NostrRelay$lambda$connect$17$lambda$_54_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$connect$17$lambda$_54_0_run)],
onn_NostrRelay$lambda$connect$17$lambda$_54_1, "NostrRelay$lambda$connect$17$lambda$_54_1", 26, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_128", $rt_wrapFunction2(onn_NostrRelay$lambda$connect$17$lambda$_54_1__init_), "$accept0", $rt_wrapFunction1(onn_NostrRelay$lambda$connect$17$lambda$_54_1_accept0), "$accept1", $rt_wrapFunction1(onn_NostrRelay$lambda$connect$17$lambda$_54_1_accept)],
jt_Month, "Month", 15, jl_Enum, [jtt_TemporalAccessor, jtt_TemporalAdjuster], 12, 3, 0, jt_Month_$callClinit, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$getValue2", $rt_wrapFunction0(jt_Month_getValue), "$plus", $rt_wrapFunction1(jt_Month_plus), "$length0", $rt_wrapFunction1(jt_Month_length), "$maxLength", $rt_wrapFunction0(jt_Month_maxLength), "$firstDayOfYear", $rt_wrapFunction1(jt_Month_firstDayOfYear)],
jur_BackReferenceSet, "BackReferenceSet", 6, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_59", $rt_wrapFunction2(jur_BackReferenceSet__init_), "$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
jur_DotQuantifierSet, "DotQuantifierSet", 6, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_293", $rt_wrapFunction4(jur_DotQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
onns_NostrNIP46Signer, "NostrNIP46Signer", 47, jl_Object, [onns_NostrSigner, onnls_NostrSubEventListener], 0, 3, 0, onns_NostrNIP46Signer_$callClinit, ["$_init_278", $rt_wrapFunction2(onns_NostrNIP46Signer__init_), "$toString", $rt_wrapFunction0(onns_NostrNIP46Signer_toString), "$setRequestsTimeout", $rt_wrapFunction1(onns_NostrNIP46Signer_setRequestsTimeout), "$close0", $rt_wrapFunction0(onns_NostrNIP46Signer_close), "$connect2", $rt_wrapFunction1(onns_NostrNIP46Signer_connect), "$listen0", $rt_wrapFunction3(onns_NostrNIP46Signer_listen),
"$setChallengeHandler", $rt_wrapFunction2(onns_NostrNIP46Signer_setChallengeHandler), "$onSubEvent", $rt_wrapFunction2(onns_NostrNIP46Signer_onSubEvent), "$sendRPC", $rt_wrapFunction3(onns_NostrNIP46Signer_sendRPC), "$sign", $rt_wrapFunction1(onns_NostrNIP46Signer_sign), "$encrypt0", $rt_wrapFunction2(onns_NostrNIP46Signer_encrypt), "$decrypt0", $rt_wrapFunction2(onns_NostrNIP46Signer_decrypt), "$getPublicKey0", $rt_wrapFunction0(onns_NostrNIP46Signer_getPublicKey)],
jt_LocalTime$2, 0, jl_Object, [], 32, 0, 0, jt_LocalTime$2_$callClinit, 0,
jt_LocalTime$1, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jt_LocalTime$1__init_)],
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, otcit_FloatAnalyzer_$callClinit, 0,
onpt_TeaVMWebsocketTransport$send$lambda$_4_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_141", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$send$lambda$_4_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$send$lambda$_4_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMWebsocketTransport$send$lambda$_4_0_accept)],
ju_HashMap$ValueIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, 0, ["$_init_40", $rt_wrapFunction1(ju_HashMap$ValueIterator__init_), "$next", $rt_wrapFunction0(ju_HashMap$ValueIterator_next)],
otcir_MethodInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
onne_NostrEvent$TagValue, "NostrEvent$TagValue", 45, jl_Object, [], 0, 3, 0, 0, ["$_init_17", $rt_wrapFunction1(onne_NostrEvent$TagValue__init_2), "$_init_279", $rt_wrapFunction1(onne_NostrEvent$TagValue__init_1), "$_init_", $rt_wrapFunction1(onne_NostrEvent$TagValue__init_0), "$size", $rt_wrapFunction0(onne_NostrEvent$TagValue_size), "$get15", $rt_wrapFunction1(onne_NostrEvent$TagValue_get), "$getAll", $rt_wrapFunction0(onne_NostrEvent$TagValue_getAll)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_302", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
onnk_NostrPrivateKey$KeySecurity, "NostrPrivateKey$KeySecurity", 34, jl_Enum, [], 12, 3, 0, onnk_NostrPrivateKey$KeySecurity_$callClinit, 0,
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_160", $rt_wrapFunction3(jur_CharClass$3__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$3_contains)],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_158", $rt_wrapFunction4(jur_CharClass$4__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_159", $rt_wrapFunction2(jur_CharClass$1__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$1_contains)],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_160", $rt_wrapFunction3(jur_CharClass$2__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_159", $rt_wrapFunction2(jur_CharClass$7__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$7_contains)],
jtf_DateTimeFormatterBuilder$1, 0, jtf_DateTimeTextProvider, [], 0, 0, 0, 0, ["$_init_22", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$1__init_), "$getTextIterator", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$1_getTextIterator)],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_161", $rt_wrapFunction3(jur_CharClass$8__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$8_contains)],
onn_NostrPool$1, "NostrPool$1", 26, jl_Object, [onnl_NostrRelayComponent], 0, 0, 0, 0, ["$_init_48", $rt_wrapFunction1(onn_NostrPool$1__init_), "$onRelayConnectRequest", $rt_wrapFunction1(onn_NostrPool$1_onRelayConnectRequest), "$onRelayConnect", $rt_wrapFunction1(onn_NostrPool$1_onRelayConnect), "$onRelayMessage", $rt_wrapFunction2(onn_NostrPool$1_onRelayMessage), "$onRelayError", $rt_wrapFunction2(onn_NostrPool$1_onRelayError), "$onRelayLoop", $rt_wrapFunction2(onn_NostrPool$1_onRelayLoop), "$onRelayDisconnect",
$rt_wrapFunction3(onn_NostrPool$1_onRelayDisconnect), "$onRelaySend", $rt_wrapFunction2(onn_NostrPool$1_onRelaySend), "$onRelayDisconnectRequest", $rt_wrapFunction2(onn_NostrPool$1_onRelayDisconnectRequest), "$onRelayBeforeSend", $rt_wrapFunction2(onn_NostrPool$1_onRelayBeforeSend), "$onRelayAfterSend", $rt_wrapFunction2(onn_NostrPool$1_onRelayAfterSend)],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_158", $rt_wrapFunction4(jur_CharClass$5__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_159", $rt_wrapFunction2(jur_CharClass$6__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$6_contains)],
onnet_PassthroughEventTracker, "PassthroughEventTracker", 46, jl_Object, [onnet_EventTracker], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnet_PassthroughEventTracker__init_), "$seen", $rt_wrapFunction1(onnet_PassthroughEventTracker_seen), "$tuneFor", $rt_wrapFunction1(onnet_PassthroughEventTracker_tuneFor)],
jm_BigDecimal, 0, jl_Number, [jl_Comparable, ji_Serializable], 0, 3, 0, jm_BigDecimal_$callClinit, ["$_init_280", $rt_wrapFunction2(jm_BigDecimal__init_1), "$_init_9", $rt_wrapFunction1(jm_BigDecimal__init_3), "$add11", $rt_wrapFunction1(jm_BigDecimal_add), "$subtract3", $rt_wrapFunction1(jm_BigDecimal_subtract), "$multiply1", $rt_wrapFunction1(jm_BigDecimal_multiply), "$negate0", $rt_wrapFunction0(jm_BigDecimal_negate), "$setScale", $rt_wrapFunction2(jm_BigDecimal_setScale), "$movePointLeft", $rt_wrapFunction1(jm_BigDecimal_movePointLeft),
"$toBigIntegerExact", $rt_wrapFunction0(jm_BigDecimal_toBigIntegerExact), "$longValueExact", $rt_wrapFunction0(jm_BigDecimal_longValueExact)],
jur_DotSet, "DotSet", 6, jur_JointSet, [], 4, 0, 0, 0, ["$_init_294", $rt_wrapFunction1(jur_DotSet__init_), "$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_161", $rt_wrapFunction3(jur_CharClass$9__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$9_contains)],
jl_Character, "Character", 22, jl_Object, [jl_Comparable], 0, 3, 0, jl_Character_$callClinit, ["$_init_26", $rt_wrapFunction1(jl_Character__init_), "$toString", $rt_wrapFunction0(jl_Character_toString0), "$equals", $rt_wrapFunction1(jl_Character_equals), "$hashCode", $rt_wrapFunction0(jl_Character_hashCode0), "$compareTo16", $rt_wrapFunction1(jl_Character_compareTo), "$compareTo7", $rt_wrapFunction1(jl_Character_compareTo0)],
jur_CICharSet, "CICharSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction1(jur_CICharSet__init_), "$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName", $rt_wrapFunction0(jur_CICharSet_getName)],
jur_SupplCharSet, "SupplCharSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_SupplCharSet__init_), "$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName", $rt_wrapFunction0(jur_SupplCharSet_getName), "$getCodePoint", $rt_wrapFunction0(jur_SupplCharSet_getCodePoint), "$first", $rt_wrapFunction1(jur_SupplCharSet_first)],
onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_250", $rt_wrapFunction1(onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0__init_), "$apply", $rt_wrapFunction1(onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0_apply0), "$apply6", $rt_wrapFunction1(onnrt_NostrTURN$lambda$onReceivedPacketChunk$4$lambda$_17_0_apply)],
onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_256", $rt_wrapFunction2(onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0__init_), "$call0", $rt_wrapFunction0(onnrs_NostrRTCSignaling$onSubEvent$lambda$_4_0_call)]]);
$rt_metadata([otjc_JSNumber, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jt_ZonedDateTime$1, 0, jl_Object, [], 32, 0, 0, jt_ZonedDateTime$1_$callClinit, 0,
onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_17", $rt_wrapFunction1(onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$awaitAllSettled$lambda$_28_0_accept)],
onns_SdanSlotSize, "SdanSlotSize", 40, jl_Enum, [], 12, 3, 0, onns_SdanSlotSize_$callClinit, ["$getValue4", $rt_wrapFunction0(onns_SdanSlotSize_getValue)],
juc_ConcurrentHashMap$ValueIterator, 0, juc_ConcurrentHashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, 0, ["$_init_8", $rt_wrapFunction1(juc_ConcurrentHashMap$ValueIterator__init_), "$next", $rt_wrapFunction0(juc_ConcurrentHashMap$ValueIterator_next)],
jnci_Iso8859Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_87", $rt_wrapFunction1(jnci_Iso8859Encoder__init_), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
onns_NostrKeyPairSigner$close$lambda$_11_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_36", $rt_wrapFunction1(onns_NostrKeyPairSigner$close$lambda$_11_0__init_), "$accept3", $rt_wrapFunction2(onns_NostrKeyPairSigner$close$lambda$_11_0_accept0), "$accept", $rt_wrapFunction2(onns_NostrKeyPairSigner$close$lambda$_11_0_accept)],
jnc_StandardCharsets, 0, jl_Object, [], 4, 3, 0, jnc_StandardCharsets_$callClinit, 0,
otcit_DateTimeZoneBuilder$DSTZone, "DateTimeZoneBuilder$DSTZone", 55, otcit_StorableDateTimeZone, [], 4, 0, 0, 0, ["$_init_282", $rt_wrapFunction4(otcit_DateTimeZoneBuilder$DSTZone__init_), "$getOffset", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$DSTZone_getOffset), "$getStandardOffset", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$DSTZone_getStandardOffset), "$nextTransition", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$DSTZone_nextTransition), "$asZoneRules", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$DSTZone_asZoneRules)],
otcir_ClassList, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_325", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
onnpi_NostrClosedMessage, "NostrClosedMessage", 44, onnp_NostrMessage, [], 0, 3, 0, 0, ["$_init_24", $rt_wrapFunction2(onnpi_NostrClosedMessage__init_), "$getSubId", $rt_wrapFunction0(onnpi_NostrClosedMessage_getSubId), "$getReason", $rt_wrapFunction0(onnpi_NostrClosedMessage_getReason), "$getPrefix", $rt_wrapFunction0(onnpi_NostrClosedMessage_getPrefix), "$getFragments", $rt_wrapFunction0(onnpi_NostrClosedMessage_getFragments)],
ju_AbstractMap$KeySet, "AbstractMap$KeySet", 4, ju_AbstractSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$iterator", $rt_wrapFunction0(ju_AbstractMap$KeySet_iterator), "$size", $rt_wrapFunction0(ju_AbstractMap$KeySet_size)],
jtf_DateTimeParseContext$Parsed, "DateTimeParseContext$Parsed", 17, jl_Object, [jtt_TemporalAccessor], 4, 0, 0, 0, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$copy0", $rt_wrapFunction0(jtf_DateTimeParseContext$Parsed_copy), "$toString", $rt_wrapFunction0(jtf_DateTimeParseContext$Parsed_toString), "$toBuilder", $rt_wrapFunction0(jtf_DateTimeParseContext$Parsed_toBuilder)],
onnrs_NostrRTCSignaling$close$lambda$_13_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_64", $rt_wrapFunction1(onnrs_NostrRTCSignaling$close$lambda$_13_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$close$lambda$_13_0_apply0), "$apply6", $rt_wrapFunction1(onnrs_NostrRTCSignaling$close$lambda$_13_0_apply)],
jur_UEOLSet, "UEOLSet", 6, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_UEOLSet__init_), "$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UEOLSet_getName)],
onnr_NostrRTCRoom$PendingConnection, "NostrRTCRoom$PendingConnection", 27, jl_Object, [], 0, 0, 0, 0, 0,
jur_UCICharSet, "UCICharSet", 6, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction1(jur_UCICharSet__init_), "$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCICharSet_getName)],
jnci_Iso8859Charset, "Iso8859Charset", 12, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_Iso8859Charset__init_), "$newDecoder", $rt_wrapFunction0(jnci_Iso8859Charset_newDecoder), "$newEncoder", $rt_wrapFunction0(jnci_Iso8859Charset_newEncoder)],
onnrs_NostrRTCPeer, "NostrRTCPeer", 30, jl_Object, [], 0, 3, 0, 0, ["$_init_238", $rt_wrapFunction3(onnrs_NostrRTCPeer__init_0), "$getPubkey", $rt_wrapFunction0(onnrs_NostrRTCPeer_getPubkey), "$getMisc", $rt_wrapFunction0(onnrs_NostrRTCPeer_getMisc), "$getPublicMisc", $rt_wrapFunction0(onnrs_NostrRTCPeer_getPublicMisc), "$getTurnServer", $rt_wrapFunction0(onnrs_NostrRTCPeer_getTurnServer), "$getLastSeen", $rt_wrapFunction0(onnrs_NostrRTCPeer_getLastSeen), "$setLastSeen", $rt_wrapFunction1(onnrs_NostrRTCPeer_setLastSeen),
"$equals", $rt_wrapFunction1(onnrs_NostrRTCPeer_equals), "$hashCode", $rt_wrapFunction0(onnrs_NostrRTCPeer_hashCode), "$toString", $rt_wrapFunction0(onnrs_NostrRTCPeer_toString)],
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 6, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_284", function(var_1, var_2, var_3, var_4, var_5) { jur_CompositeGroupQuantifierSet__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 6, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_284", function(var_1, var_2, var_3, var_4, var_5) { jur_RelCompositeGroupQuantifierSet__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
ju_ArrayList, "ArrayList", 4, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_ArrayList__init_3), "$_init_9", $rt_wrapFunction1(ju_ArrayList__init_2), "$_init_6", $rt_wrapFunction1(ju_ArrayList__init_4), "$ensureCapacity", $rt_wrapFunction1(ju_ArrayList_ensureCapacity), "$get", $rt_wrapFunction1(ju_ArrayList_get), "$size", $rt_wrapFunction0(ju_ArrayList_size),
"$set0", $rt_wrapFunction2(ju_ArrayList_set), "$add1", $rt_wrapFunction1(ju_ArrayList_add), "$add2", $rt_wrapFunction2(ju_ArrayList_add0), "$remove0", $rt_wrapFunction1(ju_ArrayList_remove), "$remove2", $rt_wrapFunction1(ju_ArrayList_remove0), "$clear", $rt_wrapFunction0(ju_ArrayList_clear), "$forEach", $rt_wrapFunction1(ju_ArrayList_forEach), "$toString", $rt_wrapFunction0(ju_ArrayList_toString), "$hashCode", $rt_wrapFunction0(ju_ArrayList_hashCode)],
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalMonitorStateException__init_0)],
ju_LinkedHashMapIterator$EntryIterator, 0, ju_LinkedHashMapIterator, [ju_Iterator], 0, 0, 0, 0, ["$_init_42", $rt_wrapFunction2(ju_LinkedHashMapIterator$EntryIterator__init_), "$next3", $rt_wrapFunction0(ju_LinkedHashMapIterator$EntryIterator_next), "$next", $rt_wrapFunction0(ju_LinkedHashMapIterator$EntryIterator_next0)],
jusi_FilteringStreamImpl$wrap$lambda$_1_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_299", $rt_wrapFunction2(jusi_FilteringStreamImpl$wrap$lambda$_1_0__init_), "$test0", $rt_wrapFunction1(jusi_FilteringStreamImpl$wrap$lambda$_1_0_test)],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 6, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0, 0,
onnu_Bech32, "Bech32", 42, jl_Object, [], 0, 3, 0, onnu_Bech32_$callClinit, ["$_init_0", $rt_wrapFunction0(onnu_Bech32__init_)],
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, jnc_Charset$Charsets_$callClinit, 0,
otjt_Uint16Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0__init_), "$call0", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionClosedByServer$35$lambda$_36_0_call)],
onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_24", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$sendMessage$7$lambda$_64_0_run)],
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FSet$PossessiveFSet__init_), "$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 6, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_284", function(var_1, var_2, var_3, var_4, var_5) { jur_PosCompositeGroupQuantifierSet__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
ju_AbstractMap$KeySet$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_283", $rt_wrapFunction2(ju_AbstractMap$KeySet$1__init_), "$hasNext", $rt_wrapFunction0(ju_AbstractMap$KeySet$1_hasNext), "$next", $rt_wrapFunction0(ju_AbstractMap$KeySet$1_next), "$remove", $rt_wrapFunction0(ju_AbstractMap$KeySet$1_remove)],
onne_SignedNostrEvent$_init_$lambda$_1_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onne_SignedNostrEvent$_init_$lambda$_1_0__init_), "$apply", $rt_wrapFunction1(onne_SignedNostrEvent$_init_$lambda$_1_0_apply0), "$apply7", $rt_wrapFunction1(onne_SignedNostrEvent$_init_$lambda$_1_0_apply)],
onns_NostrNIP46Signer$sendRPC$lambda$_12_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_272", $rt_wrapFunction4(onns_NostrNIP46Signer$sendRPC$lambda$_12_0__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$sendRPC$lambda$_12_0_apply0), "$apply10", $rt_wrapFunction1(onns_NostrNIP46Signer$sendRPC$lambda$_12_0_apply)],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_78", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
jl_NoSuchMethodException, "NoSuchMethodException", 22, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NoSuchMethodException__init_)],
jl_NullPointerException, "NullPointerException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NullPointerException__init_2), "$_init_0", $rt_wrapFunction0(jl_NullPointerException__init_1)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_84", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
jt_LocalTime, "LocalTime", 15, jl_Object, [jtt_Temporal, jtt_TemporalAdjuster, jl_Comparable, ji_Serializable, jtt_TemporalAccessor], 4, 3, 0, jt_LocalTime_$callClinit, ["$isSupported", $rt_wrapFunction1(jt_LocalTime_isSupported), "$range0", $rt_wrapFunction1(jt_LocalTime_range), "$get2", $rt_wrapFunction1(jt_LocalTime_get), "$getLong", $rt_wrapFunction1(jt_LocalTime_getLong), "$getSecond", $rt_wrapFunction0(jt_LocalTime_getSecond), "$getNano", $rt_wrapFunction0(jt_LocalTime_getNano), "$query", $rt_wrapFunction1(jt_LocalTime_query),
"$toSecondOfDay", $rt_wrapFunction0(jt_LocalTime_toSecondOfDay), "$toNanoOfDay", $rt_wrapFunction0(jt_LocalTime_toNanoOfDay), "$compareTo2", $rt_wrapFunction1(jt_LocalTime_compareTo), "$equals", $rt_wrapFunction1(jt_LocalTime_equals), "$hashCode", $rt_wrapFunction0(jt_LocalTime_hashCode), "$toString", $rt_wrapFunction0(jt_LocalTime_toString)],
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
jur_PatternSyntaxException, "PatternSyntaxException", 6, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_147", $rt_wrapFunction3(jur_PatternSyntaxException__init_0), "$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
ju_AbstractSequentialList, 0, ju_AbstractList, [], 1, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_AbstractSequentialList__init_), "$get", $rt_wrapFunction1(ju_AbstractSequentialList_get), "$add2", $rt_wrapFunction2(ju_AbstractSequentialList_add), "$remove0", $rt_wrapFunction1(ju_AbstractSequentialList_remove), "$iterator", $rt_wrapFunction0(ju_AbstractSequentialList_iterator)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
onnn_Nip01UserMetadataListener, "Nip01UserMetadataListener", 38, jl_Object, [onnls_NostrSubEventListener], 0, 3, 0, onnn_Nip01UserMetadataListener_$callClinit, ["$_init_288", $rt_wrapFunction2(onnn_Nip01UserMetadataListener__init_), "$_init_75", $rt_wrapFunction1(onnn_Nip01UserMetadataListener__init_0), "$_init_0", $rt_wrapFunction0(onnn_Nip01UserMetadataListener__init_1), "$onSubEvent", $rt_wrapFunction2(onnn_Nip01UserMetadataListener_onSubEvent)],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$matcher", $rt_wrapFunction1(jur_Pattern_matcher), "$split2", $rt_wrapFunction2(jur_Pattern_split), "$split1", $rt_wrapFunction1(jur_Pattern_split0), "$pattern", $rt_wrapFunction0(jur_Pattern_pattern), "$groupCount", $rt_wrapFunction0(jur_Pattern_groupCount), "$compCount", $rt_wrapFunction0(jur_Pattern_compCount), "$consCount", $rt_wrapFunction0(jur_Pattern_consCount)]]);
$rt_metadata([ji_UnsupportedEncodingException, "UnsupportedEncodingException", 13, ji_IOException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_UnsupportedEncodingException__init_), "$_init_", $rt_wrapFunction1(ji_UnsupportedEncodingException__init_1)],
jtf_DateTimeFormatterBuilder$FractionPrinterParser, "DateTimeFormatterBuilder$FractionPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, 0, ["$_init_20", $rt_wrapFunction4(jtf_DateTimeFormatterBuilder$FractionPrinterParser__init_), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$FractionPrinterParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$FractionPrinterParser_toString)],
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 6, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
ju_Collections$14, 0, ju_AbstractSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_229", $rt_wrapFunction1(ju_Collections$14__init_), "$size", $rt_wrapFunction0(ju_Collections$14_size), "$iterator", $rt_wrapFunction0(ju_Collections$14_iterator)],
ju_Collections$15, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_230", $rt_wrapFunction1(ju_Collections$15__init_), "$hasNext", $rt_wrapFunction0(ju_Collections$15_hasNext), "$next3", $rt_wrapFunction0(ju_Collections$15_next0), "$remove", $rt_wrapFunction0(ju_Collections$15_remove), "$next", $rt_wrapFunction0(ju_Collections$15_next)],
ju_Collections$12, 0, ju_AbstractSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_229", $rt_wrapFunction1(ju_Collections$12__init_), "$iterator", $rt_wrapFunction0(ju_Collections$12_iterator), "$size", $rt_wrapFunction0(ju_Collections$12_size)],
ju_Collections$13, "Collections$13", 4, ju_AbstractMap, [], 0, 0, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$computeIfAbsent", $rt_wrapFunction2(ju_Map_computeIfAbsent), "$_init_21", $rt_wrapFunction1(ju_Collections$13__init_), "$entrySet", $rt_wrapFunction0(ju_Collections$13_entrySet), "$remove1", $rt_wrapFunction1(ju_Collections$13_remove)],
jt_ParsePosition, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(jt_ParsePosition__init_), "$getErrorIndex", $rt_wrapFunction0(jt_ParsePosition_getErrorIndex), "$getIndex", $rt_wrapFunction0(jt_ParsePosition_getIndex), "$setErrorIndex", $rt_wrapFunction1(jt_ParsePosition_setErrorIndex), "$setIndex", $rt_wrapFunction1(jt_ParsePosition_setIndex)],
ju_TemplateCollections$ImmutableArrayList, "TemplateCollections$ImmutableArrayList", 4, ju_TemplateCollections$AbstractImmutableList, [ju_RandomAccess], 0, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_111", $rt_wrapFunction1(ju_TemplateCollections$ImmutableArrayList__init_), "$get", $rt_wrapFunction1(ju_TemplateCollections$ImmutableArrayList_get), "$size", $rt_wrapFunction0(ju_TemplateCollections$ImmutableArrayList_size),
"$remove0", $rt_wrapFunction1(ju_TemplateCollections$ImmutableArrayList_remove)],
ju_Queue, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream)],
ju_Deque, 0, jl_Object, [ju_Queue, ju_SequencedCollection], 3, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream)],
onn_NostrPool$onRelayMessage$lambda$_23_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onn_NostrPool$onRelayMessage$lambda$_23_1__init_), "$run", $rt_wrapFunction0(onn_NostrPool$onRelayMessage$lambda$_23_1_run)],
onn_NostrPool$onRelayMessage$lambda$_23_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_117", $rt_wrapFunction2(onn_NostrPool$onRelayMessage$lambda$_23_0__init_), "$run", $rt_wrapFunction0(onn_NostrPool$onRelayMessage$lambda$_23_0_run)],
cjj_Inflate$Return, "Inflate$Return", 2, jl_Exception, [], 0, 0, 0, 0, ["$_init_5", $rt_wrapFunction2(cjj_Inflate$Return__init_0)],
onn_NostrPool$onRelayMessage$lambda$_23_3, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_183", $rt_wrapFunction2(onn_NostrPool$onRelayMessage$lambda$_23_3__init_), "$run", $rt_wrapFunction0(onn_NostrPool$onRelayMessage$lambda$_23_3_run)],
jusi_FilteringStreamImpl, 0, jusi_WrappingStreamImpl, [], 0, 3, 0, 0, ["$_init_135", $rt_wrapFunction2(jusi_FilteringStreamImpl__init_), "$wrap3", $rt_wrapFunction1(jusi_FilteringStreamImpl_wrap)],
onn_NostrPool$onRelayMessage$lambda$_23_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_183", $rt_wrapFunction2(onn_NostrPool$onRelayMessage$lambda$_23_2__init_), "$run", $rt_wrapFunction0(onn_NostrPool$onRelayMessage$lambda$_23_2_run)],
ju_Collections$10, "Collections$10", 4, ju_AbstractCollection, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_6", $rt_wrapFunction1(ju_Collections$10__init_), "$iterator", $rt_wrapFunction0(ju_Collections$10_iterator), "$size", $rt_wrapFunction0(ju_Collections$10_size)],
ju_Collections$11, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_230", $rt_wrapFunction1(ju_Collections$11__init_), "$hasNext", $rt_wrapFunction0(ju_Collections$11_hasNext), "$next", $rt_wrapFunction0(ju_Collections$11_next)],
onnrs_NostrRTCLocalPeer, "NostrRTCLocalPeer", 30, onnrs_NostrRTCPeer, [], 0, 3, 0, 0, ["$_init_300", $rt_wrapFunction4(onnrs_NostrRTCLocalPeer__init_), "$getSigner", $rt_wrapFunction0(onnrs_NostrRTCLocalPeer_getSigner), "$getStunServers", $rt_wrapFunction0(onnrs_NostrRTCLocalPeer_getStunServers), "$toString", $rt_wrapFunction0(onnrs_NostrRTCLocalPeer_toString)],
jur_UnicodeCategory, "UnicodeCategory", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_UnicodeCategory__init_), "$contains0", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 6, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_UnicodeCategoryScope__init_), "$contains0", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
onn_NostrRelay$afterSendMessage$lambda$_17_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction1(onn_NostrRelay$afterSendMessage$lambda$_17_1__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$afterSendMessage$lambda$_17_1_run)],
onn_NostrRelay$afterSendMessage$lambda$_17_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$afterSendMessage$lambda$_17_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$afterSendMessage$lambda$_17_0_run)],
onnrs_NostrRTCSignaling$loop$lambda$_8_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_64", $rt_wrapFunction1(onnrs_NostrRTCSignaling$loop$lambda$_8_0__init_), "$call0", $rt_wrapFunction0(onnrs_NostrRTCSignaling$loop$lambda$_8_0_call)],
onnu_UniqueId, "UniqueId", 42, jl_Object, [], 0, 3, 0, onnu_UniqueId_$callClinit, ["$_init_0", $rt_wrapFunction0(onnu_UniqueId__init_)],
onnr_NostrRTCSocket$connect$lambda$_9_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_306", $rt_wrapFunction1(onnr_NostrRTCSocket$connect$lambda$_9_0__init_)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 11, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(jnc_UnmappableCharacterException__init_), "$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
onnu_Bech32$Bech32DecodingException, "Bech32$Bech32DecodingException", 42, onnu_Bech32$Bech32Exception, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onnu_Bech32$Bech32DecodingException__init_)],
cjj_InfTree, 0, jl_Object, [], 4, 0, 0, cjj_InfTree_$callClinit, ["$_init_0", $rt_wrapFunction0(cjj_InfTree__init_), "$inflate_trees_bits", function(var_1, var_2, var_3, var_4, var_5) { return cjj_InfTree_inflate_trees_bits(this, var_1, var_2, var_3, var_4, var_5); }, "$inflate_trees_dynamic", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { return cjj_InfTree_inflate_trees_dynamic(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }],
onns_SdanSlotBid, "SdanSlotBid", 40, jl_Enum, [], 12, 3, 0, onns_SdanSlotBid_$callClinit, ["$getValue4", $rt_wrapFunction0(onns_SdanSlotBid_getValue)],
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_FloatAnalyzer$Result__init_)],
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 6, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_246", $rt_wrapFunction2(jur_UCIDecomposedCharSet__init_)],
jl_String$_clinit_$lambda$_115_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong), "$_init_0", $rt_wrapFunction0(jl_String$_clinit_$lambda$_115_0__init_)],
jtf_DateTimeBuilder, "DateTimeBuilder", 17, jl_Object, [jtt_TemporalAccessor, jl_Cloneable], 4, 3, 0, 0, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$_init_0", $rt_wrapFunction0(jtf_DateTimeBuilder__init_), "$addFieldValue", $rt_wrapFunction2(jtf_DateTimeBuilder_addFieldValue), "$addObject", $rt_wrapFunction1(jtf_DateTimeBuilder_addObject0), "$addObject0", $rt_wrapFunction1(jtf_DateTimeBuilder_addObject),
"$resolve", $rt_wrapFunction2(jtf_DateTimeBuilder_resolve), "$build", $rt_wrapFunction1(jtf_DateTimeBuilder_build), "$isSupported", $rt_wrapFunction1(jtf_DateTimeBuilder_isSupported), "$getLong", $rt_wrapFunction1(jtf_DateTimeBuilder_getLong), "$toString", $rt_wrapFunction0(jtf_DateTimeBuilder_toString)],
onn_NostrRelay$lambda$disconnect$21$lambda$_50_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_126", function(var_1, var_2, var_3, var_4, var_5) { onn_NostrRelay$lambda$disconnect$21$lambda$_50_0__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$accept3", $rt_wrapFunction2(onn_NostrRelay$lambda$disconnect$21$lambda$_50_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$lambda$disconnect$21$lambda$_50_0_accept)],
cjj_Deflate, 0, jl_Object, [jl_Cloneable], 4, 3, 0, cjj_Deflate_$callClinit, ["$_init_197", $rt_wrapFunction1(cjj_Deflate__init_), "$lm_init", $rt_wrapFunction0(cjj_Deflate_lm_init), "$tr_init", $rt_wrapFunction0(cjj_Deflate_tr_init), "$init_block", $rt_wrapFunction0(cjj_Deflate_init_block), "$pqdownheap", $rt_wrapFunction2(cjj_Deflate_pqdownheap), "$scan_tree", $rt_wrapFunction2(cjj_Deflate_scan_tree), "$build_bl_tree", $rt_wrapFunction0(cjj_Deflate_build_bl_tree), "$send_all_trees", $rt_wrapFunction3(cjj_Deflate_send_all_trees),
"$send_tree", $rt_wrapFunction2(cjj_Deflate_send_tree), "$put_byte0", $rt_wrapFunction3(cjj_Deflate_put_byte0), "$put_byte", $rt_wrapFunction1(cjj_Deflate_put_byte), "$put_short", $rt_wrapFunction1(cjj_Deflate_put_short), "$putShortMSB", $rt_wrapFunction1(cjj_Deflate_putShortMSB), "$send_code", $rt_wrapFunction2(cjj_Deflate_send_code), "$send_bits", $rt_wrapFunction2(cjj_Deflate_send_bits), "$_tr_align", $rt_wrapFunction0(cjj_Deflate__tr_align), "$_tr_tally", $rt_wrapFunction2(cjj_Deflate__tr_tally), "$compress_block",
$rt_wrapFunction2(cjj_Deflate_compress_block), "$set_data_type", $rt_wrapFunction0(cjj_Deflate_set_data_type), "$bi_flush", $rt_wrapFunction0(cjj_Deflate_bi_flush), "$bi_windup", $rt_wrapFunction0(cjj_Deflate_bi_windup), "$copy_block", $rt_wrapFunction3(cjj_Deflate_copy_block), "$flush_block_only", $rt_wrapFunction1(cjj_Deflate_flush_block_only), "$deflate_stored", $rt_wrapFunction1(cjj_Deflate_deflate_stored), "$_tr_stored_block", $rt_wrapFunction3(cjj_Deflate__tr_stored_block), "$_tr_flush_block", $rt_wrapFunction3(cjj_Deflate__tr_flush_block),
"$fill_window", $rt_wrapFunction0(cjj_Deflate_fill_window), "$deflate_fast", $rt_wrapFunction1(cjj_Deflate_deflate_fast), "$deflate_slow", $rt_wrapFunction1(cjj_Deflate_deflate_slow), "$longest_match", $rt_wrapFunction1(cjj_Deflate_longest_match), "$deflateInit", $rt_wrapFunction2(cjj_Deflate_deflateInit), "$deflateReset", $rt_wrapFunction0(cjj_Deflate_deflateReset), "$deflate", $rt_wrapFunction1(cjj_Deflate_deflate), "$getGZIPHeader", $rt_wrapFunction0(cjj_Deflate_getGZIPHeader)],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_324", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_274", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_2_run)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
onnrt_NostrTURN$onTurnEvent$lambda$_5_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_248", $rt_wrapFunction2(onnrt_NostrTURN$onTurnEvent$lambda$_5_0__init_), "$apply", $rt_wrapFunction1(onnrt_NostrTURN$onTurnEvent$lambda$_5_0_apply0), "$apply12", $rt_wrapFunction1(onnrt_NostrTURN$onTurnEvent$lambda$_5_0_apply)],
onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0_apply0), "$apply20", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$24$lambda$_21_0_apply)],
jtc_ChronoZonedDateTime, 0, jl_Object, [jtt_Temporal, jl_Comparable], 1, 3, 0, jtc_ChronoZonedDateTime_$callClinit, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$_init_0", $rt_wrapFunction0(jtc_ChronoZonedDateTime__init_), "$toEpochSecond0", $rt_wrapFunction0(jtc_ChronoZonedDateTime_toEpochSecond)],
jt_ZonedDateTime, 0, jtc_ChronoZonedDateTime, [jtt_Temporal, ji_Serializable], 4, 3, 0, 0, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$getLong", $rt_wrapFunction1(jt_ZonedDateTime_getLong), "$getOffset1", $rt_wrapFunction0(jt_ZonedDateTime_getOffset), "$toLocalDate0", $rt_wrapFunction0(jt_ZonedDateTime_toLocalDate), "$toLocalTime", $rt_wrapFunction0(jt_ZonedDateTime_toLocalTime), "$toLocalDate",
$rt_wrapFunction0(jt_ZonedDateTime_toLocalDate0)],
onns_NostrNIP46Signer$close$lambda$_4_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$close$lambda$_4_0__init_), "$accept3", $rt_wrapFunction2(onns_NostrNIP46Signer$close$lambda$_4_0_accept0), "$accept", $rt_wrapFunction2(onns_NostrNIP46Signer$close$lambda$_4_0_accept)],
onns_NostrNIP46Signer$onSubEvent$lambda$_9_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onns_NostrNIP46Signer$onSubEvent$lambda$_9_1__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$onSubEvent$lambda$_9_1_run)],
onns_NostrNIP46Signer$onSubEvent$lambda$_9_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_268", $rt_wrapFunction2(onns_NostrNIP46Signer$onSubEvent$lambda$_9_2__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$onSubEvent$lambda$_9_2_run)],
jtt_ValueRange, "ValueRange", 19, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$isFixed", $rt_wrapFunction0(jtt_ValueRange_isFixed), "$getMinimum", $rt_wrapFunction0(jtt_ValueRange_getMinimum), "$getMaximum", $rt_wrapFunction0(jtt_ValueRange_getMaximum), "$isIntValue", $rt_wrapFunction0(jtt_ValueRange_isIntValue), "$isValidValue", $rt_wrapFunction1(jtt_ValueRange_isValidValue), "$isValidIntValue", $rt_wrapFunction1(jtt_ValueRange_isValidIntValue), "$checkValidValue0", $rt_wrapFunction2(jtt_ValueRange_checkValidValue),
"$checkValidIntValue", $rt_wrapFunction2(jtt_ValueRange_checkValidIntValue), "$toString", $rt_wrapFunction0(jtt_ValueRange_toString)],
onns_NostrNIP46Signer$onSubEvent$lambda$_9_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_267", $rt_wrapFunction2(onns_NostrNIP46Signer$onSubEvent$lambda$_9_0__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$onSubEvent$lambda$_9_0_run)],
jl_Long, "Long", 22, jl_Number, [jl_Comparable], 0, 3, 0, jl_Long_$callClinit, ["$_init_45", $rt_wrapFunction1(jl_Long__init_), "$intValue", $rt_wrapFunction0(jl_Long_intValue), "$longValue", $rt_wrapFunction0(jl_Long_longValue), "$toString", $rt_wrapFunction0(jl_Long_toString0), "$hashCode", $rt_wrapFunction0(jl_Long_hashCode0), "$equals", $rt_wrapFunction1(jl_Long_equals), "$compareTo17", $rt_wrapFunction1(jl_Long_compareTo), "$compareTo7", $rt_wrapFunction1(jl_Long_compareTo0)]]);
$rt_metadata([otjb_TimerHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0, "TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0", 49, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, ["$_init_72", $rt_wrapFunction3(onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0__init_), "$onTimer", $rt_wrapFunction0(onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0_onTimer)],
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_SequenceSet$IntHash__init_), "$put8", $rt_wrapFunction2(jur_SequenceSet$IntHash_put), "$get3", $rt_wrapFunction1(jur_SequenceSet$IntHash_get)],
onnrt_NostrTURN$SubscriptionListenerWrapper, "NostrTURN$SubscriptionListenerWrapper", 29, jl_Object, [onnls_NostrSubEventListener], 0, 0, 0, 0, ["$_init_248", $rt_wrapFunction2(onnrt_NostrTURN$SubscriptionListenerWrapper__init_0), "$onSubEvent", $rt_wrapFunction2(onnrt_NostrTURN$SubscriptionListenerWrapper_onSubEvent)],
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_275", function(var_1, var_2, var_3, var_4, var_5) { onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1_apply0), "$apply0", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_1_apply)],
jl_ArithmeticException, "ArithmeticException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ArithmeticException__init_1), "$_init_", $rt_wrapFunction1(jl_ArithmeticException__init_2)],
onnr_NostrRTCSocket$listen$lambda$_8_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_306", $rt_wrapFunction1(onnr_NostrRTCSocket$listen$lambda$_8_0__init_)],
onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_274", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0_apply0), "$apply15", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$sendRPC$25$lambda$_20_0_apply)],
jusi_SimpleStreamImpl$collect$lambda$_26_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_137", $rt_wrapFunction2(jusi_SimpleStreamImpl$collect$lambda$_26_0__init_), "$test0", $rt_wrapFunction1(jusi_SimpleStreamImpl$collect$lambda$_26_0_test)],
onn_NostrPool$lambda$sendMessage$2$lambda$_55_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_194", function(var_1, var_2, var_3, var_4, var_5) { onn_NostrPool$lambda$sendMessage$2$lambda$_55_0__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$apply", $rt_wrapFunction1(onn_NostrPool$lambda$sendMessage$2$lambda$_55_0_apply0), "$apply21", $rt_wrapFunction1(onn_NostrPool$lambda$sendMessage$2$lambda$_55_0_apply)],
onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_95", $rt_wrapFunction3(onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0__init_), "$run", $rt_wrapFunction0(onnr_NostrRTCRoom$onRTCSocketMessage$lambda$_25_0_run)],
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_152", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
jur_CharClass$18, "CharClass$18", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_162", $rt_wrapFunction2(jur_CharClass$18__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)],
jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser, "DateTimeFormatterBuilder$ZoneIdPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, 0, ["$_init_25", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser__init_), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$ZoneIdPrinterParser_toString)],
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 6, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_43", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_250", $rt_wrapFunction1(onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0__init_), "$apply", $rt_wrapFunction1(onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0_apply0), "$apply0", $rt_wrapFunction1(onnrt_NostrTURN$onReceivedPacketChunk$lambda$_7_0_apply)],
onns_NostrNIP46Signer$onSubEvent$lambda$_9_3, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_269", $rt_wrapFunction3(onns_NostrNIP46Signer$onSubEvent$lambda$_9_3__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$onSubEvent$lambda$_9_3_run)],
onns_NostrNIP46Signer$onSubEvent$lambda$_9_4, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_267", $rt_wrapFunction2(onns_NostrNIP46Signer$onSubEvent$lambda$_9_4__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$onSubEvent$lambda$_9_4_run)],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_159", $rt_wrapFunction2(jur_CharClass$13__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$13_contains)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_159", $rt_wrapFunction2(jur_CharClass$12__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$12_contains)],
jtf_DateTimeParseException, "DateTimeParseException", 17, jt_DateTimeException, [], 0, 3, 0, 0, ["$_init_104", $rt_wrapFunction3(jtf_DateTimeParseException__init_), "$_init_103", $rt_wrapFunction4(jtf_DateTimeParseException__init_0)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_158", $rt_wrapFunction4(jur_CharClass$11__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$11_contains)],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_158", $rt_wrapFunction4(jur_CharClass$10__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$10_contains)],
ju_GenericEnumSet, 0, ju_EnumSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_168", $rt_wrapFunction1(ju_GenericEnumSet__init_), "$add12", $rt_wrapFunction1(ju_GenericEnumSet_add), "$addAll", $rt_wrapFunction1(ju_GenericEnumSet_addAll), "$add1", $rt_wrapFunction1(ju_GenericEnumSet_add0)],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_158", $rt_wrapFunction4(jur_CharClass$17__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$17_contains)],
jtt_IsoFields$Field, "IsoFields$Field", 19, jl_Enum, [jtt_TemporalField], 9, 0, 0, jtt_IsoFields$Field_$callClinit, ["$resolve0", $rt_wrapFunction3(jtt_IsoFields$Field_resolve), "$isDateBased", $rt_wrapFunction0(jtt_IsoFields$Field_isDateBased), "$isTimeBased", $rt_wrapFunction0(jtt_IsoFields$Field_isTimeBased)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_158", $rt_wrapFunction4(jur_CharClass$16__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$16_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_161", $rt_wrapFunction3(jur_CharClass$15__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_161", $rt_wrapFunction3(jur_CharClass$14__init_), "$contains0", $rt_wrapFunction1(jur_CharClass$14_contains)],
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction1(jl_StringBuilder__init_2), "$_init_0", $rt_wrapFunction0(jl_StringBuilder__init_4), "$_init_", $rt_wrapFunction1(jl_StringBuilder__init_3), "$append", $rt_wrapFunction1(jl_StringBuilder_append), "$append1", $rt_wrapFunction1(jl_StringBuilder_append5), "$append3", $rt_wrapFunction1(jl_StringBuilder_append1), "$append13", $rt_wrapFunction1(jl_StringBuilder_append2), "$append14", $rt_wrapFunction1(jl_StringBuilder_append4),
"$append17", $rt_wrapFunction1(jl_StringBuilder_append11), "$append0", $rt_wrapFunction1(jl_StringBuilder_append0), "$append27", $rt_wrapFunction3(jl_StringBuilder_append6), "$append11", $rt_wrapFunction1(jl_StringBuilder_append12), "$append15", $rt_wrapFunction3(jl_StringBuilder_append10), "$append9", $rt_wrapFunction1(jl_StringBuilder_append9), "$append10", $rt_wrapFunction1(jl_StringBuilder_append3), "$insert13", $rt_wrapFunction2(jl_StringBuilder_insert6), "$insert21", $rt_wrapFunction2(jl_StringBuilder_insert16),
"$insert20", $rt_wrapFunction2(jl_StringBuilder_insert1), "$insert17", $rt_wrapFunction4(jl_StringBuilder_insert12), "$insert12", $rt_wrapFunction2(jl_StringBuilder_insert0), "$insert16", $rt_wrapFunction4(jl_StringBuilder_insert15), "$insert19", $rt_wrapFunction2(jl_StringBuilder_insert17), "$insert18", $rt_wrapFunction2(jl_StringBuilder_insert13), "$insert14", $rt_wrapFunction2(jl_StringBuilder_insert3), "$delete0", $rt_wrapFunction2(jl_StringBuilder_delete), "$replace1", $rt_wrapFunction3(jl_StringBuilder_replace),
"$deleteCharAt", $rt_wrapFunction1(jl_StringBuilder_deleteCharAt), "$insert22", $rt_wrapFunction2(jl_StringBuilder_insert9), "$setCharAt", $rt_wrapFunction2(jl_StringBuilder_setCharAt), "$delete", $rt_wrapFunction2(jl_StringBuilder_delete0), "$setLength", $rt_wrapFunction1(jl_StringBuilder_setLength), "$insert9", $rt_wrapFunction4(jl_StringBuilder_insert8), "$append5", $rt_wrapFunction3(jl_StringBuilder_append8), "$insert8", $rt_wrapFunction4(jl_StringBuilder_insert14), "$append4", $rt_wrapFunction3(jl_StringBuilder_append7),
"$charAt", $rt_wrapFunction1(jl_StringBuilder_charAt), "$length", $rt_wrapFunction0(jl_StringBuilder_length), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert7", $rt_wrapFunction2(jl_StringBuilder_insert2), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert11), "$insert6", $rt_wrapFunction2(jl_StringBuilder_insert10), "$insert5", $rt_wrapFunction2(jl_StringBuilder_insert4), "$insert4", $rt_wrapFunction2(jl_StringBuilder_insert7),
"$insert2", $rt_wrapFunction2(jl_StringBuilder_insert), "$insert0", $rt_wrapFunction2(jl_StringBuilder_insert5)],
onnr_NostrRTCSocket, "NostrRTCSocket", 27, jl_Object, [onpt_RTCTransportListener, onnrt_NostrTURN$Listener, ji_Closeable], 0, 3, 0, onnr_NostrRTCSocket_$callClinit, ["$_init_93", function(var_1, var_2, var_3, var_4, var_5) { onnr_NostrRTCSocket__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$getLocalPeer", $rt_wrapFunction0(onnr_NostrRTCSocket_getLocalPeer), "$getRemotePeer", $rt_wrapFunction0(onnr_NostrRTCSocket_getRemotePeer), "$isConnected", $rt_wrapFunction0(onnr_NostrRTCSocket_isConnected), "$close",
$rt_wrapFunction0(onnr_NostrRTCSocket_close), "$addListener0", $rt_wrapFunction1(onnr_NostrRTCSocket_addListener), "$removeListener3", $rt_wrapFunction1(onnr_NostrRTCSocket_removeListener), "$listen", $rt_wrapFunction0(onnr_NostrRTCSocket_listen), "$connect", $rt_wrapFunction1(onnr_NostrRTCSocket_connect), "$mergeRemoteRTCIceCandidate", $rt_wrapFunction1(onnr_NostrRTCSocket_mergeRemoteRTCIceCandidate), "$onLocalRTCIceCandidate", $rt_wrapFunction1(onnr_NostrRTCSocket_onLocalRTCIceCandidate), "$onRTCConnected",
$rt_wrapFunction0(onnr_NostrRTCSocket_onRTCConnected), "$onRTCDisconnected", $rt_wrapFunction1(onnr_NostrRTCSocket_onRTCDisconnected), "$useTURN", $rt_wrapFunction1(onnr_NostrRTCSocket_useTURN), "$isUsingTURN", $rt_wrapFunction0(onnr_NostrRTCSocket_isUsingTURN), "$onRTCBinaryMessage", $rt_wrapFunction1(onnr_NostrRTCSocket_onRTCBinaryMessage), "$onTurnPacket", $rt_wrapFunction2(onnr_NostrRTCSocket_onTurnPacket), "$write0", $rt_wrapFunction1(onnr_NostrRTCSocket_write), "$onRTCChannelError", $rt_wrapFunction1(onnr_NostrRTCSocket_onRTCChannelError),
"$setForceTURN", $rt_wrapFunction1(onnr_NostrRTCSocket_setForceTURN)],
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4__init_), "$apply", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4_apply0), "$apply21", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_4_apply)],
jl_ClassLoader, 0, jl_Object, [], 1, 3, 0, jl_ClassLoader_$callClinit, ["$_init_0", $rt_wrapFunction0(jl_ClassLoader__init_), "$_init_308", $rt_wrapFunction1(jl_ClassLoader__init_0), "$getResourceAsStream", $rt_wrapFunction1(jl_ClassLoader_getResourceAsStream)],
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3, "NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3", 26, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3__init_), "$accept0", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3_accept0), "$accept1", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_3_accept)],
onn_NostrRelay$connect$lambda$_20_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$connect$lambda$_20_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$connect$lambda$_20_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$connect$lambda$_20_0_accept)],
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_2_run)],
ju_ConcurrentModificationException, "ConcurrentModificationException", 4, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_ConcurrentModificationException__init_0)],
onn_NostrRelay$connect$lambda$_20_1, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$connect$lambda$_20_1__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$connect$lambda$_20_1_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$connect$lambda$_20_1_accept)],
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_1_run)],
onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_125", $rt_wrapFunction1(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$onConnectionOpen$27$lambda$_44_0_run)],
onns_SdanMimeType, "SdanMimeType", 40, jl_Enum, [], 12, 3, 0, onns_SdanMimeType_$callClinit, ["$getValue4", $rt_wrapFunction0(onns_SdanMimeType_getValue)],
onn_NostrRelay$runInRelayExecutor$lambda$_7_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_116", $rt_wrapFunction2(onn_NostrRelay$runInRelayExecutor$lambda$_7_0__init_), "$apply", $rt_wrapFunction1(onn_NostrRelay$runInRelayExecutor$lambda$_7_0_apply0), "$apply22", $rt_wrapFunction1(onn_NostrRelay$runInRelayExecutor$lambda$_7_0_apply)],
onpt_TeaVMBinds$TeaVMPromise, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onpt_TeaVMBinds$TeaVMPromise__init_), "$resolve1", $rt_wrapFunction1(onpt_TeaVMBinds$TeaVMPromise_resolve), "$reject", $rt_wrapFunction1(onpt_TeaVMBinds$TeaVMPromise_reject), "$then0", $rt_wrapFunction1(onpt_TeaVMBinds$TeaVMPromise_then), "$catchError", $rt_wrapFunction1(onpt_TeaVMBinds$TeaVMPromise_catchError)],
jtt_TemporalAdjusters$RelativeDayOfWeek, 0, jl_Object, [jtt_TemporalAdjuster], 4, 0, 0, 0, ["$adjustInto", $rt_wrapFunction1(jtt_TemporalAdjusters$RelativeDayOfWeek_adjustInto)],
onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_258", $rt_wrapFunction4(onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0_apply0), "$apply0", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendOffer$lambda$_10_0_apply)],
onnrs_NostrRTCSignaling$encrypt$lambda$_14_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_259", $rt_wrapFunction2(onnrs_NostrRTCSignaling$encrypt$lambda$_14_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$encrypt$lambda$_14_0_apply0), "$apply0", $rt_wrapFunction1(onnrs_NostrRTCSignaling$encrypt$lambda$_14_0_apply)],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser, "DateTimeFormatterBuilder$CharLiteralPrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, 0, ["$_init_26", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser__init_0), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$CharLiteralPrinterParser_toString)],
jur_Quantifier, "Quantifier", 6, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$_init_59", $rt_wrapFunction2(jur_Quantifier__init_), "$min0", $rt_wrapFunction0(jur_Quantifier_min), "$max0", $rt_wrapFunction0(jur_Quantifier_max), "$toString", $rt_wrapFunction0(jur_Quantifier_toString)]]);
$rt_metadata([onnp_NostrMessageAck, "NostrMessageAck", 43, jl_Object, [], 0, 3, 0, 0, ["$_init_10", function(var_1, var_2, var_3, var_4, var_5) { onnp_NostrMessageAck__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$callSuccessCallback", $rt_wrapFunction1(onnp_NostrMessageAck_callSuccessCallback), "$callFailureCallback", $rt_wrapFunction1(onnp_NostrMessageAck_callFailureCallback), "$setRemoteStatus", $rt_wrapFunction2(onnp_NostrMessageAck_setRemoteStatus), "$getStatus", $rt_wrapFunction0(onnp_NostrMessageAck_getStatus),
"$get23", $rt_wrapFunction0(onnp_NostrMessageAck_get), "$getMessage", $rt_wrapFunction0(onnp_NostrMessageAck_getMessage), "$getRelay", $rt_wrapFunction0(onnp_NostrMessageAck_getRelay), "$getId", $rt_wrapFunction0(onnp_NostrMessageAck_getId), "$getSentAt", $rt_wrapFunction0(onnp_NostrMessageAck_getSentAt)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_319", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
jn_URLDecoder, 0, jl_Object, [], 4, 3, 0, 0, 0,
jus_CollectorImpl, 0, jl_Object, [jus_Collector], 0, 0, 0, 0, ["$_init_242", function(var_1, var_2, var_3, var_4, var_5) { jus_CollectorImpl__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$supplier", $rt_wrapFunction0(jus_CollectorImpl_supplier), "$accumulator", $rt_wrapFunction0(jus_CollectorImpl_accumulator), "$finisher", $rt_wrapFunction0(jus_CollectorImpl_finisher)],
jn_URI$Helper, 0, jl_Object, [], 0, 0, 0, 0, 0,
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 6, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_226", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator, "DateTimeFormatterBuilder$PadPrinterParserDecorator", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator__init_), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator_parse), "$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$PadPrinterParserDecorator_toString)],
otcir_FieldInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
onne_UnsignedNostrEvent$withTag$lambda$_8_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onne_UnsignedNostrEvent$withTag$lambda$_8_0__init_), "$apply", $rt_wrapFunction1(onne_UnsignedNostrEvent$withTag$lambda$_8_0_apply0), "$apply7", $rt_wrapFunction1(onne_UnsignedNostrEvent$withTag$lambda$_8_0_apply)],
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 6, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_106", $rt_wrapFunction3(jur_ReluctantQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
jtz_ZoneRules$Fixed, "ZoneRules$Fixed", 16, jtz_ZoneRules, [ji_Serializable], 4, 0, 0, 0, ["$_init_156", $rt_wrapFunction1(jtz_ZoneRules$Fixed__init_), "$getOffset0", $rt_wrapFunction1(jtz_ZoneRules$Fixed_getOffset), "$getValidOffsets0", $rt_wrapFunction1(jtz_ZoneRules$Fixed_getValidOffsets), "$getTransition", $rt_wrapFunction1(jtz_ZoneRules$Fixed_getTransition), "$equals", $rt_wrapFunction1(jtz_ZoneRules$Fixed_equals), "$hashCode", $rt_wrapFunction0(jtz_ZoneRules$Fixed_hashCode), "$toString", $rt_wrapFunction0(jtz_ZoneRules$Fixed_toString)],
onns_NostrKeyPairSigner$decrypt$lambda$_4_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onns_NostrKeyPairSigner$decrypt$lambda$_4_0__init_), "$apply", $rt_wrapFunction1(onns_NostrKeyPairSigner$decrypt$lambda$_4_0_apply0), "$apply15", $rt_wrapFunction1(onns_NostrKeyPairSigner$decrypt$lambda$_4_0_apply)],
onnrt_NostrTURN$Packet, "NostrTURN$Packet", 29, jl_Object, [], 0, 0, 0, 0, ["$_init_249", $rt_wrapFunction4(onnrt_NostrTURN$Packet__init_0)],
onnn_Nip44$encrypt$lambda$_12_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_56", $rt_wrapFunction3(onnn_Nip44$encrypt$lambda$_12_0__init_), "$call0", $rt_wrapFunction0(onnn_Nip44$encrypt$lambda$_12_0_call0), "$call4", $rt_wrapFunction0(onnn_Nip44$encrypt$lambda$_12_0_call)],
juc_ConcurrentHashMap, 0, ju_AbstractMap, [juc_ConcurrentMap, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$getOrDefault", $rt_wrapFunction2(ju_Map_getOrDefault), "$putIfAbsent", $rt_wrapFunction2(ju_Map_putIfAbsent), "$newElementArray1", $rt_wrapFunction1(juc_ConcurrentHashMap_newElementArray), "$_init_0", $rt_wrapFunction0(juc_ConcurrentHashMap__init_2), "$_init_9", $rt_wrapFunction1(juc_ConcurrentHashMap__init_1), "$_init_39", $rt_wrapFunction2(juc_ConcurrentHashMap__init_0), "$containsKey", $rt_wrapFunction1(juc_ConcurrentHashMap_containsKey),
"$entrySet", $rt_wrapFunction0(juc_ConcurrentHashMap_entrySet), "$get1", $rt_wrapFunction1(juc_ConcurrentHashMap_get), "$computeIfAbsent", $rt_wrapFunction2(juc_ConcurrentHashMap_computeIfAbsent), "$put1", $rt_wrapFunction2(juc_ConcurrentHashMap_put), "$remove1", $rt_wrapFunction1(juc_ConcurrentHashMap_remove), "$size", $rt_wrapFunction0(juc_ConcurrentHashMap_size), "$values0", $rt_wrapFunction0(juc_ConcurrentHashMap_values)],
ju_TemplateCollections$SingleElementSet, 0, ju_TemplateCollections$AbstractImmutableSet, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_2", $rt_wrapFunction1(ju_TemplateCollections$SingleElementSet__init_), "$iterator", $rt_wrapFunction0(ju_TemplateCollections$SingleElementSet_iterator), "$size", $rt_wrapFunction0(ju_TemplateCollections$SingleElementSet_size)],
juz_Deflater, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(juz_Deflater__init_0), "$_init_60", $rt_wrapFunction2(juz_Deflater__init_), "$deflate0", $rt_wrapFunction1(juz_Deflater_deflate0), "$deflate1", $rt_wrapFunction3(juz_Deflater_deflate1), "$deflate2", $rt_wrapFunction4(juz_Deflater_deflate), "$end1", $rt_wrapFunction0(juz_Deflater_end), "$finish", $rt_wrapFunction0(juz_Deflater_finish), "$finished", $rt_wrapFunction0(juz_Deflater_finished), "$setInput1", $rt_wrapFunction1(juz_Deflater_setInput0),
"$setInput", $rt_wrapFunction3(juz_Deflater_setInput)],
onnrs_NostrRTCAnnounce, "NostrRTCAnnounce", 30, jl_Object, [onnrs_NostrRTCSignal], 0, 3, 0, 0, ["$_init_261", $rt_wrapFunction3(onnrs_NostrRTCAnnounce__init_), "$updateExpireAt", $rt_wrapFunction1(onnrs_NostrRTCAnnounce_updateExpireAt), "$getExpireAt", $rt_wrapFunction0(onnrs_NostrRTCAnnounce_getExpireAt), "$isExpired", $rt_wrapFunction1(onnrs_NostrRTCAnnounce_isExpired), "$equals", $rt_wrapFunction1(onnrs_NostrRTCAnnounce_equals), "$hashCode", $rt_wrapFunction0(onnrs_NostrRTCAnnounce_hashCode), "$get20", $rt_wrapFunction0(onnrs_NostrRTCAnnounce_get),
"$getPubkey", $rt_wrapFunction0(onnrs_NostrRTCAnnounce_getPubkey), "$toString", $rt_wrapFunction0(onnrs_NostrRTCAnnounce_toString)],
jt_Instant, "Instant", 15, jl_Object, [jtt_Temporal, jtt_TemporalAdjuster, jl_Comparable, ji_Serializable, jtt_TemporalAccessor], 4, 3, 0, jt_Instant_$callClinit, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query), "$isSupported", $rt_wrapFunction1(jt_Instant_isSupported), "$getLong", $rt_wrapFunction1(jt_Instant_getLong), "$getEpochSecond", $rt_wrapFunction0(jt_Instant_getEpochSecond), "$getNano",
$rt_wrapFunction0(jt_Instant_getNano), "$plus3", $rt_wrapFunction1(jt_Instant_plus), "$plus6", $rt_wrapFunction2(jt_Instant_plus1), "$plusSeconds", $rt_wrapFunction1(jt_Instant_plusSeconds), "$plusMillis", $rt_wrapFunction1(jt_Instant_plusMillis), "$plusNanos", $rt_wrapFunction1(jt_Instant_plusNanos), "$minusSeconds", $rt_wrapFunction1(jt_Instant_minusSeconds), "$compareTo8", $rt_wrapFunction1(jt_Instant_compareTo), "$isAfter0", $rt_wrapFunction1(jt_Instant_isAfter), "$isBefore0", $rt_wrapFunction1(jt_Instant_isBefore),
"$equals", $rt_wrapFunction1(jt_Instant_equals), "$hashCode", $rt_wrapFunction0(jt_Instant_hashCode), "$toString", $rt_wrapFunction0(jt_Instant_toString), "$plus2", $rt_wrapFunction2(jt_Instant_plus2), "$compareTo7", $rt_wrapFunction1(jt_Instant_compareTo0)],
onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_120", $rt_wrapFunction3(onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$onConnectionClosedByServer$lambda$_24_0_accept)],
ju_TemplateCollections$SingleElementSet$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_309", $rt_wrapFunction1(ju_TemplateCollections$SingleElementSet$1__init_), "$hasNext", $rt_wrapFunction0(ju_TemplateCollections$SingleElementSet$1_hasNext), "$next", $rt_wrapFunction0(ju_TemplateCollections$SingleElementSet$1_next), "$remove", $rt_wrapFunction0(ju_TemplateCollections$SingleElementSet$1_remove)],
jt_Year, 0, jl_Object, [jtt_Temporal, jtt_TemporalAdjuster, jl_Comparable, ji_Serializable, jtt_TemporalAccessor], 4, 3, 0, 0, ["$range0", $rt_wrapFunction1(jtt_TemporalAccessor_range), "$get2", $rt_wrapFunction1(jtt_TemporalAccessor_get), "$query", $rt_wrapFunction1(jtt_TemporalAccessor_query)],
onnn_Nip39, "Nip39", 31, jl_Object, [], 0, 3, 0, onnn_Nip39_$callClinit, ["$_init_0", $rt_wrapFunction0(onnn_Nip39__init_)],
jur_EOISet, "EOISet", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_EOISet__init_), "$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOISet_getName)],
jusi_SpliteratorOverCollection, 0, jl_Object, [ju_Spliterator], 0, 3, 0, 0, ["$_init_6", $rt_wrapFunction1(jusi_SpliteratorOverCollection__init_), "$tryAdvance", $rt_wrapFunction1(jusi_SpliteratorOverCollection_tryAdvance), "$estimateSize0", $rt_wrapFunction0(jusi_SpliteratorOverCollection_estimateSize)],
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_130", $rt_wrapFunction1(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_0_run)],
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_132", $rt_wrapFunction3(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1_accept0), "$accept7", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_1_accept)],
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_132", $rt_wrapFunction3(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2_accept0), "$accept7", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_2_accept)],
jtt_IsoFields$Field$1, "IsoFields$Field$1", 19, jtt_IsoFields$Field, [], 12, 0, 0, 0, ["$toString", $rt_wrapFunction0(jtt_IsoFields$Field$1_toString), "$range", $rt_wrapFunction0(jtt_IsoFields$Field$1_range), "$isSupportedBy", $rt_wrapFunction1(jtt_IsoFields$Field$1_isSupportedBy), "$getFrom", $rt_wrapFunction1(jtt_IsoFields$Field$1_getFrom), "$resolve0", $rt_wrapFunction3(jtt_IsoFields$Field$1_resolve)],
onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_129", $rt_wrapFunction4(onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$lambda$sendMessage$14$lambda$_57_0_accept)],
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3, "NostrRelay$lambda$sendMessage$13$lambda$_58_3", 26, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_122", $rt_wrapFunction1(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3__init_), "$accept0", $rt_wrapFunction1(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3_accept0), "$accept1", $rt_wrapFunction1(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_3_accept)],
jtt_IsoFields$Field$2, "IsoFields$Field$2", 19, jtt_IsoFields$Field, [], 12, 0, 0, 0, ["$toString", $rt_wrapFunction0(jtt_IsoFields$Field$2_toString), "$range", $rt_wrapFunction0(jtt_IsoFields$Field$2_range), "$isSupportedBy", $rt_wrapFunction1(jtt_IsoFields$Field$2_isSupportedBy), "$getFrom", $rt_wrapFunction1(jtt_IsoFields$Field$2_getFrom)],
onnu_ExponentialBackoff, "ExponentialBackoff", 42, jl_Object, [], 4, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnu_ExponentialBackoff__init_1), "$_init_311", function(var_1, var_2, var_3, var_4, var_5) { onnu_ExponentialBackoff__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$registerFailure", $rt_wrapFunction0(onnu_ExponentialBackoff_registerFailure), "$registerSuccess", $rt_wrapFunction0(onnu_ExponentialBackoff_registerSuccess), "$getNextAttemptTime", $rt_wrapFunction2(onnu_ExponentialBackoff_getNextAttemptTime)],
onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_133", $rt_wrapFunction3(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4__init_), "$apply", $rt_wrapFunction1(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4_apply0), "$apply23", $rt_wrapFunction1(onn_NostrRelay$lambda$sendMessage$13$lambda$_58_4_apply)],
jtt_IsoFields$Field$3, "IsoFields$Field$3", 19, jtt_IsoFields$Field, [], 12, 0, 0, 0, ["$toString", $rt_wrapFunction0(jtt_IsoFields$Field$3_toString), "$range", $rt_wrapFunction0(jtt_IsoFields$Field$3_range), "$isSupportedBy", $rt_wrapFunction1(jtt_IsoFields$Field$3_isSupportedBy), "$getFrom", $rt_wrapFunction1(jtt_IsoFields$Field$3_getFrom), "$resolve0", $rt_wrapFunction3(jtt_IsoFields$Field$3_resolve)],
jtt_IsoFields$Field$4, "IsoFields$Field$4", 19, jtt_IsoFields$Field, [], 12, 0, 0, 0, ["$toString", $rt_wrapFunction0(jtt_IsoFields$Field$4_toString), "$range", $rt_wrapFunction0(jtt_IsoFields$Field$4_range), "$isSupportedBy", $rt_wrapFunction1(jtt_IsoFields$Field$4_isSupportedBy), "$getFrom", $rt_wrapFunction1(jtt_IsoFields$Field$4_getFrom)],
jnc_BufferUnderflowException, "BufferUnderflowException", 11, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferUnderflowException__init_)],
juz_DataFormatException, "DataFormatException", 5, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(juz_DataFormatException__init_0), "$_init_", $rt_wrapFunction1(juz_DataFormatException__init_)],
ju_LinkedList, 0, ju_AbstractSequentialList, [ju_Deque], 0, 3, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_0", $rt_wrapFunction0(ju_LinkedList__init_0), "$size", $rt_wrapFunction0(ju_LinkedList_size), "$listIterator", $rt_wrapFunction0(ju_LinkedList_listIterator), "$listIterator0", $rt_wrapFunction1(ju_LinkedList_listIterator0), "$getLast", $rt_wrapFunction0(ju_LinkedList_getLast)],
otjc_JSString, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
onnrl_NostrRTCRoomPeerDisconnectListener, 0, jl_Object, [onnrl_NostrRTCRoomListener], 3, 3, 0, 0, 0,
otcic_JSStderrPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcic_JSStderrPrintStream__init_), "$print", $rt_wrapFunction1(otcic_JSStderrPrintStream_print)],
otcit_DateTimeZoneBuilder$RuleSet, "DateTimeZoneBuilder$RuleSet", 55, jl_Object, [], 4, 0, 0, otcit_DateTimeZoneBuilder$RuleSet_$callClinit, ["$_init_0", $rt_wrapFunction0(otcit_DateTimeZoneBuilder$RuleSet__init_), "$_init_316", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$RuleSet__init_0), "$firstTransition", $rt_wrapFunction2(otcit_DateTimeZoneBuilder$RuleSet_firstTransition), "$nextTransition0", $rt_wrapFunction3(otcit_DateTimeZoneBuilder$RuleSet_nextTransition), "$getUpperLimit", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$RuleSet_getUpperLimit),
"$buildTailZone", $rt_wrapFunction1(otcit_DateTimeZoneBuilder$RuleSet_buildTailZone)],
onns_NostrNIP46Signer$ResponseListener, "NostrNIP46Signer$ResponseListener", 47, jl_Object, [], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(onns_NostrNIP46Signer$ResponseListener_toString), "$cancel", $rt_wrapFunction1(onns_NostrNIP46Signer$ResponseListener_cancel), "$_init_276", $rt_wrapFunction4(onns_NostrNIP46Signer$ResponseListener__init_)],
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otcit_AliasDateTimeZone, "AliasDateTimeZone", 55, otcit_StorableDateTimeZone, [], 0, 3, 0, 0, ["$_init_208", $rt_wrapFunction2(otcit_AliasDateTimeZone__init_), "$getOffset", $rt_wrapFunction1(otcit_AliasDateTimeZone_getOffset), "$getStandardOffset", $rt_wrapFunction1(otcit_AliasDateTimeZone_getStandardOffset), "$asZoneRules", $rt_wrapFunction0(otcit_AliasDateTimeZone_asZoneRules)],
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 0, 3, 0, 0, 0,
jt_Clock$SystemClock, 0, jt_Clock, [ji_Serializable], 4, 0, 0, 0, ["$_init_228", $rt_wrapFunction1(jt_Clock$SystemClock__init_), "$millis", $rt_wrapFunction0(jt_Clock$SystemClock_millis), "$instant", $rt_wrapFunction0(jt_Clock$SystemClock_instant)],
otji_JSWrapper$JSTransparentInt, 0, jl_Object, [otj_JSObject], 1, 0, 0, 0, 0]);
$rt_metadata([otcit_DateTimeZoneBuilder, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_DateTimeZoneBuilder__init_), "$toDateTimeZone", $rt_wrapFunction2(otcit_DateTimeZoneBuilder_toDateTimeZone)],
onnk_NostrKeyPair, "NostrKeyPair", 34, jl_Object, [ji_Serializable, jl_Cloneable], 4, 3, 0, 0, ["$_init_58", $rt_wrapFunction2(onnk_NostrKeyPair__init_), "$_init_317", $rt_wrapFunction1(onnk_NostrKeyPair__init_1), "$_init_0", $rt_wrapFunction0(onnk_NostrKeyPair__init_2), "$getPublicKey", $rt_wrapFunction0(onnk_NostrKeyPair_getPublicKey), "$getPrivateKey", $rt_wrapFunction0(onnk_NostrKeyPair_getPrivateKey), "$clone1", $rt_wrapFunction0(onnk_NostrKeyPair_clone), "$toString", $rt_wrapFunction0(onnk_NostrKeyPair_toString),
"$equals", $rt_wrapFunction1(onnk_NostrKeyPair_equals), "$hashCode", $rt_wrapFunction0(onnk_NostrKeyPair_hashCode), "$clone0", $rt_wrapFunction0(onnk_NostrKeyPair_clone0)],
jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
jt_DayOfWeek$1, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jt_DayOfWeek$1__init_)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
onns_NostrNIP46Signer$connect$lambda$_5_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onns_NostrNIP46Signer$connect$lambda$_5_0__init_), "$accept3", $rt_wrapFunction2(onns_NostrNIP46Signer$connect$lambda$_5_0_accept0), "$accept", $rt_wrapFunction2(onns_NostrNIP46Signer$connect$lambda$_5_0_accept)],
onns_NostrNIP46Signer$connect$lambda$_5_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_265", $rt_wrapFunction2(onns_NostrNIP46Signer$connect$lambda$_5_1__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$connect$lambda$_5_1_apply0), "$apply24", $rt_wrapFunction1(onns_NostrNIP46Signer$connect$lambda$_5_1_apply)],
ju_LinkedList$Entry, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_LinkedList$Entry__init_)],
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, ["$find1", $rt_wrapFunction1(jur_Matcher_find), "$find0", $rt_wrapFunction0(jur_Matcher_find0), "$start", $rt_wrapFunction1(jur_Matcher_start0), "$end", $rt_wrapFunction1(jur_Matcher_end), "$matches0", $rt_wrapFunction0(jur_Matcher_matches), "$start3", $rt_wrapFunction0(jur_Matcher_start), "$end0", $rt_wrapFunction0(jur_Matcher_end0), "$hasTransparentBounds", $rt_wrapFunction0(jur_Matcher_hasTransparentBounds), "$_init_289", $rt_wrapFunction2(jur_Matcher__init_)],
onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0, "TeaVMPlatform$2$lambda$run$1$lambda$_6_0", 49, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, ["$_init_72", $rt_wrapFunction3(onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0__init_), "$onTimer", $rt_wrapFunction0(onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0_onTimer)],
jur_DotAllSet, "DotAllSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_DotAllSet__init_), "$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
onpt_TeaVMPlatform$verifyAsync$lambda$_26_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_215", $rt_wrapFunction4(onpt_TeaVMPlatform$verifyAsync$lambda$_26_0__init_), "$accept3", $rt_wrapFunction2(onpt_TeaVMPlatform$verifyAsync$lambda$_26_0_accept0), "$accept", $rt_wrapFunction2(onpt_TeaVMPlatform$verifyAsync$lambda$_26_0_accept)],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_291", $rt_wrapFunction2(jur_HangulDecomposedCharSet__init_), "$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
onn_NostrPool$sendMessage$lambda$_8_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_117", $rt_wrapFunction2(onn_NostrPool$sendMessage$lambda$_8_0__init_), "$run", $rt_wrapFunction0(onn_NostrPool$sendMessage$lambda$_8_0_run)],
onn_NostrPool$sendMessage$lambda$_8_1, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_178", $rt_wrapFunction3(onn_NostrPool$sendMessage$lambda$_8_1__init_), "$accept3", $rt_wrapFunction2(onn_NostrPool$sendMessage$lambda$_8_1_accept0), "$accept", $rt_wrapFunction2(onn_NostrPool$sendMessage$lambda$_8_1_accept)],
onn_NostrPool$lambda$subscribe$7$lambda$_50_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_192", $rt_wrapFunction2(onn_NostrPool$lambda$subscribe$7$lambda$_50_0__init_), "$run", $rt_wrapFunction0(onn_NostrPool$lambda$subscribe$7$lambda$_50_0_run)],
onn_NostrPool$lambda$subscribe$5$lambda$_52_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_193", $rt_wrapFunction1(onn_NostrPool$lambda$subscribe$5$lambda$_52_0__init_), "$run", $rt_wrapFunction0(onn_NostrPool$lambda$subscribe$5$lambda$_52_0_run)],
onnk_NostrPublicKey, "NostrPublicKey", 34, jl_Object, [onnk_NostrKey], 4, 3, 0, onnk_NostrPublicKey_$callClinit, ["$_init_90", $rt_wrapFunction1(onnk_NostrPublicKey__init_0), "$asReadOnlyBytes", $rt_wrapFunction0(onnk_NostrPublicKey_asReadOnlyBytes), "$asHex", $rt_wrapFunction0(onnk_NostrPublicKey_asHex), "$_array", $rt_wrapFunction0(onnk_NostrPublicKey__array), "$asBech32", $rt_wrapFunction0(onnk_NostrPublicKey_asBech32), "$toString", $rt_wrapFunction0(onnk_NostrPublicKey_toString), "$equals", $rt_wrapFunction1(onnk_NostrPublicKey_equals),
"$hashCode", $rt_wrapFunction0(onnk_NostrPublicKey_hashCode), "$clone12", $rt_wrapFunction0(onnk_NostrPublicKey_clone), "$preload", $rt_wrapFunction0(onnk_NostrPublicKey_preload), "$clone0", $rt_wrapFunction0(onnk_NostrPublicKey_clone0)],
onpt_TeaVMPlatform$promisify$lambda$_19_0, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_211", $rt_wrapFunction1(onpt_TeaVMPlatform$promisify$lambda$_19_0__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$promisify$lambda$_19_0_accept)],
onpt_TeaVMPlatform$promisify$lambda$_19_1, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_211", $rt_wrapFunction1(onpt_TeaVMPlatform$promisify$lambda$_19_1__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$promisify$lambda$_19_1_accept0), "$accept1", $rt_wrapFunction1(onpt_TeaVMPlatform$promisify$lambda$_19_1_accept)],
otjc_JSDate, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, 0,
jlr_InvocationTargetException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
onn_NostrRelay$sendMessage$lambda$_18_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_117", $rt_wrapFunction2(onn_NostrRelay$sendMessage$lambda$_18_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$sendMessage$lambda$_18_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$sendMessage$lambda$_18_0_accept)],
ju_TemplateCollections$TwoElementsList, 0, ju_TemplateCollections$AbstractImmutableList, [ju_RandomAccess], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_99", $rt_wrapFunction2(ju_TemplateCollections$TwoElementsList__init_), "$size", $rt_wrapFunction0(ju_TemplateCollections$TwoElementsList_size), "$get", $rt_wrapFunction1(ju_TemplateCollections$TwoElementsList_get)],
jtt_IsoFields, 0, jl_Object, [], 4, 3, 0, jtt_IsoFields_$callClinit, 0,
onn_NostrRelay$onConnectionOpen$lambda$_22_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$onConnectionOpen$lambda$_22_0__init_), "$accept3", $rt_wrapFunction2(onn_NostrRelay$onConnectionOpen$lambda$_22_0_accept0), "$accept", $rt_wrapFunction2(onn_NostrRelay$onConnectionOpen$lambda$_22_0_accept)],
jusi_AnyMatchConsumer, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_138", $rt_wrapFunction1(jusi_AnyMatchConsumer__init_), "$test0", $rt_wrapFunction1(jusi_AnyMatchConsumer_test)],
jm_Multiplication, 0, jl_Object, [], 0, 0, 0, jm_Multiplication_$callClinit, 0,
ju_LinkedHashMapKeySet, "LinkedHashMapKeySet", 4, ju_AbstractSet, [ju_SequencedSet], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_42", $rt_wrapFunction2(ju_LinkedHashMapKeySet__init_), "$size", $rt_wrapFunction0(ju_LinkedHashMapKeySet_size), "$iterator", $rt_wrapFunction0(ju_LinkedHashMapKeySet_iterator), "$contains", $rt_wrapFunction1(ju_LinkedHashMapKeySet_contains)],
jur_WordBoundary, "WordBoundary", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_146", $rt_wrapFunction1(jur_WordBoundary__init_), "$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName", $rt_wrapFunction0(jur_WordBoundary_getName)],
jl_SystemClassLoader, 0, jl_ClassLoader, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_SystemClassLoader__init_)],
jtf_ResolverStyle, "ResolverStyle", 17, jl_Enum, [], 12, 3, 0, jtf_ResolverStyle_$callClinit, 0,
ju_Comparator$comparingLong$lambda$_15_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$thenComparingLong", $rt_wrapFunction1(ju_Comparator_thenComparingLong), "$_init_86", $rt_wrapFunction1(ju_Comparator$comparingLong$lambda$_15_0__init_)],
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Double_$callClinit, 0,
onnn_Nip39$fetch$lambda$_4_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onnn_Nip39$fetch$lambda$_4_0__init_), "$apply", $rt_wrapFunction1(onnn_Nip39$fetch$lambda$_4_0_apply0), "$apply25", $rt_wrapFunction1(onnn_Nip39$fetch$lambda$_4_0_apply)],
onns_SdanBid$_init_$lambda$_2_0, 0, jl_Object, [juf_ToIntFunction], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(onns_SdanBid$_init_$lambda$_2_0__init_), "$applyAsInt", $rt_wrapFunction1(onns_SdanBid$_init_$lambda$_2_0_applyAsInt0), "$applyAsInt0", $rt_wrapFunction1(onns_SdanBid$_init_$lambda$_2_0_applyAsInt)],
otcit_CachedDateTimeZone, "CachedDateTimeZone", 55, otcit_StorableDateTimeZone, [], 4, 3, 0, otcit_CachedDateTimeZone_$callClinit, ["$getOffset", $rt_wrapFunction1(otcit_CachedDateTimeZone_getOffset), "$getStandardOffset", $rt_wrapFunction1(otcit_CachedDateTimeZone_getStandardOffset), "$asZoneRules", $rt_wrapFunction0(otcit_CachedDateTimeZone_asZoneRules)],
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
onns_SdanBid, "SdanBid", 40, jl_Object, [ji_Serializable, jl_Cloneable], 0, 3, 0, 0, ["$_init_323", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20) { onns_SdanBid__init_(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20); }, "$_init_0", $rt_wrapFunction0(onns_SdanBid__init_1), "$_init_46", $rt_wrapFunction1(onns_SdanBid__init_0),
"$clone13", $rt_wrapFunction0(onns_SdanBid_clone0), "$equals", $rt_wrapFunction1(onns_SdanBid_equals), "$hashCode", $rt_wrapFunction0(onns_SdanBid_hashCode), "$toString", $rt_wrapFunction0(onns_SdanBid_toString), "$getDescription", $rt_wrapFunction0(onns_SdanBid_getDescription), "$getContext", $rt_wrapFunction0(onns_SdanBid_getContext), "$getPayload", $rt_wrapFunction0(onns_SdanBid_getPayload), "$getSize", $rt_wrapFunction0(onns_SdanBid_getSize), "$getLink", $rt_wrapFunction0(onns_SdanBid_getLink), "$getCallToAction",
$rt_wrapFunction0(onns_SdanBid_getCallToAction), "$getBid0", $rt_wrapFunction0(onns_SdanBid_getBid), "$getHoldTime", $rt_wrapFunction0(onns_SdanBid_getHoldTime), "$getActionType", $rt_wrapFunction0(onns_SdanBid_getActionType), "$getMimeType", $rt_wrapFunction0(onns_SdanBid_getMimeType), "$getTier1Category", $rt_wrapFunction0(onns_SdanBid_getTier1Category), "$getTier2Category", $rt_wrapFunction0(onns_SdanBid_getTier2Category), "$getTier3Category", $rt_wrapFunction0(onns_SdanBid_getTier3Category), "$getTier4Category",
$rt_wrapFunction0(onns_SdanBid_getTier4Category), "$getLanguage", $rt_wrapFunction0(onns_SdanBid_getLanguage), "$getTargets", $rt_wrapFunction0(onns_SdanBid_getTargets), "$getId", $rt_wrapFunction0(onns_SdanBid_getId), "$getSlotBid", $rt_wrapFunction0(onns_SdanBid_getSlotBid), "$getSlotSize", $rt_wrapFunction0(onns_SdanBid_getSlotSize), "$getExpirationTimestamp", $rt_wrapFunction0(onns_SdanBid_getExpirationTimestamp), "$isExpired0", $rt_wrapFunction0(onns_SdanBid_isExpired), "$clone0", $rt_wrapFunction0(onns_SdanBid_clone)],
cjj_GZIPException, "GZIPException", 2, ji_IOException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(cjj_GZIPException__init_0)],
jt_Month$1, 0, jl_Object, [jtt_TemporalQuery], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jt_Month$1__init_)],
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 6, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_106", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_64", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0_apply0), "$apply6", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendAnswer$13$lambda$_21_0_apply)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
cjj_CRC32, 0, jl_Object, [cjj_Checksum], 4, 3, 0, cjj_CRC32_$callClinit, ["$_init_0", $rt_wrapFunction0(cjj_CRC32__init_0), "$update", $rt_wrapFunction3(cjj_CRC32_update), "$reset", $rt_wrapFunction0(cjj_CRC32_reset), "$reset0", $rt_wrapFunction1(cjj_CRC32_reset0), "$getValue0", $rt_wrapFunction0(cjj_CRC32_getValue)],
onnrt_NostrTURN$lambda$loop$7$lambda$_14_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_250", $rt_wrapFunction1(onnrt_NostrTURN$lambda$loop$7$lambda$_14_0__init_), "$accept3", $rt_wrapFunction2(onnrt_NostrTURN$lambda$loop$7$lambda$_14_0_accept0), "$accept", $rt_wrapFunction2(onnrt_NostrTURN$lambda$loop$7$lambda$_14_0_accept)],
jl_NumberFormatException, "NumberFormatException", 22, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NumberFormatException__init_1), "$_init_", $rt_wrapFunction1(jl_NumberFormatException__init_)],
onnn_Nip44$decrypt$lambda$_14_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_57", $rt_wrapFunction2(onnn_Nip44$decrypt$lambda$_14_0__init_), "$call0", $rt_wrapFunction0(onnn_Nip44$decrypt$lambda$_14_0_call0), "$call4", $rt_wrapFunction0(onnn_Nip44$decrypt$lambda$_14_0_call)],
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_264", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1__init_), "$apply", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1_apply0), "$apply24", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_1_apply)]]);
$rt_metadata([jtt_IsoFields$Unit, "IsoFields$Unit", 19, jl_Enum, [jtt_TemporalUnit], 12, 0, 0, jtt_IsoFields$Unit_$callClinit, ["$toString", $rt_wrapFunction0(jtt_IsoFields$Unit_toString)],
onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_64", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0_apply0), "$apply6", $rt_wrapFunction1(onnrs_NostrRTCSignaling$lambda$sendOffer$11$lambda$_23_0_apply)],
onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0__init_), "$test0", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0_test0), "$test", $rt_wrapFunction1(onns_NostrNIP46Signer$lambda$listen$8$lambda$_37_0_test)],
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
onnl_NostrNoticeListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
onne_NostrEvent$computeEventId$lambda$_8_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_6", $rt_wrapFunction1(onne_NostrEvent$computeEventId$lambda$_8_0__init_), "$run", $rt_wrapFunction0(onne_NostrEvent$computeEventId$lambda$_8_0_run)],
jn_URL, 0, jl_Object, [ji_Serializable], 4, 3, 0, jn_URL_$callClinit, ["$_init_", $rt_wrapFunction1(jn_URL__init_0), "$_init_327", $rt_wrapFunction3(jn_URL__init_), "$fixURL", $rt_wrapFunction1(jn_URL_fixURL), "$set6", function(var_1, var_2, var_3, var_4, var_5) { jn_URL_set0(this, var_1, var_2, var_3, var_4, var_5); }, "$setupStreamHandler", $rt_wrapFunction0(jn_URL_setupStreamHandler), "$getHost", $rt_wrapFunction0(jn_URL_getHost), "$getPort", $rt_wrapFunction0(jn_URL_getPort), "$getProtocol", $rt_wrapFunction0(jn_URL_getProtocol),
"$getRef", $rt_wrapFunction0(jn_URL_getRef), "$getQuery", $rt_wrapFunction0(jn_URL_getQuery), "$getPath", $rt_wrapFunction0(jn_URL_getPath), "$getUserInfo", $rt_wrapFunction0(jn_URL_getUserInfo), "$getAuthority", $rt_wrapFunction0(jn_URL_getAuthority), "$set4", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { jn_URL_set(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }],
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 6, jur_JointSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction1(jur_HighSurrogateCharSet__init_), "$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_HighSurrogateCharSet_first),
"$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
onne_NostrEvent$computeEventId$lambda$_8_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(onne_NostrEvent$computeEventId$lambda$_8_1__init_), "$run", $rt_wrapFunction0(onne_NostrEvent$computeEventId$lambda$_8_1_run)],
onnn_Nip01UserMetadataFilter, "Nip01UserMetadataFilter", 38, onn_NostrFilter, [], 0, 3, 0, 0, ["$_init_47", $rt_wrapFunction1(onnn_Nip01UserMetadataFilter__init_0)],
onnrs_NostrRTCIceCandidate, "NostrRTCIceCandidate", 30, jl_Object, [onnrs_NostrRTCSignal], 0, 3, 0, 0, ["$_init_307", $rt_wrapFunction3(onnrs_NostrRTCIceCandidate__init_), "$_init_239", $rt_wrapFunction2(onnrs_NostrRTCIceCandidate__init_0), "$getCandidates", $rt_wrapFunction0(onnrs_NostrRTCIceCandidate_getCandidates), "$get20", $rt_wrapFunction0(onnrs_NostrRTCIceCandidate_get), "$toString", $rt_wrapFunction0(onnrs_NostrRTCIceCandidate_toString), "$getPubkey", $rt_wrapFunction0(onnrs_NostrRTCIceCandidate_getPubkey)],
otji_JS$byteArrayWrapper$lambda$_37_0, 0, jl_Object, [otji_JS$WrapFunction], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otji_JS$byteArrayWrapper$lambda$_37_0__init_), "$apply1", $rt_wrapFunction1(otji_JS$byteArrayWrapper$lambda$_37_0_apply0), "$apply26", $rt_wrapFunction1(otji_JS$byteArrayWrapper$lambda$_37_0_apply)],
jtf_DateTimeFormatterBuilder$CompositePrinterParser, "DateTimeFormatterBuilder$CompositePrinterParser", 17, jl_Object, [jtf_DateTimeFormatterBuilder$DateTimePrinterParser], 4, 0, 0, 0, ["$_init_28", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_0), "$_init_328", $rt_wrapFunction2(jtf_DateTimeFormatterBuilder$CompositePrinterParser__init_), "$withOptional", $rt_wrapFunction1(jtf_DateTimeFormatterBuilder$CompositePrinterParser_withOptional), "$parse2", $rt_wrapFunction3(jtf_DateTimeFormatterBuilder$CompositePrinterParser_parse),
"$toString", $rt_wrapFunction0(jtf_DateTimeFormatterBuilder$CompositePrinterParser_toString)],
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$_init_329", $rt_wrapFunction1(otpp_AsyncCallbackWrapper__init_), "$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
onn_NostrRelay$loop$lambda$_26_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_122", $rt_wrapFunction1(onn_NostrRelay$loop$lambda$_26_0__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$loop$lambda$_26_0_run)],
onn_NostrRelay$loop$lambda$_26_1, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$loop$lambda$_26_1__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$loop$lambda$_26_1_run)],
onn_NostrRelay$loop$lambda$_26_2, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$loop$lambda$_26_2__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$loop$lambda$_26_2_run)],
onn_NostrRelay$loop$lambda$_26_3, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_115", $rt_wrapFunction1(onn_NostrRelay$loop$lambda$_26_3__init_), "$call0", $rt_wrapFunction0(onn_NostrRelay$loop$lambda$_26_3_call)],
onn_NostrRelay$loop$lambda$_26_4, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction1(onn_NostrRelay$loop$lambda$_26_4__init_), "$run", $rt_wrapFunction0(onn_NostrRelay$loop$lambda$_26_4_run)],
onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_64", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0__init_), "$apply", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0_apply0), "$apply6", $rt_wrapFunction1(onnrs_NostrRTCSignaling$sendAnnounce$lambda$_9_0_apply)],
jn_URI, 0, jl_Object, [jl_Comparable, ji_Serializable], 4, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jn_URI__init_0), "$toString", $rt_wrapFunction0(jn_URI_toString), "$toURL", $rt_wrapFunction0(jn_URI_toURL)],
onnn_Nip49$encrypt$lambda$_10_0, 0, jl_Object, [juc_Callable], 0, 3, 0, 0, ["$_init_148", $rt_wrapFunction4(onnn_Nip49$encrypt$lambda$_10_0__init_), "$call0", $rt_wrapFunction0(onnn_Nip49$encrypt$lambda$_10_0_call0), "$call4", $rt_wrapFunction0(onnn_Nip49$encrypt$lambda$_10_0_call)],
jm_RoundingMode, "RoundingMode", 14, jl_Enum, [], 12, 3, 0, jm_RoundingMode_$callClinit, 0,
onnrt_NostrTURN$write$lambda$_10_0, 0, jl_Object, [juf_BiConsumer], 0, 3, 0, 0, ["$_init_251", $rt_wrapFunction2(onnrt_NostrTURN$write$lambda$_10_0__init_), "$accept3", $rt_wrapFunction2(onnrt_NostrTURN$write$lambda$_10_0_accept0), "$accept", $rt_wrapFunction2(onnrt_NostrTURN$write$lambda$_10_0_accept)],
jl_IllegalAccessException, "IllegalAccessException", 22, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalAccessException__init_)],
onnn_Nip39ExternalIdentities, "Nip39ExternalIdentities", 31, onnn_Nip01UserMetadata, [], 0, 3, 0, 0, ["$_init_68", $rt_wrapFunction1(onnn_Nip39ExternalIdentities__init_), "$_init_46", $rt_wrapFunction1(onnn_Nip39ExternalIdentities__init_0), "$getExternalIdentities", $rt_wrapFunction0(onnn_Nip39ExternalIdentities_getExternalIdentities), "$setExternalIdentity0", $rt_wrapFunction3(onnn_Nip39ExternalIdentities_setExternalIdentity), "$setExternalIdentity", $rt_wrapFunction1(onnn_Nip39ExternalIdentities_setExternalIdentity0),
"$removeExternalIdentity1", $rt_wrapFunction1(onnn_Nip39ExternalIdentities_removeExternalIdentity0), "$removeExternalIdentity", $rt_wrapFunction1(onnn_Nip39ExternalIdentities_removeExternalIdentity), "$removeExternalIdentity0", $rt_wrapFunction2(onnn_Nip39ExternalIdentities_removeExternalIdentity1), "$getExternalIdentity", $rt_wrapFunction2(onnn_Nip39ExternalIdentities_getExternalIdentity), "$getExternalIdentity0", $rt_wrapFunction1(onnn_Nip39ExternalIdentities_getExternalIdentity0), "$clearExternalIdentities",
$rt_wrapFunction0(onnn_Nip39ExternalIdentities_clearExternalIdentities), "$toUpdateEvent", $rt_wrapFunction0(onnn_Nip39ExternalIdentities_toUpdateEvent)],
jul_LogRecord, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_223", $rt_wrapFunction2(jul_LogRecord__init_0), "$getLevel", $rt_wrapFunction0(jul_LogRecord_getLevel), "$getMessage", $rt_wrapFunction0(jul_LogRecord_getMessage), "$getParameters", $rt_wrapFunction0(jul_LogRecord_getParameters), "$setThrown", $rt_wrapFunction1(jul_LogRecord_setThrown)],
ju_Base64, 0, jl_Object, [], 4, 3, 0, 0, 0,
onn_NostrPool$lambda$fetch$12$lambda$_45_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_188", $rt_wrapFunction2(onn_NostrPool$lambda$fetch$12$lambda$_45_0__init_), "$run", $rt_wrapFunction0(onn_NostrPool$lambda$fetch$12$lambda$_45_0_run)],
ju_Optional, 0, jl_Object, [], 4, 3, 0, 0, ["$orElse", $rt_wrapFunction1(ju_Optional_orElse)],
cjj_Deflate$Config, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_301", function(var_1, var_2, var_3, var_4, var_5) { cjj_Deflate$Config__init_0(this, var_1, var_2, var_3, var_4, var_5); }],
onn_NostrPool$lambda$fetch$14$lambda$_43_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_191", $rt_wrapFunction2(onn_NostrPool$lambda$fetch$14$lambda$_43_0__init_), "$run", $rt_wrapFunction0(onn_NostrPool$lambda$fetch$14$lambda$_43_0_run)],
onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0, "TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0", 49, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$_init_75", $rt_wrapFunction1(onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0__init_), "$accept0", $rt_wrapFunction1(onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0_accept0), "$accept1", $rt_wrapFunction1(onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_0_accept)],
onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1, 0, jl_Object, [juf_Function], 0, 3, 0, 0, ["$_init_219", $rt_wrapFunction4(onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1__init_), "$apply", $rt_wrapFunction1(onpt_TeaVMPlatform$lambda$awaitAll$2$lambda$_46_1_apply)],
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 6, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_9", $rt_wrapFunction1(jur_UMultiLineEOLSet__init_), "$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
jt_LocalDate$1, 0, jl_Object, [], 32, 0, 0, jt_LocalDate$1_$callClinit, 0,
ju_AbstractMap$Values, 0, ju_AbstractCollection, [], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$size", $rt_wrapFunction0(ju_AbstractMap$Values_size), "$iterator", $rt_wrapFunction0(ju_AbstractMap$Values_iterator)],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
otji_JSWrapper$Helper$_clinit_$lambda$_3_1, "JSWrapper$Helper$<clinit>$lambda$_3_1", 52, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_), "$accept0", $rt_wrapFunction1(otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept)],
otji_JSWrapper$Helper$_clinit_$lambda$_3_0, "JSWrapper$Helper$<clinit>$lambda$_3_0", 52, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_), "$accept0", $rt_wrapFunction1(otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept)],
onnn_NostrSearchFilter, "NostrSearchFilter", 41, onn_NostrFilter, [], 0, 3, 0, 0, ["$search", $rt_wrapFunction1(onnn_NostrSearchFilter_search), "$toMap", $rt_wrapFunction0(onnn_NostrSearchFilter_toMap), "$id1", $rt_wrapFunction1(onnn_NostrSearchFilter_id0), "$withAuthor2", $rt_wrapFunction1(onnn_NostrSearchFilter_withAuthor), "$withAuthor1", $rt_wrapFunction1(onnn_NostrSearchFilter_withAuthor2), "$withKind1", $rt_wrapFunction1(onnn_NostrSearchFilter_withKind), "$since0", $rt_wrapFunction1(onnn_NostrSearchFilter_since0),
"$until0", $rt_wrapFunction1(onnn_NostrSearchFilter_until), "$limit1", $rt_wrapFunction1(onnn_NostrSearchFilter_limit), "$withTag3", $rt_wrapFunction2(onnn_NostrSearchFilter_withTag), "$withTag2", $rt_wrapFunction2(onnn_NostrSearchFilter_withTag0), "$limit0", $rt_wrapFunction1(onnn_NostrSearchFilter_limit0), "$until", $rt_wrapFunction1(onnn_NostrSearchFilter_until0), "$since", $rt_wrapFunction1(onnn_NostrSearchFilter_since), "$withKind0", $rt_wrapFunction1(onnn_NostrSearchFilter_withKind0), "$withAuthor0", $rt_wrapFunction1(onnn_NostrSearchFilter_withAuthor0),
"$withAuthor", $rt_wrapFunction1(onnn_NostrSearchFilter_withAuthor1), "$id0", $rt_wrapFunction1(onnn_NostrSearchFilter_id)],
ju_Arrays$ArrayAsList, "Arrays$ArrayAsList", 4, ju_AbstractList, [ju_RandomAccess, ji_Serializable], 0, 0, 0, 0, ["$spliterator", $rt_wrapFunction0(ju_Collection_spliterator), "$stream", $rt_wrapFunction0(ju_Collection_stream), "$_init_111", $rt_wrapFunction1(ju_Arrays$ArrayAsList__init_), "$get", $rt_wrapFunction1(ju_Arrays$ArrayAsList_get), "$set0", $rt_wrapFunction2(ju_Arrays$ArrayAsList_set), "$size", $rt_wrapFunction0(ju_Arrays$ArrayAsList_size)],
onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, ["$_init_173", $rt_wrapFunction3(onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0__init_), "$run", $rt_wrapFunction0(onns_NostrNIP46Signer$lambda$listen$6$lambda$_39_0_run)]]);
let $rt_booleanArrayCls = $rt_arraycls($rt_booleancls),
$rt_charArrayCls = $rt_arraycls($rt_charcls),
$rt_byteArrayCls = $rt_arraycls($rt_bytecls),
$rt_shortArrayCls = $rt_arraycls($rt_shortcls),
$rt_intArrayCls = $rt_arraycls($rt_intcls),
$rt_longArrayCls = $rt_arraycls($rt_longcls);
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "Stream is closed", "need dictionary", "unknown compression method", "unknown header flags set", "incorrect data check", "incorrect length check", "incorrect header check", "invalid window size", "bad extra field length", "header crc mismatch", "(this Collection)", ", ", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", ": ", "The value is too big for int type: ", "The value is too big for integer type",
"Illegal radix: ", "toMap() not implemented", "OK", "", "Replacement preconditions do not hold", "Action must be non-null", "Events was already seen: ", "\nFirst seen stacktrace: ", "\nEvent: ", "\n\tat ", "CI sequence: ", "fSet", "BehindFSet", "field", "The width must be from 1 to 19 inclusive but was ", "signStyle", "The maximum width must exceed or equal the minimum width but ", " < ", "The maximum width must be from 1 to 19 inclusive but was ", "The minimum width must be from 1 to 19 inclusive but was ",
"textLookup", "ZoneRegionId()", "literal", "formatter", "Cannot call optionalEnd() as there was no previous call to optionalStart()", "pp", "locale", "JointSet", " ", "^ ", "range:", "Unsupported field: ", "offset", "date", "time", "Cause already set", "Circular causation relation", "\tat ", "Caused by: ", "TreeNode[", "taxonomy=", ", children=", "]", "NostrKeyPairSigner{keyPair=", "(this Map)", "<GroupQuant>", "001", "ERA=", "YEAR=", "MONTH=", "WEEK_OF_YEAR=", "WEEK_OF_MONTH=", "DAY_OF_MONTH=", "DAY_OF_YEAR=",
"DAY_OF_WEEK=", "DAY_OF_WEEK_IN_MONTH=", "AM_PM=", "HOUR=", "HOUR_OF_DAY", "MINUTE=", "SECOND=", "MILLISECOND=", "ZONE_OFFSET=", "DST_OFFSET=", "nostr-content-taxonomy.csv", "\n", "#", ",", "Invalid CSV format: ", " parts found, expected 8", " (", ")\n", "  ", "NostrContentTaxonomy:\n", "null", "false", "true", "Coordinates[", "type=", ", kind=", ", coords=", "New position ", " is outside of range [0;", "Nonce must be 32 bytes", "Conversation key must be 32 bytes", "Expected positive integer", "unknown encryption version",
"unknown encryption version ", "invalid data length: ", "invalid payload length: ", "invalid MAC - message authentication failed", "invalid padding", "nip44-v2", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar",
"javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan",
"Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols",
"NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended",
"SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates",
"LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc",
"Sk", "So", "Pi", "Pf", "bunker://", "&relay=", "?relay=", "&secret=", "http://", "&", "secret", "relay", "Can\'t compare ", " to ", "Class does not represent enum", "Enum ", " does not have the ", " constant", "FULL", "FULL_STANDALONE", "SHORT", "SHORT_STANDALONE", "NARROW", "NARROW_STANDALONE", "AheadFSet", "HTTP error: ", "Invalid event kind", "Invalid metadata", "name", "about", "picture", "display_name", "displayName", "username", "website", "banner", "bot", "birthday", "year", "month", "day", "NonCapJointSet",
"PosLookaheadJointSet", "NegLookaheadJointSet", "Blocking await() is not supported in TeaVM", "Unimplemented method \'cancel\'", "Capacity is negative: ", "invalid distance code", "invalid literal/length code", "charsetName is null", "Should never been thrown", "Error processing ack task: ", "Ack results - At least one non-failed: ", ", At least one success: ", "PosBehindJointSet", "US-ASCII", "Invalid date \'DayOfYear 366\' as \'", "\' is not a leap year", "Unable to obtain LocalDate from TemporalAccessor: ",
", type ", "Invalid date \'February 29\' as \'", "Invalid date \'", "Field too large for an int: ", "Unsupported unit: ", "-", "-0", "stun.cloudflare.com:3478", "stun.l.google.com:19302", "stun.l.google.com:5349", "stun1.l.google.com:3478", "stun1.l.google.com:5349", "stun2.l.google.com:19302", "stun2.l.google.com:5349", "stun3.l.google.com:3478", "stun3.l.google.com:5349", "stun4.l.google.com:19302", "stun4.l.google.com:5349", "stunserver2024.stunprotocol.org:3478", "Id must not be null", "ByteBuffer should not be empty",
"Data position must be 0", "nsec", "Invalid npub key", "Invalid nsec key", "decomposed char:", "EOSE", "Room key pair cannot be null", "Settings cannot be null", "Local peer cannot be null", "Signaling pool cannot be null", "Remote peer has precedence over local peer: ", " > ", "Local peer has precedence over remote peer: ", "No socket found for peer: ", "Kicking peer: ", "Error notifying listener", "Closed peer: ", "Peer already banned: ", "Banning peer: ", "Unbanning peer: ", "Remove announce: ", " reason: ",
"Forfeiting connection to peer: ", " because remote peer has precedence over local peer and is initiating the connection", "Connecting to peer: ", "No pending connection for peer: ", "Received answer, finalizing connection to peer: ", "Received ICE candidate: ", "Error sending local ICE candidate", "Received message from peer: ", " : ", " turn: ", "Connected to peer: ", "Sending answer to remote peer: ", "Error sending answer", "Pending connection timed out: ", "Initiating connection to: ", "Error in loop: ",
"Sending offer to remote peer: ", "Error sending offer", "NegBehindJointSet", "Clone not supported", "NostrTURNSettings{chunkLength=", ", packetTimeout=", ", maxLatency=", ", loopInterval=", "printerParser", "decimalStyle", "resolverStyle", "text", "type", "...", "Text \'", "\' could not be parsed: ", "\' could not be parsed, unparsed text found at index ", "\' could not be parsed at index ", "position", "-W", "+HHMMss", "Z", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", "Jan", "Feb", "Mar", "Apr", "May",
"Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "+HHMM", "GMT", "<Quant>", "interface ", "class ", "<init>", " is not subtype of ", "/", "Unknown zone type: ", "*", "\'", "\'\'", ":00", "Instant()", "transition", "offsetBefore", "offsetAfter", "Offsets must not be equal", "Nano-of-second must be zero", "Transition[", "Overlap", "Gap", " at ", "Error creating NostrRelay", "Error getting relay info", "Unknown message type: ", "Error in onConnectionMessage: ", "Connection closed by server: ", "Error in onConnectionClosedByServer: ",
"Connection closed by client: ", "Error in onConnectionClosedByClient: ", "Event status timeout", "Error in loop (1)", "Error in onConnectionError: ", "Error cancelled by component: ", "Error ignored by component: ", "Stop loop - disconnected by client: ", "Loop cancelled by component: ", "Loop ignored by component: ", "Event Ack timeout: ", "Disconnect ignored by component: ", "Disconnect cancelled by component: ", "Event verification failed", "Message cancelled by component: ", "Error processing message",
"Message ignored by component: ", "Received ack for unknown event: ", "Received ack for event: ", " success: ", " message: ", "Received message: ", "Connection opened: ", "Connection ignored by component: ", "Connection cancelled by component: ", "Error in connect callback", "Sending queued message: ", "Disconnecting from relay!!: ", "Connecting to relay: ", "failed to connect", "Duplicate message in queue: ", "message ignored by component", "message cancelled by component ", "Error sending message (0)", "Error sending message (1)",
"ok", "Message sent: ", "Error sending message", "ack (rejected): ", "ack: ", "Relay not connected, queueing message: ", "temporal", "Invalid state, field: ", " conflicts with ", "AtomicFSet", "This buffer is not allocated in linear memory and does not wrap native JS buffer", "SdanTaxonomyTerm[", "id=", ", parent=", ", name=", ", tier1=", ", tier2=", ", tier3=", ", tier4=", ", extension=", "WebSocket not connected", "Closed by client", "Error in onConnectionClosedByClient listener", "WebSocket error", "Error in onConnectionMessage listener",
"Error in onConnectionOpen listener", "NANOS", "Nanos", "MICROS", "Micros", "MILLIS", "Millis", "SECONDS", "Seconds", "MINUTES", "Minutes", "HOURS", "Hours", "HALF_DAYS", "HalfDays", "DAYS", "Days", "WEEKS", "Weeks", "MONTHS", "Months", "YEARS", "Years", "DECADES", "Decades", "CENTURIES", "Centuries", "MILLENNIA", "Millennia", "ERAS", "Eras", "FOREVER", "Forever", "UTF-8", "<MultiLine $>", "ONLINE", "OFFLINE", "Error occurred: ", "ncryptsec", "logn must be be >= 1", "logn is too large for the specified memory limit",
"Failed to encrypt", "Invalid ncryptsec prefix", "Invalid ncryptsec", "Unsupported version number", "logn must be between 1 and 30", "Invalid password", "Invalid private key length", "Failed to decrypt", "EXPIRED", "DISCONNECTED", "UNKNOWN", "Unknown mode: ", "Text(", "Value(", "baseStandardOffset", "baseWallOffset", "standardOffsetTransitionList", "transitionList", "lastRules", "Too many transition rules", "StandardZoneRules[currentStandardOffset=", "NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "NOTICE", "Malformed input of length ",
"PT0S", "PT", "Negative bit address", "Negative exponent", "BigInteger divide by zero", "zoneId", "Invalid zone: ", "+", "UTC", "UT", "UTC+", "GMT+", "UTC-", "GMT-", "UT+", "UT-", "prefix", "Invalid prefix, must be GMT, UTC or UT: ", "Invalid subclass", "ACT", "Australia/Darwin", "AET", "Australia/Sydney", "AGT", "America/Argentina/Buenos_Aires", "ART", "Africa/Cairo", "AST", "America/Anchorage", "BET", "America/Sao_Paulo", "BST", "Asia/Dhaka", "CAT", "Africa/Harare", "CNT", "America/St_Johns", "CST", "America/Chicago",
"CTT", "Asia/Shanghai", "EAT", "Africa/Addis_Ababa", "ECT", "Europe/Paris", "IET", "America/Indiana/Indianapolis", "IST", "Asia/Kolkata", "JST", "Asia/Tokyo", "MIT", "Pacific/Apia", "NET", "Asia/Yerevan", "NST", "Pacific/Auckland", "PLT", "Asia/Karachi", "PNT", "America/Phoenix", "PRT", "America/Puerto_Rico", "PST", "America/Los_Angeles", "SST", "Pacific/Guadalcanal", "VST", "Asia/Ho_Chi_Minh", "EST", "-05:00", "MST", "-07:00", "HST", "-10:00", "offsetId", "Invalid ID for ZoneOffset, invalid format: ", "Invalid ID for ZoneOffset, plus/minus not found when expected: ",
"Invalid ID for ZoneOffset, colon not found when expected: ", "Invalid ID for ZoneOffset, non numeric characters found: ", "Zone offset minutes and seconds must be positive because hours is positive", "Zone offset minutes and seconds must be negative because hours is negative", "Zone offset minutes and seconds must have the same sign", "Zone offset minutes not in valid range: abs(value) ", " is not in the range 0 to 59", "Zone offset seconds not in valid range: abs(value) ", "Zone offset not in valid range: -18:00 to +18:00",
"Zone offset hours not in valid range: value ", " is not in the range -18 to 18", "0", ":", ":0", "CI back reference: ", "UCI sequence: ", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ", "[", "Index is ", ", size is ", "FinalSet", "<Empty set>", "noOffsetText", "pattern", "Invalid zone offset pattern: ", "Offset(", ",\'", "\')", "+HH", "+HHmm", "+HH:mm", "+HH:MM", "+HH:MM:ss", "+HHMMSS", "+HH:MM:SS", "Platform not set, using default JVM platform.", "org.ngengine.platform.jvm.JVMAsyncPlatform", "Failed to load default platform: ",
"sub", "signer", "pool", "expiration", "Serialized event: ", "Serializing event: ", "kind", "content", "sig", "pubkey", "id", "created_at", "tags", "EVENT", "e", "a", "note", "Invalid value for DayOfWeek: ", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY", "invalid stored block lengths", "invalid block type", "too many length or distance symbols", "invalid bit length repeat", "�", "averageCharsPerByte must be positive. Actual value is ", "maxCharsPerByte must be positive. Actual value is ",
"newAction must be non-null", "ISO", "Invalid value for era: ", "Strict mode rejected date parsed to a different month", "Strict mode rejected date parsed to a different year", "und", "en", "CA", "fr", "zh", "CN", "FR", "de", "DE", "it", "IT", "ja", "JP", "ko", "KR", "TW", "GB", "US", "Unable to create event tracker", "received closed for unknown subscription ", "received closed for subscription ", " from ", " for reason: ", " isClosedEverywhere: ", "received invalid eose for subscription ", " from relay ",
"received eose for subscription ", " isEOSEEverywhere: ", "Received notice from relay ", "Error in notice listener", "Received event for unknown subscription ", "Error processing message from relay ", "Event already seen ", " for subscription ", "Event not seen ", "received event for subscription ", "received message from relay ", "fetch close ", "fetch event ", "fetch eose for fetch ", " with received events: ", "fetch timeout for fetch ", "timeout", "Initialize fetch of ", " with timeout ", "closing subscription ",
"opening subscription ", "subscribing to ", " with filter ", "Failed to send message ", " to relay ", "Failed to send message to all relays. (", "sending message to relay ", "00", "object", "function", "string", "number", "undefined", "symbol", "bigint", "boolean", "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL", "^", "WALL", "STANDARD", "PreviousMatch", "Unknown action type: ", "LINK", "link", "VIEW", "view", "CONVERSION", "conversion", "ATTENTION", "attention", "NonCapFSet",
"UCI ", "UCI range:", "Invalid platform: ", "ExternalIdentity{platform=\'", "\', identity=\'", "\', proof=", "CLOSE", "//", "////", "/./", "/.", "/../", "/..", "Input is not a number: ", "Input is out of range for int: ", "Input is not a string array: ", "Input is not a boolean: ", "Debug statement failed", "0123456789abcdef", "Invalid ID for region-based ZoneId, invalid format: ", "GMT0", "nostrconnect://", "?", "relay=", "secret=", "&perms=", "&name=", "&url=", "&image=", "url", "image", "perms", "No relay urls found",
"No secret found", "No client pubkey found", "Unimplemented method \'newRTCTransport\'", "Unimplemented method \'scrypt\'", "Unimplemented method \'xchacha20poly1305\'", "Unimplemented method \'nfkc\'", "ParseCaseSensitive(false)", "ParseStrict(true)", "ParseStrict(false)", "Unreachable", "ParseCaseSensitive(true)", "SENSITIVE", "INSENSITIVE", "STRICT", "LENIENT", "SUCCESS", "FAILURE", "PENDING", "<SOL>", "Accept", "application/nostr+json", "wss://", "ws://", "https://", "Failed to clone NostrRelayInfo", "description",
"icon", "npub", "contact", "supported_nips", "software", "version", "privacy_policy", "terms_of_service", "nip-", "nip", "limitation", "countries", "language_tags", "posting_policy", "default", "public", "protected", "private", "abstract", "static", "final", "transient", "volatile", "synchronized", "native", "strictfp", "interface", "NANO_OF_SECOND", "NanoOfSecond", "NANO_OF_DAY", "NanoOfDay", "MICRO_OF_SECOND", "MicroOfSecond", "MICRO_OF_DAY", "MicroOfDay", "MILLI_OF_SECOND", "MilliOfSecond", "MILLI_OF_DAY",
"MilliOfDay", "SECOND_OF_MINUTE", "SecondOfMinute", "SECOND_OF_DAY", "SecondOfDay", "MINUTE_OF_HOUR", "MinuteOfHour", "MINUTE_OF_DAY", "MinuteOfDay", "HOUR_OF_AMPM", "HourOfAmPm", "CLOCK_HOUR_OF_AMPM", "ClockHourOfAmPm", "HourOfDay", "CLOCK_HOUR_OF_DAY", "ClockHourOfDay", "AMPM_OF_DAY", "AmPmOfDay", "DAY_OF_WEEK", "DayOfWeek", "ALIGNED_DAY_OF_WEEK_IN_MONTH", "AlignedDayOfWeekInMonth", "ALIGNED_DAY_OF_WEEK_IN_YEAR", "AlignedDayOfWeekInYear", "DAY_OF_MONTH", "DayOfMonth", "DAY_OF_YEAR", "DayOfYear", "EPOCH_DAY",
"EpochDay", "ALIGNED_WEEK_OF_MONTH", "AlignedWeekOfMonth", "ALIGNED_WEEK_OF_YEAR", "AlignedWeekOfYear", "MONTH_OF_YEAR", "MonthOfYear", "PROLEPTIC_MONTH", "ProlepticMonth", "YEAR_OF_ERA", "YearOfEra", "YEAR", "Year", "ERA", "Era", "INSTANT_SECONDS", "InstantSeconds", "OFFSET_SECONDS", "OffsetSeconds", "Nip46AppMetadata{name=\'", "\', url=\'", "\', image=\'", "\', perms=", "<EOL>", "Is", "In", " .-*_", "0123456789ABCDEF", "Subscription not opened yet", "Subscription already opened", "closed by client", "REQ",
"Error calling Close listener: ", "Error calling Event listener: ", "Error calling EOSE listener: ", "No time-zone data files registered", "Unknown time-zone ID: ", "Unable to register zone as one already registered with that ID: ", ", currently loading from provider: ", "UnsignedNostrEvent{", "\tcreatedAt=", ",\n\tkind=", ",\n\tcontent=\'", ",\n\ttags=\n", "\t\t", "sdp", "turn", "NostrRTCAnswer{pubkey=", ", sdp=\'", "\', turnServer=\'", "\', map=", ", peerInfo=", "NORMAL", "ALWAYS", "NEVER", "NOT_NEGATIVE",
"EXCEEDS_PAD", "main", "timeDefnition", "standardOffset", "Time must be midnight when end of day flag is true", "Day of month indicator must be between -28 and 31 inclusive excluding zero", "TransitionRule[", "Overlap ", "Gap ", " on or before last day of ", " on or after ", " on or before last day minus ", " of ", ", standard offset ", "String index out of bounds: ", "UCI back reference: ", "Turn server cannot be empty", "offer", "NostrRTCOffer{pubkey=", ", map=", ", offerString=\'", "\', peerInfo=", "BIG_ENDIAN",
"LITTLE_ENDIAN", "<DotAllQuant>", "ids", "authors", "kinds", "since", "until", "limit", "Disconnecting from relay: ", " for inactivity", "Untracking subscription: ", "Subscription already tracked: ", "Tracking new subscription: ", "Events are not in order (2)", "Events are not in order", "Cut off time is in the future ", "Invalid number of events to remove", "Cut off time is invalid", "Too many events", "connectionId cannot be null", "localPeer cannot be null", "remotePeer cannot be null", "config cannot be null",
"Connecting to local TURN server: ", "turn-", "Connecting to remote TURN server: ", "Received packet with id ", " but current packet is ", "ack", "Error running listener: ", "Error decompressing data: ", "Packet ", " fully acked ", "Error running callback: ", " timeout ", "Packet timeout", "pkt", "Error in TURN loop: ", "closed", "CONCURRENT", "UNORDERED", "IDENTITY_FINISH", "Malformed nip05 data", "_", "nip46", "relays", "nostrconnect", "names", "zone", "sequence: ", "r", "connect", "disconnect", "t", "answer",
"candidate", "p", "Already closed", "Signaling not started", "Closing signaling", "Sending candidates: ", "Sending answer: ", "Sending offer: ", "Error in loop", "Error in onRemoveAnnounce", "Opened subscriptions: ", "Error in onAddAnnounce", "Error in onUpdateAnnounce", "Received disconnect event: ", "Unknown event type: ", "Received offer from: ", "Error in onReceiveOffer", "Received answer from: ", "Error in onReceiveAnswer", "Error in onReceiveCandidates", "Error processing event", "Received candidate event from: ",
"Error decrypting event: ", "Update announce: ", "pos is ", "IGNORE", "REPLACE", "REPORT", "Invalid value for MonthOfYear: ", "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER", "back reference: ", "<DotQuant>", "nip46-signer: ", "Cancelling expired challenge: ", "Challenge expired", "Cancelling expired request: ", "Request expired", "Connecting to bunker: ", " relays: ", "Listening for nostrconnect: ", "Closed", "Creating executor", "Received unexpected event with kind: ",
"Received event from unknown signer: ", " but spontaneous connection is not allowed since we are already connected", "error", "result", "No listener for id: ", "Spontaneous connection without payload verification are forbidden", "Invalid payload for id: ", " with method: ", "auth_url", "Received challenge for id: ", "Received challenge, but no handler set", "Challenge received, but no handler set", "Calling challenge handler for id: ", "Challenge handler returned: ", "Challenge already pending for id: ", "Closing challenge for id: ",
"Error for id: ", "Received spontaneous connection response, but we are already got connected in the meantime", "Already connected", "Registering signer pubkey for spontaneous connection: ", "sign_event", "nip44_encrypt", "nip44_decrypt", "get_public_key", "Failed to sign event", "method", "params", "Failed to send RPC request", "Sending request: ", "Waiting for response: ", " id: ", " timeout: ", "Success for id: ", "Verifying payload ", "Received response: ", "Received event from known signer: ", " == ", " != ",
" initializing spontaneous connection flow", "Creating listeners map", "Creating pending challenges map", "Creating pool", "Creating subscription for filter: ", "Opening subscription: ", "Subscription already opened: ", "Subscription opened: ", "Received nostrconnect payload: ", "Cancelling other connect request: ", "connected via nostrconnect", " secret: ", " valid: ", "Connected to bunker: ", "connected via bunker", "Already closed: ", "Closing signer: ", "UNTRUSTED", "Rounding necessary", "Overflow", "Underflow",
".", "CI ", "SIZE_120x90", "120x90", "SIZE_180x150", "180x150", "SIZE_728x90", "728x90", "SIZE_300x250", "300x250", "SIZE_720x300", "720x300", "SIZE_240x400", "240x400", "SIZE_250x250", "250x250", "SIZE_300x600", "300x600", "SIZE_160x600", "160x600", "SIZE_336x280", "336x280", "UTF-16", "UTF-16BE", "UTF-16LE", "CLOSED", "ISO-8859-1", "public:", "NostrRTCPeer{pubkey=", ", misc=", ", turnServer=\'", "\', lastSeen=", "[]", "expected data buffer to be at position 0", "qpzry9x8gf2tvdw0s3jn54khce6mua7l", "invalid checksum buffer",
"invalid bech32 checksum", "invalid bech32 character ", "invalid bech32 string", "bech32 characters  out of range", "could not convert bits", "input value is outside of range", "posFSet", "Error processing NIP-24 metadata", "Patter is null", "\\Q", "\\E", "\\\\E\\Q", "Field must have a fixed set of values: ", "Maximum width must exceed or equal the minimum width but ", "Maximum width must be from 1 to 9 inclusive but was ", "Minimum width must be from 0 to 9 inclusive but was ", ",DecimalPoint", "Fraction(",
"NostrRTCLocalPeer{pubkey=", ", stunServers=", "nostr4j", "Unmappable characters of length ", "oversubscribed dynamic bit lengths tree", "incomplete dynamic bit lengths tree", "oversubscribed distance tree", "incomplete distance tree", "empty distance tree with lengths", "oversubscribed literal/length tree", "incomplete literal/length tree", "BTC10_000", "BTC100_000", "BTC1_000_000", "BTC2_000_000", "BTC5_000_000", "BTC10_000_000", "BTC50_000_000", "Conflict found: ", " differs from ", "ChronoZonedDateTime must use the effective parsed zone: ",
"Unknown type: ", "Badly written field", "ChronoLocalDate must use the effective parsed chronology: ", " while resolving  ", "Conflict found: Field ", " derived from ", "Cross check failed: ", " vs ", "Field not found: ", "DateTimeBuilder[", "fields=", "stream end", "file error", "stream error", "data error", "insufficient memory", "buffer error", "incompatible version", "localDateTime", "instant", "Minimum value must be less than maximum value", "Smallest minimum value must be less than largest minimum value",
"Smallest maximum value must be less than largest maximum value", "Invalid value (valid values ", "): ", "Invalid value for ", " (valid values ", "Invalid int value for ", " - ", "The value is too big for long type: ", "The value is too big for long type", "DAY_OF_QUARTER", "QUARTER_OF_YEAR", "WEEK_OF_WEEK_BASED_YEAR", "WEEK_BASED_YEAR", "Executor cannot be null", "Connection ID cannot be null", "Local Peer cannot be null", "TURN Settings cannot be null", "Closing RTC Socket", "Error closing transport: ", "Error closing TURN: ",
"Error closing socket: ", "Listening for RTC connections on connection ID: ", "Creating RTC transport for connection ID: ", "Initiating RTC channel for connection ID: ", "Error while listening for RTC connections: ", "Error while listening for RTC connections", "Connecting to RTC socket ", "Invalid RTC signal type", "Not connected", "Remote Peer cannot be null", "Use offer to connect", "Initializing TURN connection", "Received local ICE candidate: ", "Link established", "RTC disconnected: ", "Using TURN: ",
"Error emitting message: ", "RTC Channel Error ", "Forcing TURN usage", "Send message p2p", "Send message with turn", "Connected to RTC socket", "Connected to RTC socket, received answer ", "Use offer string: ", " to connect with connection ID: ", "Ready to send offer ", " to connection ID: ", "Emitting ICE candidates ", "Error emitting ICE candidates: ", "Unknown MIME type: ", "IMAGE_JPEG", "image/jpeg", "IMAGE_PNG", "image/png", "IMAGE_GIF", "image/gif", "TEXT_PLAIN", "text/plain", "TEXT_MARKDOWN", "text/markdown",
"dayOfWeek", "Invalid parameter: enc", "Incomplete % sequence at: ", "Invalid % sequence (", ") at ", "+-.", "_-!.~\'()*,;:$&+=?/[]@", "@[]_-!.~\'()*,;:$&+=", "/@_-!.~\'()*,;:$&+=", "_-!.~\'()*,;:$&+=?/[]@\\\"", "-.", ")", "Pad(", "FixedRules:", "Error: ", "NostrRTCAnnounce{publicKey=", ", expireAt=", "Unable to obtain Instant from TemporalAccessor: ", "Instant exceeds minimum or maximum instant", "^[a-z0-9._\\-/]*$", "EOI", "DayOfQuarter", "Unsupported field: DayOfQuarter", "QuarterOfYear", "Unsupported field: QuarterOfYear",
"Initial delay must be positive", "Max delay must be >= initial delay", "Multiplier must be > 1.0", "Cooldown period must be positive", "WeekOfWeekBasedYear", "Unsupported field: WeekOfWeekBasedYear", "WeekBasedYear", "Unsupported field: WeekBasedYear", "ResponseListener: ", "Request cancelled: ", "GMT+00:00", "KeyPair{publicKey=", ", privateKey=", "Either src or dest is null", "DotAll", "decomposed Hangul syllable:", "ByteBuffer should be at position 0", "data should be at position 0", "Invalid public key length",
"power of ten too big", "WordBoundary", "SMART", "Description cannot be null", "Payload cannot be null", "Size cannot be null", "Link cannot be null", "Hold time cannot be null", "Action type cannot be null", "MIME type cannot be null", "ID cannot be null", "Slot bid cannot be null", "Slot size cannot be null", "Event cannot be null", "context", "payload", "call_to_action", "bid", "hold_time", "size", "k", "m", "f", "Invalid SDAN bid event: ", "h", "H", "T", "l", "Missing required tag: ", "Cloning not supported",
"SdanBid{description=\'", "\', context=\'", "\', payload=\'", "\', size=", ", link=\'", "\', callToAction=\'", "\', bid=", ", holdTime=", ", actionType=", ", mimeType=", ", tier1Category=\'", "\', tier2Category=\'", "\', tier3Category=\'", "\', tier4Category=\'", "\', language=\'", "\', targets=", ", id=\'", "\', slotBid=", ", slotSize=", ", expirationTimestamp=", "WEEK_BASED_YEARS", "WeekBasedYears", "QUARTER_YEARS", "QuarterYears", "ftp", "http", "https", "candidates", ", candidates=\'", "\'}", "(", "UP",
"DOWN", "CEILING", "FLOOR", "HALF_UP", "HALF_DOWN", "HALF_EVEN", "UNNECESSARY", "i", "<Unix MultiLine $>", "search"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
let $rt_jso_marker = Symbol('jsoClass');
(() => {
    let c;
    c = onnpi_NostrOKMessage.prototype;
    c.getMessage = $rt_callWithReceiver(onnpi_NostrOKMessage_getMessage$exported$1);
    c.throwException = $rt_callWithReceiver(onnpi_NostrOKMessage_throwException$exported$4);
    c.getEventId = $rt_callWithReceiver(onnpi_NostrOKMessage_getEventId$exported$3);
    c.isSuccess = $rt_callWithReceiver(onnpi_NostrOKMessage_isSuccess$exported$0);
    c = $rt_export_class_NostrOKMessage_8;
    c.parse = onnpi_NostrOKMessage_parse$exported$0;
    c = onnet_FailOnDoubleTracker.prototype;
    c.stackTraceToString = $rt_callWithReceiver(onnet_FailOnDoubleTracker_stackTraceToString$exported$2);
    c.tuneFor = $rt_callWithReceiver(onnet_FailOnDoubleTracker_tuneFor$exported$3);
    c.clear = $rt_callWithReceiver(onnet_FailOnDoubleTracker_clear$exported$4);
    c.seen = $rt_callWithReceiver(onnet_FailOnDoubleTracker_seen$exported$1);
    c = onns_SdanTaxonomy$TreeNode.prototype;
    c.children = $rt_callWithReceiver(onns_SdanTaxonomy$TreeNode_children$exported$0);
    c.hashCode = $rt_callWithReceiver(onns_SdanTaxonomy$TreeNode_hashCode$exported$4);
    c.equals = $rt_callWithReceiver(onns_SdanTaxonomy$TreeNode_equals$exported$2);
    c.toString = $rt_callWithReceiver(onns_SdanTaxonomy$TreeNode_toString$exported$1);
    c.taxonomy = $rt_callWithReceiver(onns_SdanTaxonomy$TreeNode_taxonomy$exported$3);
    c = onns_NostrKeyPairSigner.prototype;
    c.lambda$getPublicKey$4 = $rt_callWithReceiver(onns_NostrKeyPairSigner_lambda$getPublicKey$4$exported$4);
    c.sign = $rt_callWithReceiver(onns_NostrKeyPairSigner_sign$exported$0);
    c.getPublicKey = $rt_callWithReceiver(onns_NostrKeyPairSigner_getPublicKey$exported$13);
    c.lambda$sign$0 = $rt_callWithReceiver(onns_NostrKeyPairSigner_lambda$sign$0$exported$9);
    c.getKeyPair = $rt_callWithReceiver(onns_NostrKeyPairSigner_getKeyPair$exported$10);
    c.hashCode = $rt_callWithReceiver(onns_NostrKeyPairSigner_hashCode$exported$6);
    c.encrypt = $rt_callWithReceiver(onns_NostrKeyPairSigner_encrypt$exported$7);
    c.equals = $rt_callWithReceiver(onns_NostrKeyPairSigner_equals$exported$3);
    c.clone = $rt_callWithReceiver(onns_NostrKeyPairSigner_clone$exported$14);
    c.lambda$close$5 = $rt_callWithReceiver(onns_NostrKeyPairSigner_lambda$close$5$exported$1);
    c.toString = $rt_callWithReceiver(onns_NostrKeyPairSigner_toString$exported$2);
    c.decrypt = $rt_callWithReceiver(onns_NostrKeyPairSigner_decrypt$exported$8);
    c.close = $rt_callWithReceiver(onns_NostrKeyPairSigner_close$exported$11);
    c = $rt_export_class_NostrKeyPairSigner_39;
    c.lambda$encrypt$1 = onns_NostrKeyPairSigner_lambda$encrypt$1$exported$3;
    c.lambda$encrypt$2 = onns_NostrKeyPairSigner_lambda$encrypt$2$exported$2;
    c.lambda$decrypt$3 = onns_NostrKeyPairSigner_lambda$decrypt$3$exported$1;
    c.generate = onns_NostrKeyPairSigner_generate$exported$0;
    c = $rt_export_class_Nip01_43;
    c.lambda$update$1 = onnn_Nip01_lambda$update$1$exported$4;
    c.fetch = onnn_Nip01_fetch$exported$2;
    c.update = onnn_Nip01_update$exported$3;
    c.from = onnn_Nip01_from$exported$0;
    c.lambda$fetch$0 = onnn_Nip01_lambda$fetch$0$exported$5;
    c = onns_SdanTaxonomy.prototype;
    c.loadCSV = $rt_callWithReceiver(onns_SdanTaxonomy_loadCSV$exported$3);
    c.getTree = $rt_callWithReceiver(onns_SdanTaxonomy_getTree$exported$5);
    c.getById = $rt_callWithReceiver(onns_SdanTaxonomy_getById$exported$9);
    c.hashCode = $rt_callWithReceiver(onns_SdanTaxonomy_hashCode$exported$8);
    c.equals = $rt_callWithReceiver(onns_SdanTaxonomy_equals$exported$6);
    c.toString = $rt_callWithReceiver(onns_SdanTaxonomy_toString$exported$7);
    c.getByTerm = $rt_callWithReceiver(onns_SdanTaxonomy_getByTerm$exported$2);
    c = onne_NostrEvent$Coordinates.prototype;
    c.kind = $rt_callWithReceiver(onne_NostrEvent$Coordinates_kind$exported$0);
    c.hashCode = $rt_callWithReceiver(onne_NostrEvent$Coordinates_hashCode$exported$6);
    c.equals = $rt_callWithReceiver(onne_NostrEvent$Coordinates_equals$exported$3);
    c.toString = $rt_callWithReceiver(onne_NostrEvent$Coordinates_toString$exported$2);
    c.type = $rt_callWithReceiver(onne_NostrEvent$Coordinates_type$exported$5);
    c.coords = $rt_callWithReceiver(onne_NostrEvent$Coordinates_coords$exported$4);
    c = $rt_export_class_Nip44_49;
    c.lambda$encrypt$0 = onnn_Nip44_lambda$encrypt$0$exported$18;
    c.encryptSync = onnn_Nip44_encryptSync$exported$6;
    c.lambda$encrypt$1 = onnn_Nip44_lambda$encrypt$1$exported$17;
    c.getMessageKeys = onnn_Nip44_getMessageKeys$exported$2;
    c.getConversationKey = onnn_Nip44_getConversationKey$exported$14;
    c.safeNonce = onnn_Nip44_safeNonce$exported$1;
    c.constantTimeEquals = onnn_Nip44_constantTimeEquals$exported$9;
    c.lambda$getConversationKey$3 = onnn_Nip44_lambda$getConversationKey$3$exported$15;
    c.decryptSync = onnn_Nip44_decryptSync$exported$8;
    c.pad = onnn_Nip44_pad$exported$4;
    c.calcPaddedLength = onnn_Nip44_calcPaddedLength$exported$3;
    c.decodePayload = onnn_Nip44_decodePayload$exported$7;
    c.encrypt = onnn_Nip44_encrypt$exported$12;
    c.getConversationKeySync = onnn_Nip44_getConversationKeySync$exported$0;
    c.concatBytes = onnn_Nip44_concatBytes$exported$10;
    c.lambda$decrypt$2 = onnn_Nip44_lambda$decrypt$2$exported$16;
    c.decrypt = onnn_Nip44_decrypt$exported$13;
    c = onnn_BunkerUrl.prototype;
    c.clone = $rt_callWithReceiver(onnn_BunkerUrl_clone$exported$4);
    c.toString = $rt_callWithReceiver(onnn_BunkerUrl_toString$exported$2);
    c = $rt_export_class_BunkerUrl_51;
    c.urlDecode = onnn_BunkerUrl_urlDecode$exported$2;
    c.parse = onnn_BunkerUrl_parse$exported$0;
    c.urlEncode = onnn_BunkerUrl_urlEncode$exported$1;
    c = onnrs_NostrRTCSignaling$1.prototype;
    c.onSubEvent = $rt_callWithReceiver(onnrs_NostrRTCSignaling$1_onSubEvent$exported$1);
    c = onpt_TeaVMPlatform$3.prototype;
    c.stateChanged = $rt_callWithReceiver(onpt_TeaVMPlatform$3_stateChanged$exported$0);
    c = onnn_Nip24ExtraMetadata.prototype;
    c.isBot = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_isBot$exported$0);
    c.setWebsite = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_setWebsite$exported$9);
    c.getWebsite = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_getWebsite$exported$11);
    c.getBirthday = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_getBirthday$exported$7);
    c.getDisplayName = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_getDisplayName$exported$10);
    c.setBot = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_setBot$exported$6);
    c.setDisplayName = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_setDisplayName$exported$1);
    c.getBanner = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_getBanner$exported$8);
    c.setBirthday = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_setBirthday$exported$5);
    c.getUsername = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_getUsername$exported$4);
    c.setBanner = $rt_callWithReceiver(onnn_Nip24ExtraMetadata_setBanner$exported$12);
    c = onnp_NostrPoolAnyAckPolicy.prototype;
    c.apply = $rt_callWithReceiver(onnp_NostrPoolAnyAckPolicy_apply$exported$2);
    c = $rt_export_class_NostrPoolAnyAckPolicy_93;
    c.get = onnp_NostrPoolAnyAckPolicy_get$exported$0;
    c = onnk_NostrPrivateKey.prototype;
    c.getKeySecurity = $rt_callWithReceiver(onnk_NostrPrivateKey_getKeySecurity$exported$7);
    c.asHex = $rt_callWithReceiver(onnk_NostrPrivateKey_asHex$exported$10);
    c.asBech32 = $rt_callWithReceiver(onnk_NostrPrivateKey_asBech32$exported$11);
    c.asNcryptsec = $rt_callWithReceiver(onnk_NostrPrivateKey_asNcryptsec$exported$9);
    c.getPublicKey = $rt_callWithReceiver(onnk_NostrPrivateKey_getPublicKey$exported$5);
    c.setKeySecurity = $rt_callWithReceiver(onnk_NostrPrivateKey_setKeySecurity$exported$6);
    c.preload = $rt_callWithReceiver(onnk_NostrPrivateKey_preload$exported$1);
    c._array = $rt_callWithReceiver(onnk_NostrPrivateKey__array$exported$13);
    c.hashCode = $rt_callWithReceiver(onnk_NostrPrivateKey_hashCode$exported$4);
    c.equals = $rt_callWithReceiver(onnk_NostrPrivateKey_equals$exported$3);
    c.asReadOnlyBytes = $rt_callWithReceiver(onnk_NostrPrivateKey_asReadOnlyBytes$exported$12);
    c.clone = $rt_callWithReceiver(onnk_NostrPrivateKey_clone$exported$14);
    c.toString = $rt_callWithReceiver(onnk_NostrPrivateKey_toString$exported$2);
    c = $rt_export_class_NostrPrivateKey_113;
    c.fromNsec = onnk_NostrPrivateKey_fromNsec$exported$3;
    c.fromBech32 = onnk_NostrPrivateKey_fromBech32$exported$4;
    c.fromHex = onnk_NostrPrivateKey_fromHex$exported$2;
    c.fromBytes = onnk_NostrPrivateKey_fromBytes$exported$1;
    c.fromNcryptsec = onnk_NostrPrivateKey_fromNcryptsec$exported$5;
    c.generate = onnk_NostrPrivateKey_generate$exported$6;
    c = onnpi_NostrEOSEMessage.prototype;
    c.getSubId = $rt_callWithReceiver(onnpi_NostrEOSEMessage_getSubId$exported$0);
    c = $rt_export_class_NostrEOSEMessage_117;
    c.parse = onnpi_NostrEOSEMessage_parse$exported$0;
    c = onnr_NostrRTCRoom.prototype;
    c.broadcast = $rt_callWithReceiver(onnr_NostrRTCRoom_broadcast$exported$27);
    c.getLocalPeerInfo = $rt_callWithReceiver(onnr_NostrRTCRoom_getLocalPeerInfo$exported$4);
    c.addPeerDiscoveryListener = $rt_callWithReceiver(onnr_NostrRTCRoom_addPeerDiscoveryListener$exported$13);
    c.onRemoveAnnounce = $rt_callWithReceiver(onnr_NostrRTCRoom_onRemoveAnnounce$exported$22);
    c.onAddAnnounce = $rt_callWithReceiver(onnr_NostrRTCRoom_onAddAnnounce$exported$3);
    c.addDisconnectionListener = $rt_callWithReceiver(onnr_NostrRTCRoom_addDisconnectionListener$exported$25);
    c.ban = $rt_callWithReceiver(onnr_NostrRTCRoom_ban$exported$8);
    c.shouldOfferConnection = $rt_callWithReceiver(onnr_NostrRTCRoom_shouldOfferConnection$exported$20);
    c.loop = $rt_callWithReceiver(onnr_NostrRTCRoom_loop$exported$9);
    c.onReceiveCandidates = $rt_callWithReceiver(onnr_NostrRTCRoom_onReceiveCandidates$exported$6);
    c.getRemotePeerInfo = $rt_callWithReceiver(onnr_NostrRTCRoom_getRemotePeerInfo$exported$17);
    c.onRTCSocketLocalIceCandidate = $rt_callWithReceiver(onnr_NostrRTCRoom_onRTCSocketLocalIceCandidate$exported$26);
    c.close = $rt_callWithReceiver(onnr_NostrRTCRoom_close$exported$23);
    c.addListener = $rt_callWithReceiver(onnr_NostrRTCRoom_addListener$exported$0);
    c.onRTCSocketMessage = $rt_callWithReceiver(onnr_NostrRTCRoom_onRTCSocketMessage$exported$14);
    c.discover = $rt_callWithReceiver(onnr_NostrRTCRoom_discover$exported$29);
    c.onUpdateAnnounce = $rt_callWithReceiver(onnr_NostrRTCRoom_onUpdateAnnounce$exported$10);
    c.onReceiveOffer = $rt_callWithReceiver(onnr_NostrRTCRoom_onReceiveOffer$exported$15);
    c.addConnectionListener = $rt_callWithReceiver(onnr_NostrRTCRoom_addConnectionListener$exported$24);
    c.start = $rt_callWithReceiver(onnr_NostrRTCRoom_start$exported$7);
    c.onRTCSocketClose = $rt_callWithReceiver(onnr_NostrRTCRoom_onRTCSocketClose$exported$30);
    c.removeListener = $rt_callWithReceiver(onnr_NostrRTCRoom_removeListener$exported$19);
    c.onReceiveAnswer = $rt_callWithReceiver(onnr_NostrRTCRoom_onReceiveAnswer$exported$21);
    c.lambda$loop$0 = $rt_callWithReceiver(onnr_NostrRTCRoom_lambda$loop$0$exported$1);
    c.unban = $rt_callWithReceiver(onnr_NostrRTCRoom_unban$exported$16);
    c.lambda$loop$1 = $rt_callWithReceiver(onnr_NostrRTCRoom_lambda$loop$1$exported$18);
    c.kick = $rt_callWithReceiver(onnr_NostrRTCRoom_kick$exported$12);
    c.addMessageListener = $rt_callWithReceiver(onnr_NostrRTCRoom_addMessageListener$exported$5);
    c.lambda$onReceiveOffer$2 = $rt_callWithReceiver(onnr_NostrRTCRoom_lambda$onReceiveOffer$2$exported$2);
    c.send = $rt_callWithReceiver(onnr_NostrRTCRoom_send$exported$11);
    c = $rt_export_class_NostrRTCRoom_120;
    c.lambda$onReceiveAnswer$3 = onnr_NostrRTCRoom_lambda$onReceiveAnswer$3$exported$2;
    c.lambda$broadcast$5 = onnr_NostrRTCRoom_lambda$broadcast$5$exported$0;
    c.lambda$onRTCSocketMessage$4 = onnr_NostrRTCRoom_lambda$onRTCSocketMessage$4$exported$1;
    c = onn_NostrPool$lambda$fetch$17$lambda$_40_3.prototype;
    c.onSubEvent = $rt_callWithReceiver(onn_NostrPool$lambda$fetch$17$lambda$_40_3_onSubEvent$exported$0);
    c = onn_NostrPool$lambda$fetch$17$lambda$_40_4.prototype;
    c.onSubClose = $rt_callWithReceiver(onn_NostrPool$lambda$fetch$17$lambda$_40_4_onSubClose$exported$0);
    c = onn_NostrPool$lambda$fetch$17$lambda$_40_2.prototype;
    c.onSubEose = $rt_callWithReceiver(onn_NostrPool$lambda$fetch$17$lambda$_40_2_onSubEose$exported$0);
    c = onnrt_NostrTURNSettings.prototype;
    c.getMaxLatency = $rt_callWithReceiver(onnrt_NostrTURNSettings_getMaxLatency$exported$2);
    c.getPacketTimeout = $rt_callWithReceiver(onnrt_NostrTURNSettings_getPacketTimeout$exported$0);
    c.hashCode = $rt_callWithReceiver(onnrt_NostrTURNSettings_hashCode$exported$9);
    c.equals = $rt_callWithReceiver(onnrt_NostrTURNSettings_equals$exported$4);
    c.clone = $rt_callWithReceiver(onnrt_NostrTURNSettings_clone$exported$10);
    c.toString = $rt_callWithReceiver(onnrt_NostrTURNSettings_toString$exported$3);
    c.getKind = $rt_callWithReceiver(onnrt_NostrTURNSettings_getKind$exported$8);
    c.getChunkLength = $rt_callWithReceiver(onnrt_NostrTURNSettings_getChunkLength$exported$7);
    c.getLoopInterval = $rt_callWithReceiver(onnrt_NostrTURNSettings_getLoopInterval$exported$1);
    c = onns_SdanOffer.prototype;
    c.getBid = $rt_callWithReceiver(onns_SdanOffer_getBid$exported$1);
    c = onn_NostrRelay.prototype;
    c.disconnect = $rt_callWithReceiver(onn_NostrRelay_disconnect$exported$15);
    c.lambda$loop$38 = $rt_callWithReceiver(onn_NostrRelay_lambda$loop$38$exported$31);
    c.onConnectionOpen = $rt_callWithReceiver(onn_NostrRelay_onConnectionOpen$exported$20);
    c.addComponent = $rt_callWithReceiver(onn_NostrRelay_addComponent$exported$47);
    c.lambda$loop$40 = $rt_callWithReceiver(onn_NostrRelay_lambda$loop$40$exported$27);
    c.loop = $rt_callWithReceiver(onn_NostrRelay_loop$exported$39);
    c.getAckTimeout = $rt_callWithReceiver(onn_NostrRelay_getAckTimeout$exported$30);
    c.onConnectionMessage = $rt_callWithReceiver(onn_NostrRelay_onConnectionMessage$exported$28);
    c.getInfo = $rt_callWithReceiver(onn_NostrRelay_getInfo$exported$29);
    c.lambda$loop$41 = $rt_callWithReceiver(onn_NostrRelay_lambda$loop$41$exported$49);
    c.lambda$onConnectionError$42 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionError$42$exported$46);
    c.lambda$onConnectionError$43 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionError$43$exported$1);
    c.runInRelayExecutor = $rt_callWithReceiver(onn_NostrRelay_runInRelayExecutor$exported$38);
    c.setAckTimeout = $rt_callWithReceiver(onn_NostrRelay_setAckTimeout$exported$7);
    c.lambda$connect$16 = $rt_callWithReceiver(onn_NostrRelay_lambda$connect$16$exported$33);
    c.lambda$connect$17 = $rt_callWithReceiver(onn_NostrRelay_lambda$connect$17$exported$8);
    c.getUrl = $rt_callWithReceiver(onn_NostrRelay_getUrl$exported$9);
    c.lambda$onConnectionMessage$31 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionMessage$31$exported$14);
    c.onConnectionClosedByServer = $rt_callWithReceiver(onn_NostrRelay_onConnectionClosedByServer$exported$23);
    c.removeComponent = $rt_callWithReceiver(onn_NostrRelay_removeComponent$exported$34);
    c.lambda$connect$18 = $rt_callWithReceiver(onn_NostrRelay_lambda$connect$18$exported$51);
    c.lambda$connect$19 = $rt_callWithReceiver(onn_NostrRelay_lambda$connect$19$exported$6);
    c.lambda$onConnectionMessage$33 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionMessage$33$exported$45);
    c.lambda$beforeSendMessage$1 = $rt_callWithReceiver(onn_NostrRelay_lambda$beforeSendMessage$1$exported$18);
    c.lambda$connect$15 = $rt_callWithReceiver(onn_NostrRelay_lambda$connect$15$exported$25);
    c.getComponent = $rt_callWithReceiver(onn_NostrRelay_getComponent$exported$21);
    c.lambda$sendMessage$14 = $rt_callWithReceiver(onn_NostrRelay_lambda$sendMessage$14$exported$2);
    c.isVerifyEvents = $rt_callWithReceiver(onn_NostrRelay_isVerifyEvents$exported$37);
    c.lambda$sendMessage$13 = $rt_callWithReceiver(onn_NostrRelay_lambda$sendMessage$13$exported$40);
    c.isConnected = $rt_callWithReceiver(onn_NostrRelay_isConnected$exported$35);
    c.lambda$onConnectionClosedByServer$34 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionClosedByServer$34$exported$43);
    c.setAsyncEventsVerification = $rt_callWithReceiver(onn_NostrRelay_setAsyncEventsVerification$exported$24);
    c.onConnectionClosedByClient = $rt_callWithReceiver(onn_NostrRelay_onConnectionClosedByClient$exported$26);
    c.lambda$onConnectionClosedByServer$35 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionClosedByServer$35$exported$42);
    c.lambda$onConnectionOpen$27 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionOpen$27$exported$44);
    c.lambda$sendMessage$7 = $rt_callWithReceiver(onn_NostrRelay_lambda$sendMessage$7$exported$17);
    c.beforeSendMessage = $rt_callWithReceiver(onn_NostrRelay_beforeSendMessage$exported$22);
    c.lambda$sendMessage$9 = $rt_callWithReceiver(onn_NostrRelay_lambda$sendMessage$9$exported$11);
    c.isAutoReconnect = $rt_callWithReceiver(onn_NostrRelay_isAutoReconnect$exported$16);
    c.setAutoReconnect = $rt_callWithReceiver(onn_NostrRelay_setAutoReconnect$exported$13);
    c.connect = $rt_callWithReceiver(onn_NostrRelay_connect$exported$4);
    c.isAsyncEventsVerification = $rt_callWithReceiver(onn_NostrRelay_isAsyncEventsVerification$exported$36);
    c.setVerifyEvents = $rt_callWithReceiver(onn_NostrRelay_setVerifyEvents$exported$48);
    c.sendMessage = $rt_callWithReceiver(onn_NostrRelay_sendMessage$exported$5);
    c.lambda$onConnectionClosedByClient$36 = $rt_callWithReceiver(onn_NostrRelay_lambda$onConnectionClosedByClient$36$exported$3);
    c.lambda$disconnect$21 = $rt_callWithReceiver(onn_NostrRelay_lambda$disconnect$21$exported$50);
    c.lambda$disconnect$20 = $rt_callWithReceiver(onn_NostrRelay_lambda$disconnect$20$exported$32);
    c.lambda$afterSendMessage$3 = $rt_callWithReceiver(onn_NostrRelay_lambda$afterSendMessage$3$exported$41);
    c.onConnectionError = $rt_callWithReceiver(onn_NostrRelay_onConnectionError$exported$10);
    c.afterSendMessage = $rt_callWithReceiver(onn_NostrRelay_afterSendMessage$exported$0);
    c = $rt_export_class_NostrRelay_162;
    c.lambda$loop$39 = onn_NostrRelay_lambda$loop$39$exported$0;
    c.lambda$sendMessage$10 = onn_NostrRelay_lambda$sendMessage$10$exported$13;
    c.lambda$sendMessage$12 = onn_NostrRelay_lambda$sendMessage$12$exported$11;
    c.lambda$sendMessage$11 = onn_NostrRelay_lambda$sendMessage$11$exported$12;
    c.lambda$afterSendMessage$4 = onn_NostrRelay_lambda$afterSendMessage$4$exported$17;
    c.lambda$runInRelayExecutor$0 = onn_NostrRelay_lambda$runInRelayExecutor$0$exported$19;
    c.lambda$onConnectionOpen$26 = onn_NostrRelay_lambda$onConnectionOpen$26$exported$6;
    c.lambda$onConnectionOpen$24 = onn_NostrRelay_lambda$onConnectionOpen$24$exported$8;
    c.lambda$onConnectionOpen$25 = onn_NostrRelay_lambda$onConnectionOpen$25$exported$7;
    c.lambda$loop$37 = onn_NostrRelay_lambda$loop$37$exported$1;
    c.lambda$onConnectionOpen$22 = onn_NostrRelay_lambda$onConnectionOpen$22$exported$10;
    c.lambda$onConnectionOpen$23 = onn_NostrRelay_lambda$onConnectionOpen$23$exported$9;
    c.lambda$onConnectionMessage$30 = onn_NostrRelay_lambda$onConnectionMessage$30$exported$3;
    c.lambda$onConnectionMessage$32 = onn_NostrRelay_lambda$onConnectionMessage$32$exported$2;
    c.lambda$beforeSendMessage$2 = onn_NostrRelay_lambda$beforeSendMessage$2$exported$18;
    c.lambda$sendMessage$6 = onn_NostrRelay_lambda$sendMessage$6$exported$15;
    c.lambda$onConnectionMessage$28 = onn_NostrRelay_lambda$onConnectionMessage$28$exported$5;
    c.lambda$onConnectionMessage$29 = onn_NostrRelay_lambda$onConnectionMessage$29$exported$4;
    c.lambda$sendMessage$8 = onn_NostrRelay_lambda$sendMessage$8$exported$14;
    c.lambda$sendMessage$5 = onn_NostrRelay_lambda$sendMessage$5$exported$16;
    c = onns_SdanTaxonomy$SdanTaxonomyTerm.prototype;
    c.tier4 = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_tier4$exported$7);
    c.parent = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_parent$exported$11);
    c.extension = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_extension$exported$0);
    c.tier3 = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_tier3$exported$6);
    c.tier2 = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_tier2$exported$5);
    c.hashCode = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_hashCode$exported$4);
    c.equals = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_equals$exported$2);
    c.name = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_name$exported$12);
    c.toString = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_toString$exported$1);
    c.term = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_term$exported$3);
    c.id = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_id$exported$8);
    c.tier1 = $rt_callWithReceiver(onns_SdanTaxonomy$SdanTaxonomyTerm_tier1$exported$10);
    c = $rt_export_class_SdanTaxonomyTerm_180;
    c.lambda$term$0 = onns_SdanTaxonomy$SdanTaxonomyTerm_lambda$term$0$exported$0;
    c = $rt_export_class_NostrRTCRoomPeerDiscoveredState_199;
    c.$values = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_$values$exported$2;
    c.valueOf = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_valueOf$exported$1;
    c.values = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState_values$exported$0;
    c = $rt_export_class_Nip49_201;
    c.encryptSync = onnn_Nip49_encryptSync$exported$3;
    c.lambda$encrypt$1 = onnn_Nip49_lambda$encrypt$1$exported$10;
    c.getApproximatedMemoryRequirement = onnn_Nip49_getApproximatedMemoryRequirement$exported$0;
    c.encrypt = onnn_Nip49_encrypt$exported$9;
    c.isEncrypted = onnn_Nip49_isEncrypted$exported$2;
    c.lambda$decrypt$0 = onnn_Nip49_lambda$decrypt$0$exported$11;
    c.decrypt = onnn_Nip49_decrypt$exported$8;
    c.decryptSync = onnn_Nip49_decryptSync$exported$5;
    c = $rt_export_class_RemoveReason_219;
    c.$values = onnrs_NostrRTCSignaling$Listener$RemoveReason_$values$exported$2;
    c.valueOf = onnrs_NostrRTCSignaling$Listener$RemoveReason_valueOf$exported$1;
    c.values = onnrs_NostrRTCSignaling$Listener$RemoveReason_values$exported$0;
    c = onnpi_NostrNoticeMessage.prototype;
    c.getException = $rt_callWithReceiver(onnpi_NostrNoticeMessage_getException$exported$0);
    c.getMessage = $rt_callWithReceiver(onnpi_NostrNoticeMessage_getMessage$exported$3);
    c.throwException = $rt_callWithReceiver(onnpi_NostrNoticeMessage_throwException$exported$4);
    c = $rt_export_class_NostrNoticeMessage_258;
    c.parse = onnpi_NostrNoticeMessage_parse$exported$0;
    c = onn_NostrRelay$1.prototype;
    c.onConnectionClosedByServer = $rt_callWithReceiver(onn_NostrRelay$1_onConnectionClosedByServer$exported$2);
    c.onConnectionMessage = $rt_callWithReceiver(onn_NostrRelay$1_onConnectionMessage$exported$0);
    c.onConnectionOpen = $rt_callWithReceiver(onn_NostrRelay$1_onConnectionOpen$exported$3);
    c.onConnectionClosedByClient = $rt_callWithReceiver(onn_NostrRelay$1_onConnectionClosedByClient$exported$5);
    c.onConnectionError = $rt_callWithReceiver(onn_NostrRelay$1_onConnectionError$exported$4);
    c = onnn_Nip01UserMetadata.prototype;
    c.setName = $rt_callWithReceiver(onnn_Nip01UserMetadata_setName$exported$0);
    c.setPicture = $rt_callWithReceiver(onnn_Nip01UserMetadata_setPicture$exported$9);
    c.getName = $rt_callWithReceiver(onnn_Nip01UserMetadata_getName$exported$2);
    c.getSourceEvent = $rt_callWithReceiver(onnn_Nip01UserMetadata_getSourceEvent$exported$3);
    c.getPicture = $rt_callWithReceiver(onnn_Nip01UserMetadata_getPicture$exported$4);
    c.getAbout = $rt_callWithReceiver(onnn_Nip01UserMetadata_getAbout$exported$8);
    c.toUpdateEvent = $rt_callWithReceiver(onnn_Nip01UserMetadata_toUpdateEvent$exported$10);
    c.hashCode = $rt_callWithReceiver(onnn_Nip01UserMetadata_hashCode$exported$11);
    c.equals = $rt_callWithReceiver(onnn_Nip01UserMetadata_equals$exported$6);
    c.toString = $rt_callWithReceiver(onnn_Nip01UserMetadata_toString$exported$7);
    c.setAbout = $rt_callWithReceiver(onnn_Nip01UserMetadata_setAbout$exported$1);
    c = onne_SignedNostrEvent$ReceivedSignedNostrEvent.prototype;
    c.getSubId = $rt_callWithReceiver(onne_SignedNostrEvent$ReceivedSignedNostrEvent_getSubId$exported$1);
    c = onn_NostrPool.prototype;
    c.onRelayConnectRequest = $rt_callWithReceiver(onn_NostrPool_onRelayConnectRequest$exported$36);
    c.onRelayConnect = $rt_callWithReceiver(onn_NostrPool_onRelayConnect$exported$39);
    c.lambda$subscribe$5 = $rt_callWithReceiver(onn_NostrPool_lambda$subscribe$5$exported$32);
    c.onAfterRelaySend = $rt_callWithReceiver(onn_NostrPool_onAfterRelaySend$exported$30);
    c.connectRelay = $rt_callWithReceiver(onn_NostrPool_connectRelay$exported$31);
    c.onRelayDisconnect = $rt_callWithReceiver(onn_NostrPool_onRelayDisconnect$exported$15);
    c.lambda$fetch$10 = $rt_callWithReceiver(onn_NostrPool_lambda$fetch$10$exported$10);
    c.addNoticeListener = $rt_callWithReceiver(onn_NostrPool_addNoticeListener$exported$1);
    c.onRelayLoop = $rt_callWithReceiver(onn_NostrPool_onRelayLoop$exported$18);
    c.removeNoticeListener = $rt_callWithReceiver(onn_NostrPool_removeNoticeListener$exported$25);
    c.getRelays = $rt_callWithReceiver(onn_NostrPool_getRelays$exported$26);
    c.lambda$fetch$17 = $rt_callWithReceiver(onn_NostrPool_lambda$fetch$17$exported$29);
    c.close = $rt_callWithReceiver(onn_NostrPool_close$exported$33);
    c.onRelayMessage = $rt_callWithReceiver(onn_NostrPool_onRelayMessage$exported$5);
    c.unsubscribeAll = $rt_callWithReceiver(onn_NostrPool_unsubscribeAll$exported$28);
    c.subscribe = $rt_callWithReceiver(onn_NostrPool_subscribe$exported$37);
    c.onRelayDisconnectRequest = $rt_callWithReceiver(onn_NostrPool_onRelayDisconnectRequest$exported$17);
    c.sendMessage = $rt_callWithReceiver(onn_NostrPool_sendMessage$exported$35);
    c.onRelaySend = $rt_callWithReceiver(onn_NostrPool_onRelaySend$exported$19);
    c.removeRelay = $rt_callWithReceiver(onn_NostrPool_removeRelay$exported$12);
    c.lambda$subscribe$7 = $rt_callWithReceiver(onn_NostrPool_lambda$subscribe$7$exported$16);
    c.fetch = $rt_callWithReceiver(onn_NostrPool_fetch$exported$38);
    c.onBeforeRelaySend = $rt_callWithReceiver(onn_NostrPool_onBeforeRelaySend$exported$2);
    c.publish = $rt_callWithReceiver(onn_NostrPool_publish$exported$27);
    c.send = $rt_callWithReceiver(onn_NostrPool_send$exported$23);
    c.onRelayError = $rt_callWithReceiver(onn_NostrPool_onRelayError$exported$9);
    c = $rt_export_class_NostrPool_327;
    c.lambda$onRelayMessage$21 = onn_NostrPool_lambda$onRelayMessage$21$exported$0;
    c.lambda$sendMessage$0 = onn_NostrPool_lambda$sendMessage$0$exported$17;
    c.lambda$onRelayMessage$20 = onn_NostrPool_lambda$onRelayMessage$20$exported$1;
    c.lambda$sendMessage$1 = onn_NostrPool_lambda$sendMessage$1$exported$16;
    c.lambda$fetch$8 = onn_NostrPool_lambda$fetch$8$exported$11;
    c.lambda$fetch$9 = onn_NostrPool_lambda$fetch$9$exported$10;
    c.lambda$onRelayMessage$19 = onn_NostrPool_lambda$onRelayMessage$19$exported$2;
    c.lambda$onRelayMessage$18 = onn_NostrPool_lambda$onRelayMessage$18$exported$3;
    c.lambda$subscribe$6 = onn_NostrPool_lambda$subscribe$6$exported$12;
    c.lambda$subscribe$4 = onn_NostrPool_lambda$subscribe$4$exported$13;
    c.lambda$subscribe$3 = onn_NostrPool_lambda$subscribe$3$exported$14;
    c.lambda$fetch$11 = onn_NostrPool_lambda$fetch$11$exported$9;
    c.lambda$fetch$12 = onn_NostrPool_lambda$fetch$12$exported$8;
    c.lambda$fetch$13 = onn_NostrPool_lambda$fetch$13$exported$7;
    c.lambda$fetch$14 = onn_NostrPool_lambda$fetch$14$exported$6;
    c.lambda$fetch$15 = onn_NostrPool_lambda$fetch$15$exported$5;
    c.lambda$fetch$16 = onn_NostrPool_lambda$fetch$16$exported$4;
    c.lambda$sendMessage$2 = onn_NostrPool_lambda$sendMessage$2$exported$15;
    c = onns_NostrNIP46Signer$PendingChallenge.prototype;
    c.close = $rt_callWithReceiver(onns_NostrNIP46Signer$PendingChallenge_close$exported$0);
    c = onnr_NostrRTCRoom$1.prototype;
    c.onRTCSocketMessage = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onRTCSocketMessage$exported$5);
    c.onUpdateAnnounce = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onUpdateAnnounce$exported$2);
    c.onReceiveOffer = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onReceiveOffer$exported$6);
    c.onRemoveAnnounce = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onRemoveAnnounce$exported$3);
    c.onAddAnnounce = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onAddAnnounce$exported$8);
    c.onRTCSocketClose = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onRTCSocketClose$exported$9);
    c.onReceiveCandidates = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onReceiveCandidates$exported$1);
    c.onReceiveAnswer = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onReceiveAnswer$exported$0);
    c.onRTCSocketLocalIceCandidate = $rt_callWithReceiver(onnr_NostrRTCRoom$1_onRTCSocketLocalIceCandidate$exported$4);
    c = onns_SdanActionType.prototype;
    c.getValue = $rt_callWithReceiver(onns_SdanActionType_getValue$exported$1);
    c = $rt_export_class_SdanActionType_372;
    c.fromValue = onns_SdanActionType_fromValue$exported$2;
    c.$values = onns_SdanActionType_$values$exported$3;
    c.valueOf = onns_SdanActionType_valueOf$exported$1;
    c.values = onns_SdanActionType_values$exported$0;
    c = onnu_ByteBufferList.prototype;
    c.size = $rt_callWithReceiver(onnu_ByteBufferList_size$exported$2);
    c.get = $rt_callWithReceiver(onnu_ByteBufferList_get$exported$1);
    c = onn_NostrSubscription$NostrSubCloseMessage.prototype;
    c.getId = $rt_callWithReceiver(onn_NostrSubscription$NostrSubCloseMessage_getId$exported$0);
    c = onnn_NostrconnectUrl.prototype;
    c.clone = $rt_callWithReceiver(onnn_NostrconnectUrl_clone$exported$3);
    c.toString = $rt_callWithReceiver(onnn_NostrconnectUrl_toString$exported$1);
    c = $rt_export_class_NostrconnectUrl_412;
    c.urlDecode = onnn_NostrconnectUrl_urlDecode$exported$2;
    c.parse = onnn_NostrconnectUrl_parse$exported$0;
    c.urlEncode = onnn_NostrconnectUrl_urlEncode$exported$1;
    c = $rt_export_class_Status_423;
    c.$values = onnp_NostrMessageAck$Status_$values$exported$2;
    c.valueOf = onnp_NostrMessageAck$Status_valueOf$exported$1;
    c.values = onnp_NostrMessageAck$Status_values$exported$0;
    c = onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1.prototype;
    c.handleEvent = $rt_callWithReceiver(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_1_handleEvent$exported$0);
    c = onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2.prototype;
    c.handleEvent = $rt_callWithReceiver(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_2_handleEvent$exported$0);
    c = onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0.prototype;
    c.handleEvent = $rt_callWithReceiver(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_0_handleEvent$exported$0);
    c = onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3.prototype;
    c.handleEvent = $rt_callWithReceiver(onpt_TeaVMWebsocketTransport$lambda$connect$4$lambda$_10_3_handleEvent$exported$0);
    c = onn_NostrRelayInfo.prototype;
    c.getVersion = $rt_callWithReceiver(onn_NostrRelayInfo_getVersion$exported$0);
    c.getSoftware = $rt_callWithReceiver(onn_NostrRelayInfo_getSoftware$exported$14);
    c.getName = $rt_callWithReceiver(onn_NostrRelayInfo_getName$exported$10);
    c.getLanguageTags = $rt_callWithReceiver(onn_NostrRelayInfo_getLanguageTags$exported$11);
    c.getRelayUrl = $rt_callWithReceiver(onn_NostrRelayInfo_getRelayUrl$exported$20);
    c.isNipSupported = $rt_callWithReceiver(onn_NostrRelayInfo_isNipSupported$exported$19);
    c.getTags = $rt_callWithReceiver(onn_NostrRelayInfo_getTags$exported$8);
    c.getLimitation = $rt_callWithReceiver(onn_NostrRelayInfo_getLimitation$exported$3);
    c.getPubkey = $rt_callWithReceiver(onn_NostrRelayInfo_getPubkey$exported$21);
    c.getDescription = $rt_callWithReceiver(onn_NostrRelayInfo_getDescription$exported$5);
    c.getContact = $rt_callWithReceiver(onn_NostrRelayInfo_getContact$exported$7);
    c.getIcon = $rt_callWithReceiver(onn_NostrRelayInfo_getIcon$exported$6);
    c.getCountries = $rt_callWithReceiver(onn_NostrRelayInfo_getCountries$exported$12);
    c.getSupportedNips = $rt_callWithReceiver(onn_NostrRelayInfo_getSupportedNips$exported$18);
    c.get = $rt_callWithReceiver(onn_NostrRelayInfo_get$exported$15);
    c.clone = $rt_callWithReceiver(onn_NostrRelayInfo_clone$exported$16);
    c.getPrivacyPolicy = $rt_callWithReceiver(onn_NostrRelayInfo_getPrivacyPolicy$exported$24);
    c.getTermsOfService = $rt_callWithReceiver(onn_NostrRelayInfo_getTermsOfService$exported$23);
    c.toString = $rt_callWithReceiver(onn_NostrRelayInfo_toString$exported$4);
    c.getPostingPolicy = $rt_callWithReceiver(onn_NostrRelayInfo_getPostingPolicy$exported$9);
    c.getBanner = $rt_callWithReceiver(onn_NostrRelayInfo_getBanner$exported$22);
    c.getLimitations = $rt_callWithReceiver(onn_NostrRelayInfo_getLimitations$exported$25);
    c = $rt_export_class_NostrRelayInfo_447;
    c.get = onn_NostrRelayInfo_get$exported$0;
    c.lambda$get$0 = onn_NostrRelayInfo_lambda$get$0$exported$1;
    c = onnn_Nip05Nip46Data.prototype;
    c.setRelays = $rt_callWithReceiver(onnn_Nip05Nip46Data_setRelays$exported$5);
    c.getSignerPubkey = $rt_callWithReceiver(onnn_Nip05Nip46Data_getSignerPubkey$exported$2);
    c.getRelays = $rt_callWithReceiver(onnn_Nip05Nip46Data_getRelays$exported$1);
    c.getNostrconnectRedirectTemplate = $rt_callWithReceiver(onnn_Nip05Nip46Data_getNostrconnectRedirectTemplate$exported$3);
    c.setNostrconnectRedirectTemplate = $rt_callWithReceiver(onnn_Nip05Nip46Data_setNostrconnectRedirectTemplate$exported$0);
    c = onn_NostrRelaySubManager.prototype;
    c.onRelayConnectRequest = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayConnectRequest$exported$8);
    c.onRelayMessage = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayMessage$exported$2);
    c.isEose = $rt_callWithReceiver(onn_NostrRelaySubManager_isEose$exported$5);
    c.onRelayDisconnect = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayDisconnect$exported$6);
    c.onRelayConnect = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayConnect$exported$12);
    c.onRelayDisconnectRequest = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayDisconnectRequest$exported$9);
    c.onRelayAfterSend = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayAfterSend$exported$7);
    c.onRelayLoop = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayLoop$exported$10);
    c.onRelaySend = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelaySend$exported$11);
    c.isActive = $rt_callWithReceiver(onn_NostrRelaySubManager_isActive$exported$1);
    c.onRelayBeforeSend = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayBeforeSend$exported$4);
    c.onRelayError = $rt_callWithReceiver(onn_NostrRelaySubManager_onRelayError$exported$3);
    c = $rt_export_class_NostrRelaySubManager_461;
    c.lambda$onRelayBeforeSend$0 = onn_NostrRelaySubManager_lambda$onRelayBeforeSend$0$exported$0;
    c = onn_NostrSubscription.prototype;
    c.lambda$callCloseListeners$5 = $rt_callWithReceiver(onn_NostrSubscription_lambda$callCloseListeners$5$exported$3);
    c.isOpened = $rt_callWithReceiver(onn_NostrSubscription_isOpened$exported$0);
    c.addEoseListener = $rt_callWithReceiver(onn_NostrSubscription_addEoseListener$exported$16);
    c.getExecutor = $rt_callWithReceiver(onn_NostrSubscription_getExecutor$exported$4);
    c.registerClosure = $rt_callWithReceiver(onn_NostrSubscription_registerClosure$exported$2);
    c.getId = $rt_callWithReceiver(onn_NostrSubscription_getId$exported$5);
    c.removeListener = $rt_callWithReceiver(onn_NostrSubscription_removeListener$exported$15);
    c.getSubId = $rt_callWithReceiver(onn_NostrSubscription_getSubId$exported$7);
    c.addCloseListener = $rt_callWithReceiver(onn_NostrSubscription_addCloseListener$exported$18);
    c.getCloseMessage = $rt_callWithReceiver(onn_NostrSubscription_getCloseMessage$exported$6);
    c.callEoseListeners = $rt_callWithReceiver(onn_NostrSubscription_callEoseListeners$exported$17);
    c.getFilters = $rt_callWithReceiver(onn_NostrSubscription_getFilters$exported$9);
    c.callCloseListeners = $rt_callWithReceiver(onn_NostrSubscription_callCloseListeners$exported$11);
    c.callEventListeners = $rt_callWithReceiver(onn_NostrSubscription_callEventListeners$exported$10);
    c.close = $rt_callWithReceiver(onn_NostrSubscription_close$exported$14);
    c.open = $rt_callWithReceiver(onn_NostrSubscription_open$exported$13);
    c.addEventListener = $rt_callWithReceiver(onn_NostrSubscription_addEventListener$exported$8);
    c.addListener = $rt_callWithReceiver(onn_NostrSubscription_addListener$exported$12);
    c = $rt_export_class_NostrSubscription_481;
    c.lambda$close$0 = onn_NostrSubscription_lambda$close$0$exported$5;
    c.lambda$callCloseListeners$6 = onn_NostrSubscription_lambda$callCloseListeners$6$exported$0;
    c.lambda$callEventListeners$4 = onn_NostrSubscription_lambda$callEventListeners$4$exported$1;
    c.lambda$callEventListeners$3 = onn_NostrSubscription_lambda$callEventListeners$3$exported$2;
    c.lambda$callEoseListeners$2 = onn_NostrSubscription_lambda$callEoseListeners$2$exported$3;
    c.lambda$callEoseListeners$1 = onn_NostrSubscription_lambda$callEoseListeners$1$exported$4;
    c = onne_UnsignedNostrEvent.prototype;
    c.fromMap = $rt_callWithReceiver(onne_UnsignedNostrEvent_fromMap$exported$13);
    c.isRegular = $rt_callWithReceiver(onne_UnsignedNostrEvent_isRegular$exported$12);
    c.isEphemeral = $rt_callWithReceiver(onne_UnsignedNostrEvent_isEphemeral$exported$5);
    c.hasTag = $rt_callWithReceiver(onne_UnsignedNostrEvent_hasTag$exported$14);
    c.getTagRows = $rt_callWithReceiver(onne_UnsignedNostrEvent_getTagRows$exported$9);
    c.isAddressable = $rt_callWithReceiver(onne_UnsignedNostrEvent_isAddressable$exported$23);
    c.getContent = $rt_callWithReceiver(onne_UnsignedNostrEvent_getContent$exported$4);
    c.withContent = $rt_callWithReceiver(onne_UnsignedNostrEvent_withContent$exported$22);
    c.getKind = $rt_callWithReceiver(onne_UnsignedNostrEvent_getKind$exported$8);
    c.getTag = $rt_callWithReceiver(onne_UnsignedNostrEvent_getTag$exported$25);
    c.withExpiration = $rt_callWithReceiver(onne_UnsignedNostrEvent_withExpiration$exported$11);
    c.withTag = $rt_callWithReceiver(onne_UnsignedNostrEvent_withTag$exported$26);
    c.createdAt = $rt_callWithReceiver(onne_UnsignedNostrEvent_createdAt$exported$10);
    c.listTagKeys = $rt_callWithReceiver(onne_UnsignedNostrEvent_listTagKeys$exported$19);
    c.getCreatedAt = $rt_callWithReceiver(onne_UnsignedNostrEvent_getCreatedAt$exported$18);
    c.getExpiration = $rt_callWithReceiver(onne_UnsignedNostrEvent_getExpiration$exported$1);
    c.withKind = $rt_callWithReceiver(onne_UnsignedNostrEvent_withKind$exported$6);
    c.getFirstTag = $rt_callWithReceiver(onne_UnsignedNostrEvent_getFirstTag$exported$27);
    c.hashCode = $rt_callWithReceiver(onne_UnsignedNostrEvent_hashCode$exported$24);
    c.equals = $rt_callWithReceiver(onne_UnsignedNostrEvent_equals$exported$20);
    c.clone = $rt_callWithReceiver(onne_UnsignedNostrEvent_clone$exported$15);
    c.clearTags = $rt_callWithReceiver(onne_UnsignedNostrEvent_clearTags$exported$28);
    c.toString = $rt_callWithReceiver(onne_UnsignedNostrEvent_toString$exported$7);
    c.isReplaceable = $rt_callWithReceiver(onne_UnsignedNostrEvent_isReplaceable$exported$21);
    c = $rt_export_class_UnsignedNostrEvent_485;
    c.lambda$withTag$0 = onne_UnsignedNostrEvent_lambda$withTag$0$exported$0;
    c = onnrs_NostrRTCAnswer.prototype;
    c.getPeerInfo = $rt_callWithReceiver(onnrs_NostrRTCAnswer_getPeerInfo$exported$1);
    c.getSdp = $rt_callWithReceiver(onnrs_NostrRTCAnswer_getSdp$exported$0);
    c.getTurnServers = $rt_callWithReceiver(onnrs_NostrRTCAnswer_getTurnServers$exported$4);
    c.get = $rt_callWithReceiver(onnrs_NostrRTCAnswer_get$exported$3);
    c.toString = $rt_callWithReceiver(onnrs_NostrRTCAnswer_toString$exported$2);
    c = onnrs_NostrRTCOffer.prototype;
    c.getPeerInfo = $rt_callWithReceiver(onnrs_NostrRTCOffer_getPeerInfo$exported$1);
    c.get = $rt_callWithReceiver(onnrs_NostrRTCOffer_get$exported$4);
    c.getOfferString = $rt_callWithReceiver(onnrs_NostrRTCOffer_getOfferString$exported$2);
    c.toString = $rt_callWithReceiver(onnrs_NostrRTCOffer_toString$exported$3);
    c.getTurnServer = $rt_callWithReceiver(onnrs_NostrRTCOffer_getTurnServer$exported$0);
    c = onn_NostrRelay$QueuedMessage.prototype;
    c.hashCode = $rt_callWithReceiver(onn_NostrRelay$QueuedMessage_hashCode$exported$2);
    c.equals = $rt_callWithReceiver(onn_NostrRelay$QueuedMessage_equals$exported$1);
    c = onn_NostrFilter.prototype;
    c.getLimit = $rt_callWithReceiver(onn_NostrFilter_getLimit$exported$6);
    c.withAuthor = $rt_callWithReceiver(onn_NostrFilter_withAuthor$exported$11);
    c.getSince = $rt_callWithReceiver(onn_NostrFilter_getSince$exported$3);
    c.getTagValues = $rt_callWithReceiver(onn_NostrFilter_getTagValues$exported$10);
    c.getIds = $rt_callWithReceiver(onn_NostrFilter_getIds$exported$1);
    c.getTags = $rt_callWithReceiver(onn_NostrFilter_getTags$exported$12);
    c.getUntil = $rt_callWithReceiver(onn_NostrFilter_getUntil$exported$14);
    c.withTag = $rt_callWithReceiver(onn_NostrFilter_withTag$exported$4);
    c.withKind = $rt_callWithReceiver(onn_NostrFilter_withKind$exported$7);
    c.getAuthors = $rt_callWithReceiver(onn_NostrFilter_getAuthors$exported$13);
    c.limit = $rt_callWithReceiver(onn_NostrFilter_limit$exported$8);
    c.until = $rt_callWithReceiver(onn_NostrFilter_until$exported$5);
    c.getKinds = $rt_callWithReceiver(onn_NostrFilter_getKinds$exported$9);
    c.id = $rt_callWithReceiver(onn_NostrFilter_id$exported$15);
    c.since = $rt_callWithReceiver(onn_NostrFilter_since$exported$16);
    c = onn_NostrRelayLifecycleManager.prototype;
    c.onRelayConnectRequest = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayConnectRequest$exported$8);
    c.onRelayMessage = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayMessage$exported$1);
    c.keepAlive = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_keepAlive$exported$13);
    c.onRelayConnect = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayConnect$exported$14);
    c.onRelayDisconnectRequest = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayDisconnectRequest$exported$9);
    c.getKeepAliveTime = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_getKeepAliveTime$exported$12);
    c.onRelaySend = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelaySend$exported$11);
    c.onRelayDisconnect = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayDisconnect$exported$6);
    c.onRelayAfterSend = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayAfterSend$exported$7);
    c.onRelayLoop = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayLoop$exported$10);
    c.onRelayBeforeSend = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayBeforeSend$exported$4);
    c.hasActiveSubscription = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_hasActiveSubscription$exported$5);
    c.setKeepAliveTime = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_setKeepAliveTime$exported$2);
    c.onRelayError = $rt_callWithReceiver(onn_NostrRelayLifecycleManager_onRelayError$exported$3);
    c = $rt_export_class_NostrRelayLifecycleManager_525;
    c.lambda$onRelaySend$2 = onn_NostrRelayLifecycleManager_lambda$onRelaySend$2$exported$0;
    c.lambda$onRelaySend$1 = onn_NostrRelayLifecycleManager_lambda$onRelaySend$1$exported$1;
    c.lambda$onRelaySend$0 = onn_NostrRelayLifecycleManager_lambda$onRelaySend$0$exported$2;
    c = onnet_ForwardSlidingWindowEventTracker.prototype;
    c.getAll = $rt_callWithReceiver(onnet_ForwardSlidingWindowEventTracker_getAll$exported$8);
    c.currentTimeSeconds = $rt_callWithReceiver(onnet_ForwardSlidingWindowEventTracker_currentTimeSeconds$exported$6);
    c.tuneFor = $rt_callWithReceiver(onnet_ForwardSlidingWindowEventTracker_tuneFor$exported$2);
    c.count = $rt_callWithReceiver(onnet_ForwardSlidingWindowEventTracker_count$exported$5);
    c.update = $rt_callWithReceiver(onnet_ForwardSlidingWindowEventTracker_update$exported$4);
    c.seen = $rt_callWithReceiver(onnet_ForwardSlidingWindowEventTracker_seen$exported$1);
    c.checkOrder = $rt_callWithReceiver(onnet_ForwardSlidingWindowEventTracker_checkOrder$exported$3);
    c = onnrt_NostrTURN.prototype;
    c.lambda$onTurnEvent$2 = $rt_callWithReceiver(onnrt_NostrTURN_lambda$onTurnEvent$2$exported$16);
    c.lambda$onReceivedPacketChunk$4 = $rt_callWithReceiver(onnrt_NostrTURN_lambda$onReceivedPacketChunk$4$exported$15);
    c.start = $rt_callWithReceiver(onnrt_NostrTURN_start$exported$11);
    c.lambda$loop$7 = $rt_callWithReceiver(onnrt_NostrTURN_lambda$loop$7$exported$13);
    c.consume = $rt_callWithReceiver(onnrt_NostrTURN_consume$exported$7);
    c.removeListener = $rt_callWithReceiver(onnrt_NostrTURN_removeListener$exported$2);
    c.onTurnEvent = $rt_callWithReceiver(onnrt_NostrTURN_onTurnEvent$exported$6);
    c.lambda$loop$6 = $rt_callWithReceiver(onnrt_NostrTURN_lambda$loop$6$exported$0);
    c.lambda$onReceivedPacketChunk$3 = $rt_callWithReceiver(onnrt_NostrTURN_lambda$onReceivedPacketChunk$3$exported$14);
    c.onReceivedPacketChunk = $rt_callWithReceiver(onnrt_NostrTURN_onReceivedPacketChunk$exported$4);
    c.loop = $rt_callWithReceiver(onnrt_NostrTURN_loop$exported$9);
    c.onReceivedAck = $rt_callWithReceiver(onnrt_NostrTURN_onReceivedAck$exported$12);
    c.close = $rt_callWithReceiver(onnrt_NostrTURN_close$exported$5);
    c.write = $rt_callWithReceiver(onnrt_NostrTURN_write$exported$10);
    c.addListener = $rt_callWithReceiver(onnrt_NostrTURN_addListener$exported$3);
    c.lambda$write$10 = $rt_callWithReceiver(onnrt_NostrTURN_lambda$write$10$exported$8);
    c = $rt_export_class_NostrTURN_545;
    c.lambda$close$0 = onnrt_NostrTURN_lambda$close$0$exported$4;
    c.lambda$write$8 = onnrt_NostrTURN_lambda$write$8$exported$1;
    c.lambda$write$9 = onnrt_NostrTURN_lambda$write$9$exported$0;
    c.lambda$close$1 = onnrt_NostrTURN_lambda$close$1$exported$3;
    c.lambda$loop$5 = onnrt_NostrTURN_lambda$loop$5$exported$2;
    c = onnet_NaiveEventTracker.prototype;
    c.tuneFor = $rt_callWithReceiver(onnet_NaiveEventTracker_tuneFor$exported$2);
    c.clear = $rt_callWithReceiver(onnet_NaiveEventTracker_clear$exported$3);
    c.seen = $rt_callWithReceiver(onnet_NaiveEventTracker_seen$exported$1);
    c = onnn_Nip05Identity.prototype;
    c.getDomain = $rt_callWithReceiver(onnn_Nip05Identity_getDomain$exported$3);
    c.getName = $rt_callWithReceiver(onnn_Nip05Identity_getName$exported$1);
    c.getNip46Data = $rt_callWithReceiver(onnn_Nip05Identity_getNip46Data$exported$5);
    c.getIdentifier = $rt_callWithReceiver(onnn_Nip05Identity_getIdentifier$exported$4);
    c.getRecommendedRelays = $rt_callWithReceiver(onnn_Nip05Identity_getRecommendedRelays$exported$6);
    c.extractPubkey = $rt_callWithReceiver(onnn_Nip05Identity_extractPubkey$exported$0);
    c.getPublicKey = $rt_callWithReceiver(onnn_Nip05Identity_getPublicKey$exported$7);
    c = onnrs_NostrRTCSignaling.prototype;
    c.onSubEvent = $rt_callWithReceiver(onnrs_NostrRTCSignaling_onSubEvent$exported$22);
    c.lambda$start$7 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$start$7$exported$4);
    c.lambda$onSubEvent$4 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$onSubEvent$4$exported$12);
    c.lambda$onSubEvent$5 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$onSubEvent$5$exported$3);
    c.sendCandidates = $rt_callWithReceiver(onnrs_NostrRTCSignaling_sendCandidates$exported$15);
    c.lambda$sendAnswer$13 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$sendAnswer$13$exported$17);
    c.lambda$sendAnswer$12 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$sendAnswer$12$exported$28);
    c.lambda$decrypt$18 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$decrypt$18$exported$27);
    c.encrypt = $rt_callWithReceiver(onnrs_NostrRTCSignaling_encrypt$exported$6);
    c.loop = $rt_callWithReceiver(onnrs_NostrRTCSignaling_loop$exported$10);
    c.lambda$sendOffer$10 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$sendOffer$10$exported$20);
    c.lambda$sendOffer$11 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$sendOffer$11$exported$25);
    c.sendOffer = $rt_callWithReceiver(onnrs_NostrRTCSignaling_sendOffer$exported$5);
    c.close = $rt_callWithReceiver(onnrs_NostrRTCSignaling_close$exported$16);
    c.isDiscoveryStarted = $rt_callWithReceiver(onnrs_NostrRTCSignaling_isDiscoveryStarted$exported$1);
    c.lambda$close$16 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$close$16$exported$2);
    c.lambda$sendAnnounce$9 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$sendAnnounce$9$exported$0);
    c.addListener = $rt_callWithReceiver(onnrs_NostrRTCSignaling_addListener$exported$19);
    c.sendAnnounce = $rt_callWithReceiver(onnrs_NostrRTCSignaling_sendAnnounce$exported$8);
    c.start = $rt_callWithReceiver(onnrs_NostrRTCSignaling_start$exported$9);
    c.lambda$loop$8 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$loop$8$exported$21);
    c.removeListener = $rt_callWithReceiver(onnrs_NostrRTCSignaling_removeListener$exported$7);
    c.getAnnounces = $rt_callWithReceiver(onnrs_NostrRTCSignaling_getAnnounces$exported$26);
    c.isSignalingStarted = $rt_callWithReceiver(onnrs_NostrRTCSignaling_isSignalingStarted$exported$11);
    c.lambda$sendCandidates$15 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$sendCandidates$15$exported$13);
    c.lambda$sendCandidates$14 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$sendCandidates$14$exported$14);
    c.sendAnswer = $rt_callWithReceiver(onnrs_NostrRTCSignaling_sendAnswer$exported$29);
    c.decrypt = $rt_callWithReceiver(onnrs_NostrRTCSignaling_decrypt$exported$18);
    c.lambda$encrypt$17 = $rt_callWithReceiver(onnrs_NostrRTCSignaling_lambda$encrypt$17$exported$23);
    c = $rt_export_class_NostrRTCSignaling_584;
    c.lambda$onSubEvent$0 = onnrs_NostrRTCSignaling_lambda$onSubEvent$0$exported$4;
    c.lambda$onSubEvent$1 = onnrs_NostrRTCSignaling_lambda$onSubEvent$1$exported$3;
    c.lambda$onSubEvent$2 = onnrs_NostrRTCSignaling_lambda$onSubEvent$2$exported$2;
    c.lambda$onSubEvent$3 = onnrs_NostrRTCSignaling_lambda$onSubEvent$3$exported$1;
    c.lambda$start$6 = onnrs_NostrRTCSignaling_lambda$start$6$exported$0;
    c = onne_SignedNostrEvent$Identifier.prototype;
    c.hashCode = $rt_callWithReceiver(onne_SignedNostrEvent$Identifier_hashCode$exported$2);
    c.equals = $rt_callWithReceiver(onne_SignedNostrEvent$Identifier_equals$exported$1);
    c = onns_NostrNIP46Signer.prototype;
    c.onSubEvent = $rt_callWithReceiver(onns_NostrNIP46Signer_onSubEvent$exported$30);
    c.lambda$connect$3 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$connect$3$exported$19);
    c.waitForResponse = $rt_callWithReceiver(onns_NostrNIP46Signer_waitForResponse$exported$20);
    c.setRequestsTimeout = $rt_callWithReceiver(onns_NostrNIP46Signer_setRequestsTimeout$exported$28);
    c.sign = $rt_callWithReceiver(onns_NostrNIP46Signer_sign$exported$4);
    c.lambda$sendRPC$25 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$sendRPC$25$exported$22);
    c.lambda$sendRPC$24 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$sendRPC$24$exported$0);
    c.listen = $rt_callWithReceiver(onns_NostrNIP46Signer_listen$exported$16);
    c.lambda$sendRPC$23 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$sendRPC$23$exported$21);
    c.lambda$onSubEvent$15 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$onSubEvent$15$exported$8);
    c.lambda$onSubEvent$14 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$onSubEvent$14$exported$9);
    c.encrypt = $rt_callWithReceiver(onns_NostrNIP46Signer_encrypt$exported$11);
    c.loop = $rt_callWithReceiver(onns_NostrNIP46Signer_loop$exported$13);
    c.close = $rt_callWithReceiver(onns_NostrNIP46Signer_close$exported$18);
    c.connect = $rt_callWithReceiver(onns_NostrNIP46Signer_connect$exported$27);
    c.lambda$waitForResponse$20 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$waitForResponse$20$exported$26);
    c.setChallengeHandler = $rt_callWithReceiver(onns_NostrNIP46Signer_setChallengeHandler$exported$17);
    c.check = $rt_callWithReceiver(onns_NostrNIP46Signer_check$exported$24);
    c.getPublicKey = $rt_callWithReceiver(onns_NostrNIP46Signer_getPublicKey$exported$32);
    c.lambda$loop$0 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$loop$0$exported$1);
    c.lambda$check$11 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$check$11$exported$2);
    c.lambda$check$12 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$check$12$exported$23);
    c.lambda$check$13 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$check$13$exported$12);
    c.lambda$listen$8 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$listen$8$exported$14);
    c.toString = $rt_callWithReceiver(onns_NostrNIP46Signer_toString$exported$6);
    c.lambda$getPublicKey$28 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$getPublicKey$28$exported$15);
    c.decrypt = $rt_callWithReceiver(onns_NostrNIP46Signer_decrypt$exported$25);
    c.lambda$listen$7 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$listen$7$exported$29);
    c.lambda$getPublicKey$27 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$getPublicKey$27$exported$3);
    c.lambda$close$1 = $rt_callWithReceiver(onns_NostrNIP46Signer_lambda$close$1$exported$10);
    c.sendRPC = $rt_callWithReceiver(onns_NostrNIP46Signer_sendRPC$exported$7);
    c = $rt_export_class_NostrNIP46Signer_606;
    c.lambda$waitForResponse$19 = onns_NostrNIP46Signer_lambda$waitForResponse$19$exported$3;
    c.lambda$connect$2 = onns_NostrNIP46Signer_lambda$connect$2$exported$12;
    c.lambda$sign$26 = onns_NostrNIP46Signer_lambda$sign$26$exported$0;
    c.lambda$sendRPC$21 = onns_NostrNIP46Signer_lambda$sendRPC$21$exported$2;
    c.lambda$check$9 = onns_NostrNIP46Signer_lambda$check$9$exported$8;
    c.lambda$sendRPC$22 = onns_NostrNIP46Signer_lambda$sendRPC$22$exported$1;
    c.lambda$onSubEvent$16 = onns_NostrNIP46Signer_lambda$onSubEvent$16$exported$6;
    c.lambda$check$10 = onns_NostrNIP46Signer_lambda$check$10$exported$7;
    c.lambda$onSubEvent$18 = onns_NostrNIP46Signer_lambda$onSubEvent$18$exported$4;
    c.lambda$onSubEvent$17 = onns_NostrNIP46Signer_lambda$onSubEvent$17$exported$5;
    c.lambda$listen$6 = onns_NostrNIP46Signer_lambda$listen$6$exported$9;
    c.lambda$listen$5 = onns_NostrNIP46Signer_lambda$listen$5$exported$10;
    c.lambda$listen$4 = onns_NostrNIP46Signer_lambda$listen$4$exported$11;
    c = onne_NostrEvent$TagValue.prototype;
    c.getAll = $rt_callWithReceiver(onne_NostrEvent$TagValue_getAll$exported$3);
    c.size = $rt_callWithReceiver(onne_NostrEvent$TagValue_size$exported$5);
    c.get = $rt_callWithReceiver(onne_NostrEvent$TagValue_get$exported$2);
    c = $rt_export_class_KeySecurity_616;
    c.$values = onnk_NostrPrivateKey$KeySecurity_$values$exported$2;
    c.valueOf = onnk_NostrPrivateKey$KeySecurity_valueOf$exported$1;
    c.values = onnk_NostrPrivateKey$KeySecurity_values$exported$0;
    c = onn_NostrPool$1.prototype;
    c.onRelayConnectRequest = $rt_callWithReceiver(onn_NostrPool$1_onRelayConnectRequest$exported$4);
    c.onRelayMessage = $rt_callWithReceiver(onn_NostrPool$1_onRelayMessage$exported$3);
    c.onRelayDisconnect = $rt_callWithReceiver(onn_NostrPool$1_onRelayDisconnect$exported$1);
    c.onRelayConnect = $rt_callWithReceiver(onn_NostrPool$1_onRelayConnect$exported$10);
    c.onRelayDisconnectRequest = $rt_callWithReceiver(onn_NostrPool$1_onRelayDisconnectRequest$exported$5);
    c.onRelayAfterSend = $rt_callWithReceiver(onn_NostrPool$1_onRelayAfterSend$exported$2);
    c.onRelayLoop = $rt_callWithReceiver(onn_NostrPool$1_onRelayLoop$exported$6);
    c.onRelaySend = $rt_callWithReceiver(onn_NostrPool$1_onRelaySend$exported$7);
    c.onRelayBeforeSend = $rt_callWithReceiver(onn_NostrPool$1_onRelayBeforeSend$exported$9);
    c.onRelayError = $rt_callWithReceiver(onn_NostrPool$1_onRelayError$exported$8);
    c = onnet_PassthroughEventTracker.prototype;
    c.tuneFor = $rt_callWithReceiver(onnet_PassthroughEventTracker_tuneFor$exported$2);
    c.seen = $rt_callWithReceiver(onnet_PassthroughEventTracker_seen$exported$1);
    c = onns_SdanSlotSize.prototype;
    c.getValue = $rt_callWithReceiver(onns_SdanSlotSize_getValue$exported$1);
    c = $rt_export_class_SdanSlotSize_642;
    c.$values = onns_SdanSlotSize_$values$exported$2;
    c.valueOf = onns_SdanSlotSize_valueOf$exported$1;
    c.values = onns_SdanSlotSize_values$exported$0;
    c = onnpi_NostrClosedMessage.prototype;
    c.getReason = $rt_callWithReceiver(onnpi_NostrClosedMessage_getReason$exported$2);
    c.getSubId = $rt_callWithReceiver(onnpi_NostrClosedMessage_getSubId$exported$1);
    c = $rt_export_class_NostrClosedMessage_652;
    c.parse = onnpi_NostrClosedMessage_parse$exported$0;
    c = onnrs_NostrRTCPeer.prototype;
    c.getMisc = $rt_callWithReceiver(onnrs_NostrRTCPeer_getMisc$exported$1);
    c.setLastSeen = $rt_callWithReceiver(onnrs_NostrRTCPeer_setLastSeen$exported$4);
    c.hashCode = $rt_callWithReceiver(onnrs_NostrRTCPeer_hashCode$exported$7);
    c.equals = $rt_callWithReceiver(onnrs_NostrRTCPeer_equals$exported$5);
    c.toString = $rt_callWithReceiver(onnrs_NostrRTCPeer_toString$exported$6);
    c.getPublicMisc = $rt_callWithReceiver(onnrs_NostrRTCPeer_getPublicMisc$exported$8);
    c.getLastSeen = $rt_callWithReceiver(onnrs_NostrRTCPeer_getLastSeen$exported$9);
    c.getPubkey = $rt_callWithReceiver(onnrs_NostrRTCPeer_getPubkey$exported$2);
    c.getTurnServer = $rt_callWithReceiver(onnrs_NostrRTCPeer_getTurnServer$exported$3);
    c = $rt_export_class_Bech32_672;
    c.convertBits = onnu_Bech32_convertBits$exported$8;
    c.bech32Encode = onnu_Bech32_bech32Encode$exported$1;
    c.createChecksum = onnu_Bech32_createChecksum$exported$5;
    c.getLowerCaseBytes = onnu_Bech32_getLowerCaseBytes$exported$7;
    c.polymod = onnu_Bech32_polymod$exported$6;
    c.verifyChecksum = onnu_Bech32_verifyChecksum$exported$4;
    c.bech32Decode = onnu_Bech32_bech32Decode$exported$2;
    c = $rt_export_class_NostrEvent_692;
    c.isRegular = onne_NostrEvent_isRegular$exported$4;
    c.computeEventId = onne_NostrEvent_computeEventId$exported$0;
    c.isEphemeral = onne_NostrEvent_isEphemeral$exported$3;
    c.lambda$computeEventId$1 = onne_NostrEvent_lambda$computeEventId$1$exported$5;
    c.isAddressable = onne_NostrEvent_isAddressable$exported$2;
    c.isReplaceable = onne_NostrEvent_isReplaceable$exported$1;
    c.lambda$computeEventId$0 = onne_NostrEvent_lambda$computeEventId$0$exported$6;
    c = onnn_Nip01UserMetadataListener.prototype;
    c.onSubEvent = $rt_callWithReceiver(onnn_Nip01UserMetadataListener_onSubEvent$exported$2);
    c = onnrs_NostrRTCLocalPeer.prototype;
    c.getSigner = $rt_callWithReceiver(onnrs_NostrRTCLocalPeer_getSigner$exported$1);
    c.getStunServers = $rt_callWithReceiver(onnrs_NostrRTCLocalPeer_getStunServers$exported$0);
    c = $rt_export_class_UniqueId_722;
    c.random = onnu_UniqueId_random$exported$1;
    c.getNext = onnu_UniqueId_getNext$exported$0;
    c = onns_SdanSlotBid.prototype;
    c.getValue = $rt_callWithReceiver(onns_SdanSlotBid_getValue$exported$1);
    c = $rt_export_class_SdanSlotBid_728;
    c.$values = onns_SdanSlotBid_$values$exported$2;
    c.valueOf = onns_SdanSlotBid_valueOf$exported$1;
    c.values = onns_SdanSlotBid_values$exported$0;
    c = onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0.prototype;
    c.onTimer = $rt_callWithReceiver(onpt_TeaVMPlatform$2$lambda$runLater$3$lambda$_4_0_onTimer$exported$0);
    c = onnrt_NostrTURN$SubscriptionListenerWrapper.prototype;
    c.onSubEvent = $rt_callWithReceiver(onnrt_NostrTURN$SubscriptionListenerWrapper_onSubEvent$exported$1);
    c = onnr_NostrRTCSocket.prototype;
    c.mergeRemoteRTCIceCandidate = $rt_callWithReceiver(onnr_NostrRTCSocket_mergeRemoteRTCIceCandidate$exported$14);
    c.getLocalPeer = $rt_callWithReceiver(onnr_NostrRTCSocket_getLocalPeer$exported$17);
    c.lambda$connect$2 = $rt_callWithReceiver(onnr_NostrRTCSocket_lambda$connect$2$exported$13);
    c.isConnected = $rt_callWithReceiver(onnr_NostrRTCSocket_isConnected$exported$11);
    c.useTURN = $rt_callWithReceiver(onnr_NostrRTCSocket_useTURN$exported$1);
    c.onRTCConnected = $rt_callWithReceiver(onnr_NostrRTCSocket_onRTCConnected$exported$9);
    c.removeListener = $rt_callWithReceiver(onnr_NostrRTCSocket_removeListener$exported$3);
    c.lambda$emitCandidates$0 = $rt_callWithReceiver(onnr_NostrRTCSocket_lambda$emitCandidates$0$exported$19);
    c.onTurnPacket = $rt_callWithReceiver(onnr_NostrRTCSocket_onTurnPacket$exported$0);
    c.onRTCBinaryMessage = $rt_callWithReceiver(onnr_NostrRTCSocket_onRTCBinaryMessage$exported$2);
    c.listen = $rt_callWithReceiver(onnr_NostrRTCSocket_listen$exported$10);
    c.getRemotePeer = $rt_callWithReceiver(onnr_NostrRTCSocket_getRemotePeer$exported$18);
    c.onLocalRTCIceCandidate = $rt_callWithReceiver(onnr_NostrRTCSocket_onLocalRTCIceCandidate$exported$6);
    c.setForceTURN = $rt_callWithReceiver(onnr_NostrRTCSocket_setForceTURN$exported$12);
    c.onRTCChannelError = $rt_callWithReceiver(onnr_NostrRTCSocket_onRTCChannelError$exported$23);
    c.isUsingTURN = $rt_callWithReceiver(onnr_NostrRTCSocket_isUsingTURN$exported$7);
    c.emitCandidates = $rt_callWithReceiver(onnr_NostrRTCSocket_emitCandidates$exported$20);
    c.lambda$listen$1 = $rt_callWithReceiver(onnr_NostrRTCSocket_lambda$listen$1$exported$4);
    c.close = $rt_callWithReceiver(onnr_NostrRTCSocket_close$exported$8);
    c.write = $rt_callWithReceiver(onnr_NostrRTCSocket_write$exported$16);
    c.connect = $rt_callWithReceiver(onnr_NostrRTCSocket_connect$exported$21);
    c.onRTCDisconnected = $rt_callWithReceiver(onnr_NostrRTCSocket_onRTCDisconnected$exported$5);
    c.addListener = $rt_callWithReceiver(onnr_NostrRTCSocket_addListener$exported$22);
    c = $rt_export_class_NostrRTCSocket_787;
    c.lambda$write$4 = onnr_NostrRTCSocket_lambda$write$4$exported$0;
    c.lambda$write$3 = onnr_NostrRTCSocket_lambda$write$3$exported$1;
    c = onns_SdanMimeType.prototype;
    c.getValue = $rt_callWithReceiver(onns_SdanMimeType_getValue$exported$1);
    c = $rt_export_class_SdanMimeType_797;
    c.fromValue = onns_SdanMimeType_fromValue$exported$2;
    c.$values = onns_SdanMimeType_$values$exported$3;
    c.valueOf = onns_SdanMimeType_valueOf$exported$1;
    c.values = onns_SdanMimeType_values$exported$0;
    c = onnp_NostrMessageAck.prototype;
    c.callSuccessCallback = $rt_callWithReceiver(onnp_NostrMessageAck_callSuccessCallback$exported$3);
    c.getSentAt = $rt_callWithReceiver(onnp_NostrMessageAck_getSentAt$exported$7);
    c.get = $rt_callWithReceiver(onnp_NostrMessageAck_get$exported$2);
    c.callFailureCallback = $rt_callWithReceiver(onnp_NostrMessageAck_callFailureCallback$exported$5);
    c.getRelay = $rt_callWithReceiver(onnp_NostrMessageAck_getRelay$exported$9);
    c.setRemoteStatus = $rt_callWithReceiver(onnp_NostrMessageAck_setRemoteStatus$exported$0);
    c.getMessage = $rt_callWithReceiver(onnp_NostrMessageAck_getMessage$exported$8);
    c.getId = $rt_callWithReceiver(onnp_NostrMessageAck_getId$exported$1);
    c.getStatus = $rt_callWithReceiver(onnp_NostrMessageAck_getStatus$exported$4);
    c = onnrs_NostrRTCAnnounce.prototype;
    c.getExpireAt = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_getExpireAt$exported$1);
    c.updateExpireAt = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_updateExpireAt$exported$2);
    c.hashCode = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_hashCode$exported$7);
    c.equals = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_equals$exported$3);
    c.get = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_get$exported$6);
    c.toString = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_toString$exported$4);
    c.getPubkey = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_getPubkey$exported$0);
    c.isExpired = $rt_callWithReceiver(onnrs_NostrRTCAnnounce_isExpired$exported$5);
    c = onnn_Nip46AppMetadata.prototype;
    c.setName = $rt_callWithReceiver(onnn_Nip46AppMetadata_setName$exported$10);
    c.getName = $rt_callWithReceiver(onnn_Nip46AppMetadata_getName$exported$5);
    c.setPerms = $rt_callWithReceiver(onnn_Nip46AppMetadata_setPerms$exported$7);
    c.permsFromCsv = $rt_callWithReceiver(onnn_Nip46AppMetadata_permsFromCsv$exported$12);
    c.removePerm = $rt_callWithReceiver(onnn_Nip46AppMetadata_removePerm$exported$8);
    c.setUrl = $rt_callWithReceiver(onnn_Nip46AppMetadata_setUrl$exported$14);
    c.getUrl = $rt_callWithReceiver(onnn_Nip46AppMetadata_getUrl$exported$13);
    c.clone = $rt_callWithReceiver(onnn_Nip46AppMetadata_clone$exported$15);
    c.addPerm = $rt_callWithReceiver(onnn_Nip46AppMetadata_addPerm$exported$4);
    c.toString = $rt_callWithReceiver(onnn_Nip46AppMetadata_toString$exported$2);
    c.getPerms = $rt_callWithReceiver(onnn_Nip46AppMetadata_getPerms$exported$11);
    c.getImage = $rt_callWithReceiver(onnn_Nip46AppMetadata_getImage$exported$6);
    c.setImage = $rt_callWithReceiver(onnn_Nip46AppMetadata_setImage$exported$3);
    c = $rt_export_class_Nip39_839;
    c.isValidPlatform = onnn_Nip39_isValidPlatform$exported$5;
    c.fetch = onnn_Nip39_fetch$exported$3;
    c.update = onnn_Nip39_update$exported$4;
    c.from = onnn_Nip39_from$exported$1;
    c.lambda$fetch$0 = onnn_Nip39_lambda$fetch$0$exported$6;
    c = onnu_ExponentialBackoff.prototype;
    c.registerSuccess = $rt_callWithReceiver(onnu_ExponentialBackoff_registerSuccess$exported$3);
    c.getNextAttemptTime = $rt_callWithReceiver(onnu_ExponentialBackoff_getNextAttemptTime$exported$1);
    c.registerFailure = $rt_callWithReceiver(onnu_ExponentialBackoff_registerFailure$exported$2);
    c = onns_NostrNIP46Signer$ResponseListener.prototype;
    c.cancel = $rt_callWithReceiver(onns_NostrNIP46Signer$ResponseListener_cancel$exported$0);
    c.toString = $rt_callWithReceiver(onns_NostrNIP46Signer$ResponseListener_toString$exported$1);
    c = onnk_NostrKeyPair.prototype;
    c.hashCode = $rt_callWithReceiver(onnk_NostrKeyPair_hashCode$exported$8);
    c.equals = $rt_callWithReceiver(onnk_NostrKeyPair_equals$exported$6);
    c.clone = $rt_callWithReceiver(onnk_NostrKeyPair_clone$exported$9);
    c.toString = $rt_callWithReceiver(onnk_NostrKeyPair_toString$exported$5);
    c.getPublicKey = $rt_callWithReceiver(onnk_NostrKeyPair_getPublicKey$exported$7);
    c.getPrivateKey = $rt_callWithReceiver(onnk_NostrKeyPair_getPrivateKey$exported$4);
    c = onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0.prototype;
    c.onTimer = $rt_callWithReceiver(onpt_TeaVMPlatform$2$lambda$run$1$lambda$_6_0_onTimer$exported$0);
    c = onnk_NostrPublicKey.prototype;
    c._array = $rt_callWithReceiver(onnk_NostrPublicKey__array$exported$9);
    c.asHex = $rt_callWithReceiver(onnk_NostrPublicKey_asHex$exported$5);
    c.asBech32 = $rt_callWithReceiver(onnk_NostrPublicKey_asBech32$exported$6);
    c.hashCode = $rt_callWithReceiver(onnk_NostrPublicKey_hashCode$exported$7);
    c.equals = $rt_callWithReceiver(onnk_NostrPublicKey_equals$exported$2);
    c.asReadOnlyBytes = $rt_callWithReceiver(onnk_NostrPublicKey_asReadOnlyBytes$exported$8);
    c.clone = $rt_callWithReceiver(onnk_NostrPublicKey_clone$exported$10);
    c.toString = $rt_callWithReceiver(onnk_NostrPublicKey_toString$exported$1);
    c.preload = $rt_callWithReceiver(onnk_NostrPublicKey_preload$exported$0);
    c = $rt_export_class_NostrPublicKey_897;
    c.fromBech32 = onnk_NostrPublicKey_fromBech32$exported$4;
    c.fromHex = onnk_NostrPublicKey_fromHex$exported$2;
    c.fromNpub = onnk_NostrPublicKey_fromNpub$exported$3;
    c.fromBytes = onnk_NostrPublicKey_fromBytes$exported$1;
    c = onns_SdanBid.prototype;
    c.getSlotSize = $rt_callWithReceiver(onns_SdanBid_getSlotSize$exported$27);
    c.getId = $rt_callWithReceiver(onns_SdanBid_getId$exported$20);
    c.getDescription = $rt_callWithReceiver(onns_SdanBid_getDescription$exported$5);
    c.getBid = $rt_callWithReceiver(onns_SdanBid_getBid$exported$11);
    c.getTargets = $rt_callWithReceiver(onns_SdanBid_getTargets$exported$23);
    c.hashCode = $rt_callWithReceiver(onns_SdanBid_hashCode$exported$17);
    c.getLanguage = $rt_callWithReceiver(onns_SdanBid_getLanguage$exported$22);
    c.getActionType = $rt_callWithReceiver(onns_SdanBid_getActionType$exported$2);
    c.getMimeType = $rt_callWithReceiver(onns_SdanBid_getMimeType$exported$7);
    c.getExpirationTimestamp = $rt_callWithReceiver(onns_SdanBid_getExpirationTimestamp$exported$25);
    c.getTier3Category = $rt_callWithReceiver(onns_SdanBid_getTier3Category$exported$30);
    c.getPayload = $rt_callWithReceiver(onns_SdanBid_getPayload$exported$18);
    c.getSize = $rt_callWithReceiver(onns_SdanBid_getSize$exported$19);
    c.getLink = $rt_callWithReceiver(onns_SdanBid_getLink$exported$26);
    c.getTier4Category = $rt_callWithReceiver(onns_SdanBid_getTier4Category$exported$3);
    c.getOptionalTag = $rt_callWithReceiver(onns_SdanBid_getOptionalTag$exported$1);
    c.getTier1Category = $rt_callWithReceiver(onns_SdanBid_getTier1Category$exported$6);
    c.getCallToAction = $rt_callWithReceiver(onns_SdanBid_getCallToAction$exported$14);
    c.equals = $rt_callWithReceiver(onns_SdanBid_equals$exported$15);
    c.clone = $rt_callWithReceiver(onns_SdanBid_clone$exported$28);
    c.toString = $rt_callWithReceiver(onns_SdanBid_toString$exported$4);
    c.isExpired = $rt_callWithReceiver(onns_SdanBid_isExpired$exported$9);
    c.getTier2Category = $rt_callWithReceiver(onns_SdanBid_getTier2Category$exported$8);
    c.getContext = $rt_callWithReceiver(onns_SdanBid_getContext$exported$10);
    c.getSlotBid = $rt_callWithReceiver(onns_SdanBid_getSlotBid$exported$21);
    c.getHoldTime = $rt_callWithReceiver(onns_SdanBid_getHoldTime$exported$29);
    c.getRequiredTag = $rt_callWithReceiver(onns_SdanBid_getRequiredTag$exported$0);
    c = onnrs_NostrRTCIceCandidate.prototype;
    c.getCandidates = $rt_callWithReceiver(onnrs_NostrRTCIceCandidate_getCandidates$exported$2);
    c.get = $rt_callWithReceiver(onnrs_NostrRTCIceCandidate_get$exported$4);
    c.toString = $rt_callWithReceiver(onnrs_NostrRTCIceCandidate_toString$exported$3);
    c.getPubkey = $rt_callWithReceiver(onnrs_NostrRTCIceCandidate_getPubkey$exported$0);
    c = $rt_export_class_NostrMessage_957;
    c.toJSON = onnp_NostrMessage_toJSON$exported$0;
    c.ack = onnp_NostrMessage_ack$exported$2;
    c.toSerial = onnp_NostrMessage_toSerial$exported$1;
    c = onnn_Nip39ExternalIdentities.prototype;
    c.setExternalIdentity = $rt_callWithReceiver(onnn_Nip39ExternalIdentities_setExternalIdentity$exported$9);
    c.getExternalIdentity = $rt_callWithReceiver(onnn_Nip39ExternalIdentities_getExternalIdentity$exported$7);
    c.getExternalIdentities = $rt_callWithReceiver(onnn_Nip39ExternalIdentities_getExternalIdentities$exported$1);
    c.removeExternalIdentity = $rt_callWithReceiver(onnn_Nip39ExternalIdentities_removeExternalIdentity$exported$8);
    c.clearExternalIdentities = $rt_callWithReceiver(onnn_Nip39ExternalIdentities_clearExternalIdentities$exported$6);
    c = onne_SignedNostrEvent.prototype;
    c.isRegular = $rt_callWithReceiver(onne_SignedNostrEvent_isRegular$exported$9);
    c.isEphemeral = $rt_callWithReceiver(onne_SignedNostrEvent_isEphemeral$exported$3);
    c.hasTag = $rt_callWithReceiver(onne_SignedNostrEvent_hasTag$exported$10);
    c.getTagRows = $rt_callWithReceiver(onne_SignedNostrEvent_getTagRows$exported$5);
    c.getAuthor = $rt_callWithReceiver(onne_SignedNostrEvent_getAuthor$exported$17);
    c.isAddressable = $rt_callWithReceiver(onne_SignedNostrEvent_isAddressable$exported$15);
    c.getContent = $rt_callWithReceiver(onne_SignedNostrEvent_getContent$exported$2);
    c.getSignature = $rt_callWithReceiver(onne_SignedNostrEvent_getSignature$exported$6);
    c.getId = $rt_callWithReceiver(onne_SignedNostrEvent_getId$exported$18);
    c.getKind = $rt_callWithReceiver(onne_SignedNostrEvent_getKind$exported$4);
    c.getTag = $rt_callWithReceiver(onne_SignedNostrEvent_getTag$exported$16);
    c.getPubkey = $rt_callWithReceiver(onne_SignedNostrEvent_getPubkey$exported$19);
    c.getCoordinates = $rt_callWithReceiver(onne_SignedNostrEvent_getCoordinates$exported$25);
    c.listTagKeys = $rt_callWithReceiver(onne_SignedNostrEvent_listTagKeys$exported$13);
    c.getCreatedAt = $rt_callWithReceiver(onne_SignedNostrEvent_getCreatedAt$exported$12);
    c.getExpiration = $rt_callWithReceiver(onne_SignedNostrEvent_getExpiration$exported$0);
    c.getFirstTag = $rt_callWithReceiver(onne_SignedNostrEvent_getFirstTag$exported$22);
    c.getIdentifier = $rt_callWithReceiver(onne_SignedNostrEvent_getIdentifier$exported$7);
    c.clone = $rt_callWithReceiver(onne_SignedNostrEvent_clone$exported$24);
    c.verify = $rt_callWithReceiver(onne_SignedNostrEvent_verify$exported$8);
    c.isReplaceable = $rt_callWithReceiver(onne_SignedNostrEvent_isReplaceable$exported$14);
    c.getIdBech32 = $rt_callWithReceiver(onne_SignedNostrEvent_getIdBech32$exported$23);
    c.verifyAsync = $rt_callWithReceiver(onne_SignedNostrEvent_verifyAsync$exported$21);
    c = $rt_export_class_SignedNostrEvent_972;
    c.lambda$new$0 = onne_SignedNostrEvent_lambda$new$0$exported$2;
    c.parse = onne_SignedNostrEvent_parse$exported$0;
    c.lambda$new$1 = onne_SignedNostrEvent_lambda$new$1$exported$1;
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_1.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_0.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0);
    c = onnn_NostrSearchFilter.prototype;
    c.withTag = $rt_callWithReceiver(onnn_NostrSearchFilter_withTag$exported$0);
    c.search = $rt_callWithReceiver(onnn_NostrSearchFilter_search$exported$1);
    c.withKind = $rt_callWithReceiver(onnn_NostrSearchFilter_withKind$exported$3);
    c.withAuthor = $rt_callWithReceiver(onnn_NostrSearchFilter_withAuthor$exported$8);
    c.limit = $rt_callWithReceiver(onnn_NostrSearchFilter_limit$exported$7);
    c.until = $rt_callWithReceiver(onnn_NostrSearchFilter_until$exported$2);
    c.id = $rt_callWithReceiver(onnn_NostrSearchFilter_id$exported$6);
    c.since = $rt_callWithReceiver(onnn_NostrSearchFilter_since$exported$4);
})();
function $rt_export_class_NostrOKMessage_8(p0, p1, p2)  {
    return onnpi_NostrOKMessage__init_$exported$2(p0, p1, p2);
};
$rt_export_class_NostrOKMessage_8.prototype = onnpi_NostrOKMessage.prototype;
function $rt_export_class_FailOnDoubleTracker_13()  {
    return onnet_FailOnDoubleTracker__init_$exported$0();
};
$rt_export_class_FailOnDoubleTracker_13.prototype = onnet_FailOnDoubleTracker.prototype;
function $rt_export_class_TreeNode_34(p0, p1)  {
    return onns_SdanTaxonomy$TreeNode__init_$exported$5(p0, p1);
};
$rt_export_class_TreeNode_34.prototype = onns_SdanTaxonomy$TreeNode.prototype;
function $rt_export_class_NostrKeyPairSigner_39(p0)  {
    return onns_NostrKeyPairSigner__init_$exported$12(p0);
};
$rt_export_class_NostrKeyPairSigner_39.prototype = onns_NostrKeyPairSigner.prototype;
function $rt_export_class_Nip01_43()  {
    return onnn_Nip01__init_$exported$0();
};
$rt_export_class_Nip01_43.prototype = onnn_Nip01.prototype;
function $rt_export_class_SdanTaxonomy_44(p0)  {
    return onns_SdanTaxonomy__init_$exported$1(p0);
};
$rt_export_class_SdanTaxonomy_44.prototype = onns_SdanTaxonomy.prototype;
function $rt_export_class_Coordinates_46(p0, p1, p2)  {
    return onne_NostrEvent$Coordinates__init_$exported$1(p0, p1, p2);
};
$rt_export_class_Coordinates_46.prototype = onne_NostrEvent$Coordinates.prototype;
function $rt_export_class_Nip44_49()  {
    return onnn_Nip44__init_$exported$0();
};
$rt_export_class_Nip44_49.prototype = onnn_Nip44.prototype;
function $rt_export_class_BunkerUrl_51(p0, p1)  {
    return onnn_BunkerUrl__init_$exported$3(p0, p1);
};
$rt_export_class_BunkerUrl_51.prototype = onnn_BunkerUrl.prototype;
function $rt_export_class_NostrRTCSignaling$1_53(p0)  {
    return onnrs_NostrRTCSignaling$1__init_$exported$0(p0);
};
$rt_export_class_NostrRTCSignaling$1_53.prototype = onnrs_NostrRTCSignaling$1.prototype;
function $rt_export_class_Nip24ExtraMetadata_62(p0)  {
    return onnn_Nip24ExtraMetadata__init_$exported$3(p0);
};
$rt_export_class_Nip24ExtraMetadata_62.prototype = onnn_Nip24ExtraMetadata.prototype;
function $rt_export_class_NostrPoolAnyAckPolicy_93()  {
    return onnp_NostrPoolAnyAckPolicy__init_$exported$0();
};
$rt_export_class_NostrPoolAnyAckPolicy_93.prototype = onnp_NostrPoolAnyAckPolicy.prototype;
function $rt_export_class_NostrPrivateKey_113(p0)  {
    return onnk_NostrPrivateKey__init_$exported$8(p0);
};
$rt_export_class_NostrPrivateKey_113.prototype = onnk_NostrPrivateKey.prototype;
function $rt_export_class_NostrEOSEMessage_117(p0)  {
    return onnpi_NostrEOSEMessage__init_$exported$1(p0);
};
$rt_export_class_NostrEOSEMessage_117.prototype = onnpi_NostrEOSEMessage.prototype;
function $rt_export_class_NostrRTCRoom_120(p0, p1, p2, p3, p4)  {
    return onnr_NostrRTCRoom__init_$exported$28(p0, p1, p2, p3, p4);
};
$rt_export_class_NostrRTCRoom_120.prototype = onnr_NostrRTCRoom.prototype;
function $rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_3_128()  {
    throw new Error("Can't instantiate this class directly");
};
$rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_3_128.prototype = onn_NostrPool$lambda$fetch$17$lambda$_40_3.prototype;
function $rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_4_129()  {
    throw new Error("Can't instantiate this class directly");
};
$rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_4_129.prototype = onn_NostrPool$lambda$fetch$17$lambda$_40_4.prototype;
function $rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_2_131()  {
    throw new Error("Can't instantiate this class directly");
};
$rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_2_131.prototype = onn_NostrPool$lambda$fetch$17$lambda$_40_2.prototype;
function $rt_export_class_NostrTURNSettings_133(p0, p1, p2, p3, p4)  {
    return onnrt_NostrTURNSettings__init_$exported$6(p0, p1, p2, p3, p4);
};
$rt_export_class_NostrTURNSettings_133.prototype = onnrt_NostrTURNSettings.prototype;
function $rt_export_class_SdanOffer_135(p0)  {
    return onns_SdanOffer__init_$exported$0(p0);
};
$rt_export_class_SdanOffer_135.prototype = onns_SdanOffer.prototype;
function $rt_export_class_NostrRelay_162(p0)  {
    return onn_NostrRelay__init_$exported$19(p0);
};
$rt_export_class_NostrRelay_162.prototype = onn_NostrRelay.prototype;
function $rt_export_class_SdanTaxonomyTerm_180(p0, p1, p2, p3, p4, p5, p6, p7)  {
    return onns_SdanTaxonomy$SdanTaxonomyTerm__init_$exported$9(p0, p1, p2, p3, p4, p5, p6, p7);
};
$rt_export_class_SdanTaxonomyTerm_180.prototype = onns_SdanTaxonomy$SdanTaxonomyTerm.prototype;
function $rt_export_class_Nip49FailedException_181(p0, p1)  {
    return onnn_Nip49FailedException__init_$exported$2(p0, p1);
};
$rt_export_class_Nip49FailedException_181.prototype = onnn_Nip49FailedException.prototype;
function $rt_export_class_ScheduledAction_198(p0, p1)  {
    return onnu_ScheduledAction__init_$exported$0(p0, p1);
};
$rt_export_class_ScheduledAction_198.prototype = onnu_ScheduledAction.prototype;
function $rt_export_class_NostrRTCRoomPeerDiscoveredState_199(p0, p1)  {
    return onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState__init_$exported$0(p0, p1);
};
$rt_export_class_NostrRTCRoomPeerDiscoveredState_199.prototype = onnrl_NostrRTCRoomPeerDiscoveredListener$NostrRTCRoomPeerDiscoveredState.prototype;
function $rt_export_class_Nip49_201()  {
    return onnn_Nip49__init_$exported$0();
};
$rt_export_class_Nip49_201.prototype = onnn_Nip49.prototype;
function $rt_export_class_RemoveReason_219(p0, p1)  {
    return onnrs_NostrRTCSignaling$Listener$RemoveReason__init_$exported$0(p0, p1);
};
$rt_export_class_RemoveReason_219.prototype = onnrs_NostrRTCSignaling$Listener$RemoveReason.prototype;
function $rt_export_class_NostrNoticeMessage_258(p0)  {
    return onnpi_NostrNoticeMessage__init_$exported$2(p0);
};
$rt_export_class_NostrNoticeMessage_258.prototype = onnpi_NostrNoticeMessage.prototype;
function $rt_export_class_NostrRelay$1_260(p0)  {
    return onn_NostrRelay$1__init_$exported$1(p0);
};
$rt_export_class_NostrRelay$1_260.prototype = onn_NostrRelay$1.prototype;
function $rt_export_class_Nip01UserMetadata_264(p0)  {
    return onnn_Nip01UserMetadata__init_$exported$5(p0);
};
$rt_export_class_Nip01UserMetadata_264.prototype = onnn_Nip01UserMetadata.prototype;
function $rt_export_class_Chunk_299(p0)  {
    return onnrt_NostrTURN$Chunk__init_$exported$0(p0);
};
$rt_export_class_Chunk_299.prototype = onnrt_NostrTURN$Chunk.prototype;
function $rt_export_class_ReceivedSignedNostrEvent_311(p0, p1)  {
    return onne_SignedNostrEvent$ReceivedSignedNostrEvent__init_$exported$0(p0, p1);
};
$rt_export_class_ReceivedSignedNostrEvent_311.prototype = onne_SignedNostrEvent$ReceivedSignedNostrEvent.prototype;
function $rt_export_class_NostrPool_327()  {
    return onn_NostrPool__init_$exported$21();
};
$rt_export_class_NostrPool_327.prototype = onn_NostrPool.prototype;
function $rt_export_class_PendingChallenge_330(p0, p1)  {
    return onns_NostrNIP46Signer$PendingChallenge__init_$exported$1(p0, p1);
};
$rt_export_class_PendingChallenge_330.prototype = onns_NostrNIP46Signer$PendingChallenge.prototype;
function $rt_export_class_NostrRTCRoom$1_342(p0)  {
    return onnr_NostrRTCRoom$1__init_$exported$7(p0);
};
$rt_export_class_NostrRTCRoom$1_342.prototype = onnr_NostrRTCRoom$1.prototype;
function $rt_export_class_SdanActionType_372(p0, p1, p2)  {
    return onns_SdanActionType__init_$exported$0(p0, p1, p2);
};
$rt_export_class_SdanActionType_372.prototype = onns_SdanActionType.prototype;
function $rt_export_class_ByteBufferList_382(p0)  {
    return onnu_ByteBufferList__init_$exported$3(p0);
};
$rt_export_class_ByteBufferList_382.prototype = onnu_ByteBufferList.prototype;
function $rt_export_class_NostrSubCloseMessage_390(p0)  {
    return onn_NostrSubscription$NostrSubCloseMessage__init_$exported$1(p0);
};
$rt_export_class_NostrSubCloseMessage_390.prototype = onn_NostrSubscription$NostrSubCloseMessage.prototype;
function $rt_export_class_NostrconnectUrl_412(p0, p1, p2, p3)  {
    return onnn_NostrconnectUrl__init_$exported$0(p0, p1, p2, p3);
};
$rt_export_class_NostrconnectUrl_412.prototype = onnn_NostrconnectUrl.prototype;
function $rt_export_class_Status_423(p0, p1)  {
    return onnp_NostrMessageAck$Status__init_$exported$0(p0, p1);
};
$rt_export_class_Status_423.prototype = onnp_NostrMessageAck$Status.prototype;
function $rt_export_class_SubAttachment_440()  {
    return onn_NostrRelaySubManager$SubAttachment__init_$exported$0();
};
$rt_export_class_SubAttachment_440.prototype = onn_NostrRelaySubManager$SubAttachment.prototype;
function $rt_export_class_NostrRelayInfo_447(p0, p1)  {
    return onn_NostrRelayInfo__init_$exported$1(p0, p1);
};
$rt_export_class_NostrRelayInfo_447.prototype = onn_NostrRelayInfo.prototype;
function $rt_export_class_Nip05Nip46Data_455(p0)  {
    return onnn_Nip05Nip46Data__init_$exported$4(p0);
};
$rt_export_class_Nip05Nip46Data_455.prototype = onnn_Nip05Nip46Data.prototype;
function $rt_export_class_NostrRelaySubManager_461()  {
    return onn_NostrRelaySubManager__init_$exported$0();
};
$rt_export_class_NostrRelaySubManager_461.prototype = onn_NostrRelaySubManager.prototype;
function $rt_export_class_Bech32Exception_474(p0)  {
    return onnu_Bech32$Bech32Exception__init_$exported$0(p0);
};
$rt_export_class_Bech32Exception_474.prototype = onnu_Bech32$Bech32Exception.prototype;
function $rt_export_class_NostrSubscription_481(p0, p1, p2, p3, p4)  {
    return onn_NostrSubscription__init_$exported$1(p0, p1, p2, p3, p4);
};
$rt_export_class_NostrSubscription_481.prototype = onn_NostrSubscription.prototype;
function $rt_export_class_UnsignedNostrEvent_485()  {
    return onne_UnsignedNostrEvent__init_$exported$16();
};
$rt_export_class_UnsignedNostrEvent_485.prototype = onne_UnsignedNostrEvent.prototype;
function $rt_export_class_NostrRTCAnswer_486(p0, p1)  {
    return onnrs_NostrRTCAnswer__init_$exported$6(p0, p1);
};
$rt_export_class_NostrRTCAnswer_486.prototype = onnrs_NostrRTCAnswer.prototype;
function $rt_export_class_NostrRTCOffer_519(p0, p1)  {
    return onnrs_NostrRTCOffer__init_$exported$6(p0, p1);
};
$rt_export_class_NostrRTCOffer_519.prototype = onnrs_NostrRTCOffer.prototype;
function $rt_export_class_QueuedMessage_521(p0, p1, p2)  {
    return onn_NostrRelay$QueuedMessage__init_$exported$0(p0, p1, p2);
};
$rt_export_class_QueuedMessage_521.prototype = onn_NostrRelay$QueuedMessage.prototype;
function $rt_export_class_NostrFilter_523(p0)  {
    return onn_NostrFilter__init_$exported$2(p0);
};
$rt_export_class_NostrFilter_523.prototype = onn_NostrFilter.prototype;
function $rt_export_class_NostrRelayLifecycleManager_525()  {
    return onn_NostrRelayLifecycleManager__init_$exported$0();
};
$rt_export_class_NostrRelayLifecycleManager_525.prototype = onn_NostrRelayLifecycleManager.prototype;
function $rt_export_class_ForwardSlidingWindowEventTracker_543(p0, p1, p2, p3, p4, p5)  {
    return onnet_ForwardSlidingWindowEventTracker__init_$exported$7(p0, p1, p2, p3, p4, p5);
};
$rt_export_class_ForwardSlidingWindowEventTracker_543.prototype = onnet_ForwardSlidingWindowEventTracker.prototype;
function $rt_export_class_NostrTURN_545(p0, p1, p2, p3)  {
    return onnrt_NostrTURN__init_$exported$1(p0, p1, p2, p3);
};
$rt_export_class_NostrTURN_545.prototype = onnrt_NostrTURN.prototype;
function $rt_export_class_NaiveEventTracker_554()  {
    return onnet_NaiveEventTracker__init_$exported$0();
};
$rt_export_class_NaiveEventTracker_554.prototype = onnet_NaiveEventTracker.prototype;
function $rt_export_class_Nip05Identity_563(p0, p1, p2)  {
    return onnn_Nip05Identity__init_$exported$2(p0, p1, p2);
};
$rt_export_class_Nip05Identity_563.prototype = onnn_Nip05Identity.prototype;
function $rt_export_class_NostrRTCSignaling_584(p0, p1, p2, p3)  {
    return onnrs_NostrRTCSignaling__init_$exported$24(p0, p1, p2, p3);
};
$rt_export_class_NostrRTCSignaling_584.prototype = onnrs_NostrRTCSignaling.prototype;
function $rt_export_class_Identifier_589(p0, p1)  {
    return onne_SignedNostrEvent$Identifier__init_$exported$0(p0, p1);
};
$rt_export_class_Identifier_589.prototype = onne_SignedNostrEvent$Identifier.prototype;
function $rt_export_class_NostrNIP46Signer_606(p0, p1)  {
    return onns_NostrNIP46Signer__init_$exported$31(p0, p1);
};
$rt_export_class_NostrNIP46Signer_606.prototype = onns_NostrNIP46Signer.prototype;
function $rt_export_class_TagValue_613(p0)  {
    return onne_NostrEvent$TagValue__init_$exported$4(p0);
};
$rt_export_class_TagValue_613.prototype = onne_NostrEvent$TagValue.prototype;
function $rt_export_class_KeySecurity_616(p0, p1)  {
    return onnk_NostrPrivateKey$KeySecurity__init_$exported$0(p0, p1);
};
$rt_export_class_KeySecurity_616.prototype = onnk_NostrPrivateKey$KeySecurity.prototype;
function $rt_export_class_NostrPool$1_625(p0)  {
    return onn_NostrPool$1__init_$exported$0(p0);
};
$rt_export_class_NostrPool$1_625.prototype = onn_NostrPool$1.prototype;
function $rt_export_class_PassthroughEventTracker_629()  {
    return onnet_PassthroughEventTracker__init_$exported$0();
};
$rt_export_class_PassthroughEventTracker_629.prototype = onnet_PassthroughEventTracker.prototype;
function $rt_export_class_SdanSlotSize_642(p0, p1, p2)  {
    return onns_SdanSlotSize__init_$exported$0(p0, p1, p2);
};
$rt_export_class_SdanSlotSize_642.prototype = onns_SdanSlotSize.prototype;
function $rt_export_class_NostrClosedMessage_652(p0, p1)  {
    return onnpi_NostrClosedMessage__init_$exported$0(p0, p1);
};
$rt_export_class_NostrClosedMessage_652.prototype = onnpi_NostrClosedMessage.prototype;
function $rt_export_class_PendingConnection_659()  {
    return onnr_NostrRTCRoom$PendingConnection__init_$exported$0();
};
$rt_export_class_PendingConnection_659.prototype = onnr_NostrRTCRoom$PendingConnection.prototype;
function $rt_export_class_NostrRTCPeer_663(p0, p1, p2)  {
    return onnrs_NostrRTCPeer__init_$exported$0(p0, p1, p2);
};
$rt_export_class_NostrRTCPeer_663.prototype = onnrs_NostrRTCPeer.prototype;
function $rt_export_class_Bech32_672()  {
    return onnu_Bech32__init_$exported$0();
};
$rt_export_class_Bech32_672.prototype = onnu_Bech32.prototype;
function $rt_export_class_NostrEvent_692()  {
    throw new Error("Can't instantiate this class directly");
};
$rt_export_class_NostrEvent_692.prototype = onne_NostrEvent.prototype;
function $rt_export_class_Nip01UserMetadataListener_697(p0, p1)  {
    return onnn_Nip01UserMetadataListener__init_$exported$3(p0, p1);
};
$rt_export_class_Nip01UserMetadataListener_697.prototype = onnn_Nip01UserMetadataListener.prototype;
function $rt_export_class_NostrRTCLocalPeer_717(p0, p1, p2, p3)  {
    return onnrs_NostrRTCLocalPeer__init_$exported$2(p0, p1, p2, p3);
};
$rt_export_class_NostrRTCLocalPeer_717.prototype = onnrs_NostrRTCLocalPeer.prototype;
function $rt_export_class_UniqueId_722()  {
    return onnu_UniqueId__init_$exported$0();
};
$rt_export_class_UniqueId_722.prototype = onnu_UniqueId.prototype;
function $rt_export_class_SdanSlotBid_728(p0, p1, p2)  {
    return onns_SdanSlotBid__init_$exported$0(p0, p1, p2);
};
$rt_export_class_SdanSlotBid_728.prototype = onns_SdanSlotBid.prototype;
function $rt_export_class_SubscriptionListenerWrapper_756(p0, p1)  {
    return onnrt_NostrTURN$SubscriptionListenerWrapper__init_$exported$0(p0, p1);
};
$rt_export_class_SubscriptionListenerWrapper_756.prototype = onnrt_NostrTURN$SubscriptionListenerWrapper.prototype;
function $rt_export_class_NostrRTCSocket_787(p0, p1, p2, p3, p4)  {
    return onnr_NostrRTCSocket__init_$exported$15(p0, p1, p2, p3, p4);
};
$rt_export_class_NostrRTCSocket_787.prototype = onnr_NostrRTCSocket.prototype;
function $rt_export_class_SdanMimeType_797(p0, p1, p2)  {
    return onns_SdanMimeType__init_$exported$0(p0, p1, p2);
};
$rt_export_class_SdanMimeType_797.prototype = onns_SdanMimeType.prototype;
function $rt_export_class_NostrMessageAck_809(p0, p1, p2, p3, p4)  {
    return onnp_NostrMessageAck__init_$exported$6(p0, p1, p2, p3, p4);
};
$rt_export_class_NostrMessageAck_809.prototype = onnp_NostrMessageAck.prototype;
function $rt_export_class_Packet_824(p0, p1, p2, p3)  {
    return onnrt_NostrTURN$Packet__init_$exported$0(p0, p1, p2, p3);
};
$rt_export_class_Packet_824.prototype = onnrt_NostrTURN$Packet.prototype;
function $rt_export_class_NostrRTCAnnounce_831(p0, p1, p2)  {
    return onnrs_NostrRTCAnnounce__init_$exported$8(p0, p1, p2);
};
$rt_export_class_NostrRTCAnnounce_831.prototype = onnrs_NostrRTCAnnounce.prototype;
function $rt_export_class_Nip46AppMetadata_838()  {
    return onnn_Nip46AppMetadata__init_$exported$1();
};
$rt_export_class_Nip46AppMetadata_838.prototype = onnn_Nip46AppMetadata.prototype;
function $rt_export_class_Nip39_839()  {
    return onnn_Nip39__init_$exported$0();
};
$rt_export_class_Nip39_839.prototype = onnn_Nip39.prototype;
function $rt_export_class_ExponentialBackoff_853(p0, p1, p2, p3, p4)  {
    return onnu_ExponentialBackoff__init_$exported$4(p0, p1, p2, p3, p4);
};
$rt_export_class_ExponentialBackoff_853.prototype = onnu_ExponentialBackoff.prototype;
function $rt_export_class_ResponseListener_866(p0, p1, p2, p3)  {
    return onns_NostrNIP46Signer$ResponseListener__init_$exported$2(p0, p1, p2, p3);
};
$rt_export_class_ResponseListener_866.prototype = onns_NostrNIP46Signer$ResponseListener.prototype;
function $rt_export_class_NostrKeyPair_876(p0)  {
    return onnk_NostrKeyPair__init_$exported$3(p0);
};
$rt_export_class_NostrKeyPair_876.prototype = onnk_NostrKeyPair.prototype;
function $rt_export_class_NostrPublicKey_897(p0)  {
    return onnk_NostrPublicKey__init_$exported$4(p0);
};
$rt_export_class_NostrPublicKey_897.prototype = onnk_NostrPublicKey.prototype;
function $rt_export_class_SdanBid_923(p0)  {
    return onns_SdanBid__init_$exported$24(p0);
};
$rt_export_class_SdanBid_923.prototype = onns_SdanBid.prototype;
function $rt_export_class_Nip01UserMetadataFilter_952(p0)  {
    return onnn_Nip01UserMetadataFilter__init_$exported$0(p0);
};
$rt_export_class_Nip01UserMetadataFilter_952.prototype = onnn_Nip01UserMetadataFilter.prototype;
function $rt_export_class_NostrRTCIceCandidate_953(p0, p1)  {
    return onnrs_NostrRTCIceCandidate__init_$exported$5(p0, p1);
};
$rt_export_class_NostrRTCIceCandidate_953.prototype = onnrs_NostrRTCIceCandidate.prototype;
function $rt_export_class_NostrMessage_957()  {
    throw new Error("Can't instantiate this class directly");
};
$rt_export_class_NostrMessage_957.prototype = onnp_NostrMessage.prototype;
function $rt_export_class_Nip39ExternalIdentities_970(p0)  {
    return onnn_Nip39ExternalIdentities__init_$exported$5(p0);
};
$rt_export_class_Nip39ExternalIdentities_970.prototype = onnn_Nip39ExternalIdentities.prototype;
function $rt_export_class_SignedNostrEvent_972(p0, p1, p2, p3, p4, p5, p6)  {
    return onne_SignedNostrEvent__init_$exported$20(p0, p1, p2, p3, p4, p5, p6);
};
$rt_export_class_SignedNostrEvent_972.prototype = onne_SignedNostrEvent.prototype;
function $rt_export_class_NostrSearchFilter_991()  {
    throw new Error("Can't instantiate this class directly");
};
$rt_export_class_NostrSearchFilter_991.prototype = onnn_NostrSearchFilter.prototype;
export { $rt_export_class_NostrOKMessage_8 as NostrOKMessage, $rt_export_class_FailOnDoubleTracker_13 as FailOnDoubleTracker, $rt_export_class_TreeNode_34 as TreeNode, $rt_export_class_NostrKeyPairSigner_39 as NostrKeyPairSigner, $rt_export_class_Nip01_43 as Nip01, $rt_export_class_SdanTaxonomy_44 as SdanTaxonomy, $rt_export_class_Coordinates_46 as Coordinates, $rt_export_class_Nip44_49 as Nip44, $rt_export_class_BunkerUrl_51 as BunkerUrl, $rt_export_class_NostrRTCSignaling$1_53 as NostrRTCSignaling$1, $rt_export_class_Nip24ExtraMetadata_62 as Nip24ExtraMetadata,
$rt_export_class_NostrPoolAnyAckPolicy_93 as NostrPoolAnyAckPolicy, $rt_export_class_NostrPrivateKey_113 as NostrPrivateKey, $rt_export_class_NostrEOSEMessage_117 as NostrEOSEMessage, $rt_export_class_NostrRTCRoom_120 as NostrRTCRoom, $rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_3_128 as NostrPool$lambda$fetch$17$lambda$_40_3, $rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_4_129 as NostrPool$lambda$fetch$17$lambda$_40_4, $rt_export_class_NostrPool$lambda$fetch$17$lambda$_40_2_131 as NostrPool$lambda$fetch$17$lambda$_40_2,
$rt_export_class_NostrTURNSettings_133 as NostrTURNSettings, $rt_export_class_SdanOffer_135 as SdanOffer, $rt_export_class_NostrRelay_162 as NostrRelay, $rt_export_class_SdanTaxonomyTerm_180 as SdanTaxonomyTerm, $rt_export_class_Nip49FailedException_181 as Nip49FailedException, $rt_export_class_ScheduledAction_198 as ScheduledAction, $rt_export_class_NostrRTCRoomPeerDiscoveredState_199 as NostrRTCRoomPeerDiscoveredState, $rt_export_class_Nip49_201 as Nip49, $rt_export_class_RemoveReason_219 as RemoveReason,
$rt_export_class_NostrNoticeMessage_258 as NostrNoticeMessage, $rt_export_class_NostrRelay$1_260 as NostrRelay$1, $rt_export_class_Nip01UserMetadata_264 as Nip01UserMetadata, $rt_export_class_Chunk_299 as Chunk, $rt_export_class_ReceivedSignedNostrEvent_311 as ReceivedSignedNostrEvent, $rt_export_class_NostrPool_327 as NostrPool, $rt_export_class_PendingChallenge_330 as PendingChallenge, $rt_export_class_NostrRTCRoom$1_342 as NostrRTCRoom$1, $rt_export_class_SdanActionType_372 as SdanActionType, $rt_export_class_ByteBufferList_382 as ByteBufferList,
$rt_export_class_NostrSubCloseMessage_390 as NostrSubCloseMessage, $rt_export_class_NostrconnectUrl_412 as NostrconnectUrl, $rt_export_class_Status_423 as Status, $rt_export_class_SubAttachment_440 as SubAttachment, $rt_export_class_NostrRelayInfo_447 as NostrRelayInfo, $rt_export_class_Nip05Nip46Data_455 as Nip05Nip46Data, $rt_export_class_NostrRelaySubManager_461 as NostrRelaySubManager, $rt_export_class_Bech32Exception_474 as Bech32Exception, $rt_export_class_NostrSubscription_481 as NostrSubscription, $rt_export_class_UnsignedNostrEvent_485 as UnsignedNostrEvent,
$rt_export_class_NostrRTCAnswer_486 as NostrRTCAnswer, $rt_export_class_NostrRTCOffer_519 as NostrRTCOffer, $rt_export_class_QueuedMessage_521 as QueuedMessage, $rt_export_class_NostrFilter_523 as NostrFilter, $rt_export_class_NostrRelayLifecycleManager_525 as NostrRelayLifecycleManager, $rt_export_class_ForwardSlidingWindowEventTracker_543 as ForwardSlidingWindowEventTracker, $rt_export_class_NostrTURN_545 as NostrTURN, $rt_export_class_NaiveEventTracker_554 as NaiveEventTracker, $rt_export_class_Nip05Identity_563 as Nip05Identity,
$rt_export_class_NostrRTCSignaling_584 as NostrRTCSignaling, $rt_export_class_Identifier_589 as Identifier, $rt_export_class_NostrNIP46Signer_606 as NostrNIP46Signer, $rt_export_class_TagValue_613 as TagValue, $rt_export_class_KeySecurity_616 as KeySecurity, $rt_export_class_NostrPool$1_625 as NostrPool$1, $rt_export_class_PassthroughEventTracker_629 as PassthroughEventTracker, $rt_export_class_SdanSlotSize_642 as SdanSlotSize, $rt_export_class_NostrClosedMessage_652 as NostrClosedMessage, $rt_export_class_PendingConnection_659 as PendingConnection,
$rt_export_class_NostrRTCPeer_663 as NostrRTCPeer, $rt_export_class_Bech32_672 as Bech32, $rt_export_class_NostrEvent_692 as NostrEvent, $rt_export_class_Nip01UserMetadataListener_697 as Nip01UserMetadataListener, $rt_export_class_NostrRTCLocalPeer_717 as NostrRTCLocalPeer, $rt_export_class_UniqueId_722 as UniqueId, $rt_export_class_SdanSlotBid_728 as SdanSlotBid, $rt_export_class_SubscriptionListenerWrapper_756 as SubscriptionListenerWrapper, $rt_export_class_NostrRTCSocket_787 as NostrRTCSocket, $rt_export_class_SdanMimeType_797 as SdanMimeType,
$rt_export_class_NostrMessageAck_809 as NostrMessageAck, $rt_export_class_Packet_824 as Packet, $rt_export_class_NostrRTCAnnounce_831 as NostrRTCAnnounce, $rt_export_class_Nip46AppMetadata_838 as Nip46AppMetadata, $rt_export_class_Nip39_839 as Nip39, $rt_export_class_ExponentialBackoff_853 as ExponentialBackoff, $rt_export_class_ResponseListener_866 as ResponseListener, $rt_export_class_NostrKeyPair_876 as NostrKeyPair, $rt_export_class_NostrPublicKey_897 as NostrPublicKey, $rt_export_class_SdanBid_923 as SdanBid,
$rt_export_class_Nip01UserMetadataFilter_952 as Nip01UserMetadataFilter, $rt_export_class_NostrRTCIceCandidate_953 as NostrRTCIceCandidate, $rt_export_class_NostrMessage_957 as NostrMessage, $rt_export_class_Nip39ExternalIdentities_970 as Nip39ExternalIdentities, $rt_export_class_SignedNostrEvent_972 as SignedNostrEvent, $rt_export_class_NostrSearchFilter_991 as NostrSearchFilter, onn_Nostr4jsModule_init$exported$0 as init };

//# sourceMappingURL=nostr4j.js.map